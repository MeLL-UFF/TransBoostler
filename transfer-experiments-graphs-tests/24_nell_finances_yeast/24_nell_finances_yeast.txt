Starting experiment 24_nell_finances_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.571
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18521660427244377;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1752509098689101;  // std dev = 0.474, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.11364540165018854;  // std dev = 7.774, 285.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12868089724910206;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09387010350767315;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08809396745831286;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05746486016917031;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.061197954851825394;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.190', 'seconds']
Parameter learned model CLL:-0.348838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.651, 179, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.774, 198, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.586, 170, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.468, 182, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.586, 170, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22009440895471846, nan], 'true': [nan, 0.22009440895471846], 'true,false': [nan, 0.22009440895471846]}
{'': [nan, 0.22477508650519062]}
{'': [nan, 0.2120775623268722], 'false': [0.2120775623268722, nan]}
{'': [nan, 0.22392466199336739], 'false': [0.22392466199336739, nan]}
{'': [nan, 0.21966923368261548]}
{'': [nan, 0.2234991887506784]}
{'': [0.2188195298572428, nan]}
{'': [0.22392466199337008, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.569
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then return 0.13939893509951237;  // std dev = 0.450, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( phenotype(A, G), interaction(C, A) )
%   | | then if ( phenotype(C, G), interaction(C, C) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, C) )
%   | | | then return 0.1914822684328457;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( enzyme(A, I) )
%   | then return 0.1005731775237548;  // std dev = 0.429, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.21712329407387132;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(E, F), enzyme(D, G) )
%   | | then return 0.5658457054886942;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.0840569050737844;  // std dev = 2.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.3355765516102323;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.06764960308262627;  // std dev = 0.425, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   else if ( interaction(A, A), location(A, H) )
%   | then return 0.035102339534495486;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.32393793703983714;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.12005595995960414;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.16533252415365388;  // std dev = 4.010, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.03840698862788025;  // std dev = 1.505, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.11095193846052104;  // std dev = 7.582, 271.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=83 */
%   | | | else return -0.008243975299419268;  // std dev = 1.796, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( enzyme(D, H), complex(A, I) )
%   | | | then return -0.14344807063616388;  // std dev = 1.305, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.04497584389259219;  // std dev = 3.617, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | else if ( interaction(J, A), complex(J, E) )
%   | | | then return 0.0736279806685439;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2875283677390294;  // std dev = 1.741, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( complex(K, M), interaction(K, K) )
%   | | | then return 0.06361005308753008;  // std dev = 2.239, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.23688272251381007;  // std dev = 3.817, 59.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.009898500486056786;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.12411481823571502;  // std dev = 3.952, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), phenotype(A, I) )
%   | | | then return 0.033448907181623085;  // std dev = 4.232, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | | else return 0.1382022496091645;  // std dev = 3.935, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.3556931244065071;  // std dev = 2.145, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.10128698955281616;  // std dev = 4.167, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, H), complex(F, I) )
%   | | | then return 0.4882568820222003;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07416292921619386;  // std dev = 2.802, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.14224793111184753;  // std dev = 2.229, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.05144055814262615;  // std dev = 6.472, 197.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=61 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), enzyme(A, E) )
%   | | then return -0.2046378794547023;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), complex(G, H) )
%   | | | then return -0.029777380403230032;  // std dev = 2.541, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.12019619804736585;  // std dev = 2.169, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.10615388170664557;  // std dev = 3.515, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.46234636947383007;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.020404827103631527;  // std dev = 4.309, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return 0.08305052072340863;  // std dev = 3.622, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then if ( location(A, H) )
%   | | | then return 0.37515449757297803;  // std dev = 1.496, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.030595854995606714;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, E), complex(E, I) )
%   | | | then return 0.09407169888269501;  // std dev = 2.343, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.049260466003909875;  // std dev = 4.017, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( phenotype(L, J), interaction(L, A) )
%   | | | then return 0.2494408925709264;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0015573041478240755;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.34522077924125416;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.10056933124635008;  // std dev = 4.515, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), location(E, F) )
%   | then if ( enzyme(E, G), complex(E, H) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.2463787287151347;  // std dev = 1.577, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.07499895249467572;  // std dev = 2.239, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( enzyme(E, K), phenotype(A, L) )
%   | | | then return 0.23752863118411266;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.028059239928067883;  // std dev = 4.498, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | else if ( phenotype(A, M) )
%   | | then if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.16497498648621864;  // std dev = 2.369, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.010279382816508453;  // std dev = 2.510, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(Q, A), location(Q, R) )
%   | | | then return -0.001728538188584862;  // std dev = 4.175, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return -0.13953586217522088;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(E, E), complex(E, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.0727473676448989;  // std dev = 2.680, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.23854536108449087;  // std dev = 1.503, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.09495383735701603;  // std dev = 2.706, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.05620302466115067;  // std dev = 4.412, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return 0.09068824822106407;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.08906954769785648;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.20335811028309012;  // std dev = 2.144, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.06023269800803706;  // std dev = 3.303, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '59.926', 'seconds']
Refined model CLL: -0.403489


******************************************
Best model found
******************************************
Results 

CLL : -0.348434 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.569 

Total Inference Time : 73.89516973495483 

Total revision time: 117.3679634475708
Best scored revision CLL: -0.348838


Results 

CLL : -0.348434 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 117.7000278377533 

Total Inference Time : 73.89516973495483 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.268
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17814893509950935;  // std dev = 8.410, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1771555192573984;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14466460158502328;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14200457439244069;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09113264113772471;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08611100335292551;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05637742256393767;  // std dev = 0.470, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06260553216568836;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.552', 'seconds']
Parameter learned model CLL:-0.357803 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.41, 221, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.313, 206, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.183, 188, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.47, 212, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.243, 196, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21760000000000193, nan], 'true': [nan, 0.21760000000000193], 'true,false': [nan, 0.21760000000000193]}
{'': [nan, 0.22506925207755663]}
{'': [nan, 0.22293444328824008], 'false': [0.22293444328824008, nan]}
{'': [nan, 0.2293113154438003], 'false': [0.2293113154438003, nan]}
{'': [nan, 0.22115394305870292]}
{'': [nan, 0.22506925207756148]}
{'': [0.22079794904662597, nan]}
{'': [0.22648888888888885, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 46.763
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(F, D), interaction(F, G) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, A), complex(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, K), phenotype(C, L) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else if ( interaction(M, A) )
%   | then return 0.1855825634180978;  // std dev = 0.469, 226.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=74 */
%   | else return 0.3126943896449669;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then return 0.0881423875248198;  // std dev = 0.454, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2857628413611863;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.11553373689685473;  // std dev = 2.677, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.3940921700259788;  // std dev = 2.378, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.2060830263849888;  // std dev = 3.958, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   else if ( enzyme(A, I), location(A, J) )
%   | then if ( interaction(K, A), interaction(A, K) )
%   | | then return 0.5006904531067581;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.06567351498285456;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22425946194620033;  // std dev = 2.581, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else return 0.1165511229947811;  // std dev = 0.452, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.026025804329639458;  // std dev = 3.236, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.14224109158561754;  // std dev = 7.714, 264.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return 0.36026717820608045;  // std dev = 1.561, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.12383359385538735;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(E, D), complex(E, J) )
%   | | | then return 0.035242912682196884;  // std dev = 4.373, 96.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return 0.09678969220374375;  // std dev = 4.203, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | else if ( location(A, K), complex(A, L) )
%   | | then if ( complex(M, L), phenotype(M, N) )
%   | | | then return 0.0917657905390326;  // std dev = 2.883, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.27377270328118614;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.16257655692554437;  // std dev = 3.356, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.28767400127353077;  // std dev = 2.359, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( interaction(A, H), enzyme(A, I) )
%   | | | then return -0.009967538890760682;  // std dev = 2.842, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.07698078859366743;  // std dev = 5.967, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.2891557799451557;  // std dev = 2.204, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.15165716179675987;  // std dev = 4.284, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( phenotype(A, H), interaction(A, G) )
%   | | | then return -0.049729923299025515;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.036343381550689606;  // std dev = 4.156, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.1618399449054976;  // std dev = 3.194, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | else return 0.05159207519142459;  // std dev = 5.725, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, D), enzyme(D, F) )
%   | | then return 0.3758309049096003;  // std dev = 1.098, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return 0.03277249506798859;  // std dev = 5.274, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.13054451890359328;  // std dev = 5.020, 103.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(H, I), phenotype(A, J) )
%   | | | then return -0.09720558373981364;  // std dev = 1.583, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.02285077766453899;  // std dev = 2.689, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.027195525920320394;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.37199082351142315;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.033711868673503335;  // std dev = 2.481, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.038550674954329955;  // std dev = 2.754, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.031206266684560675;  // std dev = 2.627, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.21971645979854595;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( location(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.08401004685962896;  // std dev = 4.862, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
%   | | | else return 0.2554717594180701;  // std dev = 1.649, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, P), complex(A, Q) )
%   | | | then return -0.053464789485262995;  // std dev = 2.291, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.06295369656132947;  // std dev = 3.840, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(A, A), phenotype(A, G) )
%   | | then return 0.3087927316052316;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.06846782120990463;  // std dev = 2.707, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.004502371559652916;  // std dev = 4.121, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.09146594853432502;  // std dev = 2.869, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.00825129414162079;  // std dev = 5.881, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.029616691472448203;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.27750133777546687;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( enzyme(A, F), interaction(E, E) )
%   | | then return 0.40168143111647236;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.04654015336505314;  // std dev = 4.771, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return -0.06551934588148674;  // std dev = 3.221, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.3349929942883571;  // std dev = 1.745, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.10451598557475017;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.062425111679677237;  // std dev = 4.764, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   | | | else return 0.26470576397615575;  // std dev = 1.283, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '52.168', 'seconds']
Refined model CLL: -0.402831


******************************************
Best model found
******************************************
Results 

CLL : -0.358794 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 46.763 

Total Inference Time : 92.23290228843689 

Total revision time: 151.09270082092286
Best scored revision CLL: -0.357803


Results 

CLL : -0.358794 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 151.42476521110535 

Total Inference Time : 92.23290228843689 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.312
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.457, 309.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1732174282501958;  // std dev = 7.938, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1993647701438384;  // std dev = 0.481, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12049183453785532;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1315675926897627;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10359559584383425;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11001136807473554;  // std dev = 0.481, 252.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06804161799977336;  // std dev = 0.475, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05039589055314648;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.369', 'seconds']
Parameter learned model CLL:-0.363988 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.938, 200, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 161, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.944, 201, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.765, 175, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 160, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 175, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.788, 178, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2158003377744429, nan], 'true': [nan, 0.2158003377744429], 'true,false': [nan, 0.2158003377744429]}
{'': [nan, 0.23140495867768981]}
{'': [nan, 0.21540146070425795], 'false': [0.21540146070425795, nan]}
{'': [nan, 0.22584129388825844], 'false': [0.22584129388825844, nan]}
{'': [nan, 0.224234419465967]}
{'': [nan, 0.23179642227261332]}
{'': [0.22584129388825658, nan]}
{'': [0.2246364883401921, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.966
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(A, E), complex(C, E) )
%   | then if ( phenotype(A, F), interaction(G, D) )
%   | | then if ( phenotype(G, F) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17957750652808377;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0.15814893509951197;  // std dev = 0.458, 140.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=42 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then return 0.124815601766179;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2867203636709409;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, C), location(D, E) )
%   | then return 0.09107039502142202;  // std dev = 0.436, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( phenotype(D, F), phenotype(A, G) )
%   | | then if ( enzyme(A, H), enzyme(D, I) )
%   | | | then return 0.2663580833544075;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13596266333227958;  // std dev = 2.509, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( phenotype(D, J), phenotype(C, J) )
%   | | | then return 0.15778665478297924;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.3298891204454017;  // std dev = 3.563, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else if ( phenotype(A, K), interaction(A, L) )
%   | then if ( phenotype(L, M) )
%   | | then if ( interaction(L, N), phenotype(N, K) )
%   | | | then return 0.12607084535917254;  // std dev = 1.446, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.23436465125007616;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.4105863338213635;  // std dev = 0.491, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.09544700859088914;  // std dev = 0.447, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.2698064587728812;  // std dev = 3.095, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.14110613690231538;  // std dev = 6.966, 217.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then if ( complex(D, G), complex(F, G) )
%   | | | then return 0.18115733847387588;  // std dev = 3.824, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | | else return 0.09285766392296788;  // std dev = 2.850, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.24179648456984507;  // std dev = 2.324, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.5635050955644236;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08288884594897115;  // std dev = 2.868, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.37559786479445767;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.18909010899216058;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03192838798328666;  // std dev = 4.146, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( enzyme(A, H), complex(F, I) )
%   | | | then return 0.17560044139227773;  // std dev = 3.088, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.08895211490223598;  // std dev = 5.740, 149.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.012227845261151449;  // std dev = 2.675, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.09849863510102046;  // std dev = 3.133, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), phenotype(F, H) )
%   | | | then return 0.0692271602462934;  // std dev = 1.991, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.3081488630625503;  // std dev = 1.800, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return -0.015764692354593213;  // std dev = 4.107, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | | else return 0.06840910720874141;  // std dev = 6.080, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.06794841480821957;  // std dev = 2.959, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return -0.10876870625965292;  // std dev = 1.226, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.14394113535252656;  // std dev = 1.531, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.6940860503556922;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.1729519026023926;  // std dev = 1.648, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.00369999101443802;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.046375835987376324;  // std dev = 4.042, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.020484582943046666;  // std dev = 4.985, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), phenotype(D, G) )
%   | | then if ( enzyme(F, E) )
%   | | | then return -0.09297447434711446;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2894237833637828;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.06758209403064985;  // std dev = 2.127, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return -0.1598037670668291;  // std dev = 1.297, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return 0.08897456997779342;  // std dev = 2.825, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.021205711325490855;  // std dev = 4.423, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.23162776866652943;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.06588300319388932;  // std dev = 4.509, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -0.1972205207462776;  // std dev = 1.783, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.07639267332996894;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(J, F), interaction(J, J) )
%   | | | then return -0.07438557776582441;  // std dev = 2.098, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.09963504913666063;  // std dev = 1.836, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(A, M), location(M, L) )
%   | | | then return 0.07978805677756615;  // std dev = 3.336, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.009506038500733241;  // std dev = 5.094, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | else if ( location(A, N) )
%   | | | then return 0.06641973733907224;  // std dev = 3.180, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.4196796552257388;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( interaction(E, F), complex(F, G) )
%   | | then if ( interaction(F, H), enzyme(H, I) )
%   | | | then return -0.00817310180596191;  // std dev = 3.612, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.1254224385154796;  // std dev = 2.692, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.3643297155062325;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07831394129755687;  // std dev = 3.439, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | else if ( enzyme(A, L) )
%   | | then if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.06630881565691282;  // std dev = 1.645, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.1736815930870764;  // std dev = 2.242, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.004304648467333575;  // std dev = 2.527, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.05244660467991432;  // std dev = 3.361, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '30.962', 'seconds']
Refined model CLL: -0.417602


******************************************
Best model found
******************************************
Results 

CLL : -0.363837 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.966 

Total Inference Time : 52.19515585899353 

Total revision time: 96.115660074234
Best scored revision CLL: -0.363988


Results 

CLL : -0.363837 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 96.4477244644165 

Total Inference Time : 52.19515585899353 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.802
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1826772369863041;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1506020456778126;  // std dev = 0.465, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12528571217787907;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11006900189728377;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08678484008652397;  // std dev = 0.464, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05921905357527855;  // std dev = 0.459, 286.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05797668502718774;  // std dev = 0.463, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07499136912577355;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.961', 'seconds']
Parameter learned model CLL:-0.333679 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.622, 179, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.688, 189, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.662, 185, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.459, 200, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.463, 191, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.542, 168, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21920968316126813, nan], 'true': [nan, 0.21920968316126813], 'true,false': [nan, 0.21920968316126813]}
{'': [nan, 0.21620891003460252]}
{'': [nan, 0.21492892561983476], 'false': [0.21492892561983476, nan]}
{'': [nan, 0.21663648370800886], 'false': [0.21663648370800886, nan]}
{'': [nan, 0.21492892561983445]}
{'': [nan, 0.2102792312582528]}
{'': [0.21407811909447577, nan]}
{'': [0.22394444788889595, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.11
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(F, C), interaction(A, F) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.14847151574467365;  // std dev = 3.574, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, H) )
%   | then if ( complex(A, I) )
%   | | then return 0.11814893509951237;  // std dev = 0.439, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else return 0.21109011157009963;  // std dev = 0.478, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | else return 0.12737970433028126;  // std dev = 0.444, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then if ( interaction(F, E), enzyme(A, G) )
%   | | then if ( complex(E, H), complex(F, H) )
%   | | | then return 0.250322444354029;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5800354179769064;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19738903985910977;  // std dev = 0.479, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | else return 0.1354862888849573;  // std dev = 0.461, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( location(A, K), location(I, K) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.3405111922150648;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1822750857861394;  // std dev = 3.229, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.839097522445221;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24192486198490876;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.10418991265658618;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.08618123098023274;  // std dev = 5.678, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   | | | else return 0.15653993752271148;  // std dev = 5.151, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(A, F) )
%   | | then if ( phenotype(F, D) )
%   | | | then return -0.07534819012606137;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.04052107846984464;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, A), interaction(A, H) )
%   | | | then return 0.14183232340100763;  // std dev = 2.123, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.022912465581499886;  // std dev = 2.591, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.040130956141945465;  // std dev = 2.736, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.11544054430205099;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.16730156651530584;  // std dev = 2.371, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.5391236005049639;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.11748930857187023;  // std dev = 3.220, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.24166004270841157;  // std dev = 2.051, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0698340087761604;  // std dev = 6.396, 193.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=59 */
%   | | | else return 0.31054672664898636;  // std dev = 1.120, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.06015322671192595;  // std dev = 6.096, 172.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | | | else return 0.11452663166661135;  // std dev = 4.293, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.09352738124910309;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04981725520945368;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( phenotype(D, G), interaction(A, H) )
%   | | | then return 0.17440670494660174;  // std dev = 1.974, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.004077405577651238;  // std dev = 2.541, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( phenotype(A, I), interaction(J, D) )
%   | | | then return 0.077316021219156;  // std dev = 3.748, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return 0.1948949374042456;  // std dev = 4.155, 70.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=32 */
%   | else if ( phenotype(A, K), enzyme(A, L) )
%   | | then if ( phenotype(M, K), interaction(M, M) )
%   | | | then return 0.052948140526222466;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12088380994853636;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.019354606254486487;  // std dev = 2.350, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.05162768059227023;  // std dev = 2.084, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), complex(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.4123151386258361;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21123426911379573;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then if ( complex(A, G), location(A, H) )
%   | | | then return 0.15039472941437693;  // std dev = 2.081, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.029410546258531983;  // std dev = 3.815, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.012918472682917096;  // std dev = 2.264, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.07985567205781705;  // std dev = 5.483, 129.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=47 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), interaction(G, G) )
%   | | then if ( phenotype(A, H), location(F, E) )
%   | | | then return -0.05227141128271805;  // std dev = 3.366, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.04296734722018713;  // std dev = 2.778, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( phenotype(F, I), complex(F, J) )
%   | | | then return -0.007345691189623927;  // std dev = 2.783, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.13951836093692857;  // std dev = 2.550, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( phenotype(M, L), enzyme(M, N) )
%   | | | then return -0.06035034908921836;  // std dev = 1.506, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.22909714943416745;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.1474663826663466;  // std dev = 4.009, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | | | else return -0.0412713358606848;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, G) )
%   | | | then return 0.10906564769186089;  // std dev = 1.693, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.05273105343513445;  // std dev = 3.208, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( enzyme(I, E), interaction(I, J) )
%   | | | then return -0.04588969864965529;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.15500563729615285;  // std dev = 1.946, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( complex(A, M), phenotype(K, N) )
%   | | | then return 0.15743346515661436;  // std dev = 1.657, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.06327139506724433;  // std dev = 2.992, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.15939542892780384;  // std dev = 2.202, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.027808178599334266;  // std dev = 4.642, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '21.058', 'seconds']
Refined model CLL: -0.400349


******************************************
Best model found
******************************************
Results 

CLL : -0.332902 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.11 

Total Inference Time : 45.403942346572876 

Total revision time: 83.01852589797974
Best scored revision CLL: -0.333679


Results 

CLL : -0.332902 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 83.35059028816224 

Total Inference Time : 45.403942346572876 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.708
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.460, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.479, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1491188347650636;  // std dev = 7.854, 299.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1432059110570569;  // std dev = 0.460, 286.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16532996987602805;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10695478040679651;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09818072007811966;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1024050789348784;  // std dev = 0.475, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06614821397510603;  // std dev = 0.470, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07146517276891312;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '54.564', 'seconds']
Parameter learned model CLL:-0.348665 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.854, 212, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.46, 199, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.54, 164, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.725, 190, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.47, 178, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.54, 164, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2063064171541713, nan], 'true': [nan, 0.2063064171541713], 'true,false': [nan, 0.2063064171541713]}
{'': [nan, 0.21166071690547159]}
{'': [nan, 0.2264725956730867], 'false': [0.2264725956730867, nan]}
{'': [nan, 0.21543353881843813], 'false': [0.21543353881843813, nan]}
{'': [nan, 0.21881952985724587]}
{'': [nan, 0.22604875283446826]}
{'': [0.22051975792096842, nan]}
{'': [0.22647259567308362, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.162
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.15444523139580865;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.5581489350995124;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25814893509951237;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   else if ( location(A, H), interaction(I, A) )
%   | then if ( location(I, J), interaction(K, I) )
%   | | then if ( location(K, J) )
%   | | | then return 0.17310956502077124;  // std dev = 5.235, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(I, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10814893509951233;  // std dev = 0.433, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), phenotype(A, E) )
%   | then return 0.19498022976350152;  // std dev = 0.480, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return 0.09652765261190896;  // std dev = 0.444, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), interaction(G, G) )
%   | | then return 0.05462944756147466;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1933111538828604;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.07373365448410585;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), enzyme(K, L) )
%   | | | then return 0.11916925447569066;  // std dev = 2.360, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.33574321412969343;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.13214034623601717;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.26319344630446717;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), enzyme(A, G) )
%   | | | then return 0.21275882552210612;  // std dev = 4.419, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
%   | | | else return 0.1070953597734795;  // std dev = 6.118, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.07451495283692765;  // std dev = 4.773, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return 0.1767444492238704;  // std dev = 2.331, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.14918723659167174;  // std dev = 4.824, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
%   | | | else return 0.027010364037121638;  // std dev = 1.754, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( location(J, K) )
%   | | | then return 0.015812163992456264;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07307672489643263;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.1491454973257896;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( location(A, G), interaction(A, F) )
%   | | | then return 0.1950600337713719;  // std dev = 3.038, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.05428704103603509;  // std dev = 6.695, 213.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=64 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.1319976609516826;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.23937889877494042;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( location(A, H), interaction(F, I) )
%   | | | then return -0.03516387939146754;  // std dev = 3.181, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.15412645738137407;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.145797850509855;  // std dev = 3.160, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.05729528671995715;  // std dev = 5.981, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, D), location(D, E) )
%   | | then if ( interaction(A, A), phenotype(A, F) )
%   | | | then return -0.03548218916105976;  // std dev = 1.517, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.1880567019880085;  // std dev = 2.856, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.0497302642838489;  // std dev = 2.656, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.04467031843712604;  // std dev = 6.137, 170.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=55 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.20247967065081354;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4170447857231578;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), interaction(A, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.06498406996839035;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.00882309709460322;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, A), location(A, G) )
%   | | | then return 0.19563644192287782;  // std dev = 1.998, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.07140988754271288;  // std dev = 2.011, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(A, J), enzyme(I, K) )
%   | | | then return 0.15477683159668584;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.08154001643740173;  // std dev = 2.437, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.07386316914999849;  // std dev = 2.924, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.021435971039493185;  // std dev = 5.654, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( enzyme(F, G), complex(F, H) )
%   | | then if ( interaction(A, I), phenotype(I, E) )
%   | | | then return 0.14390811331972708;  // std dev = 1.267, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03713554113058452;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.023126643568040353;  // std dev = 1.465, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08114471696889365;  // std dev = 3.507, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.15102630312600668;  // std dev = 2.106, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.0034410542536493726;  // std dev = 5.829, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.008999401929250861;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2486481384832365;  // std dev = 1.568, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(F, G), complex(F, H) )
%   | | then if ( interaction(I, F) )
%   | | | then return 0.46693784324496435;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06151827099543174;  // std dev = 1.137, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(E, J), location(F, J) )
%   | | | then return 0.0035777533115795603;  // std dev = 4.655, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.2258401451886475;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.03249080026252231;  // std dev = 1.745, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.15161100106464004;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.1792974384839886;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.033969758913973525;  // std dev = 5.346, 145.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=39 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15', 'minutes', 'and', '7.943', 'seconds']
Refined model CLL: -0.372157


******************************************
Best model found
******************************************
Results 

CLL : -0.348261 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.162 

Total Inference Time : 123.52582216262817 

Total revision time: 169.8235686969757
Best scored revision CLL: -0.348665


Results 

CLL : -0.348261 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 169.98512112617493 

Total Inference Time : 123.52582216262817 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.213
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19255407979404288;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16638981734373529;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14302328643687656;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12316606077332486;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09950744878025543;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0854840521366883;  // std dev = 0.474, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0602734732024507;  // std dev = 0.471, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03503730207151669;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.883', 'seconds']
Parameter learned model CLL:-0.348393 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.32, 207, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.32, 207, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.3, 204, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 210, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.422, 223, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22257834389636377, nan], 'true': [nan, 0.22257834389636377], 'true,false': [nan, 0.22257834389636377]}
{'': [nan, 0.22222222222222215]}
{'': [nan, 0.2225783438963569], 'false': [0.2225783438963569, nan]}
{'': [nan, 0.22364648338674023], 'false': [0.22364648338674023, nan]}
{'': [nan, 0.22293444328824005]}
{'': [nan, 0.22435815284719332]}
{'': [0.22151000040569535, nan]}
{'': [0.21689158226486788, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 43.014
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, C), enzyme(D, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.1450341810011517;  // std dev = 0.452, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | else if ( complex(C, H), phenotype(A, I) )
%   | | then if ( phenotype(C, I), enzyme(C, J) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16117923812981538;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else if ( phenotype(C, K) )
%   | | | then return 0.3181489350995113;  // std dev = 3.524, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | | | else return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( enzyme(A, L) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, C), complex(A, E) )
%   | then return 0.22797464080783278;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.06145256780183073;  // std dev = 0.427, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( complex(F, G), enzyme(A, H) )
%   | | then return 0.024874414416179214;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( phenotype(F, I), complex(A, J) )
%   | | | then return 0.09271023658981027;  // std dev = 2.423, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.2110286257352088;  // std dev = 2.617, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( phenotype(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.37463899474960627;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.22413094510126477;  // std dev = 4.269, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.16985748564605974;  // std dev = 4.200, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return 0.0876075063221334;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.11439346719837994;  // std dev = 7.524, 264.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=82 */
%   | | | else return 0.21756975396833006;  // std dev = 3.530, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, D), phenotype(A, F) )
%   | | then if ( interaction(D, D), phenotype(D, G) )
%   | | | then return 0.19374182314317595;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.035230285443383025;  // std dev = 3.262, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.23638403969494767;  // std dev = 3.656, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.09381736481162481;  // std dev = 5.168, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.20881635366768844;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3998042410369674;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return -0.04357126192882217;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.025916564078499148;  // std dev = 3.423, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A) )
%   | | then if ( phenotype(A, G), phenotype(F, H) )
%   | | | then return 0.107902402007114;  // std dev = 5.953, 157.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=54 */
%   | | | else return 0.05733651552476906;  // std dev = 5.605, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.04158587727753512;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.28812476507905443;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(G, F), phenotype(G, H) )
%   | | | then return 0.0844673651013306;  // std dev = 7.664, 260.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=89 */
%   | | | else return 0.27801735212848433;  // std dev = 2.169, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.0041907118369232535;  // std dev = 1.652, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.19401086076006357;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(G, D), location(G, F) )
%   | | | then return 0.10675175577549739;  // std dev = 3.781, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | | else return -0.01416815058701014;  // std dev = 1.860, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(H, D) )
%   | | | then return 0.002845016731167283;  // std dev = 6.956, 241.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=67 */
%   | | | else return 0.2739809032574927;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K) )
%   | | | then return -0.1555808538372112;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.14677746388539425;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return -0.13247130184505904;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.004138407059817543;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.0905521782569808;  // std dev = 1.983, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.10572811685989966;  // std dev = 1.959, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.11441469416159378;  // std dev = 3.474, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.05769245364509815;  // std dev = 6.583, 194.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=65 */
%   | else if ( interaction(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.038347551207849495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10430824051947;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.047181388197349405;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.01607265319120382;  // std dev = 1.623, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(H, E), location(H, G) )
%   | | | then return 0.060971935124148474;  // std dev = 4.324, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.27011354111279184;  // std dev = 1.995, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(E, I), interaction(I, A) )
%   | | | then return -0.03745316295943106;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1216021210078995;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.2426340712942869;  // std dev = 1.507, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.02597558274623884;  // std dev = 1.452, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.04203947494000645;  // std dev = 3.044, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.03753834587443249;  // std dev = 5.320, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(A, G) )
%   | | then if ( enzyme(E, H), interaction(E, E) )
%   | | | then return -0.20813753246370112;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.012664041875491383;  // std dev = 4.669, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else if ( interaction(A, E), enzyme(E, I) )
%   | | | then return 0.20255357460628826;  // std dev = 1.588, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.013610148186170063;  // std dev = 5.771, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.03310715651639081;  // std dev = 1.494, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.200956092454835;  // std dev = 1.222, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return 0.059638707299400504;  // std dev = 1.557, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.13136887948911857;  // std dev = 2.522, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '46.060', 'seconds']
Refined model CLL: -0.381468


******************************************
Best model found
******************************************
Results 

CLL : -0.34942 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 43.014 

Total Inference Time : 84.33371257781982 

Total revision time: 139.33961343955994
Best scored revision CLL: -0.348393


Results 

CLL : -0.34942 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 139.50116586875916 

Total Inference Time : 84.33371257781982 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.389
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.462, 298.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1721421091609443;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16096431916609127;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13882589974390203;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.15130513915944915;  // std dev = 7.669, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05550443982042945;  // std dev = 0.454, 316.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08397110913928414;  // std dev = 0.470, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.10632618866573221;  // std dev = 0.482, 250.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04820542113573914;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.382', 'seconds']
Parameter learned model CLL:-0.352571 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.944, 201, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.873, 190, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.669, 163, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.454, 224, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.482, 158, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.846, 186, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21540146070426097, nan], 'true': [nan, 0.21540146070426097], 'true,false': [nan, 0.21540146070426097]}
{'': [nan, 0.21940591092409625]}
{'': [nan, 0.21980785674764722], 'false': [0.21980785674764722, nan]}
{'': [nan, 0.2306189926951179], 'false': [0.2306189926951179, nan]}
{'': [nan, 0.2063771831437273]}
{'': [nan, 0.22101463239166824]}
{'': [0.23257600000000028, nan]}
{'': [0.22141711091558372, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.698
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H), interaction(I, D) )
%   | | then if ( phenotype(I, J), interaction(K, I) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1308762078267849;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15544623239680966;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else if ( interaction(A, M) )
%   | then return 0.12285481745245204;  // std dev = 0.441, 136.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=36 */
%   | else return 0.20481560176617783;  // std dev = 0.476, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(E, A), phenotype(C, F) )
%   | then return 0.029264301870709563;  // std dev = 0.435, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else return 0.15827404190006145;  // std dev = 0.469, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( interaction(G, I) )
%   | | then if ( phenotype(A, H), location(A, J) )
%   | | | then return 0.1282404217782688;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.5758594693973161;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( complex(A, K), complex(G, K) )
%   | | | then return 0.5091928027306497;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09252613606398308;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, L) )
%   | | then return 0.10919280273064944;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.24643433156900452;  // std dev = 4.311, 77.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=32 */
%   | | | else return 0.16896496714092923;  // std dev = 2.448, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.06982975014256759;  // std dev = 4.659, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | | | else return 0.13332127614357375;  // std dev = 6.424, 185.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=62 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), enzyme(D, F) )
%   | | | then return 0.3032523913856599;  // std dev = 1.575, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.11811164699893668;  // std dev = 1.614, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.026942134510476997;  // std dev = 2.948, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.041784071620733464;  // std dev = 3.532, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.07729417842865097;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23372452545042388;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.13036772223928766;  // std dev = 2.986, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.09112285512434928;  // std dev = 4.148, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.26308378644472014;  // std dev = 2.111, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.09337295554004751;  // std dev = 4.333, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.011903031203652924;  // std dev = 3.221, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.09053574793129993;  // std dev = 5.243, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.030451011388737244;  // std dev = 3.568, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.11464754542303066;  // std dev = 6.665, 190.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=71 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.0714620383964909;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.048965524335873825;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( location(E, F), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.11038014776999203;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6793836786046379;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.10702840571222505;  // std dev = 1.552, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.15992585937296744;  // std dev = 3.521, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2281519560703693;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04862337236019914;  // std dev = 3.945, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return -0.04464728444506719;  // std dev = 2.446, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.02757573217337059;  // std dev = 4.492, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(D, F) )
%   | | then if ( location(E, G), interaction(H, E) )
%   | | | then return -0.05759860512527322;  // std dev = 3.640, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | | else return -0.16575807533571502;  // std dev = 1.574, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( phenotype(E, I) )
%   | | | then return 0.02940081212008608;  // std dev = 2.025, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.4101324991880652;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1294296653768871;  // std dev = 2.388, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.0266159319208333;  // std dev = 2.878, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.38236440008019823;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1408220881005261;  // std dev = 4.672, 90.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(E, G) )
%   | | | then return -0.06399717788155207;  // std dev = 2.217, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.11261764004290645;  // std dev = 3.638, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( interaction(A, H), location(E, F) )
%   | | | then return 0.032066833809660786;  // std dev = 2.752, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.039089870248313244;  // std dev = 4.472, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.31135074753154485;  // std dev = 1.513, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06849878498465113;  // std dev = 1.779, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.0268708909492574;  // std dev = 1.872, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1205946693742873;  // std dev = 2.066, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), interaction(G, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.35453450505509404;  // std dev = 1.568, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.021885887157489143;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(I, E), interaction(I, J) )
%   | | | then return -0.004520253979382914;  // std dev = 2.176, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.4099204903617412;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( complex(A, L), complex(K, L) )
%   | | | then return 0.0412924441621185;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.11418982134826611;  // std dev = 2.657, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 6.703609131041029E-4;  // std dev = 5.129, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | | | else return 0.06699446426406558;  // std dev = 3.559, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '49.012', 'seconds']
Refined model CLL: -0.415229


******************************************
Best model found
******************************************
Results 

CLL : -0.352413 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.698 

Total Inference Time : 55.56622552871704 

Total revision time: 99.21654616546631
Best scored revision CLL: -0.352571


Results 

CLL : -0.352413 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 99.37809859466553 

Total Inference Time : 55.56622552871704 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.797
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17785153732999495;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1736738931462693;  // std dev = 0.473, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16513545855676717;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11001382861328655;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12661474841581583;  // std dev = 0.481, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0540113444277751;  // std dev = 0.464, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07500225913325591;  // std dev = 0.475, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03191578050753048;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.123', 'seconds']
Parameter learned model CLL:-0.352157 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.649, 183, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.446, 156, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.608, 177, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 188, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 163, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.662, 185, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21749284835754143, nan], 'true': [nan, 0.21749284835754143], 'true,false': [nan, 0.21749284835754143]}
{'': [nan, 0.22394444788889709]}
{'': [nan, 0.2290827129294454], 'false': [0.2290827129294454, nan]}
{'': [nan, 0.22006968439618718], 'false': [0.22006968439618718, nan]}
{'': [nan, 0.2311951432284735]}
{'': [nan, 0.21535510682508535]}
{'': [0.2260931275301988, nan]}
{'': [0.21663648370800934, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 25.552
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.12130682983635446;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( phenotype(G, D), interaction(A, G) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( complex(A, K), phenotype(A, L) )
%   | | then if ( phenotype(I, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.16926004621062343;  // std dev = 0.463, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else return 0.1397581305018104;  // std dev = 0.450, 174.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), location(A, F) )
%   | then if ( phenotype(A, G), enzyme(E, H) )
%   | | then if ( enzyme(C, I) )
%   | | | then return 0.47610659163446645;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22716095130665054;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( enzyme(A, J), enzyme(C, J) )
%   | | | then return 0.04273140774930177;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.18745241459738637;  // std dev = 3.954, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | else return 0.672970133820559;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, K), phenotype(K, L) )
%   | then return 0.09881521967796157;  // std dev = 0.442, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( enzyme(A, M), phenotype(A, N) )
%   | | then if ( phenotype(P, N), interaction(P, P) )
%   | | | then return 0.4163559447484886;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.31635594474848855;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.15496213889760072;  // std dev = 0.465, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), location(A, G) )
%   | | | then return 0.1670285875977836;  // std dev = 6.637, 189.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=69 */
%   | | | else return 0.07983093498444598;  // std dev = 3.517, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), phenotype(E, I) )
%   | | | then return 0.042497518783096225;  // std dev = 2.419, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.11626857797418921;  // std dev = 1.584, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( enzyme(A, J), interaction(E, E) )
%   | | | then return 0.4526255904325008;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0655208756731564;  // std dev = 3.623, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( interaction(A, M), interaction(L, M) )
%   | | | then return 0.25281414751652576;  // std dev = 2.035, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.09052110988953005;  // std dev = 5.110, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.3360191565502454;  // std dev = 1.911, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.13952452809293045;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( interaction(H, F), phenotype(F, I) )
%   | | | then return 0.08264520548974705;  // std dev = 3.380, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return -0.059290775932514424;  // std dev = 2.519, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.04833096355774437;  // std dev = 3.171, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.12017687473292915;  // std dev = 5.536, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.02714519120482046;  // std dev = 2.555, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.15381470709663198;  // std dev = 5.098, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.06220909862621577;  // std dev = 2.614, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.002546412466303393;  // std dev = 4.109, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), phenotype(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.16634507202064172;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2320844311600987;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.017381601007030886;  // std dev = 1.875, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.0826987595637873;  // std dev = 2.832, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15556372644882743;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.015148001739217655;  // std dev = 3.851, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07118467274116906;  // std dev = 5.345, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | | else return 0.2421244727576899;  // std dev = 1.013, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.19965086482039732;  // std dev = 1.236, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1113541109928683;  // std dev = 2.749, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.010056461194573936;  // std dev = 3.183, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.06423341132788095;  // std dev = 5.933, 156.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
%   | else if ( interaction(I, A) )
%   | | then return -0.0014803873489585562;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.14749616792889866;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A), phenotype(A, E) )
%   | then if ( phenotype(F, E), enzyme(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.14412468500777395;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.1024681985625594;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.036981827864916814;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.0052527757147507945;  // std dev = 1.882, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.4596427157619712;  // std dev = 1.503, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.1266172773295201;  // std dev = 4.281, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | | else return 0.053414924549792075;  // std dev = 4.886, 105.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=37 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(F, F), phenotype(A, G) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.19759139050516514;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.09908604192318766;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(F, H), interaction(F, I) )
%   | | | then return -0.0027277938386824603;  // std dev = 2.530, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.11906721755367333;  // std dev = 1.508, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.15460121272536914;  // std dev = 1.297, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08583798161064023;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.11642479628232107;  // std dev = 2.381, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.020738174692302054;  // std dev = 6.185, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '56.882', 'seconds']
Refined model CLL: -0.40387


******************************************
Best model found
******************************************
Results 

CLL : -0.351434 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.552 

Total Inference Time : 33.600367069244385 

Total revision time: 67.5682463874817
Best scored revision CLL: -0.352157


Results 

CLL : -0.351434 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 67.72979881668091 

Total Inference Time : 33.600367069244385 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.586
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19799268509951135;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15571882247907323;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1340534377305097;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11743237560864507;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09839739802772653;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06943889896841256;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.039463231677764395;  // std dev = 0.460, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04962767613662436;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.631', 'seconds']
Parameter learned model CLL:-0.337355 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.578, 169, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.665, 181, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.637, 177, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.46, 200, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.686, 184, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2243499755859384, nan], 'true': [nan, 0.2243499755859384], 'true,false': [nan, 0.2243499755859384]}
{'': [nan, 0.21881952985724348]}
{'': [nan, 0.21924426375584843], 'false': [0.21924426375584843, nan]}
{'': [nan, 0.22094524793388634], 'false': [0.22094524793388634, nan]}
{'': [nan, 0.22137084532088316]}
{'': [nan, 0.21754703719723148]}
{'': [0.21124452160400012, nan]}
{'': [0.21797088819596794, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 43.884
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(C, E), complex(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(C, F), interaction(G, C) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( phenotype(A, J), phenotype(C, K) )
%   | | | then return 0.2129876447769317;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.11621345122854461;  // std dev = 3.445, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else if ( complex(A, L), enzyme(C, M) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.2233663264038592;  // std dev = 5.163, 115.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=42 */
%   else if ( interaction(A, N), interaction(N, P) )
%   | then return 0.024815601766178853;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0.0962441731947503;  // std dev = 0.426, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(C, F), interaction(F, C) )
%   | | then if ( enzyme(F, G), complex(E, H) )
%   | | | then return 0.3051780875833914;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12942637421935924;  // std dev = 2.199, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return 0.4293144801899695;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.11263707001035783;  // std dev = 0.448, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   else if ( location(A, I), interaction(J, A) )
%   | then if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( location(K, M) )
%   | | | then return 0.3301953470876925;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3287272355914874;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(J, N), interaction(J, J) )
%   | | | then return 0.09520772511391294;  // std dev = 2.272, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.18287100670545597;  // std dev = 5.100, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | else return 0.43564619380850056;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.2164128078757469;  // std dev = 3.290, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.11845526119382409;  // std dev = 6.901, 216.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( enzyme(A, F), interaction(D, D) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return 0.10262225325484375;  // std dev = 1.630, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4498190225227449;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, H), phenotype(D, E) )
%   | | | then return -0.015940537963660635;  // std dev = 3.078, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.06710953942019954;  // std dev = 3.879, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.10637664877659148;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.38923444350332437;  // std dev = 1.543, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.05569630810962819;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1486433400074975;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(G, A), complex(A, H) )
%   | | | then return 0.07775443059570446;  // std dev = 4.614, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.14931002852358913;  // std dev = 5.665, 135.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=52 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.08057094549239847;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10747117100425854;  // std dev = 1.302, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.09993352828585755;  // std dev = 2.211, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.07401694939601405;  // std dev = 2.604, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.19790218385942135;  // std dev = 3.037, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.02938021252797523;  // std dev = 6.201, 190.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(D, F), complex(A, G) )
%   | | then if ( interaction(E, A) )
%   | | | then return -0.14020082630126854;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.020644870022352366;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( complex(E, H), phenotype(E, I) )
%   | | | then return 0.11600042506840036;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.22893905055780422;  // std dev = 1.863, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L) )
%   | | | then return -0.09109990805277277;  // std dev = 2.159, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.019589932920762918;  // std dev = 3.022, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.13889157334049487;  // std dev = 3.495, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.0034532113318483156;  // std dev = 3.715, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( location(D, F), interaction(G, E) )
%   | | then if ( interaction(G, G), location(G, F) )
%   | | | then return -0.04376267440763404;  // std dev = 4.333, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | | | else return 0.10898775346120337;  // std dev = 2.588, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else return 0.4603521596708187;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.13893553060545225;  // std dev = 1.565, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.28984205415613384;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.04648284692842444;  // std dev = 4.713, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.14766649517499664;  // std dev = 2.037, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(A, G), location(A, F) )
%   | | then if ( phenotype(E, H), enzyme(E, I) )
%   | | | then return 0.2999747637007423;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05297752550966278;  // std dev = 4.180, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.12664479879703847;  // std dev = 1.573, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.011001414653822367;  // std dev = 5.701, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | else if ( phenotype(A, L) )
%   | | then if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.21217033226593562;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.011568658299824378;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.32670973404547954;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( complex(E, H), interaction(I, A) )
%   | | | then return 0.020181753857780052;  // std dev = 1.655, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.1437730770564132;  // std dev = 2.184, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.38315113854370714;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02334768994954546;  // std dev = 2.061, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), complex(L, M) )
%   | | | then return 0.04085966616002922;  // std dev = 5.125, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return -0.1464541420244659;  // std dev = 1.564, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return -0.0713890294580462;  // std dev = 1.899, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.12830229727869005;  // std dev = 3.441, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14', 'minutes', 'and', '57.096', 'seconds']
Refined model CLL: -0.390426


******************************************
Best model found
******************************************
Results 

CLL : -0.336933 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 43.884 

Total Inference Time : 114.52265000343323 

Total revision time: 166.18862530708313
Best scored revision CLL: -0.337355


Results 

CLL : -0.336933 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 166.30764553070068 

Total Inference Time : 114.52265000343323 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.216
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19363280606725106;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18189969658948407;  // std dev = 0.477, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13205663260236647;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13472332366940898;  // std dev = 8.221, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08091227510943401;  // std dev = 0.466, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05913625947602043;  // std dev = 0.464, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06999632245689992;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09074761728912552;  // std dev = 8.094, 281.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.020', 'seconds']
Parameter learned model CLL:-0.359231 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.313, 206, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.372, 215, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.221, 193, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 228, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 206, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.094, 177, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22293444328824347, nan], 'true': [nan, 0.22293444328824347], 'true,false': [nan, 0.22293444328824347]}
{'': [nan, 0.22719697310931833]}
{'': [nan, 0.21973054510077103], 'false': [0.21973054510077103, nan]}
{'': [nan, 0.22755047670872502], 'false': [0.22755047670872502, nan]}
{'': [nan, 0.21760000000000193]}
{'': [nan, 0.21512556249092912]}
{'': [0.22293444328824294, nan]}
{'': [0.23312774660908545, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 52.703
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then if ( interaction(C, C), phenotype(C, G) )
%   | | then if ( interaction(C, F), complex(C, H) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18467954734441028;  // std dev = 0.469, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | else return 0.15859736559278662;  // std dev = 0.458, 223.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=67 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( complex(A, J) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( phenotype(D, E) )
%   | then if ( interaction(F, A), complex(F, C) )
%   | | then if ( phenotype(A, E), interaction(F, D) )
%   | | | then return 0.17372152778511374;  // std dev = 2.288, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.06518925252876724;  // std dev = 1.947, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.0696035591304592;  // std dev = 0.433, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else return 0.4923462129598663;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then return 0.11432144844947438;  // std dev = 0.447, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.07301982141568247;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.21272570376862365;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.23575542196952903;  // std dev = 4.904, 100.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=40 */
%   | | | else return 0.13730005960665012;  // std dev = 3.212, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), enzyme(A, G) )
%   | | | then return 0.18843398359734695;  // std dev = 4.382, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
%   | | | else return 0.13969554758176234;  // std dev = 6.960, 218.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( complex(D, E), location(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.07743629883265378;  // std dev = 3.661, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.14181352709715916;  // std dev = 6.200, 166.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=60 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.009597091887679206;  // std dev = 2.164, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.09771360299398801;  // std dev = 3.089, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.7465190774832696;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.05793113327202186;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(G, H), phenotype(A, I) )
%   | | | then return -0.02023687204543213;  // std dev = 2.578, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.13803861756844013;  // std dev = 1.716, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11972848692439268;  // std dev = 7.305, 233.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=83 */
%   | | | else return 0.04701401528481096;  // std dev = 2.185, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( interaction(H, A), complex(G, I) )
%   | | | then return 0.03542377959213841;  // std dev = 4.614, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   | | | else return -0.08750955657545878;  // std dev = 1.868, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11936032268332726;  // std dev = 6.253, 165.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=63 */
%   | | | else return -0.0010160948371340875;  // std dev = 2.108, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then if ( phenotype(E, G), location(A, H) )
%   | | | then return 0.01882134080338461;  // std dev = 6.272, 190.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=55 */
%   | | | else return 0.23321944646247086;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(I, D), interaction(I, I) )
%   | | | then return 0.1959984808460821;  // std dev = 2.059, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.06940925184021171;  // std dev = 4.614, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | else if ( complex(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.03674839434667852;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02793943623083306;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.19340744810110966;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.276740781434443;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.03463999972902593;  // std dev = 3.892, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.15765061845706713;  // std dev = 1.406, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(I, D), interaction(I, J) )
%   | | | then return -0.10053474268707535;  // std dev = 2.347, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.0037916440114930195;  // std dev = 2.404, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.19145379749803582;  // std dev = 2.106, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.07447967348114824;  // std dev = 4.151, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -8.393196639798898E-4;  // std dev = 3.911, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | | else return 0.17313205190820857;  // std dev = 1.824, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F), complex(A, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return -0.08122822540770774;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11243202341936787;  // std dev = 1.888, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10992590834491267;  // std dev = 2.570, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.20812985926986735;  // std dev = 1.020, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.06001143250183387;  // std dev = 2.964, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.03468141075788382;  // std dev = 6.538, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.039326041645831505;  // std dev = 1.895, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.1146211292901053;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( location(A, G), interaction(A, H) )
%   | | then if ( enzyme(E, I), phenotype(H, J) )
%   | | | then return 0.18726156402420535;  // std dev = 2.968, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return -4.96195647000349E-4;  // std dev = 4.225, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.08021096962319293;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.02334229440292895;  // std dev = 5.210, 132.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=38 */
%   | else if ( interaction(A, M), complex(A, N) )
%   | | then if ( phenotype(A, P), complex(M, N) )
%   | | | then return 0.2964643654257027;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.033433877139448925;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, Q), interaction(R, A) )
%   | | | then return 0.12939625838905458;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.2478157864440858;  // std dev = 1.837, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13', 'minutes', 'and', '1.671', 'seconds']
Refined model CLL: -0.393626


******************************************
Best model found
******************************************
Results 

CLL : -0.360216 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 52.703 

Total Inference Time : 160.82194805145264 

Total revision time: 225.07419547462464
Best scored revision CLL: -0.359231


Results 

CLL : -0.360216 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 225.1932156982422 

Total Inference Time : 160.82194805145264 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.454
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19763232993345892;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15743737881784378;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12645835372639605;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1334966527946816;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11041048208670363;  // std dev = 0.475, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08123046873737076;  // std dev = 0.472, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08772266612774748;  // std dev = 0.479, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.025026505607911628;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.627', 'seconds']
Parameter learned model CLL:-0.353191 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.926, 198, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.765, 175, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.479, 165, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.951, 202, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2242344194659672, nan], 'true': [nan, 0.2242344194659672], 'true,false': [nan, 0.2242344194659672]}
{'': [nan, 0.2194059109240976]}
{'': [nan, 0.2165992865636172], 'false': [0.2165992865636172, nan]}
{'': [nan, 0.22584129388825638], 'false': [0.22584129388825638, nan]}
{'': [nan, 0.22584129388825633]}
{'': [nan, 0.22302733230326746]}
{'': [0.22982936910475504, nan]}
{'': [0.21500300800592123, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 34.237
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( complex(A, E) )
%   | then if ( complex(F, E), interaction(F, G) )
%   | | then return 0.14661047356105084;  // std dev = 0.453, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( phenotype(H, C), interaction(H, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, K), location(K, D) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( interaction(L, A), location(L, M) )
%   | then return 0.1448622218127982;  // std dev = 0.452, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
%   | else if ( interaction(A, N), complex(N, P) )
%   | | then return 0.23745927992709853;  // std dev = 0.485, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( complex(D, C), interaction(E, D) )
%   | then if ( complex(E, C), phenotype(A, F) )
%   | | then return 0.07011785932214884;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.13122144418524861;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.29397975539579135;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.08633875808686901;  // std dev = 0.436, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   else if ( location(A, H) )
%   | then if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.16769575514494733;  // std dev = 2.814, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.4362453067337505;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.08373749735034781;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.17518586197184266;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | else return 0.576717627526425;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.25115882608874474;  // std dev = 3.140, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.11244245476342206;  // std dev = 7.162, 239.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( location(A, E) )
%   | | then if ( location(F, E), interaction(F, F) )
%   | | | then return 0.061216359506317986;  // std dev = 5.038, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.2666653250048465;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.09455134883270573;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( interaction(I, A), location(I, H) )
%   | | | then return 0.17848057851737886;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.5433547549713177;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09093985300875386;  // std dev = 2.041, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.16757445109789315;  // std dev = 4.244, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.18902575583227305;  // std dev = 2.158, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.007942611144069916;  // std dev = 3.438, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.07140741527927236;  // std dev = 3.339, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.15877362865557337;  // std dev = 5.583, 130.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, A), location(F, H) )
%   | | | then return 0.03067925666698675;  // std dev = 1.692, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2511895658562531;  // std dev = 3.129, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.013348814470100057;  // std dev = 4.933, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | | | else return 0.08984362579704007;  // std dev = 4.782, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( location(D, F), interaction(A, A) )
%   | | | then return 0.17654442469839515;  // std dev = 1.297, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.014595528923081524;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), phenotype(G, H) )
%   | | | then return 0.24875789978983986;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5104100117185423;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.051171892886341316;  // std dev = 3.079, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.030234992819551467;  // std dev = 2.295, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, M), complex(A, N) )
%   | | | then return 0.21131677085779263;  // std dev = 2.190, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.03172820843885667;  // std dev = 5.947, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, D), location(A, E) )
%   | | then if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.2364759111235271;  // std dev = 1.819, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.054209871696654276;  // std dev = 2.877, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( interaction(D, A), enzyme(A, H) )
%   | | | then return 0.18103606571260797;  // std dev = 1.234, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0010010546904425913;  // std dev = 4.388, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), location(J, K) )
%   | | | then return 0.30865569446399294;  // std dev = 2.339, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return -0.09903320352663826;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08555061520350124;  // std dev = 2.767, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.05160952602010785;  // std dev = 3.064, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.12164998954815674;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.02183810078911329;  // std dev = 1.439, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(E, G) )
%   | | | then return 0.28697682114596945;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.15517715652548553;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( location(A, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.030807926534154255;  // std dev = 4.837, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return 0.013613022136548657;  // std dev = 5.490, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | else return -0.17322786230110898;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A), enzyme(A, G) )
%   | | | then return -0.06300783221781833;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.010474311546203896;  // std dev = 3.377, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( location(H, E), interaction(H, H) )
%   | | | then return 0.058013791847857106;  // std dev = 6.368, 169.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=64 */
%   | | | else return 0.2565870285534984;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08819123384919281;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.20102677432315477;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '38.903', 'seconds']
Refined model CLL: -0.4098


******************************************
Best model found
******************************************
Results 

CLL : -0.353033 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.237 

Total Inference Time : 50.88809609413147 

Total revision time: 96.26139070129395
Best scored revision CLL: -0.353191


Results 

CLL : -0.353033 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 96.3804109249115 

Total Inference Time : 50.88809609413147 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.795
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17785153732999495;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16459313168972728;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15933662189078956;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11006334394881447;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08492950895372307;  // std dev = 0.466, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11373324410601313;  // std dev = 0.481, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06890864070338475;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03968938083728675;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.412', 'seconds']
Parameter learned model CLL:-0.353549 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.649, 183, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.487, 161, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.622, 179, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 167, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.622, 179, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21749284835754143, nan], 'true': [nan, 0.21749284835754143], 'true,false': [nan, 0.21749284835754143]}
{'': [nan, 0.2209304032530362]}
{'': [nan, 0.22695012211313306], 'false': [0.22695012211313306, nan]}
{'': [nan, 0.2192096831612649], 'false': [0.2192096831612649, nan]}
{'': [nan, 0.21706447187928904]}
{'': [nan, 0.23119514322847218]}
{'': [0.22437469730819198, nan]}
{'': [0.21920968316126963, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.088
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(A, A) )
%   | then return 0.07243464938522666;  // std dev = 0.410, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else return 0.15814893509951156;  // std dev = 0.458, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, E), phenotype(A, F) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(E, G) )
%   | | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.25208832903890627;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.17814893509951232;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(A, E), interaction(C, C) )
%   | then return -0.008721425774590749;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( enzyme(C, F), complex(A, G) )
%   | | then return 0.08284612457389041;  // std dev = 0.432, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else return 0.17797762133925546;  // std dev = 0.476, 141.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=49 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( enzyme(I, J), phenotype(A, K) )
%   | | then return 0.8370675704215355;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(H, L) )
%   | | | then return 0.14795312628808885;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4611543248142871;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, M), phenotype(M, N) )
%   | | then if ( enzyme(M, P) )
%   | | | then return 0.15357612846718963;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.3238865376860449;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.0978305431295048;  // std dev = 0.451, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.16068194401772448;  // std dev = 5.352, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | | else return 0.08250652094389244;  // std dev = 5.421, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(D, D), phenotype(A, G) )
%   | | | then return 0.002384386430845247;  // std dev = 1.229, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.23768434024057342;  // std dev = 2.106, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return -0.06251674739492794;  // std dev = 1.768, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.06834854563541051;  // std dev = 2.657, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(K, J) )
%   | | | then return 0.19006615980859554;  // std dev = 4.725, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | | else return 0.11210927405372216;  // std dev = 3.474, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.5512277570050352;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14509746138669408;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( interaction(H, F), complex(H, I) )
%   | | | then return 0.04952847772886463;  // std dev = 4.077, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.15408608843583366;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07021230062627443;  // std dev = 4.061, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.0029705635603440657;  // std dev = 3.552, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.04540195067573039;  // std dev = 3.082, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.1262779643847255;  // std dev = 6.497, 176.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=69 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08752389251992106;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11899931521978847;  // std dev = 1.297, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.008858076510863877;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.1686968892364791;  // std dev = 2.339, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.4094068447784451;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.15921884681659;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.0648927153201566;  // std dev = 2.707, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.11104641938883934;  // std dev = 2.227, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.005303611960039613;  // std dev = 5.399, 141.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.31661195704092965;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03524764572934202;  // std dev = 2.571, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.08810005223650852;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.0317941682483339;  // std dev = 5.029, 124.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=35 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.27302926780006936;  // std dev = 1.498, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09672708410654522;  // std dev = 1.380, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return 0.10553896328215977;  // std dev = 2.665, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.04033463988712828;  // std dev = 2.993, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return 0.33396047971817144;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.045355398243701814;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.13241628934298796;  // std dev = 2.838, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return -0.05097025041240508;  // std dev = 2.688, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.17055717322937963;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.07638754317528669;  // std dev = 3.033, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return -0.006264256176554145;  // std dev = 5.295, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( phenotype(G, F), complex(G, E) )
%   | | | then return -0.2750007375092098;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.07008959665608626;  // std dev = 1.491, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(I, E), interaction(J, I) )
%   | | | then return -0.006065906040505658;  // std dev = 2.790, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.1267972330538203;  // std dev = 1.233, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(K, M), phenotype(M, L) )
%   | | | then return -0.086197058627471;  // std dev = 3.403, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.0599660494576842;  // std dev = 3.225, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.09315910373505902;  // std dev = 1.964, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.08127325094412242;  // std dev = 4.450, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '36.374', 'seconds']
Refined model CLL: -0.397432


******************************************
Best model found
******************************************
Results 

CLL : -0.35283 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.088 

Total Inference Time : 34.79383420944214 

Total revision time: 75.03600917625428
Best scored revision CLL: -0.353549


Results 

CLL : -0.35283 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 75.15502939987184 

Total Inference Time : 34.79383420944214 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.541
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16886322081379732;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16838637532471806;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16135057184584162;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1232797805390981;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08329093434958765;  // std dev = 0.466, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09452807989350072;  // std dev = 0.475, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0819242136382745;  // std dev = 0.477, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.045509735997218304;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.214', 'seconds']
Parameter learned model CLL:-0.35559 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.744, 193, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.523, 162, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.594, 171, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 161, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.63, 176, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21417091836734775, nan], 'true': [nan, 0.21417091836734775], 'true,false': [nan, 0.21417091836734775]}
{'': [nan, 0.22179651535458292]}
{'': [nan, 0.2273189142110628], 'false': [0.2273189142110628, nan]}
{'': [nan, 0.22349918875067407], 'false': [0.22349918875067407, nan]}
{'': [nan, 0.21712353580485344]}
{'': [nan, 0.22604875283446588]}
{'': [0.22774128511966837, nan]}
{'': [0.22137084532088305, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.545
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(C, E), location(A, F) )
%   | then if ( interaction(A, G), interaction(C, C) )
%   | | then return 0.14661047356105084;  // std dev = 0.453, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( location(D, E), complex(C, H) )
%   | | | then return 0.2823913593419354;  // std dev = 4.015, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | | else return 0.17064893509951154;  // std dev = 4.541, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | else return 0.0962441731947503;  // std dev = 0.426, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( location(C, E), interaction(F, D) )
%   | then if ( interaction(A, D), phenotype(F, G) )
%   | | then return 0.1603980060587119;  // std dev = 0.470, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else return 0.07968508201483016;  // std dev = 0.431, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | else return 0.5724677762287707;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), enzyme(I, J) )
%   | | then if ( complex(A, K), interaction(I, I) )
%   | | | then return 0.23224802278807685;  // std dev = 2.032, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.12070950576839398;  // std dev = 2.795, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else return 0.4974491714577646;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(L, A) )
%   | | then if ( interaction(L, M), interaction(M, M) )
%   | | | then return 0.27845534462836496;  // std dev = 3.477, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.09880178727067496;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.49040032115077253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(A, A) )
%   | | | then return 0.04427101651903304;  // std dev = 1.529, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.13348440305852413;  // std dev = 7.478, 251.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( phenotype(E, D), interaction(G, A) )
%   | | | then return 0.09436409245009827;  // std dev = 2.375, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.018809152406343125;  // std dev = 2.360, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.5566139171869224;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10051178721625918;  // std dev = 2.170, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.15865679055726825;  // std dev = 2.226, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.00387130923239094;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.3070253521518327;  // std dev = 2.445, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.12771785456466456;  // std dev = 4.758, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.16732364169749506;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.019096266560726313;  // std dev = 5.639, 160.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=43 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.19751411325739712;  // std dev = 2.346, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.09094258332547875;  // std dev = 4.205, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), interaction(H, H) )
%   | | | then return 0.11060513481607306;  // std dev = 1.400, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.01813981496681269;  // std dev = 3.115, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09178571917796537;  // std dev = 6.568, 191.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=67 */
%   | | | else return 0.2181152789790406;  // std dev = 1.436, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( interaction(D, H), interaction(F, H) )
%   | | | then return 0.12656002948555098;  // std dev = 2.224, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.006090102969811294;  // std dev = 2.308, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.5018984113294456;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13287801462143828;  // std dev = 2.973, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.10185698000209319;  // std dev = 2.742, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.0048191252605807285;  // std dev = 5.326, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return -0.09421652242433946;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.13360087120733657;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), phenotype(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.056038003949453116;  // std dev = 3.666, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return -0.05841643164661579;  // std dev = 2.483, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return 0.27425234722892705;  // std dev = 2.352, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.07542135990268159;  // std dev = 5.119, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), phenotype(K, J) )
%   | | | then return -0.1480360257719402;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03783018217934017;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.25294884044089977;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1835180946379522;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(E, F) )
%   | then if ( phenotype(A, G), location(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.24415618534541927;  // std dev = 1.159, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.018057931120114775;  // std dev = 4.514, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | else if ( enzyme(A, H), interaction(I, E) )
%   | | | then return 0.1657141612525922;  // std dev = 3.305, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | | else return 0.058286296527313465;  // std dev = 4.226, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.31724731945964496;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1101237776015237;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.418250751897594;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A) )
%   | | then if ( phenotype(G, F) )
%   | | | then return 0.07907886711845497;  // std dev = 1.482, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.003845389331909178;  // std dev = 2.480, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0.20487063668017877;  // std dev = 1.140, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.01800535206506392;  // std dev = 2.853, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.0948279242524844;  // std dev = 3.905, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.06364353092331815;  // std dev = 3.489, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return -0.04260360663383219;  // std dev = 3.803, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '32.648', 'seconds']
Refined model CLL: -0.403785


******************************************
Best model found
******************************************
Results 

CLL : -0.355197 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.545 

Total Inference Time : 57.991668939590454 

Total revision time: 104.22024277305603
Best scored revision CLL: -0.35559


Results 

CLL : -0.355197 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 104.30043367004394 

Total Inference Time : 57.991668939590454 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16767274462331902;  // std dev = 8.474, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1719720710268184;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1594130802518862;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12475570990643428;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10977636475625055;  // std dev = 0.476, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.060023025905738624;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06564581833241707;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06023295561395924;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.569', 'seconds']
Parameter learned model CLL:-0.352403 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.474, 232, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.236, 195, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.293, 203, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 208, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.279, 201, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21371882086167981, nan], 'true': [nan, 0.21371882086167981], 'true,false': [nan, 0.21371882086167981]}
{'': [nan, 0.22293444328823725]}
{'': [nan, 0.22684310018903814], 'false': [0.22684310018903814, nan]}
{'': [nan, 0.22400237668304246], 'false': [0.22400237668304246, nan]}
{'': [nan, 0.22613436937781972]}
{'': [nan, 0.21618425550392256]}
{'': [0.22222222222222093, nan]}
{'': [0.22471378661650024, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 44.671
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(C, E), interaction(D, D) )
%   | then return 0.2684053453559226;  // std dev = 0.492, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else return 0.14255260482428242;  // std dev = 0.451, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( complex(A, H) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, F) )
%   | | | then return 0.25814893509951237;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, M), location(A, N) )
%   | | | then return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.23314893509951234;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( enzyme(C, E), phenotype(C, F) )
%   | then if ( interaction(A, C) )
%   | | then if ( complex(C, G) )
%   | | | then return 0.4947913571377153;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16734320285085533;  // std dev = 1.626, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.087693280208268;  // std dev = 0.439, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( complex(C, H) )
%   | | then if ( phenotype(C, D), enzyme(A, I) )
%   | | | then return 0.0875708245419049;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1993593410914692;  // std dev = 4.143, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else if ( location(A, J), location(C, J) )
%   | | | then return 0.4096634599767879;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2125708245419049;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(A, K), interaction(L, A) )
%   | then return 0.1501586687327368;  // std dev = 0.464, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | else return 0.05973423817389285;  // std dev = 0.432, 114.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.09322743592701488;  // std dev = 4.309, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return 0.16544802826025717;  // std dev = 7.068, 219.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(A, F), interaction(E, G) )
%   | | then if ( complex(D, F), phenotype(E, H) )
%   | | | then return 0.054179757300764624;  // std dev = 3.194, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.2599150881449647;  // std dev = 2.405, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( enzyme(D, I), interaction(D, A) )
%   | | | then return 0.0025585237421750866;  // std dev = 2.165, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.07363209595446667;  // std dev = 3.691, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.16981727473540612;  // std dev = 3.679, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return 0.07263017060184379;  // std dev = 2.041, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.18729432575668642;  // std dev = 2.432, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.2819845128761345;  // std dev = 2.819, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.11655200450826765;  // std dev = 3.840, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return 0.34410662420704213;  // std dev = 1.699, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0719811841554426;  // std dev = 6.873, 218.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=69 */
%   | | | else return -0.039178501837020006;  // std dev = 2.006, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(G, A) )
%   | | then if ( location(A, H), complex(F, I) )
%   | | | then return 0.06130864717587773;  // std dev = 5.061, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | | else return 0.23982079255085798;  // std dev = 2.292, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( location(A, J) )
%   | | | then return 0.036048501935906106;  // std dev = 6.000, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
%   | | | else return -0.09263406575791301;  // std dev = 1.987, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( interaction(H, A), enzyme(H, G) )
%   | | | then return 0.12255653173161789;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.031770066067505875;  // std dev = 2.347, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( enzyme(D, I), phenotype(A, E) )
%   | | | then return 0.06170013055688;  // std dev = 2.202, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.20738783778477743;  // std dev = 3.701, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | else if ( location(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.0762120459953238;  // std dev = 4.422, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | | else return 0.02032756904825544;  // std dev = 4.170, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.09975318572216293;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.22218725772232847;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(F, A), phenotype(D, G) )
%   | | then if ( complex(D, H), complex(A, H) )
%   | | | then return 0.17585218182618015;  // std dev = 2.664, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.043861104885205775;  // std dev = 4.193, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | else if ( complex(A, I), interaction(D, J) )
%   | | | then return 0.06098423055498556;  // std dev = 1.864, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.3919779588201537;  // std dev = 1.413, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( location(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.054845510422218545;  // std dev = 3.812, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.16173242759553993;  // std dev = 1.802, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( enzyme(A, P) )
%   | | | then return -0.05112089647953078;  // std dev = 2.737, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.002903914882454805;  // std dev = 3.224, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(E, I), enzyme(I, J) )
%   | | | then return 0.10554230986980416;  // std dev = 2.464, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.014002908154727118;  // std dev = 2.417, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( location(A, K), complex(E, L) )
%   | | | then return 0.7180059311303809;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.266966808050591;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(A, M) )
%   | | then if ( interaction(M, A), complex(A, N) )
%   | | | then return -0.107937919299912;  // std dev = 2.461, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return -0.014769116120523213;  // std dev = 3.517, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else if ( enzyme(A, P) )
%   | | | then return -0.0029713169928769568;  // std dev = 3.658, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.0750872591575911;  // std dev = 4.530, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A) )
%   | then if ( complex(A, F), phenotype(E, G) )
%   | | then if ( interaction(A, E), enzyme(E, H) )
%   | | | then return -0.09548598839994586;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.10910138758889255;  // std dev = 4.079, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else if ( interaction(A, I), interaction(E, E) )
%   | | | then return 0.14185960479056475;  // std dev = 1.627, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.010663838290508635;  // std dev = 6.489, 192.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=62 */
%   | else if ( complex(A, J) )
%   | | then return 0.3223529261418142;  // std dev = 1.129, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.06263799187528458;  // std dev = 1.127, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '23.121', 'seconds']
Refined model CLL: -0.40922


******************************************
Best model found
******************************************
Results 

CLL : -0.353414 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 44.671 

Total Inference Time : 71.8560950756073 

Total revision time: 128.14221622085572
Best scored revision CLL: -0.352403


Results 

CLL : -0.353414 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 128.22240711784363 

Total Inference Time : 71.8560950756073 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.265
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19763232993345892;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18756139480758416;  // std dev = 0.479, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13906836734079828;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10681173994866565;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08575787823902185;  // std dev = 0.468, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08910051932184732;  // std dev = 0.474, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08510298924614988;  // std dev = 0.479, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07216327825612728;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.764', 'seconds']
Parameter learned model CLL:-0.365904 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.824, 183, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.88, 191, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.479, 167, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.677, 164, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2242344194659672, nan], 'true': [nan, 0.2242344194659672], 'true,false': [nan, 0.2242344194659672]}
{'': [nan, 0.22903653791684744]}
{'': [nan, 0.2226247933884312], 'false': [0.2226247933884312, nan]}
{'': [nan, 0.21940591092409656], 'false': [0.21940591092409656, nan]}
{'': [nan, 0.21860264696829548]}
{'': [nan, 0.2250383493871025]}
{'': [0.22903653791684822, nan]}
{'': [0.23022460937500033, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 39.445
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D), location(C, E) )
%   | then if ( location(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, C), location(C, F) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(C, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then return 0.14386322081379677;  // std dev = 0.452, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1869160583871827;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.22911667703499622;  // std dev = 3.804, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then if ( phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.37677183342140813;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1671724443544552;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.8336279044245973;  // std dev = 0.000517, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.09995448599231657;  // std dev = 0.446, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.3308743037509422;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return 0.08663864563306757;  // std dev = 0.458, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.1394159447122131;  // std dev = 0.460, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.30324293364400623;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.1743280175043692;  // std dev = 4.877, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A), complex(A, F) )
%   | | | then return -0.09154484122262456;  // std dev = 1.606, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.12436230799989098;  // std dev = 7.774, 277.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, G) )
%   | | then if ( complex(D, H), complex(A, H) )
%   | | | then return 0.1798440303347876;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3662448057991277;  // std dev = 2.158, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.059991925635688635;  // std dev = 3.028, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.21699182076890036;  // std dev = 3.035, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(J, A), location(J, K) )
%   | | | then return 0.10827838904840399;  // std dev = 3.498, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.2879911391378918;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.01548226869431501;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.08054442907117555;  // std dev = 3.563, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(F, H), phenotype(A, H) )
%   | | | then return 0.1627680183503735;  // std dev = 2.016, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.0402988530358642;  // std dev = 4.576, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.056228314877515645;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.13280607570123318;  // std dev = 5.696, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, I) )
%   | | | then return -0.005988339449404879;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0.08708777901519778;  // std dev = 3.428, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.20136920425273971;  // std dev = 2.179, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.06976669493234515;  // std dev = 5.508, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.009388951602903288;  // std dev = 1.720, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.11832000267932355;  // std dev = 1.747, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(D, J), enzyme(A, K) )
%   | | | then return 0.2788295666785248;  // std dev = 1.505, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.03487786182710407;  // std dev = 2.977, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( enzyme(A, L), location(A, M) )
%   | | then if ( interaction(N, A) )
%   | | | then return 0.13159571790176183;  // std dev = 3.289, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.38556160990284094;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, P), interaction(A, Q) )
%   | | | then return 0.11861910388510859;  // std dev = 2.176, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.05484669095052902;  // std dev = 5.088, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), complex(F, D) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.06956250701382691;  // std dev = 1.935, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.05265449970524258;  // std dev = 1.511, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(I, D), phenotype(I, J) )
%   | | | then return 0.15004561099184247;  // std dev = 2.754, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.03597785978111678;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.05229420140870922;  // std dev = 2.713, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return -0.07036294931376337;  // std dev = 3.396, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.09097853164240435;  // std dev = 3.262, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.018248149846929754;  // std dev = 4.188, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(A, G), location(G, F) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.06984577911115622;  // std dev = 3.409, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.28855369814548754;  // std dev = 1.569, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(E, E), location(A, F) )
%   | | | then return -0.08493902348168256;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.031473054203723226;  // std dev = 5.237, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( phenotype(K, I), interaction(K, K) )
%   | | | then return 0.041848751398551216;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.14729769164573664;  // std dev = 1.525, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.017062403594942568;  // std dev = 3.061, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.049956891902393594;  // std dev = 1.976, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then if ( complex(E, H) )
%   | | | then return -0.10142122019257607;  // std dev = 1.528, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.1660050236833889;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(E, I) )
%   | | | then return -0.0692630140396871;  // std dev = 2.370, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.07920522095216483;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.050811272008481796;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.028713190781763185;  // std dev = 3.775, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.14865703989258824;  // std dev = 2.704, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.06434248179630608;  // std dev = 4.319, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '8.627', 'seconds']
Refined model CLL: -0.389439


******************************************
Best model found
******************************************
Results 

CLL : -0.365755 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 39.445 

Total Inference Time : 56.73877167701721 

Total revision time: 107.24482174873353
Best scored revision CLL: -0.365904


Results 

CLL : -0.365755 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 107.32501264572144 

Total Inference Time : 56.73877167701721 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.92
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20492312864789855;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15832538257100484;  // std dev = 0.469, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1478720453571529;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1122017377709611;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.085245443059226;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1146087768421562;  // std dev = 0.482, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05597938769409625;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04097164103222816;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.843', 'seconds']
Parameter learned model CLL:-0.35384 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.495, 162, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.534, 167, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.601, 176, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.482, 149, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.47, 175, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.615, 178, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2265218522372537, nan], 'true': [nan, 0.2265218522372537], 'true,false': [nan, 0.2265218522372537]}
{'': [nan, 0.22006968439618804]}
{'': [nan, 0.22437469730819026], 'false': [0.22437469730819026, nan]}
{'': [nan, 0.22049997086416764], 'false': [0.22049997086416764, nan]}
{'': [nan, 0.21792158609935322]}
{'': [nan, 0.23203259393390754]}
{'': [0.22093040325303412, nan]}
{'': [0.2196395775941246, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 26.219
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, D), complex(C, E) )
%   | then return 0.1273797043302816;  // std dev = 0.444, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( phenotype(C, F), phenotype(D, F) )
%   | | then if ( enzyme(A, G), complex(C, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24276431971489695;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( complex(D, I), interaction(D, J) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.14386322081379807;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   else if ( enzyme(A, K) )
%   | then if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( location(A, N), location(L, N) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0.10576798271855914;  // std dev = 0.432, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), phenotype(D, G) )
%   | | then return 0.15402696165052412;  // std dev = 0.466, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5017169227661676;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26642667113123225;  // std dev = 1.979, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0.10155696475655653;  // std dev = 0.443, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   else if ( interaction(A, H), enzyme(A, I) )
%   | then return 0.8358666416345314;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), interaction(K, L) )
%   | | | then return 0.26410254149664447;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.6379298797876034;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.2722763067018945;  // std dev = 2.371, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.13912850795361809;  // std dev = 3.008, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1487400748153284;  // std dev = 6.096, 163.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=57 */
%   | | | else return 0.09819187346040337;  // std dev = 4.527, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.464023111017738;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.295294925605871;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.07490069836272517;  // std dev = 1.647, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.19834922493054735;  // std dev = 1.843, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K), enzyme(I, L) )
%   | | | then return 0.1526235819838479;  // std dev = 2.526, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.05002321205402295;  // std dev = 5.024, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.03276688351048724;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1735231373832345;  // std dev = 3.774, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), phenotype(H, G) )
%   | | | then return -0.0013507377550358993;  // std dev = 4.045, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | | else return 0.08709821614976715;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.026827509045906608;  // std dev = 2.434, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.14074432972163822;  // std dev = 4.749, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( phenotype(F, G), complex(F, H) )
%   | | | then return 0.06473636306788615;  // std dev = 2.001, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.046424754392173424;  // std dev = 2.520, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.008644443948568711;  // std dev = 3.062, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.1405003619180668;  // std dev = 5.993, 149.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(D, E), enzyme(A, H) )
%   | | | then return 0.2165844428688744;  // std dev = 1.426, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.056995271684214394;  // std dev = 3.191, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.22507829477926045;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06348417574266753;  // std dev = 4.802, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | else if ( interaction(K, A) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.16201322080008168;  // std dev = 2.643, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.3912189016363496;  // std dev = 1.126, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.023057649122344148;  // std dev = 2.935, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.16532794221888933;  // std dev = 1.332, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), phenotype(E, F) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.19010917058751645;  // std dev = 1.243, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.004950888917207543;  // std dev = 3.846, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2276282858909138;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.012774051268723951;  // std dev = 1.146, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.07772246457267201;  // std dev = 3.700, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.2268271668188145;  // std dev = 2.812, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.0796883632015593;  // std dev = 1.743, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.061314556903076994;  // std dev = 3.364, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, A), complex(A, I) )
%   | | | then return -0.040265386122771814;  // std dev = 2.267, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.06929771219505593;  // std dev = 2.805, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10042699220425173;  // std dev = 4.315, 78.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=31 */
%   | | | else return 0.31555437767000794;  // std dev = 1.057, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.18504314306258815;  // std dev = 1.272, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.010641846430665411;  // std dev = 2.530, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.09311298458396192;  // std dev = 2.477, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.005204571834207289;  // std dev = 2.730, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.03640806737540755;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.12236979861901938;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.37884210091455817;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21453409813247232;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.020534854282939784;  // std dev = 5.174, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
%   | | | else return 0.03969701686949886;  // std dev = 4.838, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.12770989033047006;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.16919039747421077;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '36.348', 'seconds']
Refined model CLL: -0.406441


******************************************
Best model found
******************************************
Results 

CLL : -0.353122 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.219 

Total Inference Time : 36.567036390304565 

Total revision time: 71.37452227020265
Best scored revision CLL: -0.35384


Results 

CLL : -0.353122 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 71.45471316719056 

Total Inference Time : 36.567036390304565 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.574
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19799268509951135;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17617226591619212;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12261517489735184;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.0948870221292169;  // std dev = 7.756, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10461921810545773;  // std dev = 0.472, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07925716863720705;  // std dev = 0.470, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08245330120858388;  // std dev = 0.476, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05030258865236261;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.335', 'seconds']
Parameter learned model CLL:-0.350218 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.578, 169, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.712, 188, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.756, 195, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 164, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.63, 176, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2243499755859384, nan], 'true': [nan, 0.2243499755859384], 'true,false': [nan, 0.2243499755859384]}
{'': [nan, 0.22562452155165708]}
{'': [nan, 0.21627768595041102], 'false': [0.21627768595041102, nan]}
{'': [nan, 0.21333182435491377], 'false': [0.21333182435491377, nan]}
{'': [nan, 0.22264792899408142]}
{'': [nan, 0.22051975792096823]}
{'': [0.22647259567308597, nan]}
{'': [0.22137084532088172, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.735
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( complex(D, C) )
%   | then return 0.17633075328133055;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( phenotype(D, E) )
%   | | then if ( interaction(D, D), phenotype(A, F) )
%   | | | then return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.2905813675319448;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then return 0.10814893509951237;  // std dev = 0.433, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.20468358856485747;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( phenotype(A, D) )
%   | then if ( location(E, C), enzyme(E, F) )
%   | | then return 0.14179807428845712;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.03530054233495221;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.04040764533706312;  // std dev = 0.374, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else if ( location(A, G) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.03573378606855691;  // std dev = 2.155, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.13681971615360639;  // std dev = 2.048, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.23937961896075008;  // std dev = 2.651, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.1492079220935485;  // std dev = 6.048, 167.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=54 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then return 0.2392255709933399;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4980294373963832;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.08045780723055428;  // std dev = 4.701, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | else return 0.15011565133001928;  // std dev = 6.050, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), complex(A, D) )
%   | then return 0.479970287845394;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.025635347449605383;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.07701837460436922;  // std dev = 2.891, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return 0.1630820680994397;  // std dev = 4.401, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | else return 0.0888753175866525;  // std dev = 5.233, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F), interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.0838026547726243;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.026010559272515832;  // std dev = 1.211, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09327423407797532;  // std dev = 7.229, 236.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=78 */
%   | | | else return -0.04982659580665442;  // std dev = 1.778, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(A, H), complex(A, G) )
%   | | | then return 0.439382607691767;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11065974184174056;  // std dev = 5.509, 132.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=48 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04297804710327893;  // std dev = 4.498, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | | else return 0.12398317204715163;  // std dev = 2.230, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(F, H), interaction(D, I) )
%   | | | then return 0.005323694558751429;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.20270152940832545;  // std dev = 2.071, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( complex(D, J), enzyme(A, E) )
%   | | | then return -6.761445446583358E-5;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.48474703554390197;  // std dev = 1.238, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(K, M), phenotype(M, L) )
%   | | | then return 0.13785379312969293;  // std dev = 2.291, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.024374477346911047;  // std dev = 2.366, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.03434923459871869;  // std dev = 5.937, 166.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=51 */
%   | | | else return -0.12120236357359711;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(D, D), complex(E, G) )
%   | | | then return -0.05257275770838608;  // std dev = 3.366, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.09133787590087013;  // std dev = 5.161, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( enzyme(E, H), location(A, I) )
%   | | | then return 0.029188435700446935;  // std dev = 2.456, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.07162412676987784;  // std dev = 2.939, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( interaction(A, J) )
%   | | then if ( complex(A, K), complex(J, K) )
%   | | | then return 0.03280001686256665;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2676545245811117;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.31361251461365125;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), complex(G, J) )
%   | | | then return 0.17992928495354585;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.042387231463783495;  // std dev = 2.305, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.6801064212054128;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3386896030400747;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( phenotype(L, N) )
%   | | | then return -0.07356685469550334;  // std dev = 2.338, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.004313537245290247;  // std dev = 2.051, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.04779425106458841;  // std dev = 3.715, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return -0.01912089333299357;  // std dev = 3.774, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(A, A), enzyme(E, G) )
%   | | then return 0.21022170473047122;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return -0.02839648468780294;  // std dev = 4.265, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return -0.1673616725506289;  // std dev = 1.815, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return 0.17865463103308687;  // std dev = 2.461, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.0012632918141936285;  // std dev = 5.079, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.2384467970077394;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4003056308293357;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '46.918', 'seconds']
Refined model CLL: -0.413246


******************************************
Best model found
******************************************
Results 

CLL : -0.349816 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.735 

Total Inference Time : 51.298882722854614 

Total revision time: 91.95255087280273
Best scored revision CLL: -0.350218


Results 

CLL : -0.349816 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 92.1313717212677 

Total Inference Time : 51.298882722854614 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.077
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20138325853185224;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18317631822780542;  // std dev = 0.477, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.11231493101576112;  // std dev = 8.485, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12184439929675456;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08616572381360281;  // std dev = 0.467, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07536256332042081;  // std dev = 0.469, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08391773482568783;  // std dev = 0.477, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04841632412402066;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.662', 'seconds']
Parameter learned model CLL:-0.350426 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.265, 199, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.485, 234, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.313, 206, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 194, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.346, 211, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22542452265028698, nan], 'true': [nan, 0.22542452265028698], 'true,false': [nan, 0.22542452265028698]}
{'': [nan, 0.22790357925492727]}
{'': [nan, 0.2130177514792923], 'false': [0.2130177514792923, nan]}
{'': [nan, 0.2229344432882421], 'false': [0.2229344432882421, nan]}
{'': [nan, 0.21795458009449561]}
{'': [nan, 0.2197305451007776]}
{'': [0.22719697310932058, nan]}
{'': [0.22115394305870395, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 46.543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), complex(C, D) )
%   | | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( complex(E, D), interaction(A, C) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2152917922423694;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(A, C) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return 0.17036612966964948;  // std dev = 0.463, 221.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=69 */
%   | else if ( complex(A, J) )
%   | | then return 0.14386322081379804;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.31968739663797385;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), interaction(E, A) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then return 0.1487954316288497;  // std dev = 0.467, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | else return 0.2963882937083651;  // std dev = 0.499, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0.0970369344584138;  // std dev = 0.441, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( complex(A, I), interaction(J, A) )
%   | | then if ( complex(J, I), interaction(H, K) )
%   | | | then return 0.43542842686466;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12183376222351806;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.549133885643961;  // std dev = 0.453, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.25278614317589887;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.14022850360912698;  // std dev = 4.077, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), location(A, G) )
%   | | | then return 0.140179471639476;  // std dev = 7.806, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
%   | | | else return 0.26677987898154787;  // std dev = 2.520, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( interaction(F, F), phenotype(A, H) )
%   | | | then return 0.06269482834387147;  // std dev = 3.777, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.18233539000641133;  // std dev = 3.039, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05368700737680256;  // std dev = 2.076, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.15863067377522583;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.2797615760525888;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5937220916515802;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.12095185767253488;  // std dev = 5.750, 148.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=50 */
%   | | | else return 0.041202875150241444;  // std dev = 1.896, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), complex(H, F) )
%   | | | then return 0.18883961030801139;  // std dev = 2.516, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.0920230040697911;  // std dev = 3.297, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.09884753830739677;  // std dev = 4.765, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.035848754624586344;  // std dev = 5.487, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( enzyme(G, H), phenotype(F, I) )
%   | | | then return 0.09336866253337227;  // std dev = 4.634, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return -0.02440973420560785;  // std dev = 3.474, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.24261950296516582;  // std dev = 2.559, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.08029348377610307;  // std dev = 5.253, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then if ( interaction(F, F), complex(E, H) )
%   | | | then return -0.07708879101974701;  // std dev = 2.344, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.03290829106474421;  // std dev = 4.368, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | else if ( interaction(E, I) )
%   | | | then return 0.19983825527986468;  // std dev = 2.602, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.0471677392740559;  // std dev = 1.251, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.28688698365986604;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.06910028644265145;  // std dev = 1.743, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return 0.0870352987989148;  // std dev = 2.871, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.19299752624022856;  // std dev = 4.216, 72.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.060053212218064075;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.12102764335566582;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.06763512651716345;  // std dev = 3.401, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.02825788400450838;  // std dev = 5.080, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( location(A, M) )
%   | | | then return 0.008222918110360392;  // std dev = 2.900, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.30970982488903376;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return -0.04497362604113907;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.18370640235469105;  // std dev = 3.440, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.1665910906460953;  // std dev = 3.188, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return -0.0117025635143984;  // std dev = 1.885, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.03272710779892701;  // std dev = 4.118, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.03421802320104304;  // std dev = 5.669, 141.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=49 */
%   | else if ( interaction(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return -0.06156692820279933;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.35727787028677327;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.04375413952656341;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.13313651185673803;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.13169430720812725;  // std dev = 1.655, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.014963667799234054;  // std dev = 3.149, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( phenotype(F, H), location(A, I) )
%   | | | then return 0.129519959106617;  // std dev = 4.358, 78.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=34 */
%   | | | else return 0.017478155311713314;  // std dev = 2.182, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(A, L), interaction(A, K) )
%   | | | then return 0.10432681044130344;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06268845862629648;  // std dev = 3.351, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.030861301657464566;  // std dev = 3.471, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return -0.054204726226925556;  // std dev = 2.081, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '17.267', 'seconds']
Refined model CLL: -0.413843


******************************************
Best model found
******************************************
Results 

CLL : -0.351446 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 46.543 

Total Inference Time : 89.65055298805237 

Total revision time: 148.09161793708802
Best scored revision CLL: -0.350426


Results 

CLL : -0.351446 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 148.27043878555298 

Total Inference Time : 89.65055298805237 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.463, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20143251718906277;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1713014706962687;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16306411861007084;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11798388633346572;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0995601834180993;  // std dev = 0.474, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06870402190493383;  // std dev = 0.470, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0495090348233155;  // std dev = 0.468, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.061328944334850415;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.144', 'seconds']
Parameter learned model CLL:-0.357059 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.773, 176, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.694, 166, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.803, 180, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.468, 193, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.765, 175, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22543996435731922, nan], 'true': [nan, 0.22543996435731922], 'true,false': [nan, 0.22543996435731922]}
{'': [nan, 0.22423441946596692]}
{'': [nan, 0.2294333273240787], 'false': [0.2294333273240787, nan]}
{'': [nan, 0.22383217993079552], 'false': [0.22383217993079552, nan]}
{'': [nan, 0.22463648834019376]}
{'': [nan, 0.22061224489795841]}
{'': [0.21860264696829934, nan]}
{'': [0.2258412938882594, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then return 0.058148935099512224;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(A, F), enzyme(C, G) )
%   | | then return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.1681489350995121;  // std dev = 0.462, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( location(A, I), location(H, I) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L) )
%   | | | then return 0.16172036367094095;  // std dev = 3.441, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.2971733253434148;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), phenotype(A, E) )
%   | then return 0.6266327867412659;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(D, C), phenotype(F, H) )
%   | | | then return 0.08730071129565921;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3551348293075861;  // std dev = 1.944, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( phenotype(D, I) )
%   | | | then return 0.1258967425514785;  // std dev = 2.796, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.25831413711860157;  // std dev = 1.832, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( location(A, J) )
%   | then if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.1638212517149072;  // std dev = 0.471, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else return 0.09731494719102256;  // std dev = 0.444, 174.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=47 */
%   | else if ( interaction(A, A) )
%   | | then return 0.16975639167428555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.33456353518643844;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(A, A) )
%   | | | then return -0.04394724258432561;  // std dev = 1.244, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.15922789670909338;  // std dev = 7.606, 255.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), complex(D, G) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.32073261588901497;  // std dev = 1.496, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1794363190638646;  // std dev = 2.000, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, H), location(D, I) )
%   | | | then return 0.029666753618334332;  // std dev = 2.228, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.1792778092781211;  // std dev = 2.536, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( location(A, L), location(K, L) )
%   | | | then return 0.09524621091121849;  // std dev = 3.994, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0.05072379657293805;  // std dev = 2.693, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.06034738194581184;  // std dev = 2.805, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.1498283063480626;  // std dev = 3.390, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.1518484982098043;  // std dev = 4.110, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return 0.3639341311490199;  // std dev = 1.514, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.15029076692467952;  // std dev = 2.437, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.050203327687489106;  // std dev = 5.817, 165.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( interaction(F, H), phenotype(H, I) )
%   | | | then return 0.09966176473963925;  // std dev = 4.237, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | | else return -0.013598971453978018;  // std dev = 3.771, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13116254244565798;  // std dev = 5.080, 109.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=42 */
%   | | | else return 0.38242456997476565;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return -0.04373205651794807;  // std dev = 1.485, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.3138283577941032;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.039546562040084755;  // std dev = 1.924, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.10926052457936104;  // std dev = 1.548, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), interaction(A, J) )
%   | | | then return 0.02733402779189053;  // std dev = 2.942, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.17493459449090354;  // std dev = 3.617, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0010203720566327654;  // std dev = 3.509, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.05890222512434787;  // std dev = 4.094, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.06633056869191105;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.32507438796678184;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(G, D), interaction(G, G) )
%   | | | then return 0.11193723400917273;  // std dev = 2.145, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.05428924161996851;  // std dev = 2.274, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.0960181311664242;  // std dev = 3.250, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.2031643071265672;  // std dev = 2.031, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return -0.01566261458110753;  // std dev = 2.262, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.06969497486202789;  // std dev = 5.161, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.17281404278112614;  // std dev = 2.006, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.010832927620873201;  // std dev = 2.316, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.012322766914179273;  // std dev = 1.790, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.10203439214166032;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( phenotype(A, L), location(A, M) )
%   | | then if ( interaction(A, N), interaction(N, P) )
%   | | | then return -0.06011734138092295;  // std dev = 2.776, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.14063297576873873;  // std dev = 2.324, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(A, Q), interaction(Q, R) )
%   | | | then return 0.124742783183888;  // std dev = 3.048, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.05712828684083564;  // std dev = 3.436, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( complex(A, G), interaction(A, H) )
%   | | then if ( phenotype(H, E) )
%   | | | then return -0.06273548682943551;  // std dev = 1.680, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.1739994367662861;  // std dev = 1.801, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return -0.06123540025948448;  // std dev = 2.237, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.15677118542029142;  // std dev = 1.280, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( location(A, M), interaction(L, N) )
%   | | | then return 0.08802118449677349;  // std dev = 2.520, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.3562361405399554;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.03170670215414455;  // std dev = 5.727, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
%   | | | else return -0.04490156767079455;  // std dev = 2.940, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '42.276', 'seconds']
Refined model CLL: -0.403046


******************************************
Best model found
******************************************
Results 

CLL : -0.356904 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.175 

Total Inference Time : 39.8226044178009 

Total revision time: 83.30360528945923
Best scored revision CLL: -0.357059


Results 

CLL : -0.356904 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 83.4824261379242 

Total Inference Time : 39.8226044178009 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.742
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.478, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20214893509951148;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16505116082113216;  // std dev = 0.471, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14196754861024705;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11505727142433;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07243103006952338;  // std dev = 0.462, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07058875830154468;  // std dev = 0.466, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04026661997603998;  // std dev = 0.459, 284.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06420955224702957;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.389', 'seconds']
Parameter learned model CLL:-0.340264 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.511, 164, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.565, 171, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.586, 174, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 193, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.459, 198, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.565, 171, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2256640000000008, nan], 'true': [nan, 0.2256640000000008], 'true,false': [nan, 0.2256640000000008]}
{'': [nan, 0.22222222222222415]}
{'': [nan, 0.22265287892322422], 'false': [0.22265287892322422, nan]}
{'': [nan, 0.22136094674556206], 'false': [0.22136094674556206, nan]}
{'': [nan, 0.21322953199470754]}
{'': [nan, 0.21749284835754135]}
{'': [0.21111882562983603, nan]}
{'': [0.22265287892322214, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 26.096
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then return 0.12575456890232922;  // std dev = 0.443, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(A, G), phenotype(E, H) )
%   | | then if ( interaction(I, A), interaction(I, E) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2152917922423694;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( location(A, J), location(E, J) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.20929397326745144;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(C, D) )
%   | | then return 0.5711106037933948;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.17547436018390825;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, D), enzyme(D, F) )
%   | | then if ( complex(C, G) )
%   | | | then return 0.1640487462276232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.38805862184542395;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(A, H), enzyme(C, I) )
%   | | | then return 0.2816903877234734;  // std dev = 2.227, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.16680539930914198;  // std dev = 4.891, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   else if ( location(A, J) )
%   | then if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.17112160167325643;  // std dev = 0.477, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0.08802594984652788;  // std dev = 0.440, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | else return 0.4973820795609565;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.08849694456306217;  // std dev = 5.126, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
%   | | | else return 0.1691912860079959;  // std dev = 5.564, 133.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=49 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( location(A, F), interaction(E, E) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.18558979197804026;  // std dev = 1.009, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2781140060210854;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, H), complex(H, I) )
%   | | | then return 0.09396162595029038;  // std dev = 3.417, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return -0.04028391603237676;  // std dev = 1.820, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.13846779179504606;  // std dev = 2.423, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.326244024669507;  // std dev = 2.429, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.0362322337024096;  // std dev = 2.108, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.1487939334227393;  // std dev = 4.549, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, A), enzyme(A, F) )
%   | | then return -0.259709044426009;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.14052452927274486;  // std dev = 4.116, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0.05022646916303312;  // std dev = 6.344, 190.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.030541196872093494;  // std dev = 3.069, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.17561814601496853;  // std dev = 2.019, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.045930121081046923;  // std dev = 3.680, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.14466397789309576;  // std dev = 5.257, 115.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.05030646315850381;  // std dev = 1.974, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2963539706415225;  // std dev = 1.663, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(I, D), interaction(I, I) )
%   | | | then return -0.003484379704756299;  // std dev = 3.415, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.066318507074551;  // std dev = 5.293, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
%   | else if ( location(A, J) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.06854656061708458;  // std dev = 1.610, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.06622779205705889;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else return -0.2338294508097669;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.0063885953363895;  // std dev = 2.550, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.22477084912383777;  // std dev = 2.643, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( phenotype(D, J), phenotype(A, J) )
%   | | | then return 0.2287625394739503;  // std dev = 1.391, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.029330964597511354;  // std dev = 5.301, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.2757310777185889;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.0399837596957374;  // std dev = 1.495, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.0878566715364062;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12119318316544653;  // std dev = 2.531, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.04422521024276122;  // std dev = 1.423, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.20690465390262233;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(E, I), interaction(A, A) )
%   | | | then return -0.178646928743564;  // std dev = 1.285, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.034505631631737456;  // std dev = 3.312, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L), interaction(J, L) )
%   | | | then return 0.19035059548554556;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.05369789829068212;  // std dev = 3.078, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return -0.015119446714212226;  // std dev = 2.227, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.08304174108219149;  // std dev = 5.094, 109.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( enzyme(F, H), phenotype(A, I) )
%   | | | then return -0.03656028601982863;  // std dev = 2.397, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.10509894328224778;  // std dev = 2.407, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( complex(J, E), interaction(J, J) )
%   | | | then return 0.060212260093537744;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08856234934100408;  // std dev = 2.278, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.2250184618260626;  // std dev = 2.321, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.10895942488718824;  // std dev = 2.121, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return 0.010944063193581838;  // std dev = 4.449, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   | | | else return 0.15563735747867308;  // std dev = 2.294, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '50.205', 'seconds']
Refined model CLL: -0.408703


******************************************
Best model found
******************************************
Results 

CLL : -0.339506 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.096 

Total Inference Time : 39.04048490524292 

Total revision time: 73.65096181678771
Best scored revision CLL: -0.340264


Results 

CLL : -0.339506 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 73.82978266525268 

Total Inference Time : 39.04048490524292 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.694
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1780018762759821;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15492345235526056;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13845503987125007;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1317886845726235;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09502821607196564;  // std dev = 0.469, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06581512195070997;  // std dev = 0.465, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05675638956956048;  // std dev = 0.466, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07635323718353686;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.413', 'seconds']
Parameter learned model CLL:-0.347064 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.692, 185, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.658, 180, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.571, 168, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.466, 186, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.523, 162, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21754703719723267, nan], 'true': [nan, 0.21754703719723267], 'true,false': [nan, 0.21754703719723267]}
{'': [nan, 0.21754703719723162]}
{'': [nan, 0.21966923368261423], 'false': [0.21966923368261423, nan]}
{'': [nan, 0.22477508650518702], 'false': [0.22477508650518702, nan]}
{'': [nan, 0.22009440895471616]}
{'': [nan, 0.21585538752363062]}
{'': [0.21712353580485594, nan]}
{'': [0.22731891421106093, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 61.9
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), interaction(D, E) )
%   | then if ( interaction(C, D), complex(A, F) )
%   | | then if ( interaction(A, E), enzyme(E, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2748156017661789;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.1260060779566552;  // std dev = 0.443, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( complex(C, H), complex(D, H) )
%   | | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( interaction(J, A), phenotype(A, K) )
%   | then if ( phenotype(J, K), complex(A, L) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.16926004621062346;  // std dev = 0.463, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else return 0.14518597213654857;  // std dev = 0.452, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, F), enzyme(F, G) )
%   | | | then return 0.3636322962919571;  // std dev = 1.483, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1546339746502881;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10683693543220908;  // std dev = 0.451, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.02130064131695476;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, I), complex(I, C) )
%   | | | then return 0.21518236141290797;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.39530932415504244;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   else if ( interaction(A, J), interaction(J, A) )
%   | then if ( location(J, K) )
%   | | then return 0.1969462981583554;  // std dev = 0.478, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return 0.00877425514760293;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.09889598727586894;  // std dev = 0.446, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.06198124418088553;  // std dev = 4.253, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | | else return 0.12168041069663232;  // std dev = 6.549, 201.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=62 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( enzyme(E, D) )
%   | | | then return 0.06809789998707358;  // std dev = 1.479, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.11764216005347096;  // std dev = 2.705, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.023978640038619096;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.04122347910284375;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(A, I), location(G, J) )
%   | | | then return 0.09846638735146052;  // std dev = 4.609, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.23605747751159478;  // std dev = 4.294, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.029541593934868066;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.022724560533416198;  // std dev = 1.748, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.03282431102082676;  // std dev = 2.648, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.06221090157351012;  // std dev = 4.260, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.2364417379313874;  // std dev = 2.554, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.08712461464776934;  // std dev = 5.228, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.12458894571462378;  // std dev = 2.629, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.017891445971450943;  // std dev = 2.141, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.07422133036837217;  // std dev = 4.389, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.16404741062524364;  // std dev = 4.932, 99.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( interaction(E, E), enzyme(F, H) )
%   | | | then return -0.001835382199653739;  // std dev = 4.155, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | | else return 0.13238264896835616;  // std dev = 5.433, 124.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=50 */
%   | | else return 0.40543791711255445;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1643704156905559;  // std dev = 1.326, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0383221426236058;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.4213842031757091;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return 0.6890579008201514;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G), interaction(A, A) )
%   | | | then return -0.03511452619836266;  // std dev = 1.222, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.175031013671898;  // std dev = 2.684, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), interaction(J, K) )
%   | | | then return 0.06178429970553544;  // std dev = 2.828, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.4012433802362138;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.09676334061054283;  // std dev = 2.250, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.013090726940557981;  // std dev = 5.705, 156.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( location(A, H) )
%   | | | then return -0.09518077113097402;  // std dev = 1.738, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.16060710888695054;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.18609805867119633;  // std dev = 1.218, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0395146408467599;  // std dev = 2.549, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.06778887537440036;  // std dev = 3.789, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | | else return 0.2876237203498039;  // std dev = 1.578, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.029109443079511105;  // std dev = 3.811, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return 0.02832810129745963;  // std dev = 3.719, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(A, F) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.20436983354902477;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6691877907582455;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.032936664485567944;  // std dev = 2.206, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.15248498245937772;  // std dev = 2.391, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(K, M), phenotype(M, N) )
%   | | | then return 0.13055062145191093;  // std dev = 2.476, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.02191340293178869;  // std dev = 1.460, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(P, A), interaction(A, P) )
%   | | | then return -0.12778523189550525;  // std dev = 1.918, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.003591332028344806;  // std dev = 5.466, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '17.807', 'seconds']
Refined model CLL: -0.417875


******************************************
Best model found
******************************************
Results 

CLL : -0.346657 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 61.9 

Total Inference Time : 63.22983002662659 

Total revision time: 133.0544082107544
Best scored revision CLL: -0.347064


Results 

CLL : -0.346657 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 133.2140771331787 

Total Inference Time : 63.22983002662659 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.23
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18622464487868903;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15691625171298007;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14226200380071935;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14082377310816058;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10819724579434385;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07391342889296683;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.029994236780272562;  // std dev = 0.459, 346.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07362407539556227;  // std dev = 8.221, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.895', 'seconds']
Parameter learned model CLL:-0.350248 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.359, 213, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.34, 210, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.206, 191, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.459, 242, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.221, 193, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2204420384320692, nan], 'true': [nan, 0.2204420384320692], 'true,false': [nan, 0.2204420384320692]}
{'': [nan, 0.2186644033794946]}
{'': [nan, 0.22151000040569546], 'false': [0.22151000040569546, nan]}
{'': [nan, 0.2282562482045372], 'false': [0.2282562482045372, nan]}
{'': [nan, 0.225779571071446]}
{'': [nan, 0.2211539430587043]}
{'': [0.21023087974874047, nan]}
{'': [0.22755047670872702, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 49.74
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then return 0.11396288858788445;  // std dev = 0.436, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else return 0.1990580260086043;  // std dev = 0.474, 220.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=75 */
%   else if ( enzyme(A, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), interaction(L, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), interaction(C, G) )
%   | | then return 0.18818471097317205;  // std dev = 0.477, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return 0.07757880990351278;  // std dev = 0.429, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( complex(C, H), interaction(C, C) )
%   | | then return 0.08214999781891211;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( complex(C, I), complex(A, J) )
%   | | | then return 0.3153069734205383;  // std dev = 2.693, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.20166529328719313;  // std dev = 5.330, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else if ( complex(A, K) )
%   | then if ( enzyme(A, L) )
%   | | then return 0.0735828930795505;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(M, A), complex(M, K) )
%   | | | then return 0.18162893957529533;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.49040032115077253;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.0514554883839737;  // std dev = 0.440, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.15516456072562473;  // std dev = 4.503, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.11428975513443682;  // std dev = 7.055, 229.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F), complex(D, G) )
%   | | then if ( phenotype(A, H), interaction(D, D) )
%   | | | then return 0.23823616180536344;  // std dev = 1.988, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.07228730599923698;  // std dev = 4.033, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.2912252358667711;  // std dev = 2.240, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.1565031325692794;  // std dev = 5.368, 123.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=46 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(A, M), complex(M, L) )
%   | | | then return -0.09582113993977188;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08868520422999375;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.23078202513067814;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.059587479928161824;  // std dev = 2.908, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.031777180089014326;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.07086390798077445;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.10237024997319538;  // std dev = 7.324, 236.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=82 */
%   | | | else return 0.1393545643071147;  // std dev = 3.288, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(G, F), location(A, H) )
%   | | | then return 0.024295203643991292;  // std dev = 7.963, 308.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=89 */
%   | | | else return 0.11749853367201026;  // std dev = 2.473, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.03278719861572112;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.15672706763220126;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, F), interaction(F, A) )
%   | | | then return 0.04617031070545729;  // std dev = 2.648, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.16452419179609776;  // std dev = 3.853, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | else if ( phenotype(A, H), complex(D, I) )
%   | | | then return 0.11988651376461916;  // std dev = 3.657, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | | else return 0.038095922498856516;  // std dev = 4.391, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | else if ( location(A, J) )
%   | | then if ( phenotype(A, K), interaction(L, A) )
%   | | | then return -0.08760977666655742;  // std dev = 2.163, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.04833511225745184;  // std dev = 2.729, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return -0.22280683502014773;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( complex(A, G), enzyme(D, H) )
%   | | | then return 0.22516123104757893;  // std dev = 1.727, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.024656533488681184;  // std dev = 4.831, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else if ( interaction(D, A), enzyme(D, I) )
%   | | | then return 0.005070520343053109;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3198416437828282;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.030590063213648072;  // std dev = 3.322, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.027192254445087907;  // std dev = 4.304, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.28019723782116934;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0045712861516583264;  // std dev = 2.818, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, H), interaction(G, G) )
%   | | | then return 0.03968142428794854;  // std dev = 1.867, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.08124049729894336;  // std dev = 3.312, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.16803393451819365;  // std dev = 1.635, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.03700974665453512;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.23278315307514952;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 6.32571701895212E-4;  // std dev = 3.860, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | else if ( location(A, N), interaction(A, P) )
%   | | | then return 0.10827525788673886;  // std dev = 3.494, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return 0.056843385083843956;  // std dev = 4.604, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( complex(F, G), enzyme(F, H) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.2764027392363629;  // std dev = 1.728, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.07496771692590266;  // std dev = 2.480, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( phenotype(F, E) )
%   | | | then return -0.023945383896448368;  // std dev = 4.096, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.11008995376920079;  // std dev = 3.374, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( location(A, M) )
%   | | | then return 0.01049113035977469;  // std dev = 4.287, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.35984860151148895;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.09980953332135979;  // std dev = 2.175, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.014398641630938713;  // std dev = 2.490, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '15.742', 'seconds']
Refined model CLL: -0.39098


******************************************
Best model found
******************************************
Results 

CLL : -0.351268 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 49.74 

Total Inference Time : 115.15707588195801 

Total revision time: 176.18170163154602
Best scored revision CLL: -0.350248


Results 

CLL : -0.351268 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 176.34137055397034 

Total Inference Time : 115.15707588195801 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.421
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19514527209584762;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19922967161737035;  // std dev = 0.482, 251.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14381572374641283;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10328107902288475;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09930048210702955;  // std dev = 0.473, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09913209104770201;  // std dev = 0.479, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05647429485141698;  // std dev = 0.471, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.047459552927026284;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.617', 'seconds']
Parameter learned model CLL:-0.360233 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.81, 181, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.482, 159, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.788, 178, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.887, 192, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 184, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.817, 182, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22342980584738956, nan], 'true': [nan, 0.22342980584738956], 'true,false': [nan, 0.22342980584738956]}
{'': [nan, 0.23218679068586134]}
{'': [nan, 0.22463648834019306], 'false': [0.22463648834019306, nan]}
{'': [nan, 0.219004165840111], 'false': [0.219004165840111, nan]}
{'': [nan, 0.22383217993079435]}
{'': [nan, 0.22943332732407914]}
{'': [0.2222222222222244, nan]}
{'': [0.2230273323032655, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.652
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( complex(C, F), interaction(D, D) )
%   | | then return 0.07243464938522651;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( phenotype(C, G), phenotype(A, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3581489350995123;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( interaction(I, C), complex(I, J) )
%   | | then if ( interaction(K, I), location(K, L) )
%   | | | then return 0.15083186192877987;  // std dev = 4.120, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return 0.29293154379516456;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( complex(A, M), phenotype(C, N) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.3081489350995123;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   else if ( phenotype(A, P) )
%   | then return 0.21529179224236947;  // std dev = 0.479, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else return 0.08891816586874314;  // std dev = 0.421, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A), enzyme(A, C) )
%   then return 0.003560035770226666;  // std dev = 0.403, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.18845241532012283;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.029153418440096456;  // std dev = 1.494, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(I, D), interaction(J, I) )
%   | | | then return 0.2640258195129978;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.184418218277933;  // std dev = 3.198, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), interaction(A, M) )
%   | | | then return 0.0888849593486024;  // std dev = 2.265, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.2639281686912657;  // std dev = 2.721, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( complex(A, N), interaction(P, A) )
%   | | | then return 0.09995480315443535;  // std dev = 2.565, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.14680048120682226;  // std dev = 4.144, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.10824638147438799;  // std dev = 6.938, 224.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=70 */
%   | | | else return 0.17715098347593417;  // std dev = 3.755, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( phenotype(A, F), phenotype(D, G) )
%   | | | then return 0.07530045077939404;  // std dev = 2.055, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.003227671757988936;  // std dev = 2.352, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.044470749794557646;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.2826525791135166;  // std dev = 1.233, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( enzyme(A, K), phenotype(I, J) )
%   | | | then return -0.08611985825251521;  // std dev = 1.290, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.0948762423748135;  // std dev = 3.689, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.2294257065901002;  // std dev = 2.583, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.12618452260678598;  // std dev = 4.922, 107.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(A, G) )
%   | | then if ( complex(F, H), complex(A, I) )
%   | | | then return 0.09876865363954587;  // std dev = 3.035, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.005739684683377476;  // std dev = 3.379, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.055001195277559645;  // std dev = 4.211, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.12557935218363972;  // std dev = 4.909, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, F), complex(A, H) )
%   | | | then return 0.24637027918597323;  // std dev = 2.290, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.0712901684539104;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.03437023668891652;  // std dev = 4.097, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | | else return 0.08608328426321402;  // std dev = 4.711, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), complex(A, F) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.40512549742354803;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024809477947252696;  // std dev = 2.063, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( location(A, H) )
%   | | | then return -0.04746971517094965;  // std dev = 3.149, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.0837800611193736;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.07405138192205869;  // std dev = 2.152, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.1665525119473337;  // std dev = 2.512, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.21978481621035847;  // std dev = 1.789, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.030414572615613394;  // std dev = 5.583, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G) )
%   | | | then return -0.0621270041352725;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.046824445073872144;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.11380174817043734;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( location(I, J) )
%   | | | then return 0.1304315524962276;  // std dev = 3.775, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.6699383684610098;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.01784515039567127;  // std dev = 3.029, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.07812811177487576;  // std dev = 5.586, 134.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=49 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), phenotype(E, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.15125379661756255;  // std dev = 1.627, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6658556770873889;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(E, J), phenotype(A, J) )
%   | | | then return -0.11970404934230823;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13894766923291718;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.06783601758438797;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1645946407280561;  // std dev = 2.677, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.21336420467392325;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.004945391423071132;  // std dev = 6.100, 174.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.007444782301373901;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.14239456717279816;  // std dev = 1.239, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.2406571807814511;  // std dev = 1.837, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.1089291403928927;  // std dev = 1.787, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return 0.057689604214366426;  // std dev = 2.707, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return -0.04091657439617575;  // std dev = 3.186, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.1920539271227056;  // std dev = 2.102, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.09375375599754941;  // std dev = 5.146, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '53.252', 'seconds']
Refined model CLL: -0.414523


******************************************
Best model found
******************************************
Results 

CLL : -0.36008 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.652 

Total Inference Time : 54.51648020744324 

Total revision time: 100.85799364852906
Best scored revision CLL: -0.360233


Results 

CLL : -0.36008 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 101.01766257095338 

Total Inference Time : 54.51648020744324 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.831
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16974313799806245;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18579831919221232;  // std dev = 0.477, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.11628699011669255;  // std dev = 7.719, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12912070449054627;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08337420665630339;  // std dev = 0.465, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11003237056508727;  // std dev = 0.479, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07894105489052494;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06458409876646616;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.328', 'seconds']
Parameter learned model CLL:-0.358941 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.694, 190, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.719, 194, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.542, 168, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 162, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.487, 161, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21450325561856828, nan], 'true': [nan, 0.21450325561856828], 'true,false': [nan, 0.21450325561856828]}
{'': [nan, 0.22737788353493377]}
{'': [nan, 0.21280612244897995], 'false': [0.21280612244897995, nan]}
{'': [nan, 0.22394444788889778], 'false': [0.22394444788889778, nan]}
{'': [nan, 0.21578177622133518]}
{'': [nan, 0.22950706771577437]}
{'': [0.2265218522372548, nan]}
{'': [0.22695012211313045, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.758
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(E, D), phenotype(F, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.24276431971489684;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( interaction(L, A) )
%   | then return 0.1797863620000982;  // std dev = 0.467, 171.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=55 */
%   | else if ( interaction(A, M), enzyme(M, N) )
%   | | then return 0.2059750220560341;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(A, E), interaction(F, C) )
%   | then return 0.09902445205928284;  // std dev = 0.446, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | else if ( enzyme(A, G), location(C, D) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.3066275832489609;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12095584087694364;  // std dev = 3.004, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else if ( phenotype(C, J), phenotype(A, K) )
%   | | | then return 0.18047683223914093;  // std dev = 3.426, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.2821930120457634;  // std dev = 3.065, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   else if ( interaction(A, L), complex(L, M) )
%   | then if ( complex(A, M), phenotype(L, N) )
%   | | then return 0.13568935996982778;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.49784830259309726;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.253441087891776;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.56477038993112;  // std dev = 0.434, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.16337524386594937;  // std dev = 3.704, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.1002227929044935;  // std dev = 6.691, 207.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E) )
%   | | then if ( enzyme(E, F), location(A, G) )
%   | | | then return 0.04602150398092706;  // std dev = 4.419, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return 0.19768773382559893;  // std dev = 3.397, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else if ( location(A, H) )
%   | | | then return -0.02686308214489283;  // std dev = 1.726, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.16394291424764204;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.027843461687863003;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3766828456016423;  // std dev = 1.847, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.06953584053703178;  // std dev = 2.405, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.17858009274765496;  // std dev = 3.200, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(F, G), phenotype(A, H) )
%   | | | then return 0.3691089926100157;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16299172029487397;  // std dev = 2.798, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06497288350218318;  // std dev = 6.105, 172.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | | | else return -0.02190798590560151;  // std dev = 3.451, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.017788931985226276;  // std dev = 2.292, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.08386655955410804;  // std dev = 1.294, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1504615386639351;  // std dev = 3.810, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return 0.057439420480069246;  // std dev = 5.946, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), enzyme(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.12311391314087938;  // std dev = 2.046, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.023551059658586983;  // std dev = 5.088, 132.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.21273256626465673;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06657353362872459;  // std dev = 2.306, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.026862405728589615;  // std dev = 1.917, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.08326068688472213;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.5287214346174499;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.14648671308798492;  // std dev = 3.053, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( complex(D, E), interaction(D, F) )
%   | | then if ( enzyme(A, G), enzyme(F, H) )
%   | | | then return 0.20372474986697298;  // std dev = 1.728, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.032577177793554214;  // std dev = 3.714, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | else if ( interaction(I, D), phenotype(I, J) )
%   | | | then return -0.024700339943125395;  // std dev = 3.613, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return -0.1181803219398531;  // std dev = 2.343, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), complex(M, K) )
%   | | | then return 0.20630636564039956;  // std dev = 1.009, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04639600693635929;  // std dev = 1.737, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.0885812845278304;  // std dev = 3.221, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.1493136426810284;  // std dev = 2.568, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), enzyme(G, H) )
%   | | then if ( enzyme(A, I), interaction(A, G) )
%   | | | then return -0.035165372305139254;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.25241306754769577;  // std dev = 2.437, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( phenotype(A, J), phenotype(E, J) )
%   | | | then return 0.3901440023602814;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.020312885988190147;  // std dev = 2.113, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.1546104717827106;  // std dev = 1.824, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return -0.013155128626595333;  // std dev = 2.085, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return -0.02981436042707132;  // std dev = 2.938, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.025785825660326295;  // std dev = 5.150, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(A, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( phenotype(E, H), phenotype(A, H) )
%   | | | then return -0.09065975906737077;  // std dev = 2.270, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.024743342152609562;  // std dev = 2.548, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( complex(E, F) )
%   | | | then return -0.0963412530076941;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17305396626493538;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), enzyme(J, K) )
%   | | | then return 0.24512648806786955;  // std dev = 1.659, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.46097151169949385;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.24487042536912734;  // std dev = 1.349, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.005217775027901469;  // std dev = 6.082, 169.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '2.272', 'seconds']
Refined model CLL: -0.404395


******************************************
Best model found
******************************************
Results 

CLL : -0.358237 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.758 

Total Inference Time : 47.08154034614563 

Total revision time: 85.36740805053711
Best scored revision CLL: -0.358941


Results 

CLL : -0.358237 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 85.52707697296142 

Total Inference Time : 47.08154034614563 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.524
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21765306733091613;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14590028047794046;  // std dev = 0.465, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14123712532201751;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.16002765033470331;  // std dev = 7.374, 232.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07664686898695636;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.075743817152071;  // std dev = 0.471, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07289979355089017;  // std dev = 0.475, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08006654626836102;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.145', 'seconds']
Parameter learned model CLL:-0.368145 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.465, 155, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.616, 174, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.374, 145, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 165, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.42, 150, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.23026091113995042, nan], 'true': [nan, 0.23026091113995042], 'true,false': [nan, 0.23026091113995042]}
{'': [nan, 0.21627768595041105]}
{'': [nan, 0.2222222222222192], 'false': [0.2222222222222192, nan]}
{'': [nan, 0.23437500000000105], 'false': [0.23437500000000105, nan]}
{'': [nan, 0.2175470371972315]}
{'': [nan, 0.22222222222222093]}
{'': [0.22604875283446524, nan]}
{'': [0.2323345617689491, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 44.121
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), location(A, E) )
%   | then if ( phenotype(C, F), complex(A, G) )
%   | | then if ( enzyme(A, H), location(C, E) )
%   | | | then return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 3.367, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( interaction(D, A), complex(C, I) )
%   | | | then return 0.16117923812981538;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.3434430527465708;  // std dev = 4.121, 68.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=33 */
%   | else if ( interaction(A, J), phenotype(D, K) )
%   | | then return 0.09952824544433996;  // std dev = 0.428, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( phenotype(D, L), phenotype(C, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20814893509951232;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( interaction(A, M) )
%   | then return 0.17393840878372288;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0.07243464938522651;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, A) )
%   then return -0.003382736603972064;  // std dev = 0.384, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), complex(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, D) )
%   | | | then return 0.5067865134386316;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18628538418191196;  // std dev = 2.283, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.4864618074128355;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.257976115997482;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.19684185486791198;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.07266291505998315;  // std dev = 2.747, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return 0.3115125446639076;  // std dev = 2.271, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.1415966863600277;  // std dev = 5.539, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06608415202552216;  // std dev = 3.209, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.1623734583548088;  // std dev = 6.842, 202.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), location(A, E) )
%   | | then if ( complex(D, F), location(D, E) )
%   | | | then return 0.2931702554710906;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09480322242631918;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( location(A, G), enzyme(A, H) )
%   | | | then return -0.09715976738017025;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 3.3948653082821467E-4;  // std dev = 2.163, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.3490343023944047;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1177366373547856;  // std dev = 6.388, 182.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=62 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.055514697193768066;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.03952945826845688;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( location(F, G), interaction(A, A) )
%   | | | then return 0.17105967559560475;  // std dev = 1.710, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.029316909676961198;  // std dev = 3.818, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.20910928134458884;  // std dev = 3.859, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.07442972992365601;  // std dev = 4.869, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(F, F), enzyme(A, H) )
%   | | | then return 0.16927386716789797;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.02325021533830871;  // std dev = 6.957, 232.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=68 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.002538750581776869;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.24525805960717184;  // std dev = 1.851, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( location(E, F), location(A, F) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.07767675842680463;  // std dev = 1.545, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.0335040823471132;  // std dev = 4.456, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | | else if ( location(E, I) )
%   | | | then return -0.09216743596523874;  // std dev = 2.199, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.02384034035702402;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(A, K), interaction(K, A) )
%   | | | then return -0.06180418225483919;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10751832133550807;  // std dev = 2.787, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.08410341864040732;  // std dev = 2.314, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.0175782842399425;  // std dev = 4.313, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( complex(F, E), interaction(F, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.1311587991773637;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16609431382014575;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return 0.10826144880327881;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.01817801293146859;  // std dev = 2.581, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(J, J), complex(J, K) )
%   | | | then return 0.13832320306602336;  // std dev = 3.071, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.0494427671904835;  // std dev = 5.865, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.42996256090368457;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2533908004312894;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(A, I), complex(G, I) )
%   | | | then return -0.14702492088358637;  // std dev = 1.277, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.08017242565503686;  // std dev = 2.367, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( location(A, J), location(E, J) )
%   | | | then return 0.38199220413129015;  // std dev = 1.579, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.038142724457962816;  // std dev = 1.795, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then if ( interaction(L, M), complex(L, N) )
%   | | | then return -0.009164858282252787;  // std dev = 2.912, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.19443739681728373;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( interaction(P, A), location(P, Q) )
%   | | | then return 0.032737687839624205;  // std dev = 4.865, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return -0.1023702094098206;  // std dev = 1.277, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H), phenotype(A, I) )
%   | | | then return 0.09591044139275554;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.40278928055175145;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return -0.10274261511708904;  // std dev = 2.633, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.009184295542526368;  // std dev = 2.455, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(L, A), location(L, M) )
%   | | then if ( interaction(N, L), phenotype(N, P) )
%   | | | then return 0.014140847305060579;  // std dev = 5.657, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return 0.11929211326448697;  // std dev = 2.117, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( phenotype(A, Q) )
%   | | | then return -0.06868740169079064;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.041192746209446775;  // std dev = 1.390, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '17.762', 'seconds']
Refined model CLL: -0.39835


******************************************
Best model found
******************************************
Results 

CLL : -0.367771 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 44.121 

Total Inference Time : 83.68104910850525 

Total revision time: 135.32394887924195
Best scored revision CLL: -0.368145


Results 

CLL : -0.367771 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 135.4239788246155 

Total Inference Time : 83.68104910850525 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.345
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.478, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1893591261823117;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15850034431387944;  // std dev = 0.468, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15699431164307812;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1040353710698376;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09709840958053113;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06620970715480647;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.044181995216675304;  // std dev = 0.462, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0590362492936305;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.995', 'seconds']
Parameter learned model CLL:-0.339964 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.34, 210, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.243, 196, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.416, 222, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.462, 234, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.34, 210, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22151000040569802, nan], 'true': [nan, 0.22151000040569802], 'true,false': [nan, 0.22151000040569802]}
{'': [nan, 0.2193750000000004]}
{'': [nan, 0.22648888888889046], 'false': [0.22648888888889046, nan]}
{'': [nan, 0.21724566223795003], 'false': [0.21724566223795003, nan]}
{'': [nan, 0.2211539430587022]}
{'': [nan, 0.21653777513385133]}
{'': [0.21301775147929067, nan]}
{'': [0.22151000040569804, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.396
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(A, G), enzyme(E, H) )
%   | | then if ( complex(E, I), location(E, D) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(E, E), phenotype(A, F) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.20902612808196847;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | else if ( interaction(J, A) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(L, A), enzyme(L, M) )
%   | then return 0.22656998773109;  // std dev = 0.482, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | else return 0.14847151574467227;  // std dev = 0.454, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(C, D) )
%   | | | then return 0.07268643443103058;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.18388617454552506;  // std dev = 1.569, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( phenotype(C, G), interaction(A, C) )
%   | | | then return 0.02890550724046976;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.07993753784825386;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( enzyme(C, J) )
%   | | | then return 0.14983078976272748;  // std dev = 1.400, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3079856013683603;  // std dev = 2.574, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( complex(C, K), interaction(C, C) )
%   | | | then return 0.30140744305850986;  // std dev = 2.064, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.14944294034294395;  // std dev = 6.512, 195.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=62 */
%   else return 0.06976652695517081;  // std dev = 0.426, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.1764480544022431;  // std dev = 5.245, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | | | else return 0.11819112383807678;  // std dev = 6.406, 189.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=60 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( complex(D, E), enzyme(D, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.4846213895976938;  // std dev = 1.516, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.17034556965727532;  // std dev = 3.112, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | else if ( phenotype(D, I), interaction(J, D) )
%   | | | then return 0.1389295587726714;  // std dev = 6.259, 169.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=61 */
%   | | | else return 0.05975098388116993;  // std dev = 3.156, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.5513027693795075;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.12487684805636882;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.03565669720666025;  // std dev = 3.532, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return -0.08560428729144372;  // std dev = 1.532, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2026407271252581;  // std dev = 3.109, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.08530858388834477;  // std dev = 6.617, 196.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, F) )
%   | | | then return -0.003921678190381772;  // std dev = 4.359, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | | else return 0.16099978931237516;  // std dev = 2.102, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( location(A, H), enzyme(A, I) )
%   | | | then return 0.056393905453882856;  // std dev = 3.689, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.11530509150403752;  // std dev = 5.556, 133.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), phenotype(E, G) )
%   | | then if ( enzyme(F, H), complex(F, I) )
%   | | | then return -0.11792773141266977;  // std dev = 2.322, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.04656850769575371;  // std dev = 4.075, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | else if ( interaction(J, A), interaction(J, E) )
%   | | | then return -0.04530560093020793;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20875483700666128;  // std dev = 1.559, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( phenotype(K, L) )
%   | | | then return 0.375853270465029;  // std dev = 1.178, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.152162547074631;  // std dev = 2.098, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.02728527021231166;  // std dev = 3.626, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.10189815010900062;  // std dev = 4.897, 103.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( complex(A, F), interaction(E, E) )
%   | | | then return 0.18432876060151412;  // std dev = 1.901, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.047790507172096756;  // std dev = 3.222, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.04632165643588862;  // std dev = 3.210, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.13643352587534482;  // std dev = 3.904, 63.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return 0.1073043668575572;  // std dev = 2.778, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return -0.033956813006129495;  // std dev = 3.776, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.05341463268835187;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05344604297900666;  // std dev = 2.122, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(E, H), interaction(I, E) )
%   | | | then return -0.010616716599424487;  // std dev = 3.811, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return -0.17586178479434134;  // std dev = 1.570, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(J, E) )
%   | | | then return 9.914867839134647E-4;  // std dev = 2.587, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.14138139525851562;  // std dev = 1.968, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( phenotype(L, M), complex(A, N) )
%   | | | then return 0.32667204986410286;  // std dev = 1.604, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.12335754053198655;  // std dev = 2.579, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(A, P), complex(A, Q) )
%   | | | then return 0.1085909882049064;  // std dev = 3.130, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return -0.007600198293487537;  // std dev = 4.437, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E) )
%   | then if ( complex(F, E), enzyme(F, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.1739290264232243;  // std dev = 1.562, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.05922095013351641;  // std dev = 2.762, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( complex(I, E), interaction(I, I) )
%   | | | then return 0.09204114022925071;  // std dev = 2.223, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.02934253500207313;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.05270315392576491;  // std dev = 2.287, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.04606440264577957;  // std dev = 5.708, 146.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=50 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.04954622450252477;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4146625692470905;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '14.666', 'seconds']
Refined model CLL: -0.40711


******************************************
Best model found
******************************************
Results 

CLL : -0.341027 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.396 

Total Inference Time : 73.73941206932068 

Total revision time: 120.64076382255554
Best scored revision CLL: -0.339964


Results 

CLL : -0.341027 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 120.74079376792908 

Total Inference Time : 73.73941206932068 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.369
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.191482268432844;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17777477962106164;  // std dev = 0.475, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16360619717775757;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1512199555066009;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07490886107486179;  // std dev = 0.467, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05960193290051011;  // std dev = 0.467, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07067069151127257;  // std dev = 0.475, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05263400195868842;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.392', 'seconds']
Parameter learned model CLL:-0.359669 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.832, 184, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.694, 166, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.607, 156, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 176, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2222222222222235, nan], 'true': [nan, 0.2222222222222235], 'true,false': [nan, 0.2222222222222235]}
{'': [nan, 0.2258412938882562]}
{'': [nan, 0.22943332732407978], 'false': [0.22943332732407978, nan]}
{'': [nan, 0.23335067637876988], 'false': [0.23335067637876988, nan]}
{'': [nan, 0.21820137904053838]}
{'': [nan, 0.21780038606757302]}
{'': [0.2254399643573191, nan]}
{'': [0.22423441946596442, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 69.741
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(A, C), phenotype(D, E) )
%   | then if ( complex(C, F), enzyme(A, G) )
%   | | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( location(A, H) )
%   | | | then return 0.20814893509951235;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(I, C), enzyme(I, J) )
%   | | then if ( interaction(D, K), interaction(K, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4036034805540577;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( enzyme(C, L) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16249676118646889;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   else if ( complex(A, M), enzyme(A, N) )
%   | then return 0.09344305274657119;  // std dev = 0.424, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else return 0.16912454485560896;  // std dev = 0.463, 164.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), enzyme(F, E) )
%   | | then return 0.16396906310202827;  // std dev = 0.487, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.319901356560983;  // std dev = 0.502, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.13568722034748204;  // std dev = 0.460, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( complex(G, I), interaction(G, J) )
%   | | then return 0.11548268156295131;  // std dev = 0.457, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.23304163816484694;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), location(M, N) )
%   | | | then return 0.1208438556699376;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.341468826970406;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.32312032720398154;  // std dev = 3.422, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   | | | else return 0.2425395320616544;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.05558205995946596;  // std dev = 3.063, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.17497685108117986;  // std dev = 7.026, 213.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then if ( phenotype(A, G), interaction(H, D) )
%   | | | then return 0.07706709580659256;  // std dev = 1.688, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.1909630440241725;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( interaction(I, D), enzyme(I, J) )
%   | | | then return 0.027362153021331735;  // std dev = 3.432, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.09785683780615023;  // std dev = 5.009, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), interaction(L, L) )
%   | | | then return 0.20032550117112002;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.054688750924172636;  // std dev = 1.896, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.1689364660802113;  // std dev = 1.756, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3182965668286931;  // std dev = 1.790, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), interaction(G, G) )
%   | | | then return 0.10342492030023956;  // std dev = 7.312, 231.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=82 */
%   | | | else return -0.01734894506902514;  // std dev = 2.306, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07794712451895043;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04006620994367547;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0.09310560735447064;  // std dev = 2.437, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.01879489738761216;  // std dev = 4.664, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.23820695896812874;  // std dev = 2.760, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.0738065611069428;  // std dev = 5.053, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( enzyme(E, D) )
%   | | | then return 0.04670650961366495;  // std dev = 2.304, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.08421701077240913;  // std dev = 2.950, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.21699077787102827;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.36960348283844974;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(A, I), phenotype(G, J) )
%   | | | then return 0.05591089837223351;  // std dev = 2.275, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.32846736860728787;  // std dev = 1.959, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.16975921150888887;  // std dev = 1.893, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.025456840678742324;  // std dev = 5.609, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( enzyme(A, H), interaction(I, F) )
%   | | | then return -0.02434397505443999;  // std dev = 1.741, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.23082944144579887;  // std dev = 2.986, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( location(D, J), location(A, J) )
%   | | | then return 0.1257200826851177;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.017666190888585495;  // std dev = 2.585, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then if ( enzyme(A, M), phenotype(K, N) )
%   | | | then return 2.830848104129336E-4;  // std dev = 2.368, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.06605137079984097;  // std dev = 2.595, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.18428962469306875;  // std dev = 2.800, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.012043889182984617;  // std dev = 3.841, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(G, E) )
%   | | then if ( complex(E, H), complex(G, I) )
%   | | | then return 0.069069702762935;  // std dev = 4.081, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return -0.009395705430076536;  // std dev = 4.307, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.4818413379622683;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07379537694201128;  // std dev = 2.617, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( complex(A, L) )
%   | | then if ( complex(M, L), interaction(M, M) )
%   | | | then return 0.3608570501929611;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0020739822862261906;  // std dev = 2.225, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.021169682746226832;  // std dev = 2.149, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.09101434897641993;  // std dev = 2.560, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), interaction(A, G) )
%   | | then if ( interaction(G, G), complex(A, H) )
%   | | | then return 0.13646420416348062;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.0029265978484287795;  // std dev = 3.188, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.12610494164290662;  // std dev = 1.966, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.24858847293550418;  // std dev = 2.216, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.1745193663556487;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.06974131973808097;  // std dev = 2.282, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.04674031624050164;  // std dev = 4.637, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
%   | | | else return -0.057422035967895635;  // std dev = 2.922, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'hours', 'and', '53', 'minutes', 'and', '39.771', 'seconds']
Refined model CLL: -0.413167


******************************************
Best model found
******************************************
Results 

CLL : -0.359516 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 69.741 

Total Inference Time : 550.8646295070648 

Total revision time: 631.4978705501557
Best scored revision CLL: -0.359669


Results 

CLL : -0.359516 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 631.5979004955292 

Total Inference Time : 550.8646295070648 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.854
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19408643509951154;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16878076540436338;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.11736277428356524;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12118977421237445;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12961665957820168;  // std dev = 0.480, 238.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.059418084632846764;  // std dev = 0.465, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04452539766499997;  // std dev = 0.463, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05617211998735064;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.472', 'seconds']
Parameter learned model CLL:-0.345656 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.557, 170, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.707, 192, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.579, 173, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 152, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.463, 190, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.579, 173, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2230834960937508, nan], 'true': [nan, 0.2230834960937508], 'true,false': [nan, 0.2230834960937508]}
{'': [nan, 0.22308349609374883]}
{'': [nan, 0.21365353760157546], 'false': [0.21365353760157546, nan]}
{'': [nan, 0.22179156542091075], 'false': [0.22179156542091075, nan]}
{'': [nan, 0.23077466280630055]}
{'': [nan, 0.21578177622133848]}
{'': [0.21450325561856562, nan]}
{'': [0.22179156542090805, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 27.646
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( complex(F, C), interaction(F, A) )
%   | | then return 0.17393840878372288;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(G, C), interaction(G, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( interaction(H, A) )
%   | then return 0.1763307532813309;  // std dev = 0.466, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(F, A), interaction(C, F) )
%   | | then if ( complex(F, G), interaction(F, C) )
%   | | | then return 0.27095434580132016;  // std dev = 1.258, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04042839354796085;  // std dev = 1.948, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(C, H), interaction(A, H) )
%   | | | then return 0.24245961061846477;  // std dev = 2.154, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.16290915194762123;  // std dev = 3.465, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else if ( interaction(C, I), complex(I, J) )
%   | | then return 0.5681543473945888;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1687983053501335;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.25092337774943413;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(A, L), enzyme(L, M) )
%   | then return 0.026191298679392586;  // std dev = 0.408, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.12810487737375745;  // std dev = 0.457, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.16223655058076727;  // std dev = 5.944, 154.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=55 */
%   | | | else return 0.10643493564472892;  // std dev = 4.614, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(F, H), phenotype(A, G) )
%   | | | then return -0.15664357705262755;  // std dev = 1.838, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return -0.002827323735577164;  // std dev = 1.949, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.0020970574524639823;  // std dev = 2.143, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.21326849771100065;  // std dev = 1.464, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), phenotype(K, L) )
%   | | | then return 0.09139788317910438;  // std dev = 3.627, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return -0.03484171611226402;  // std dev = 1.567, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.2169355253352189;  // std dev = 2.280, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.11083175100736412;  // std dev = 4.928, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.07545578095773016;  // std dev = 2.633, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.1790938839174407;  // std dev = 5.258, 114.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=47 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.01588074065296345;  // std dev = 3.908, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.13501270042848434;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(A, H), phenotype(F, I) )
%   | | | then return 0.1285456757349478;  // std dev = 2.723, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.05266248195473146;  // std dev = 3.085, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.21249004832491833;  // std dev = 2.636, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.07424531992569558;  // std dev = 5.698, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(D, G) )
%   | | then if ( interaction(E, H), phenotype(H, G) )
%   | | | then return -0.0730864015314089;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.06482868915708889;  // std dev = 2.179, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( complex(A, I), phenotype(D, J) )
%   | | | then return 0.3139625374602772;  // std dev = 1.529, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.09679132412230909;  // std dev = 3.636, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(A, M), phenotype(K, N) )
%   | | | then return 0.21095726118614205;  // std dev = 2.004, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.041849969516335274;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return -0.05828549307899424;  // std dev = 2.790, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.014873393449295481;  // std dev = 4.211, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.3706543084201457;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.029293359794397646;  // std dev = 1.202, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.00628131675658256;  // std dev = 1.660, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.07802253979824338;  // std dev = 2.314, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.048793762551274315;  // std dev = 3.704, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.38355249134951075;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.13426500911610026;  // std dev = 2.748, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.026172933474644323;  // std dev = 4.625, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.010782723963926608;  // std dev = 2.361, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.35859387735967346;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return -0.08931721933271425;  // std dev = 2.785, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return -0.010407424903971292;  // std dev = 3.130, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | else if ( location(A, I) )
%   | | then if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.06388242425219044;  // std dev = 2.288, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.09041311403746788;  // std dev = 5.049, 110.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=41 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.14901841851800618;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.022116217270533145;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.09973073559355491;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.19068787604938647;  // std dev = 2.253, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1437853501995062;  // std dev = 1.510, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.009027403865964817;  // std dev = 2.630, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), enzyme(L, M) )
%   | | | then return -0.008542549566085382;  // std dev = 3.470, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.060580632943398265;  // std dev = 4.928, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return -0.013053228028156233;  // std dev = 2.217, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.11822021455239766;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15', 'minutes', 'and', '13.705', 'seconds']
Refined model CLL: -0.394752


******************************************
Best model found
******************************************
Results 

CLL : -0.344914 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.646 

Total Inference Time : 42.46068787574768 

Total revision time: 78.88958358764648
Best scored revision CLL: -0.345656


Results 

CLL : -0.344914 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 78.98961353302002 

Total Inference Time : 42.46068787574768 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.571
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.187694389644966;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17490771466418387;  // std dev = 0.474, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13884985631593333;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11638899811965642;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09613426212697139;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08096575608019442;  // std dev = 0.471, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0800520794792387;  // std dev = 0.476, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0335794537424553;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.053', 'seconds']
Parameter learned model CLL:-0.350295 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.637, 177, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.63, 176, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.63, 176, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 163, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.706, 187, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22094524793388515, nan], 'true': [nan, 0.22094524793388515], 'true,false': [nan, 0.22094524793388515]}
{'': [nan, 0.22477508650519196]}
{'': [nan, 0.22137084532088286], 'false': [0.22137084532088286, nan]}
{'': [nan, 0.22137084532088236], 'false': [0.22137084532088236, nan]}
{'': [nan, 0.2213708453208807]}
{'': [nan, 0.22222222222222132]}
{'': [0.22689599999999857, nan]}
{'': [0.21670041025094533, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 54.189
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(C, E) )
%   | then return 0.1169724645112766;  // std dev = 0.438, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | else if ( location(C, D), enzyme(A, F) )
%   | | then if ( complex(C, G) )
%   | | | then return 0.09148226843284571;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(C, H), phenotype(A, I) )
%   | | | then return 0.30642479716847787;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.18072958026080252;  // std dev = 4.508, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   else if ( phenotype(A, J) )
%   | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, K) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.23262872025535866;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1766383439820812;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10831439238396993;  // std dev = 0.453, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return 0.30412214190521253;  // std dev = 2.912, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.5868471180597026;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.25802730545526437;  // std dev = 1.656, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07565438593098117;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( interaction(K, A) )
%   | then return 0.1441358211067676;  // std dev = 0.462, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   | else return 0.008741135785635002;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.13802542939737314;  // std dev = 5.094, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | | else return 0.2280943687042171;  // std dev = 5.253, 113.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.08766938780456231;  // std dev = 2.646, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.1979200575895028;  // std dev = 2.896, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( interaction(D, E), interaction(A, G) )
%   | | | then return 7.786280165363234E-6;  // std dev = 3.438, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | | else return 0.07754982722995389;  // std dev = 5.141, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.5489364276933953;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09867941824613942;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27678709032769166;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.13305324572534014;  // std dev = 3.322, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.06656532145480772;  // std dev = 6.673, 207.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=65 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.20167551038187492;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.14262211150223925;  // std dev = 1.239, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), phenotype(H, I) )
%   | | | then return 0.07833922730068403;  // std dev = 3.527, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return -0.028149958981661137;  // std dev = 2.746, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07276882627413578;  // std dev = 5.963, 163.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=53 */
%   | | | else return 0.23566476128339955;  // std dev = 1.454, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A), location(A, F) )
%   | | | then return 0.24479749640070803;  // std dev = 1.586, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.01220091132925297;  // std dev = 2.442, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return -0.16607863267995876;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.012241807932157137;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( interaction(H, J), interaction(J, H) )
%   | | | then return 0.31989935076097514;  // std dev = 1.681, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.14573507720570858;  // std dev = 3.251, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07802986189851865;  // std dev = 5.202, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
%   | | | else return -0.07113374831789208;  // std dev = 1.466, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.1199569872179195;  // std dev = 1.896, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.5256776678858326;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(E, I), interaction(J, E) )
%   | | | then return -0.04800178410920391;  // std dev = 2.326, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.08279481279247491;  // std dev = 2.835, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.011246079715485066;  // std dev = 3.827, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return -0.12040933382491013;  // std dev = 1.630, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, M), location(M, N) )
%   | | | then return 0.11732247187148856;  // std dev = 2.578, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.014737099635541673;  // std dev = 3.920, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), phenotype(G, H) )
%   | | then if ( interaction(I, A), complex(G, J) )
%   | | | then return 0.05722913903010613;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.06746392570619904;  // std dev = 1.716, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(A, K), phenotype(E, K) )
%   | | | then return 0.025343060318589544;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4095932584046373;  // std dev = 1.440, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( complex(A, L) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.020724741028990957;  // std dev = 3.154, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.21048668887545563;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.0803096503656926;  // std dev = 3.268, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.004352642980242151;  // std dev = 4.180, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, H), phenotype(E, G) )
%   | | | then return -0.05974119350180088;  // std dev = 3.212, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.010211603559344879;  // std dev = 3.486, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.10504317133089963;  // std dev = 2.509, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.01816465910769639;  // std dev = 4.921, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | else if ( interaction(K, A) )
%   | | then if ( complex(K, L) )
%   | | | then return -0.038593308881333464;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13265118367836368;  // std dev = 1.537, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.14747192146754598;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3701591850292861;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '9.595', 'seconds']
Refined model CLL: -0.403135


******************************************
Best model found
******************************************
Results 

CLL : -0.349894 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 54.189 

Total Inference Time : 81.13965582847595 

Total revision time: 143.04986573219298
Best scored revision CLL: -0.350295


Results 

CLL : -0.349894 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 143.2115345096588 

Total Inference Time : 81.13965582847595 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.179
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19581127276184673;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16593633696556317;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13522790332547957;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13185850935529062;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0935144371478038;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10343761810728055;  // std dev = 0.479, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07730997597969988;  // std dev = 0.477, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.056979514018504554;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.348', 'seconds']
Parameter learned model CLL:-0.364211 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.3, 204, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.366, 214, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.25, 197, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 187, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 192, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.243, 196, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22364648338674525, nan], 'true': [nan, 0.22364648338674525], 'true,false': [nan, 0.22364648338674525]}
{'': [nan, 0.22222222222222468]}
{'': [nan, 0.22008623076619002], 'false': [0.22008623076619002, nan]}
{'': [nan, 0.22613436937782488], 'false': [0.22613436937782488, nan]}
{'': [nan, 0.22115394305870598]}
{'': [nan, 0.22966190762981165]}
{'': [0.22790357925493024, nan]}
{'': [0.22648888888888977, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.553
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then return 0.14905802600860327;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else return 0.24276431971489695;  // std dev = 0.487, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then if ( enzyme(H, I), phenotype(A, J) )
%   | | then return 0.07243464938522651;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2494532829255993;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( complex(A, M) )
%   | | then if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.1381489350995123;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(Q, A), phenotype(Q, R) )
%   | | | then return 0.3140312880406876;  // std dev = 4.107, 68.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=31 */
%   | | | else return 0.23314893509951232;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E) )
%   | then if ( interaction(A, F), interaction(C, F) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return 0.25741885996980834;  // std dev = 2.616, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.14649108012305279;  // std dev = 2.468, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, C) )
%   | | | then return 0.1583260140734973;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3811626702266595;  // std dev = 2.118, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else return 0.1746974254398608;  // std dev = 0.477, 154.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=54 */
%   else if ( enzyme(A, I) )
%   | then return 0.1602257386779796;  // std dev = 0.472, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.5273716736427553;  // std dev = 0.461, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return 0.34048633002602763;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.33317627973968067;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.1227185284685772;  // std dev = 5.627, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | | else return 0.07495767418668378;  // std dev = 6.370, 197.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.36692142387368837;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.0815049288538893;  // std dev = 2.021, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.19313966884315106;  // std dev = 3.190, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), complex(I, J) )
%   | | | then return 0.09417643998948064;  // std dev = 6.421, 191.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=60 */
%   | | | else return 0.2917211416254795;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return -0.07838492690857937;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.0781088008848508;  // std dev = 2.655, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( complex(H, G), enzyme(H, I) )
%   | | | then return -0.048451999348566706;  // std dev = 2.645, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.045791009688124405;  // std dev = 3.492, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08961304097228533;  // std dev = 6.860, 214.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=70 */
%   | | | else return 0.17792787557291856;  // std dev = 2.034, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.038237149301512445;  // std dev = 3.976, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return -0.12467192080460776;  // std dev = 1.823, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.23796176134624739;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.05748876668674099;  // std dev = 6.468, 193.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=61 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H), interaction(F, I) )
%   | | | then return 0.0827445273244732;  // std dev = 4.232, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return -0.0276054976221528;  // std dev = 2.288, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( phenotype(A, J), interaction(D, A) )
%   | | | then return -0.1566979372409814;  // std dev = 1.302, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.0016351545855105174;  // std dev = 3.055, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.12648767018549387;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.02831468352108667;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.0800901100580383;  // std dev = 4.951, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | | | else return 0.2510188129404562;  // std dev = 1.943, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(E, E), complex(E, F) )
%   | | | then return 0.00925790415665384;  // std dev = 5.820, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | | | else return 0.0972912491513971;  // std dev = 5.293, 118.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=46 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.018643735466440603;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.09712366006519658;  // std dev = 1.496, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( complex(A, H) )
%   | | then return 0.4952594574411897;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05338141218851141;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, A), complex(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.10060869585501613;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0558449567176929;  // std dev = 1.226, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(E, I), phenotype(A, I) )
%   | | | then return 0.11201385853193527;  // std dev = 4.169, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | | else return 0.051438587965528186;  // std dev = 5.652, 139.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=49 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(J, L), enzyme(A, M) )
%   | | | then return -0.025093109728398684;  // std dev = 1.201, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.12685947489519828;  // std dev = 1.763, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return 0.032465783618475186;  // std dev = 2.791, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.126301417001572;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(F, H), phenotype(F, I) )
%   | | | then return 0.09715218413866561;  // std dev = 2.326, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -9.58811669087124E-4;  // std dev = 3.336, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.3369221559588327;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.01330659806629051;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( location(A, L) )
%   | | then if ( complex(A, M), interaction(A, A) )
%   | | | then return -0.06637958796822889;  // std dev = 1.757, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.014367705109437613;  // std dev = 6.433, 186.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=62 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.10079651709049321;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.07238076698275848;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '15.075', 'seconds']
Refined model CLL: -0.39314


******************************************
Best model found
******************************************
Results 

CLL : -0.365176 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.553 

Total Inference Time : 66.55631899833679 

Total revision time: 116.85223377418518
Best scored revision CLL: -0.364211


Results 

CLL : -0.365176 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 117.013902551651 

Total Inference Time : 66.55631899833679 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.316
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.478, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17430013784865173;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1618208458803943;  // std dev = 0.469, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16193512931520168;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14000810810192285;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10116767282480144;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0749672678968824;  // std dev = 0.471, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0533460510548868;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.01921238734267332;  // std dev = 8.016, 305.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.195', 'seconds']
Parameter learned model CLL:-0.343967 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.932, 199, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.734, 171, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.71, 168, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.468, 191, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.016, 213, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21619961974941368, nan], 'true': [nan, 0.21619961974941368], 'true,false': [nan, 0.21619961974941368]}
{'': [nan, 0.21980785674764836]}
{'': [nan, 0.22744292963610863], 'false': [0.22744292963610863, nan]}
{'': [nan, 0.22863905325443656], 'false': [0.22863905325443656, nan]}
{'': [nan, 0.22423441946596515]}
{'': [nan, 0.22181965097941853]}
{'': [0.21940591092409734, nan]}
{'': [0.21065305025530753, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.678
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), complex(E, F) )
%   | then if ( interaction(E, G) )
%   | | then if ( interaction(G, G), interaction(H, A) )
%   | | | then return 0.13814893509951237;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.2581489350995123;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( location(A, I), location(D, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, L) )
%   | then return 0.12600607795665522;  // std dev = 0.443, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( interaction(A, M), enzyme(A, N) )
%   | | then return 0.2510060779566552;  // std dev = 0.488, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else return 0.15602127552504363;  // std dev = 0.457, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(C, C) )
%   | | then return 0.17381966335936094;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.22476837542024536;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(C, F) )
%   | | then return 0.5904863300260276;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(C, G), interaction(G, G) )
%   | | | then return 0.5047422629901209;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16423795873711342;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H), complex(J, K) )
%   | | then return 0.15365878701826827;  // std dev = 0.465, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | else if ( interaction(L, H), phenotype(L, M) )
%   | | | then return 0.5074302577617756;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27515299435813456;  // std dev = 2.584, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else return 0.13091569701576275;  // std dev = 0.457, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.1098982816354575;  // std dev = 6.983, 229.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=70 */
%   | | | else return 0.19319002135582564;  // std dev = 3.680, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.034642329572264964;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.10991801592841059;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.1744320876046738;  // std dev = 2.577, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.03061843224173509;  // std dev = 2.405, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, A), phenotype(J, I) )
%   | | | then return 0.08328332333271946;  // std dev = 1.188, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.27815419538966585;  // std dev = 2.259, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.3413515480732406;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11518230095634856;  // std dev = 6.104, 169.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=55 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( complex(F, H), interaction(F, I) )
%   | | | then return 0.11840648410979965;  // std dev = 3.371, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return -0.08168306248887527;  // std dev = 2.563, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.3150673887027503;  // std dev = 1.802, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.13169558230789663;  // std dev = 6.117, 161.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( phenotype(F, G), location(A, H) )
%   | | | then return 0.06949799997643549;  // std dev = 4.678, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else return -0.004367368230219992;  // std dev = 3.629, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.18856601338437473;  // std dev = 2.868, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.08368809327857893;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), location(E, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.02389062261185046;  // std dev = 3.102, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.379662320440218;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, I), location(E, J) )
%   | | | then return -0.0951341927006415;  // std dev = 2.360, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.002601049266306207;  // std dev = 2.964, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then if ( interaction(A, M), enzyme(M, K) )
%   | | | then return 0.10752742119152676;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.29243451562042483;  // std dev = 1.283, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.1127360486774032;  // std dev = 2.947, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.049085655316820506;  // std dev = 4.800, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then if ( phenotype(E, D), interaction(G, A) )
%   | | | then return 0.036010887278462335;  // std dev = 2.035, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.19054850514127133;  // std dev = 1.697, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.0696127580015947;  // std dev = 3.434, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return 0.028986294041091307;  // std dev = 2.817, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), interaction(M, J) )
%   | | | then return 0.2942758464259331;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08204407602751192;  // std dev = 3.051, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(A, N), interaction(N, A) )
%   | | | then return -0.02162895279358564;  // std dev = 1.623, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.05843575540503738;  // std dev = 4.476, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(F, I) )
%   | | | then return 0.016868470190158847;  // std dev = 1.886, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.16047277494263318;  // std dev = 2.005, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.16346603756256356;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.02129783779707697;  // std dev = 2.580, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(L, J), location(L, M) )
%   | | | then return 0.19069923032785102;  // std dev = 3.392, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return -0.057978502316785384;  // std dev = 1.480, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.011372259894804896;  // std dev = 3.443, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.08495838008761086;  // std dev = 4.107, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then if ( interaction(G, A), complex(G, F) )
%   | | then if ( phenotype(A, H), interaction(I, G) )
%   | | | then return 0.15252025348390452;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.00890057266217636;  // std dev = 2.202, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( complex(J, F), phenotype(J, K) )
%   | | | then return -0.023096101352391218;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.19800677127546748;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, L), interaction(M, A) )
%   | | then if ( interaction(A, A), location(M, N) )
%   | | | then return -0.06830746801479311;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.21852721354274668;  // std dev = 2.512, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | else if ( location(A, P) )
%   | | | then return 0.01666264647773314;  // std dev = 5.760, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
%   | | | else return 0.2013130733347659;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '11.608', 'seconds']
Refined model CLL: -0.402042


******************************************
Best model found
******************************************
Results 

CLL : -0.343804 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.678 

Total Inference Time : 39.778963804244995 

Total revision time: 82.11579970741272
Best scored revision CLL: -0.343967


Results 

CLL : -0.343804 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 82.27746848487854 

Total Inference Time : 39.778963804244995 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.766
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.479, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21205840012008753;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16365963680892062;  // std dev = 0.471, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.10566038353626545;  // std dev = 7.761, 287.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11972151263130344;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07768157171078786;  // std dev = 0.462, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11106113786924354;  // std dev = 0.479, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.058808518948776485;  // std dev = 0.469, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.043483737672542475;  // std dev = 7.635, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.577', 'seconds']
Parameter learned model CLL:-0.345931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.454, 157, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.761, 201, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.586, 174, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.469, 178, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.635, 181, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22865755558942658, nan], 'true': [nan, 0.22865755558942658], 'true,false': [nan, 0.22865755558942658]}
{'': [nan, 0.22222222222222313]}
{'': [nan, 0.20986050577280038], 'false': [0.20986050577280038, nan]}
{'': [nan, 0.22136094674555984], 'false': [0.22136094674555984, nan]}
{'': [nan, 0.21365353760157466]}
{'': [nan, 0.22950706771577561]}
{'': [0.21963957759412525, nan]}
{'': [0.21835065718414012, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.369
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then if ( phenotype(A, E), complex(C, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(C, J), phenotype(A, K) )
%   | | | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.21529179224236822;  // std dev = 4.392, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
%   | else if ( phenotype(D, L), location(C, M) )
%   | | then if ( interaction(A, N), interaction(D, N) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.18106560176617903;  // std dev = 0.468, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.14986682415635535;  // std dev = 0.471, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else return 0.05123225498696019;  // std dev = 0.432, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( phenotype(G, F), interaction(G, H) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.09924624319923724;  // std dev = 2.835, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.2324184610686353;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return -0.0034630514653830324;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then if ( phenotype(I, J), interaction(I, I) )
%   | | | then return 0.3849253536719757;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.16539253949176158;  // std dev = 4.145, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.18815747878982808;  // std dev = 1.783, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.297909679993793;  // std dev = 2.897, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.21335538043215396;  // std dev = 4.070, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
%   | | | else return 0.09944150638806236;  // std dev = 6.353, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(A, E) )
%   | then if ( interaction(A, A), phenotype(A, F) )
%   | | then if ( phenotype(G, F), enzyme(G, H) )
%   | | | then return -0.06388439523348595;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06944893809984738;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(I, D), interaction(I, I) )
%   | | | then return 0.41127218893565937;  // std dev = 1.603, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.14529751824667073;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.16954019031600961;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.05292189588398817;  // std dev = 1.302, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.1404487493677891;  // std dev = 3.018, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.09762059743793594;  // std dev = 5.244, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), location(A, G) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 7.504152353902332E-4;  // std dev = 3.129, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.06844037411412612;  // std dev = 6.192, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.04211041015928401;  // std dev = 2.190, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.2214310193897335;  // std dev = 2.334, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), complex(H, I) )
%   | | | then return 0.03419222674133465;  // std dev = 4.465, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.15178748105324696;  // std dev = 4.148, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.021273475706962103;  // std dev = 3.339, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return 0.06937774253145704;  // std dev = 3.046, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then return 0.32591635304528255;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return -0.0063216738325826;  // std dev = 1.739, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.09830885101811204;  // std dev = 2.508, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.09556583915471338;  // std dev = 1.774, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.04092563806516996;  // std dev = 3.060, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.14039910085751406;  // std dev = 2.777, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.02203817908123401;  // std dev = 5.191, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( complex(D, H), location(A, I) )
%   | | | then return 0.07099111240562728;  // std dev = 4.006, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.1821448546925416;  // std dev = 2.769, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( complex(D, J), phenotype(A, K) )
%   | | | then return -0.10524722901688136;  // std dev = 1.255, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0043120315769553325;  // std dev = 3.345, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( complex(A, L) )
%   | | then if ( interaction(A, M), complex(M, L) )
%   | | | then return -0.0304446104107403;  // std dev = 2.252, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.1358562387712528;  // std dev = 1.820, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.004098594847474779;  // std dev = 2.810, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.23959653305748874;  // std dev = 1.862, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( enzyme(F, G), enzyme(A, G) )
%   | | then return 0.43917361172185043;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(F, H), enzyme(A, I) )
%   | | | then return -0.07332087745024707;  // std dev = 1.492, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.10364956366936086;  // std dev = 3.909, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.3430351030867709;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06106928872219667;  // std dev = 4.181, 95.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=23 */
%   | | else if ( interaction(N, A), location(A, P) )
%   | | | then return 0.03531728797535842;  // std dev = 3.821, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return -0.04850859713263418;  // std dev = 2.425, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( interaction(E, G) )
%   | | | then return 0.020627400894728913;  // std dev = 2.250, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.2563170915088495;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(E, H), enzyme(A, H) )
%   | | | then return -0.23841573292545853;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.009246984995149936;  // std dev = 4.650, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.40687880780589647;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12650031983568633;  // std dev = 2.531, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.032352830775594255;  // std dev = 3.304, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.1407505045406229;  // std dev = 2.481, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13', 'minutes', 'and', '17.778', 'seconds']
Refined model CLL: -0.399959


******************************************
Best model found
******************************************
Results 

CLL : -0.34519 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.369 

Total Inference Time : 58.246506452560425 

Total revision time: 96.21132374763488
Best scored revision CLL: -0.345931


Results 

CLL : -0.34519 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 96.3729925251007 

Total Inference Time : 58.246506452560425 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.535
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20614893509951127;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19365723126451198;  // std dev = 0.481, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12684151089926302;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10473614451900111;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10676831014347858;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.068886213527553;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.049525448696043084;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08380996853247809;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.938', 'seconds']
Parameter learned model CLL:-0.359411 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.532, 163, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.665, 181, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.672, 182, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.466, 185, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.438, 152, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22689600000000093, nan], 'true': [nan, 0.22689600000000093], 'true,false': [nan, 0.22689600000000093]}
{'': [nan, 0.23109374999999874]}
{'': [nan, 0.21924426375584508], 'false': [0.21924426375584508, nan]}
{'': [nan, 0.2188195298572452], 'false': [0.2188195298572452, nan]}
{'': [nan, 0.2256245215516567]}
{'': [nan, 0.21966923368261565]}
{'': [0.21754703719723192, nan]}
{'': [0.23150855202114598, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 45.163
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then if ( enzyme(A, D) )
%   | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( location(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), phenotype(F, I) )
%   | | | then return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.19148226843284566;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( location(J, E), interaction(J, A) )
%   | | | then return 0.19363280606725514;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.25814893509951237;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.31034227606922743;  // std dev = 1.015, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1697954438165564;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5863125688668902;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(D, H), location(D, I) )
%   | | then if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.21145751184970363;  // std dev = 1.357, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.11505435020072109;  // std dev = 3.965, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | else if ( interaction(D, D) )
%   | | | then return -4.2692533445061004E-4;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.33061321962018864;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( interaction(A, K), interaction(K, K) )
%   | then return 0.04624244724124208;  // std dev = 0.411, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else return 0.1186612606404339;  // std dev = 0.454, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.1337474716620607;  // std dev = 7.470, 254.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=83 */
%   | | | else return 0.3284635059385024;  // std dev = 1.410, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( enzyme(A, H), location(D, E) )
%   | | | then return 0.010957880787376337;  // std dev = 2.505, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.09670784698679137;  // std dev = 4.123, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | else if ( interaction(D, D), interaction(A, I) )
%   | | | then return 0.05348812822718499;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.15075047296151137;  // std dev = 5.101, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.37560231883773465;  // std dev = 1.106, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.20833584027456054;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.011585731695656916;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( enzyme(A, H), interaction(F, F) )
%   | | | then return 0.24380823750684652;  // std dev = 1.815, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.059339135229168824;  // std dev = 5.934, 168.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=50 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.08450903999665076;  // std dev = 2.731, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.16983161913027578;  // std dev = 3.420, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( enzyme(G, H), phenotype(A, I) )
%   | | | then return 0.4697727836980161;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.08084232976282457;  // std dev = 4.164, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.00509329168554059;  // std dev = 3.647, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.06362240719116852;  // std dev = 5.088, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( phenotype(A, F), interaction(D, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.07507738444213287;  // std dev = 1.513, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.15214313522982845;  // std dev = 1.562, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( complex(D, I), phenotype(D, J) )
%   | | | then return 0.03783821161368425;  // std dev = 2.785, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.10924044246201459;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K) )
%   | | | then return -0.005953944836807321;  // std dev = 3.529, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.2712017041550404;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.15868318177923468;  // std dev = 3.528, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.014743278784954277;  // std dev = 4.370, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), enzyme(D, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.020658430760601487;  // std dev = 1.725, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.18460029720117793;  // std dev = 1.319, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(A, D), complex(A, J) )
%   | | | then return -0.013824280460391846;  // std dev = 1.921, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1683180815768266;  // std dev = 5.005, 102.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=45 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( complex(A, M), complex(K, M) )
%   | | | then return -0.14002427010279647;  // std dev = 1.303, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.03838486173289715;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.02073320034605289;  // std dev = 3.995, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | | else return 0.22414992187324456;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(A, G), phenotype(E, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.04254068325896317;  // std dev = 3.042, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.2996268819101048;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), complex(J, F) )
%   | | | then return 0.04549960200533813;  // std dev = 1.440, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.08298468760244193;  // std dev = 2.609, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( location(K, M), interaction(N, A) )
%   | | | then return 0.1360139672819197;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.31023772467250355;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.0547922542339003;  // std dev = 5.209, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
%   | | | else return 0.18832075956207037;  // std dev = 1.430, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( location(E, G) )
%   | | then if ( interaction(H, E), enzyme(H, I) )
%   | | | then return 0.0031571784429356388;  // std dev = 5.240, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return 0.08461460113341296;  // std dev = 2.993, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else return -0.1831222060674168;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.07778261776561995;  // std dev = 1.392, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.023142655968074525;  // std dev = 2.420, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.6404537966446568;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17775364965511764;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '57.754', 'seconds']
Refined model CLL: -0.40848


******************************************
Best model found
******************************************
Results 

CLL : -0.359023 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.163 

Total Inference Time : 47.56689977645874 

Total revision time: 100.27456049728393
Best scored revision CLL: -0.359411


Results 

CLL : -0.359023 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 100.4303658466339 

Total Inference Time : 47.56689977645874 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.159
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19255407979404288;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16854035497814387;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12535828546096595;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11209367768342533;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10426714125611927;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08960184304076921;  // std dev = 0.474, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.033125223765367674;  // std dev = 0.459, 346.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09349862279696526;  // std dev = 8.111, 283.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.609', 'seconds']
Parameter learned model CLL:-0.352273 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.32, 207, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.428, 224, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.385, 217, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.459, 242, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.111, 179, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22257834389636377, nan], 'true': [nan, 0.22257834389636377], 'true,false': [nan, 0.22257834389636377]}
{'': [nan, 0.22293444328824136]}
{'': [nan, 0.21653777513385108], 'false': [0.21653777513385108, nan]}
{'': [nan, 0.21901961355188623], 'false': [0.21901961355188623, nan]}
{'': [nan, 0.22293444328824105]}
{'': [nan, 0.22435815284719646]}
{'': [0.21023087974873758, nan]}
{'': [0.23244140893256188, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.603
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( interaction(A, E), enzyme(E, C) )
%   | then return 0.024815601766178853;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0.17064893509951234;  // std dev = 0.464, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else if ( location(A, F), phenotype(A, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), complex(A, K) )
%   | | | then return 0.15544623239680966;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.25030579784460966;  // std dev = 4.931, 102.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=40 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, N), interaction(N, P) )
%   | | then return 0.1289822684328457;  // std dev = 0.444, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( enzyme(A, Q) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.25814893509951237;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.5060062328877047;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, F), complex(C, G) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.401991299272864;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.21441491433926563;  // std dev = 2.465, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else return 0.11608928347133755;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   else if ( complex(A, H), location(A, I) )
%   | then return 0.08400425722830421;  // std dev = 0.439, 101.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=26 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(J, L), phenotype(A, L) )
%   | | | then return 0.06486956073861429;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.1603032460300059;  // std dev = 3.467, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return 0.33222726578302075;  // std dev = 1.411, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.17027539027229452;  // std dev = 4.371, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.17942020916277107;  // std dev = 5.080, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
%   | | | else return 0.11723824639273131;  // std dev = 6.563, 200.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=63 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( location(E, D), complex(F, G) )
%   | | | then return 0.1004538503914064;  // std dev = 7.295, 246.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=78 */
%   | | | else return 0.22194521498200814;  // std dev = 2.491, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.039710944236732035;  // std dev = 1.778, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.046925959534916385;  // std dev = 1.693, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.12489052454783674;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.29555518744430276;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.44803950222862426;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, A), complex(A, H) )
%   | | | then return 0.11192410105244588;  // std dev = 2.883, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.035264888537304584;  // std dev = 4.658, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12059350013532669;  // std dev = 5.650, 140.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=50 */
%   | | | else return 0.26645433620050785;  // std dev = 2.348, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.04150648521840841;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | | else return 0.238590736252477;  // std dev = 1.429, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.13764448661776135;  // std dev = 2.957, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.06910519864193075;  // std dev = 6.787, 208.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=69 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(F, D) )
%   | | | then return 0.11746038913068077;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.012860310938120227;  // std dev = 2.108, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.07885069805308607;  // std dev = 2.563, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.2029480399081112;  // std dev = 2.286, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), phenotype(I, K) )
%   | | | then return 0.04075348905598233;  // std dev = 4.768, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.24560630968692523;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.02232183352841492;  // std dev = 4.098, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | | else return -0.054868581794209205;  // std dev = 2.565, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), phenotype(E, G) )
%   | | then if ( enzyme(E, H), phenotype(A, I) )
%   | | | then return 0.11985845247389867;  // std dev = 4.972, 103.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=41 */
%   | | | else return 0.036225081094718434;  // std dev = 5.466, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | else if ( complex(A, J) )
%   | | | then return -9.70831265434402E-6;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3285504963594384;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, M) )
%   | | | then return -0.10521427916996635;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.12772518851224282;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, N), complex(A, P) )
%   | | | then return 0.12780574873309342;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01182548016063894;  // std dev = 2.047, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( phenotype(A, F), complex(E, G) )
%   | | then if ( location(A, H), location(E, H) )
%   | | | then return -0.020793473233476592;  // std dev = 3.050, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.07490522035043383;  // std dev = 1.528, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.3140702625201933;  // std dev = 1.147, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.018059063595935038;  // std dev = 1.999, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(K, A), complex(K, J) )
%   | | | then return -0.009199564176189789;  // std dev = 2.417, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.1497607488705225;  // std dev = 3.316, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.04433348636471162;  // std dev = 2.446, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.06016005463368065;  // std dev = 5.194, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(F, F), phenotype(F, G) )
%   | | then if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.04581188595287526;  // std dev = 2.420, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.2635725804802502;  // std dev = 1.503, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(F, I), location(F, E) )
%   | | | then return 0.06119579268011713;  // std dev = 3.545, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return -0.017402510263512305;  // std dev = 6.390, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return -0.0989898443780078;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0011548377116154084;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.02849675705130994;  // std dev = 1.106, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.17396229458364404;  // std dev = 2.209, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '2.164', 'seconds']
Refined model CLL: -0.389843


******************************************
Best model found
******************************************
Results 

CLL : -0.353285 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.603 

Total Inference Time : 102.9785373210907 

Total revision time: 152.67548123550415
Best scored revision CLL: -0.352273


Results 

CLL : -0.353285 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 152.83128658485413 

Total Inference Time : 102.9785373210907 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.283
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18323727432212558;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1640972900422602;  // std dev = 0.470, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13321532574692013;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11189722213322642;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12784232805256712;  // std dev = 0.479, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11007556917715841;  // std dev = 0.481, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.043385838027203374;  // std dev = 0.466, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.075688700649792;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.977', 'seconds']
Parameter learned model CLL:-0.361866 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.88, 191, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.893, 193, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.893, 193, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 161, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.466, 197, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.677, 164, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21940591092409814, nan], 'true': [nan, 0.21940591092409814], 'true,false': [nan, 0.21940591092409814]}
{'': [nan, 0.22101463239166985]}
{'': [nan, 0.2186026469682973], 'false': [0.2186026469682973, nan]}
{'': [nan, 0.21860264696829795], 'false': [0.21860264696829795, nan]}
{'': [nan, 0.22982936910475577]}
{'': [nan, 0.231404958677685]}
{'': [0.21699931753690865, nan]}
{'': [0.23022460937499967, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.566
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), interaction(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( enzyme(F, D) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.5854216623722395;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( complex(A, H) )
%   | then return 0.13814893509951087;  // std dev = 0.449, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | else if ( interaction(I, A) )
%   | | then if ( phenotype(A, J), location(I, K) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.2547006592374427;  // std dev = 3.725, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(E, C) )
%   | | then return 0.42529077772117985;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, E), phenotype(G, D) )
%   | | | then return 0.2690577585974565;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.1280927959122668;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0.11934774807749907;  // std dev = 0.458, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   else if ( interaction(H, A), enzyme(A, I) )
%   | then return 0.13964028189989114;  // std dev = 0.466, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), location(A, M) )
%   | | | then return 0.12120314707559468;  // std dev = 2.506, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.42506675954328255;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.49040032115077253;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.20444996988784686;  // std dev = 3.690, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.1806247512137321;  // std dev = 4.593, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | | else return 0.1018868586675789;  // std dev = 6.341, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(H, A), complex(G, I) )
%   | | | then return 0.042234874789746274;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.2958276114921024;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, D) )
%   | | | then return 0.44642785853651207;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1867695292770931;  // std dev = 2.684, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( interaction(K, A) )
%   | | then if ( location(K, L) )
%   | | | then return 0.06887593117437416;  // std dev = 5.808, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
%   | | | else return -0.1381224230440822;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.03669669980097465;  // std dev = 2.575, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.2867687232915413;  // std dev = 2.338, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.03845324133960597;  // std dev = 2.162, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.08596154538623012;  // std dev = 3.894, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.25004926231996905;  // std dev = 1.949, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.1061835162042538;  // std dev = 6.020, 161.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, I) )
%   | | | then return 0.08470624552892098;  // std dev = 3.599, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return -0.002861390877908877;  // std dev = 3.614, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.14443110476186422;  // std dev = 3.552, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.08692805177105742;  // std dev = 4.625, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.12112712299224533;  // std dev = 1.300, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.2296773238157368;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(G, D) )
%   | | | then return 0.01539983746856626;  // std dev = 2.411, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.13950482408897907;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, J), interaction(H, H) )
%   | | | then return 0.34937217199183956;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0765739763483665;  // std dev = 4.094, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else if ( location(A, K) )
%   | | | then return -0.0209275101896289;  // std dev = 5.945, 181.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=48 */
%   | | | else return 0.14681576663772525;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), interaction(A, A) )
%   | | then return 0.411136824123616;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.06463392539274387;  // std dev = 2.440, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.024870512798423082;  // std dev = 6.470, 195.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=60 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.10559329129029939;  // std dev = 1.357, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.02758969129607623;  // std dev = 1.898, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05271392466930326;  // std dev = 1.932, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.23457006229750038;  // std dev = 1.987, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), enzyme(E, H) )
%   | | then if ( interaction(A, E) )
%   | | | then return -0.1195592164925532;  // std dev = 1.528, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.014820711490556568;  // std dev = 1.977, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( phenotype(E, I) )
%   | | | then return 0.12801394062563792;  // std dev = 3.063, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.2333398861728526;  // std dev = 2.515, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( enzyme(J, L), complex(A, M) )
%   | | | then return 0.11679365929889804;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.05491127261467771;  // std dev = 4.105, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.012231607296978747;  // std dev = 2.416, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.07058568525286099;  // std dev = 3.298, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( enzyme(F, G) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.10134117382207947;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.06243217520260647;  // std dev = 1.671, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(I, F), interaction(J, I) )
%   | | | then return 0.09020987278001906;  // std dev = 3.658, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | | else return 0.26107257408176204;  // std dev = 1.658, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), enzyme(L, M) )
%   | | | then return -0.08250934015649766;  // std dev = 3.233, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.24671164179171504;  // std dev = 1.326, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.16976153579079967;  // std dev = 2.494, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.033951777583397014;  // std dev = 4.108, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '37.609', 'seconds']
Refined model CLL: -0.399488


******************************************
Best model found
******************************************
Results 

CLL : -0.361714 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.566 

Total Inference Time : 49.397807121276855 

Total revision time: 90.91095497512816
Best scored revision CLL: -0.361866


Results 

CLL : -0.361714 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 91.06676032447814 

Total Inference Time : 49.397807121276855 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.906
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19540383706029585;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15355530477466453;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1626175877752333;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.0877671175618859;  // std dev = 7.737, 283.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10856243748902761;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0941573028929449;  // std dev = 0.475, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06923533645475048;  // std dev = 0.473, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.020698613478646877;  // std dev = 7.737, 283.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.334', 'seconds']
Parameter learned model CLL:-0.345892 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.55, 169, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.462, 158, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.737, 197, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 168, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.737, 197, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22351403306420686, nan], 'true': [nan, 0.22351403306420686], 'true,false': [nan, 0.22351403306420686]}
{'': [nan, 0.2179215860993541]}
{'': [nan, 0.2282316581564097], 'false': [0.2282316581564097, nan]}
{'': [nan, 0.2115396621258837], 'false': [0.2115396621258837, nan]}
{'': [nan, 0.224374697308192]}
{'': [nan, 0.22609312753020214]}
{'': [0.2239444478888938, nan]}
{'': [0.21153966212588515, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 33.595
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), interaction(E, C) )
%   | then if ( enzyme(C, F), phenotype(C, D) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.15814893509951233;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(C, D) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   else if ( interaction(A, J), complex(J, K) )
%   | then if ( complex(A, K), interaction(L, A) )
%   | | then return 0.16584124279182003;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.1615972109615802;  // std dev = 0.460, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, E), phenotype(E, F) )
%   | then return 0.09880929325039593;  // std dev = 0.446, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | else return 0.21873627614569444;  // std dev = 0.493, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   else if ( enzyme(A, G) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.3373174874743996;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5039841541410662;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(K, G), phenotype(K, L) )
%   | | | then return 0.2658889160458279;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0873174874743996;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(M, A), complex(M, N) )
%   | | then return 0.12303177318868493;  // std dev = 0.452, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.0873174874743996;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.31609112060409206;  // std dev = 2.695, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.18947374763950053;  // std dev = 4.309, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | | else return 0.10119054279774736;  // std dev = 6.244, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(D, E), enzyme(A, G) )
%   | | | then return 0.409406655317646;  // std dev = 1.388, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0891782560791981;  // std dev = 4.316, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | else if ( complex(D, H) )
%   | | | then return -0.026641940998428107;  // std dev = 1.567, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.08876033847578091;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), location(J, I) )
%   | | | then return 0.10872979215026948;  // std dev = 4.179, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.15980677527964499;  // std dev = 3.582, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | else return 0.2911215116304018;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, A), enzyme(A, F) )
%   | | then return -0.08719032197819272;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.06601193169418344;  // std dev = 3.636, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.12848190895863473;  // std dev = 6.438, 176.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=66 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.06763355868252535;  // std dev = 2.294, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.2744918964324615;  // std dev = 2.074, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.0684662168532757;  // std dev = 4.480, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | | else return 0.01142209025177743;  // std dev = 5.277, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.0658014018097807;  // std dev = 1.553, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.13059235798597724;  // std dev = 2.164, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(H, A), complex(H, D) )
%   | | | then return 0.31098910175121863;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.07591209925660802;  // std dev = 2.363, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( interaction(K, I), interaction(K, K) )
%   | | | then return -0.03495861142180716;  // std dev = 3.131, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.0691038090465005;  // std dev = 4.794, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.17360452175337449;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.09727538793733498;  // std dev = 2.202, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(A, G) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.10045160545486913;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.7236928039949316;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.040655865645946976;  // std dev = 2.091, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.0594118462125605;  // std dev = 5.336, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, J), phenotype(A, K) )
%   | | | then return 0.4054054554209543;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.018756306702427807;  // std dev = 3.289, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.1334679996733815;  // std dev = 1.547, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.012150214502810324;  // std dev = 2.399, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( phenotype(G, E), interaction(G, H) )
%   | | then if ( phenotype(H, E), interaction(H, A) )
%   | | | then return 0.22356188662499565;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04094431529811243;  // std dev = 3.418, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else return -0.21045338314350806;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.03583975761331245;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2801285453397169;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.0765180161392103;  // std dev = 4.552, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
%   | | | else return -0.01428558263804107;  // std dev = 4.255, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( complex(A, G), phenotype(E, H) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.17476884439755655;  // std dev = 1.219, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0982035741617922;  // std dev = 3.142, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(K, E), location(K, F) )
%   | | | then return 0.04622869341940366;  // std dev = 4.884, 103.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
%   | | | else return -0.04349544332841086;  // std dev = 3.411, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( interaction(L, L), complex(A, M) )
%   | | | then return 0.0397149251807287;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.23800221497361088;  // std dev = 2.070, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.02931577966247641;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.027353448263272007;  // std dev = 1.692, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31', 'minutes', 'and', '46.385', 'seconds']
Refined model CLL: -0.402179


******************************************
Best model found
******************************************
Results 

CLL : -0.345151 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.595 

Total Inference Time : 73.44125962257385 

Total revision time: 115.75136239624024
Best scored revision CLL: -0.345892


Results 

CLL : -0.345151 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 115.90716774559021 

Total Inference Time : 73.44125962257385 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.516
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17566718327469402;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17656828229186494;  // std dev = 0.474, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14426953984025526;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12626634728952182;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10696882638237748;  // std dev = 0.475, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.057595963729904096;  // std dev = 0.464, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.042051784969946625;  // std dev = 0.462, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.028377368456743275;  // std dev = 7.786, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.585', 'seconds']
Parameter learned model CLL:-0.336163 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.706, 187, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.608, 173, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.578, 169, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.462, 195, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.786, 200, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21670041025094652, nan], 'true': [nan, 0.21670041025094652], 'true,false': [nan, 0.21670041025094652]}
{'': [nan, 0.22477508650519043]}
{'': [nan, 0.222647928994081], 'false': [0.222647928994081, nan]}
{'': [nan, 0.2243499755859377], 'false': [0.2243499755859377, nan]}
{'': [nan, 0.22519995039990093]}
{'': [nan, 0.21501216293152553]}
{'': [0.21333182435491, nan]}
{'': [0.21124452160400164, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 24.643
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), phenotype(E, D) )
%   | | then if ( complex(E, F), complex(A, G) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.15814893509951217;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(C, D) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14386322081379807;  // std dev = 0.452, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   else if ( phenotype(A, H) )
%   | then return 0.13087620782678408;  // std dev = 0.445, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return 0.14847151574467365;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21109011157010057;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.48128645962142214;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18457439163518014;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.06577365496736251;  // std dev = 0.434, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G), phenotype(A, H) )
%   | | then return 0.44145896494019377;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, E) )
%   | | | then return 0.21037046020944716;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.06263165716465034;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.02895896494019379;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.27003039351162234;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.14358440967455433;  // std dev = 5.383, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.20620754592526788;  // std dev = 4.810, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   | | | else return 0.13289029655846935;  // std dev = 5.715, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), interaction(D, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.7528933887146252;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22834096092656017;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, A), location(A, H) )
%   | | | then return 0.04787814727816634;  // std dev = 1.711, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.15994861554114728;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K), complex(A, L) )
%   | | | then return -0.048581294619472054;  // std dev = 1.777, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.05810814132415259;  // std dev = 2.957, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( location(A, M) )
%   | | | then return 0.11167077677496655;  // std dev = 5.911, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0.2879203646693329;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.018533588622022885;  // std dev = 3.231, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.08924798335593848;  // std dev = 4.271, 83.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.06554229009307094;  // std dev = 2.533, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.138449769948579;  // std dev = 4.790, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( interaction(F, F), interaction(A, F) )
%   | | | then return -0.09913292847731937;  // std dev = 1.928, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.02681548253854991;  // std dev = 4.341, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.0725170703518402;  // std dev = 4.188, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | | else return 0.17659427996016142;  // std dev = 4.118, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.11285522198764823;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04408307993726079;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, D), complex(D, G) )
%   | | | then return 0.5279182210728329;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.12227048386997226;  // std dev = 3.935, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J), interaction(H, H) )
%   | | | then return -0.03103637858822086;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.0757242462315533;  // std dev = 4.291, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return -0.04350668755024465;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.019627229601061884;  // std dev = 3.821, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( phenotype(E, D), interaction(A, F) )
%   | | | then return -0.10522086232165888;  // std dev = 2.287, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.01726516053928915;  // std dev = 2.283, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.1261288474766155;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.004017570628293122;  // std dev = 3.063, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.09354378967564407;  // std dev = 4.944, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
%   | | | else return -0.058810300104170175;  // std dev = 1.510, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.32029173434040187;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(E, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.18159566248229847;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.0876726099083989;  // std dev = 1.898, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( phenotype(A, I), interaction(E, A) )
%   | | | then return 0.3294639712090321;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.004148950984126621;  // std dev = 2.397, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.1516506271537353;  // std dev = 2.259, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.03422857086572452;  // std dev = 6.137, 168.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=57 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.3834248663810013;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1561311115521118;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(F, H), interaction(A, I) )
%   | | | then return 0.22528999045885875;  // std dev = 1.826, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.04056759775728767;  // std dev = 2.807, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( enzyme(J, E), interaction(J, J) )
%   | | | then return -0.1428747583145157;  // std dev = 1.821, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.030977950975017335;  // std dev = 2.764, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.09731953125130001;  // std dev = 1.817, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.02733168092469078;  // std dev = 2.690, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.04953174684514051;  // std dev = 1.638, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.10263575688976292;  // std dev = 4.395, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '24.876', 'seconds']
Refined model CLL: -0.41078


******************************************
Best model found
******************************************
Results 

CLL : -0.335739 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.643 

Total Inference Time : 44.17221212387085 

Total revision time: 76.50204499626159
Best scored revision CLL: -0.336163


Results 

CLL : -0.335739 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 76.60288723373412 

Total Inference Time : 44.17221212387085 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.107
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.485, 276.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19363280606725106;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16839027896662215;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15949252096900737;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10517304277133414;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1047266429428977;  // std dev = 0.474, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08419695436284004;  // std dev = 0.474, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06674018950535497;  // std dev = 0.473, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0566678015146966;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.559', 'seconds']
Parameter learned model CLL:-0.358042 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.313, 206, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.213, 192, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.391, 218, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 203, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.272, 200, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22293444328824347, nan], 'true': [nan, 0.22293444328824347], 'true,false': [nan, 0.22293444328824347]}
{'': [nan, 0.22293444328824016]}
{'': [nan, 0.2279035792549263], 'false': [0.2279035792549263, nan]}
{'': [nan, 0.21866440337950113], 'false': [0.21866440337950113, nan]}
{'': [nan, 0.22471378661650313]}
{'': [nan, 0.22435815284719757]}
{'': [0.2240023766830439, nan]}
{'': [0.22506925207756137, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 63.458
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then if ( interaction(C, C), complex(C, F) )
%   | | then if ( phenotype(D, E), complex(D, F) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.19148226843284563;  // std dev = 0.471, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else return 0.1030468942831858;  // std dev = 0.430, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(G, G) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( location(J, I) )
%   | | | then return 0.2692600462106221;  // std dev = 4.668, 90.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=37 */
%   | | | else return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else return 0.13087620782678505;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(D, E), complex(C, F) )
%   | | then return 0.5351277831074471;  // std dev = 0.455, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( phenotype(A, G), interaction(D, D) )
%   | | | then return 0.1962090363720949;  // std dev = 2.078, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.4656622929138948;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( phenotype(C, H) )
%   | | then return 0.3221145524886069;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12211455248860688;  // std dev = 0.458, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return 0.10620406014210465;  // std dev = 0.444, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), complex(K, M) )
%   | | | then return 0.25990959355922155;  // std dev = 2.153, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.16081409980234648;  // std dev = 3.914, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | else return 0.14068419900588996;  // std dev = 0.462, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.06441282473118425;  // std dev = 3.875, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.14308041945421962;  // std dev = 7.407, 246.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.1300733657354715;  // std dev = 4.004, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else return 0.05592422130389245;  // std dev = 5.001, 126.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.1799791685131926;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4399326413337057;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.08110970616230069;  // std dev = 2.217, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.2703234736793987;  // std dev = 3.667, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.023790675638103387;  // std dev = 1.765, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.14213461663194682;  // std dev = 1.382, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, H), interaction(F, F) )
%   | | | then return 0.04482285945681037;  // std dev = 3.414, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.14660958120134246;  // std dev = 6.860, 200.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=77 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.25168720420953206;  // std dev = 1.235, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.051599377921447705;  // std dev = 2.392, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), interaction(G, G) )
%   | | | then return 0.16220242691510073;  // std dev = 1.965, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.012411324407420718;  // std dev = 6.283, 208.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=53 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.14686006308364685;  // std dev = 2.775, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.04411273375023885;  // std dev = 4.593, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.1828284900049336;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.47178326359751194;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.03958414995087697;  // std dev = 3.977, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | | else return 0.015534779386170339;  // std dev = 3.183, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, J) )
%   | | | then return -0.06141845104688537;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2032934914963557;  // std dev = 3.239, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.08618106295813396;  // std dev = 4.431, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | | else return -0.006313495414690682;  // std dev = 2.833, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( interaction(H, F), interaction(H, A) )
%   | | | then return 0.09238672465441952;  // std dev = 4.688, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | else return 0.2510355676824022;  // std dev = 2.240, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.15637043084029464;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.03521649041714204;  // std dev = 4.443, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.3785862947414233;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0223507693158457;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return -0.10584725554428252;  // std dev = 1.527, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.0088130265548709;  // std dev = 2.932, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( interaction(A, A), complex(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.18823558119093872;  // std dev = 1.268, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.0072247520569562;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.14338517146219326;  // std dev = 2.718, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.021259067898807493;  // std dev = 7.261, 238.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=79 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return 0.008870750169472814;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.29722877334351455;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.439848116333942;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), phenotype(G, H) )
%   | | then if ( phenotype(F, I) )
%   | | | then return -0.01341588401496847;  // std dev = 3.683, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return -0.14278983210576468;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(F, J), interaction(J, F) )
%   | | | then return -0.2740655781577395;  // std dev = 1.288, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.05068482943728396;  // std dev = 1.920, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), complex(M, N) )
%   | | | then return 0.0491658607748111;  // std dev = 3.854, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.18248564153084162;  // std dev = 1.993, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( location(A, P) )
%   | | | then return -0.008144813582835643;  // std dev = 5.304, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.2578280590385244;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '55.731', 'seconds']
Refined model CLL: -0.402921


******************************************
Best model found
******************************************
Results 

CLL : -0.359031 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 63.458 

Total Inference Time : 120.19569849967957 

Total revision time: 195.20718831062317
Best scored revision CLL: -0.358042


Results 

CLL : -0.359031 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 195.3080305480957 

Total Inference Time : 120.19569849967957 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.255
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.463, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2079588210310694;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19027808887208156;  // std dev = 0.480, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1241418369569589;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10485160657963648;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10312867227596566;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06847229504005788;  // std dev = 0.468, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05869042809021635;  // std dev = 0.469, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.059083375511505665;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.616', 'seconds']
Parameter learned model CLL:-0.352388 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.734, 171, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 164, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.9, 194, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.893, 193, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.469, 189, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22744292963611001, nan], 'true': [nan, 0.22744292963611001], 'true,false': [nan, 0.22744292963611001]}
{'': [nan, 0.230224609375004]}
{'': [nan, 0.2182013790405394], 'false': [0.2182013790405394, nan]}
{'': [nan, 0.2186026469682989], 'false': [0.2186026469682989, nan]}
{'': [nan, 0.22423441946596404]}
{'': [nan, 0.2190041658401121]}
{'': [0.22020997707728995, nan]}
{'': [0.2242344194659669, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.431
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(D, C) )
%   | | | then return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.23314893509951237;  // std dev = 3.354, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   else if ( complex(A, H) )
%   | then return 0.10814893509951237;  // std dev = 0.433, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19685861251886627;  // std dev = 5.270, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then return 0.34168950602991055;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(C, H), complex(A, I) )
%   | | | then return 0.3974393590296844;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10929241480165137;  // std dev = 2.035, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.1002053288170955;  // std dev = 0.449, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   else if ( location(A, J) )
%   | then if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return 0.32645208945090504;  // std dev = 2.331, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.1657903128796002;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.12772369601237976;  // std dev = 3.355, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.2174478160758646;  // std dev = 4.143, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | else return 0.04674269383198114;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), interaction(A, A) )
%   | | | then return -0.02965349111152915;  // std dev = 1.822, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.15836528514279605;  // std dev = 7.498, 243.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( complex(E, G), interaction(F, H) )
%   | | | then return 0.07672713124816019;  // std dev = 1.853, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.4484072099225893;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(E, I), location(D, I) )
%   | | | then return 0.06852501762670477;  // std dev = 5.412, 139.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */
%   | | | else return -0.015638208318361754;  // std dev = 2.176, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.00946004255326396;  // std dev = 2.282, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.15012103644379984;  // std dev = 2.105, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.2249701299477359;  // std dev = 1.961, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.16843120717702145;  // std dev = 2.948, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.08460625253040538;  // std dev = 2.059, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.4274923260388749;  // std dev = 1.404, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.024363934009088803;  // std dev = 4.526, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   | | | else return 0.08688226062727158;  // std dev = 5.855, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(G, H), interaction(A, I) )
%   | | | then return -0.05368906736167201;  // std dev = 3.564, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.08111333421149819;  // std dev = 5.207, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.7252225683641559;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10841192501234834;  // std dev = 4.488, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.5435182872188924;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19313124282778535;  // std dev = 1.943, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.083195222967648;  // std dev = 2.637, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.048860139488814465;  // std dev = 5.020, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return -0.17925482284219044;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.19925435936694644;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.05502263791406888;  // std dev = 3.035, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.04634853108081247;  // std dev = 3.658, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.10691556132201985;  // std dev = 1.946, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.27377507685383656;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return 0.3613120990864738;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.00942104894528204;  // std dev = 1.655, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.21959941893692372;  // std dev = 2.174, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.1182785218334508;  // std dev = 3.362, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.08490178861771433;  // std dev = 3.875, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return 0.017891438822704338;  // std dev = 4.337, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), phenotype(E, H) )
%   | | then if ( enzyme(G, F) )
%   | | | then return -0.02986281870991509;  // std dev = 1.169, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.45769208609677525;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -9.126838343282378E-4;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.20700701748898384;  // std dev = 1.775, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return -0.09786499850354553;  // std dev = 2.303, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.15622133905447483;  // std dev = 1.031, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.031470008633288;  // std dev = 4.172, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | | else return -0.013219334720186176;  // std dev = 5.646, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( phenotype(A, F), interaction(E, E) )
%   | | then if ( complex(A, G), complex(E, G) )
%   | | | then return 0.29698410285100457;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.008036621864623943;  // std dev = 1.420, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(E, H), phenotype(H, I) )
%   | | | then return -0.05220092714813793;  // std dev = 3.275, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.02414861971169836;  // std dev = 2.921, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(L, J), complex(L, M) )
%   | | | then return 1.8129489740674E-4;  // std dev = 2.930, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.1007948772552888;  // std dev = 1.972, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.14928431149955698;  // std dev = 2.339, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.04212348594904239;  // std dev = 4.527, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14', 'minutes', 'and', '20.344', 'seconds']
Refined model CLL: -0.390813


******************************************
Best model found
******************************************
Results 

CLL : -0.352231 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.431 

Total Inference Time : 60.32253074645996 

Total revision time: 109.44245995140075
Best scored revision CLL: -0.352388


Results 

CLL : -0.352231 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 109.54330218887328 

Total Inference Time : 60.32253074645996 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.7
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.174325405687747;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1823504331937265;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16730222241326842;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14929322908944279;  // std dev = 7.375, 234.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09923468890347095;  // std dev = 0.475, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08460790876893921;  // std dev = 0.476, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06231175183464882;  // std dev = 0.475, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.037710459248496926;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.228', 'seconds']
Parameter learned model CLL:-0.364547 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.669, 186, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.429, 154, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.375, 148, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 165, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.586, 174, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21620891003460282, nan], 'true': [nan, 0.21620891003460282], 'true,false': [nan, 0.21620891003460282]}
{'': [nan, 0.22652185223725133]}
{'': [nan, 0.2299305555555572], 'false': [0.2299305555555572, nan]}
{'': [nan, 0.23244941193659238], 'false': [0.23244941193659238, nan]}
{'': [nan, 0.2256640000000027]}
{'': [nan, 0.2269501221131302]}
{'': [0.22523452008698172, nan]}
{'': [0.2213609467455636, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.899
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.5581489350995124;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( phenotype(C, H) )
%   | | then return 0.14386322081379804;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(J, A), phenotype(A, K) )
%   | then return 0.14059168319111393;  // std dev = 0.450, 131.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=37 */
%   | else if ( interaction(A, L), enzyme(A, M) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20597502205603407;  // std dev = 0.476, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then if ( interaction(C, E), interaction(A, F) )
%   | | then if ( complex(C, G), enzyme(C, H) )
%   | | | then return 0.34015856063771627;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17187865795776486;  // std dev = 2.377, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.0674312879104435;  // std dev = 0.419, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(C, J), interaction(J, A) )
%   | | | then return 0.17349189397104955;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.506825227304383;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(K, C), complex(C, L) )
%   | | | then return 0.3401585606377162;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17366496989084743;  // std dev = 3.633, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else if ( interaction(M, A), enzyme(A, N) )
%   | then return 0.18219583962630437;  // std dev = 0.479, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0.0991869001312339;  // std dev = 0.447, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.09179982456903049;  // std dev = 3.922, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | | else return 0.1892300747115259;  // std dev = 6.286, 167.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D), complex(D, F) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.11815455448847956;  // std dev = 3.431, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.7375026215338325;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(E, E), phenotype(D, G) )
%   | | | then return 0.12868401616709316;  // std dev = 2.119, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.03139407748136704;  // std dev = 3.753, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, I), phenotype(H, J) )
%   | | | then return 0.28571164490284384;  // std dev = 1.586, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.11049231106716409;  // std dev = 3.663, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.21489785014752144;  // std dev = 2.383, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.4542470530625671;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(A, H), complex(F, I) )
%   | | | then return 0.11935314661461621;  // std dev = 2.274, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.2829356282927238;  // std dev = 2.035, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return -0.027076784774294906;  // std dev = 3.418, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.06324781420684612;  // std dev = 6.080, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), complex(H, I) )
%   | | | then return 0.053232039266002576;  // std dev = 2.479, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.21182523723851432;  // std dev = 2.781, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( complex(A, J), interaction(A, A) )
%   | | | then return -0.07796592923600713;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.06806283551785225;  // std dev = 6.247, 174.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(G, E) )
%   | | | then return 0.048185089525940514;  // std dev = 2.215, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.046916853758425955;  // std dev = 1.741, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.15101874935246862;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.15448640605169983;  // std dev = 1.833, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.056158600391179314;  // std dev = 2.633, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.0332880450379533;  // std dev = 1.844, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.04558212338164145;  // std dev = 2.441, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.05260556941658216;  // std dev = 5.597, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then return 0.39328235943119044;  // std dev = 1.129, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, G), phenotype(D, H) )
%   | | | then return 0.25566386461381435;  // std dev = 1.461, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.015244804411496728;  // std dev = 2.418, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.10282562248990307;  // std dev = 1.981, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.06470731348623283;  // std dev = 1.162, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return 0.16430152777519197;  // std dev = 1.516, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.027912905124243898;  // std dev = 6.307, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, F), interaction(G, E) )
%   | | then if ( enzyme(G, H), interaction(E, G) )
%   | | | then return -0.20742094532329533;  // std dev = 1.273, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.06711684722821322;  // std dev = 2.855, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(F, I), enzyme(I, J) )
%   | | | then return -0.031147430559825752;  // std dev = 3.215, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.09250872500622442;  // std dev = 2.514, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else if ( enzyme(A, K) )
%   | | then if ( complex(A, L), phenotype(A, M) )
%   | | | then return -0.09597586701752156;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.02071236724689515;  // std dev = 3.071, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.17145103720766722;  // std dev = 1.657, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.06257093995139812;  // std dev = 4.260, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( phenotype(E, G), enzyme(A, H) )
%   | | then if ( interaction(A, I), interaction(J, E) )
%   | | | then return 0.20166860186810123;  // std dev = 1.694, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3991284577603204;  // std dev = 1.389, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, K), phenotype(K, F) )
%   | | | then return 0.24679362544931283;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.11165112691203077;  // std dev = 3.738, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.01025914639837395;  // std dev = 1.680, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.08705312973873816;  // std dev = 2.324, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.14943019539699123;  // std dev = 2.118, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.01005484309033756;  // std dev = 3.876, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18', 'minutes', 'and', '10.805', 'seconds']
Refined model CLL: -0.40842


******************************************
Best model found
******************************************
Results 

CLL : -0.363859 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.899 

Total Inference Time : 51.80016303062439 

Total revision time: 90.19653274917603
Best scored revision CLL: -0.364547


Results 

CLL : -0.363859 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 90.29737498664856 

Total Inference Time : 51.80016303062439 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.659
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.460, 286.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.463, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19535823742509276;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15608621037743256;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12613966888156716;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11300344009278242;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10225603983660614;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08114405168078878;  // std dev = 0.470, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08694852861881887;  // std dev = 0.477, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03073847224938191;  // std dev = 7.738, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.704', 'seconds']
Parameter learned model CLL:-0.345537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.594, 171, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.712, 188, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.672, 182, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 161, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.738, 192, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22349918875067695, nan], 'true': [nan, 0.22349918875067695], 'true,false': [nan, 0.22349918875067695]}
{'': [nan, 0.21881952985724237]}
{'': [nan, 0.2162776859504115], 'false': [0.2162776859504115, nan]}
{'': [nan, 0.2188195298572451], 'false': [0.2188195298572451, nan]}
{'': [nan, 0.22179651535458458]}
{'': [nan, 0.22094524793388565]}
{'': [0.22774128511966543, nan]}
{'': [0.21459128222916163, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 37.149
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, D), enzyme(C, E) )
%   | then if ( location(C, F) )
%   | | then return 0.08542166237223962;  // std dev = 0.419, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( location(A, G) )
%   | | then if ( complex(C, H), interaction(C, D) )
%   | | | then return 0.17393840878372144;  // std dev = 4.963, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return 0.25349777230881354;  // std dev = 4.534, 86.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | | else return 0.0010060779566550668;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( interaction(A, I) )
%   | then if ( enzyme(A, J) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.024815601766178884;  // std dev = 0.373, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return 0.1337917316238481;  // std dev = 0.457, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), phenotype(I, E) )
%   | | | then return 0.3328240439191723;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16896273503198153;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(J, F), interaction(J, K) )
%   | | | then return 0.6329003333816475;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.324407970580745;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(L, A), complex(A, M) )
%   | | then if ( complex(L, N) )
%   | | | then return 0.2376344173141836;  // std dev = 2.678, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.4910746372474117;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.09945757285999134;  // std dev = 2.417, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.21258338255791648;  // std dev = 3.937, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.13423672448741789;  // std dev = 4.731, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.09044363542286114;  // std dev = 6.173, 181.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.4621065113413107;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1915239233742686;  // std dev = 1.894, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( enzyme(D, G), location(A, H) )
%   | | | then return 0.8070121597017872;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39782366571761907;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.09845817852224202;  // std dev = 3.618, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.0026492305685151406;  // std dev = 2.270, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.062171734177682576;  // std dev = 2.566, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.13599565070511566;  // std dev = 4.758, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), complex(H, G) )
%   | | | then return 0.08799166979137087;  // std dev = 4.168, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.18305463006592596;  // std dev = 3.712, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.02094449615574544;  // std dev = 2.353, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.07166189128496514;  // std dev = 4.510, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(F, H), phenotype(A, I) )
%   | | | then return -0.02076524973576193;  // std dev = 2.571, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.09735143402221536;  // std dev = 6.627, 191.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=69 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.43471405018059306;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.22868819778448524;  // std dev = 1.647, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return 0.04869075014255926;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0896476194917;  // std dev = 1.727, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(E, A), enzyme(A, H) )
%   | | | then return 0.16226811762974425;  // std dev = 2.343, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.051337442643578486;  // std dev = 6.443, 186.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=62 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K) )
%   | | | then return 0.029240926974422765;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.2403894782995287;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.06308307528882724;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.022336444322106925;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( location(F, D), complex(F, G) )
%   | | | then return 0.024922750733857087;  // std dev = 3.688, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.11761007559176168;  // std dev = 3.279, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | else if ( location(H, D), interaction(A, H) )
%   | | | then return -0.027092357141512955;  // std dev = 3.422, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.05575791331845882;  // std dev = 4.273, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.3695928030608797;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2436276366636127;  // std dev = 0.988, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(G, I) )
%   | | | then return 0.006830300384590433;  // std dev = 2.744, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.10941383051742332;  // std dev = 2.352, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.27452857664783864;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.00951667485796702;  // std dev = 2.742, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( phenotype(A, L) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.030869638310930553;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1089231192803797;  // std dev = 3.766, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.15530363770444547;  // std dev = 1.933, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.02130717507893815;  // std dev = 3.896, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F), enzyme(A, G) )
%   | | then return 0.6532176118939564;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A), location(A, H) )
%   | | | then return -0.010678985284213979;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.09355385751574988;  // std dev = 2.350, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( complex(I, K), enzyme(A, L) )
%   | | | then return -0.0924611035951856;  // std dev = 1.544, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.029020586024275628;  // std dev = 2.658, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.05618763775090086;  // std dev = 4.296, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | | else return -0.012554318155686818;  // std dev = 4.449, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '41.873', 'seconds']
Refined model CLL: -0.406887


******************************************
Best model found
******************************************
Results 

CLL : -0.345127 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 37.149 

Total Inference Time : 62.23742961883545 

Total revision time: 107.2185930328369
Best scored revision CLL: -0.345537


Results 

CLL : -0.345127 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 107.39549294281005 

Total Inference Time : 62.23742961883545 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.054
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2048156017661756;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15736307061643642;  // std dev = 0.469, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13723096884584335;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10300749342281244;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09107587607757543;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10047062150536404;  // std dev = 0.477, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04176755347654475;  // std dev = 0.462, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.038175074052841367;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.779', 'seconds']
Parameter learned model CLL:-0.339545 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.243, 196, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.353, 212, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.428, 224, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.462, 232, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.445, 227, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2264888888888911, nan], 'true': [nan, 0.2264888888888911], 'true,false': [nan, 0.2264888888888911]}
{'': [nan, 0.21973054510077514]}
{'': [nan, 0.22079794904662428], 'false': [0.22079794904662428, nan]}
{'': [nan, 0.2165377751338527], 'false': [0.2165377751338527, nan]}
{'': [nan, 0.21866440337950052]}
{'': [nan, 0.22719697310931966]}
{'': [0.21371882086167884, nan]}
{'': [0.215478135467913, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 77.658
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( enzyme(E, G), complex(E, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1763307532813301;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.23745927992709853;  // std dev = 0.485, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else return 0.14138592931916452;  // std dev = 0.451, 173.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=49 */
%   else if ( interaction(K, A), enzyme(K, L) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, M) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then return 0.262803093412691;  // std dev = 0.495, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | else return 0.14088713468797615;  // std dev = 0.463, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( complex(H, F), interaction(H, H) )
%   | | then return 0.5005705082660165;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1358062957365173;  // std dev = 2.029, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.21275521770907607;  // std dev = 1.748, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( location(A, M) )
%   | | | then return 0.2819123359122058;  // std dev = 3.256, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.616190050733606;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, N) )
%   | | | then return 0.34005187079592675;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.052786247951007406;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.09144343607672015;  // std dev = 5.512, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | | | else return 0.17666524487566043;  // std dev = 6.180, 161.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=61 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( enzyme(D, G), interaction(F, D) )
%   | | | then return 0.2079837350003509;  // std dev = 2.530, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.060442378609568956;  // std dev = 4.481, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   | | else if ( interaction(D, D), phenotype(D, H) )
%   | | | then return 0.7886576248279656;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14976433680635048;  // std dev = 5.668, 138.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=52 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.17634850305466038;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.06066800731468605;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.02542675264266832;  // std dev = 2.101, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.056947674944310946;  // std dev = 2.837, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.034006278949697;  // std dev = 3.393, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( location(A, J) )
%   | | | then return 0.09878108869208467;  // std dev = 6.937, 212.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=73 */
%   | | | else return -0.05637796132432787;  // std dev = 1.955, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, F), phenotype(F, H) )
%   | | | then return 0.10975175660855305;  // std dev = 4.016, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.03994722445280927;  // std dev = 6.891, 223.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=69 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.01381589427552794;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19237381792790148;  // std dev = 2.227, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.38409008258108873;  // std dev = 0.844, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23116025518545716;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(G, G), interaction(A, H) )
%   | | | then return -0.03175323813925686;  // std dev = 2.457, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.049841232192727056;  // std dev = 4.170, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.18639381242432662;  // std dev = 2.553, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.0587817198781328;  // std dev = 5.940, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.0028513395823729325;  // std dev = 5.382, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
%   | | | else return 0.13946631010689448;  // std dev = 2.131, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.12322845612244139;  // std dev = 2.585, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.4075046331014658;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( location(A, J) )
%   | | then if ( complex(A, K), interaction(A, A) )
%   | | | then return -0.24808235328049427;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.013412138593847388;  // std dev = 4.769, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.2214124274535944;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.04718456757173579;  // std dev = 1.851, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, G), phenotype(E, H) )
%   | | | then return 0.02384425253844361;  // std dev = 2.487, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.24307568388484505;  // std dev = 3.083, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | else if ( phenotype(E, F) )
%   | | | then return 0.29148769037631095;  // std dev = 1.127, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6588570594733419;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.03498413477428509;  // std dev = 3.425, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.10635363187119357;  // std dev = 1.499, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.07873402672356511;  // std dev = 5.211, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | | | else return 0.30675881977311026;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), interaction(H, A) )
%   | | | then return 0.04169270554116507;  // std dev = 5.303, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
%   | | | else return -0.01619458849813155;  // std dev = 5.113, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return -0.2269010526917572;  // std dev = 1.223, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.06373155688364913;  // std dev = 3.234, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.060676286709796176;  // std dev = 0.429, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.02197740426533083;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17339012998963543;  // std dev = 1.754, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '19.098', 'seconds']
Refined model CLL: -0.401712


******************************************
Best model found
******************************************
Results 

CLL : -0.340609 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 77.658 

Total Inference Time : 501.3633644580841 

Total revision time: 589.9099763507843
Best scored revision CLL: -0.339545


Results 

CLL : -0.340609 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 590.0868762607574 

Total Inference Time : 501.3633644580841 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.276
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.478, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19638422921715765;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1576114716916214;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15655254122657533;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11618434295127257;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11090491976330077;  // std dev = 0.476, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06369925356698455;  // std dev = 0.467, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.039520507024321465;  // std dev = 0.462, 298.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07953928076185236;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.697', 'seconds']
Parameter learned model CLL:-0.353471 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.803, 180, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.75, 173, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.839, 185, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.462, 206, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.694, 166, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22383217993079713, nan], 'true': [nan, 0.22383217993079713], 'true,false': [nan, 0.22383217993079713]}
{'': [nan, 0.21940591092409942]}
{'': [nan, 0.22664293342826708], 'false': [0.22664293342826708, nan]}
{'': [nan, 0.2218196509794203], 'false': [0.2218196509794203, nan]}
{'': [nan, 0.22664293342826575]}
{'': [nan, 0.21780038606757474]}
{'': [0.21341381018872807, nan]}
{'': [0.22943332732407892, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 34.743
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( enzyme(A, E), enzyme(C, F) )
%   | then return 0.15226658215833588;  // std dev = 0.456, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return 0.124815601766179;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(C, G) )
%   | | | then return 0.524815601766179;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( complex(A, H), interaction(A, I) )
%   | then return 0.034619523334806335;  // std dev = 0.381, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.16974313799806182;  // std dev = 5.441, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(C, E) )
%   | | then if ( interaction(C, C), complex(C, F) )
%   | | | then return 0.12429876573280892;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5077053684002416;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1220191988647035;  // std dev = 0.455, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(C, H) )
%   | | | then return 0.2584136491765545;  // std dev = 2.098, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.8390183719556258;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I), complex(C, I) )
%   | | | then return 0.137058923689101;  // std dev = 2.605, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.2520670228625512;  // std dev = 3.205, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   else if ( enzyme(A, J) )
%   | then return 0.21008469765702525;  // std dev = 0.484, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else return 0.10586481161635902;  // std dev = 0.445, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.1080846488832465;  // std dev = 4.973, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | | else return 0.1947533321444784;  // std dev = 5.809, 142.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.05460840844832601;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.35322708379049417;  // std dev = 1.123, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(H, E), enzyme(H, I) )
%   | | | then return 0.029392573627070914;  // std dev = 3.352, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return 0.1514991595589536;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, J), enzyme(A, L) )
%   | | | then return -0.09075853962727405;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12371581111509736;  // std dev = 3.828, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.09830409663342875;  // std dev = 2.355, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.20987398931859613;  // std dev = 4.543, 84.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, F), phenotype(A, H) )
%   | | | then return 0.10170127594800876;  // std dev = 2.416, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.024327908998017848;  // std dev = 4.304, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.04283629655071967;  // std dev = 4.227, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | | | else return 0.17008313049356646;  // std dev = 4.377, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.07519499736197906;  // std dev = 2.968, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.21560969161064128;  // std dev = 2.256, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.06549293242112925;  // std dev = 2.940, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.017050010392282565;  // std dev = 6.279, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.06345924789174127;  // std dev = 1.645, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.07939576335909218;  // std dev = 1.982, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.033504096416865276;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.10173144345800945;  // std dev = 3.762, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.09514028489581991;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7253316789060377;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.06714778144142566;  // std dev = 4.272, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.19246120501912856;  // std dev = 2.975, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.3602034804204062;  // std dev = 1.184, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.13752962718329523;  // std dev = 2.846, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.01991983588529215;  // std dev = 3.669, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3179409564040188;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.055300762981982915;  // std dev = 1.930, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.061384057575063496;  // std dev = 3.525, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.014602686131484934;  // std dev = 4.306, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), enzyme(A, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.40004377591777207;  // std dev = 1.365, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.0304088438053906;  // std dev = 1.434, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.03976201265040459;  // std dev = 2.431, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.0778983912379895;  // std dev = 2.095, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(A, L), interaction(M, A) )
%   | | then if ( interaction(L, N), phenotype(L, P) )
%   | | | then return -0.03180236949705849;  // std dev = 2.759, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.14436759292957294;  // std dev = 2.186, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( enzyme(A, Q), interaction(R, A) )
%   | | | then return -0.024052315465496202;  // std dev = 2.187, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.055021677217612745;  // std dev = 5.287, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(G, E), interaction(I, F) )
%   | | | then return -0.006930693281834796;  // std dev = 2.245, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.16234196855170846;  // std dev = 2.377, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.127196084774343;  // std dev = 1.258, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.022589339267926528;  // std dev = 3.607, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.0755363641519654;  // std dev = 3.371, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.02516686065383973;  // std dev = 4.668, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.05050022813830526;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07846055268160519;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '57.433', 'seconds']
Refined model CLL: -0.415749


******************************************
Best model found
******************************************
Results 

CLL : -0.353314 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.743 

Total Inference Time : 43.65823721885681 

Total revision time: 89.0793609085083
Best scored revision CLL: -0.353471


Results 

CLL : -0.353314 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 89.25626081848145 

Total Inference Time : 43.65823721885681 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.642
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20492312864789855;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17532918485237378;  // std dev = 0.475, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12031717358264894;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.164593749248385;  // std dev = 7.309, 227.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1035045953328025;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06541835773617254;  // std dev = 0.470, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.038172897941384926;  // std dev = 0.464, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03751226336389124;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.273', 'seconds']
Parameter learned model CLL:-0.350895 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.495, 162, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.675, 187, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.309, 141, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.464, 188, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.642, 182, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2265218522372537, nan], 'true': [nan, 0.2265218522372537], 'true,false': [nan, 0.2265218522372537]}
{'': [nan, 0.22566399999999867]}
{'': [nan, 0.21578177622133693], 'false': [0.21578177622133693, nan]}
{'': [nan, 0.2353237982495315], 'false': [0.2353237982495315, nan]}
{'': [nan, 0.2265218522372543]}
{'': [nan, 0.22049997086416842]}
{'': [0.21535510682508466, nan]}
{'': [0.2179215860993542, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 30.607
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(F, D), phenotype(F, C) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2331489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( complex(A, I), interaction(A, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17393840878372235;  // std dev = 4.531, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   else if ( location(A, J) )
%   | then return 0.1145591915097676;  // std dev = 0.437, 117.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( phenotype(A, E), interaction(C, C) )
%   | then return 0.10145683907064229;  // std dev = 0.446, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( phenotype(C, F), location(C, D) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.33629359370912715;  // std dev = 2.097, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.20758429136431836;  // std dev = 4.312, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | else return 0.1658341404715248;  // std dev = 0.470, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   else if ( location(A, I), enzyme(A, J) )
%   | then return 0.14479273083518093;  // std dev = 0.475, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(A, L), complex(L, K) )
%   | | | then return 0.16299679266631545;  // std dev = 1.403, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3369617748216566;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.5089579339803574;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3162103523223613;  // std dev = 1.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.09830328930714444;  // std dev = 5.608, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | | | else return 0.20609934259069457;  // std dev = 4.941, 101.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return -0.10032019171233574;  // std dev = 2.214, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.03470674312462134;  // std dev = 1.918, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( phenotype(D, I) )
%   | | | then return 0.1451707437865029;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2918067371078335;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( location(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.19565239252730315;  // std dev = 3.415, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0.10259993012855101;  // std dev = 5.638, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.024331726986549174;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13919435631897195;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( complex(H, F), enzyme(H, I) )
%   | | | then return 0.05778409417309483;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.012244075489372789;  // std dev = 3.137, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.23077570415889115;  // std dev = 2.047, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.10570290943970262;  // std dev = 5.758, 145.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.09419888612010639;  // std dev = 1.517, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.019923946449332822;  // std dev = 3.150, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.1847007949179186;  // std dev = 3.024, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.06613793150109863;  // std dev = 5.922, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(D, D), phenotype(A, H) )
%   | | | then return 0.05883547846883893;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.47207686682667677;  // std dev = 1.196, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(D, D), interaction(I, A) )
%   | | | then return 0.3683952270779148;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.04076138347811605;  // std dev = 2.887, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(K, L), phenotype(A, M) )
%   | | | then return 0.12023272820362173;  // std dev = 2.333, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.005273471621264346;  // std dev = 5.015, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(N, A), complex(A, P) )
%   | | | then return 0.22734452213063117;  // std dev = 1.012, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0640544307347492;  // std dev = 3.326, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(D, G), phenotype(G, E) )
%   | | | then return 0.14428834674814953;  // std dev = 3.150, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return -0.017944180714643907;  // std dev = 3.420, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( complex(D, H), complex(A, I) )
%   | | | then return 0.0193531271980719;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1543825067615651;  // std dev = 2.243, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.1429174774930277;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.031914145052123;  // std dev = 1.896, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.06627066315055814;  // std dev = 2.910, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.1425127871035939;  // std dev = 3.532, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(G, E), enzyme(G, F) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.028151365013000234;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11277484070624857;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(E, I), phenotype(A, J) )
%   | | | then return 0.05886375748275415;  // std dev = 2.527, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.2457959878099249;  // std dev = 2.218, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(A, K) )
%   | | | then return -0.21646325755445553;  // std dev = 1.251, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.012827058108091687;  // std dev = 2.545, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.11048531098168587;  // std dev = 3.525, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.0052971167257910585;  // std dev = 4.438, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( enzyme(E, G), interaction(H, A) )
%   | | then if ( complex(E, I), complex(H, J) )
%   | | | then return -0.1973692249743831;  // std dev = 1.784, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.045665881834424625;  // std dev = 2.793, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( interaction(E, K), interaction(K, L) )
%   | | | then return 0.029027216093654443;  // std dev = 4.317, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return -0.06129492659404387;  // std dev = 2.145, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( location(A, M) )
%   | | then if ( phenotype(A, N) )
%   | | | then return 0.050723690599916924;  // std dev = 3.743, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.16550407097229938;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.0646750162796902;  // std dev = 1.110, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.16216958672448273;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '40.013', 'seconds']
Refined model CLL: -0.412889


******************************************
Best model found
******************************************
Results 

CLL : -0.350169 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 30.607 

Total Inference Time : 49.33152532577515 

Total revision time: 88.11440555953979
Best scored revision CLL: -0.350895


Results 

CLL : -0.350169 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 88.29130546951293 

Total Inference Time : 49.33152532577515 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.48
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19667033587772148;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16202869183493096;  // std dev = 0.470, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1394545126954123;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13001909294140304;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09054283116496596;  // std dev = 0.469, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0631006291389844;  // std dev = 0.465, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05565190584557184;  // std dev = 0.467, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04585068952353253;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.304', 'seconds']
Parameter learned model CLL:-0.343205 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.586, 170, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.63, 176, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.555, 166, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.467, 184, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.679, 183, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22392466199336944, nan], 'true': [nan, 0.22392466199336944], 'true,false': [nan, 0.22392466199336944]}
{'': [nan, 0.22094524793388381]}
{'': [nan, 0.2213708453208795], 'false': [0.2213708453208795, nan]}
{'': [nan, 0.22562452155165866], 'false': [0.22562452155165866, nan]}
{'': [nan, 0.22009440895471588]}
{'': [nan, 0.21627768595041355]}
{'': [0.21797088819596847, nan]}
{'': [0.21839506172839315, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 48.606
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.11572469267526996;  // std dev = 0.437, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(A, E) )
%   | | then return 0.3581489350995123;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.16584124279182003;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(F, H) )
%   | | | then return 0.1914822684328457;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), phenotype(K, L) )
%   | | | then return 0.1726650641317693;  // std dev = 5.170, 124.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=39 */
%   | | | else return 0.32873717039362993;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.5915534231477322;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.29170097051837723;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.16913755788063575;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.11219608022005073;  // std dev = 0.449, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   else if ( interaction(I, A), location(I, J) )
%   | then if ( enzyme(A, K) )
%   | | then if ( complex(I, L), enzyme(I, M) )
%   | | | then return 0.41860020815920096;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16424890894312694;  // std dev = 3.369, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.17810382721150853;  // std dev = 1.963, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.3155179580261392;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else return 0.05608331041753731;  // std dev = 0.432, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.08563200636413237;  // std dev = 3.406, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.17499819884129122;  // std dev = 6.639, 186.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(A, F), interaction(D, A) )
%   | | then if ( complex(A, G), enzyme(E, H) )
%   | | | then return 0.3875911405823952;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.2624337146196029;  // std dev = 1.588, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( enzyme(E, I), complex(E, J) )
%   | | | then return 0.19673863526959984;  // std dev = 2.141, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.04655141900688503;  // std dev = 2.867, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), enzyme(M, K) )
%   | | | then return -0.07876954758218767;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2615566021082404;  // std dev = 2.055, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.027073951718799706;  // std dev = 5.755, 169.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | | | else return 0.13477232163248765;  // std dev = 1.600, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( complex(F, H), enzyme(A, I) )
%   | | | then return 0.2398956463159022;  // std dev = 1.629, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.01260953153355254;  // std dev = 3.793, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.16760872392014028;  // std dev = 2.865, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.07699588834983359;  // std dev = 5.712, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.09422205190575063;  // std dev = 5.082, 109.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=40 */
%   | | | else return 0.05663026779696628;  // std dev = 5.406, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.08965288375751411;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12461518715827592;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), complex(F, E) )
%   | | then if ( interaction(A, G), phenotype(F, H) )
%   | | | then return 0.3087924948881044;  // std dev = 1.055, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7397121412240462;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, D) )
%   | | | then return -0.015377719732673016;  // std dev = 2.403, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.19885887151525095;  // std dev = 2.265, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.00669480341634281;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.22047385763351743;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.06838246590483346;  // std dev = 5.947, 158.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=54 */
%   | | | else return -0.04080670371621425;  // std dev = 1.949, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), complex(F, E) )
%   | | then if ( phenotype(F, G), interaction(A, H) )
%   | | | then return 0.11045275481598577;  // std dev = 1.266, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.24650941791380568;  // std dev = 1.573, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( phenotype(I, D), interaction(I, I) )
%   | | | then return 0.0695558416026213;  // std dev = 3.250, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return -0.1367328334476464;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then if ( enzyme(J, K), complex(A, L) )
%   | | | then return -0.011126979561784465;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2363393934702514;  // std dev = 3.521, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.03371804692974166;  // std dev = 4.731, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.37224163352384426;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E), interaction(A, F) )
%   | then if ( complex(F, G), interaction(A, A) )
%   | | then if ( location(H, E), enzyme(H, I) )
%   | | | then return -0.24898607348734264;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1943494820598633;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.09025749032986101;  // std dev = 3.429, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | | else return -0.062237540075373875;  // std dev = 3.628, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | else if ( phenotype(A, L), enzyme(A, M) )
%   | | then if ( interaction(N, A), phenotype(N, L) )
%   | | | then return 0.11646651216668347;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.29648976914897074;  // std dev = 1.385, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( location(A, P) )
%   | | | then return 0.04104024291562202;  // std dev = 4.867, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | | else return 0.2653452031255164;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(E, A), phenotype(F, G) )
%   | | then if ( interaction(E, E), interaction(A, F) )
%   | | | then return -0.07737390265938347;  // std dev = 2.354, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.010246282832269072;  // std dev = 2.221, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( enzyme(E, H), enzyme(A, I) )
%   | | | then return 0.41787195128634014;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.01133949437205612;  // std dev = 2.592, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), complex(L, M) )
%   | | | then return -0.16756789273408923;  // std dev = 2.205, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.0017903026349104095;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.13503004071831226;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.032356969219784655;  // std dev = 5.764, 164.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=46 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15', 'minutes', 'and', '19.746', 'seconds']
Refined model CLL: -0.408255


******************************************
Best model found
******************************************
Results 

CLL : -0.342792 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 48.606 

Total Inference Time : 79.03512477874756 

Total revision time: 135.34180072402955
Best scored revision CLL: -0.343205


Results 

CLL : -0.342792 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 135.5026843891144 

Total Inference Time : 79.03512477874756 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.146
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1841677438769387;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19284023434571584;  // std dev = 0.480, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.128788409012139;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1303727945312766;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10301170402964406;  // std dev = 0.474, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0827163290169714;  // std dev = 0.474, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07339827196091334;  // std dev = 0.476, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.017797674206135015;  // std dev = 8.496, 340.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.036', 'seconds']
Parameter learned model CLL:-0.350572 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.372, 215, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.391, 218, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.25, 197, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 196, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.496, 236, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2197305451007773, nan], 'true': [nan, 0.2197305451007773], 'true,false': [nan, 0.2197305451007773]}
{'': [nan, 0.23001189060641708]}
{'': [nan, 0.21866440337949933], 'false': [0.21866440337949933, nan]}
{'': [nan, 0.22613436937781817], 'false': [0.22613436937781817, nan]}
{'': [nan, 0.2247137866165015]}
{'': [nan, 0.22435815284719718]}
{'': [0.22648888888888885, nan]}
{'': [0.21231833910034711, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 40.435
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( complex(A, E) )
%   | then return 0.12285481745245255;  // std dev = 0.441, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | else if ( phenotype(F, C), interaction(F, G) )
%   | | then return 0.17187442529558936;  // std dev = 0.464, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( interaction(A, K), interaction(K, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, M), interaction(M, M) )
%   | | | then return 0.22549587387502257;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else return 0.14386322081379804;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.07589749088179298;  // std dev = 0.426, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( enzyme(A, F), complex(D, G) )
%   | | then if ( phenotype(D, C) )
%   | | | then return 0.38557579548638315;  // std dev = 1.652, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.19198585089189255;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.0732953668332138;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.19038388564348271;  // std dev = 5.148, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then return 0.242526136063983;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(J, L), interaction(K, A) )
%   | | | then return 0.037090421567008265;  // std dev = 2.150, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.12841710097244155;  // std dev = 4.499, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | else return 0.05112887576312917;  // std dev = 0.414, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.13896620594562484;  // std dev = 8.138, 300.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=99 */
%   | | | else return 0.38050756305395583;  // std dev = 1.478, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F) )
%   | | then if ( interaction(E, E), interaction(A, G) )
%   | | | then return 0.05960943836246272;  // std dev = 3.088, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.11374212411832017;  // std dev = 5.489, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | else if ( interaction(A, H), phenotype(D, I) )
%   | | | then return 0.3138339082784478;  // std dev = 2.287, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.12247915205115842;  // std dev = 4.070, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.25835621778546003;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.30622630483851015;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.18780684705521392;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3313866953995793;  // std dev = 1.286, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02626920961656576;  // std dev = 4.294, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.22731827037974311;  // std dev = 3.348, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.12378238441892445;  // std dev = 5.854, 149.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.010004075225225091;  // std dev = 3.226, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.037504264646198424;  // std dev = 3.452, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.18583544686555054;  // std dev = 3.693, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.0945264672224447;  // std dev = 5.586, 134.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), enzyme(A, G) )
%   | | then if ( phenotype(E, D) )
%   | | | then return 0.05228782190696464;  // std dev = 2.031, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.04594550114486173;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.11832694579031171;  // std dev = 5.184, 113.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=45 */
%   | | | else return 0.3815180325346154;  // std dev = 1.410, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, A), complex(A, K) )
%   | | | then return -0.17714637148823925;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.01360138206154407;  // std dev = 3.401, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.15008440081784766;  // std dev = 1.850, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.033095065993958735;  // std dev = 3.800, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(E, E), enzyme(A, G) )
%   | | | then return 0.34632033040788535;  // std dev = 1.389, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 3.1717053258828454E-5;  // std dev = 7.205, 248.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=74 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.20859780819650803;  // std dev = 1.602, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03198414859900689;  // std dev = 2.899, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( complex(A, J) )
%   | | then return 0.04512163471327476;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.20586812924676554;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.11558678902749689;  // std dev = 2.023, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.46187651149156295;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.14885751503928166;  // std dev = 2.707, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.035332554401166366;  // std dev = 2.986, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.05288706702641945;  // std dev = 3.933, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return -0.01587749274355961;  // std dev = 5.065, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.15435542100505137;  // std dev = 1.788, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.0159240746562594;  // std dev = 2.650, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, E), phenotype(E, G) )
%   | | then if ( enzyme(F, H), phenotype(A, I) )
%   | | | then return -0.0016658739973424584;  // std dev = 2.018, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.1028861627236598;  // std dev = 2.444, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( phenotype(A, J), interaction(F, A) )
%   | | | then return -0.012863172028304152;  // std dev = 3.890, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.049737699809995484;  // std dev = 6.130, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then return 0.6703312623526898;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.06644548914614189;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.29361858331592255;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '41.495', 'seconds']
Refined model CLL: -0.40123


******************************************
Best model found
******************************************
Results 

CLL : -0.351591 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 40.435 

Total Inference Time : 150.72032976150513 

Total revision time: 202.49047937965395
Best scored revision CLL: -0.350572


Results 

CLL : -0.351591 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 202.6513630447388 

Total Inference Time : 150.72032976150513 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.159
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.479, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20271822348902363;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16020956153969376;  // std dev = 0.470, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15128443975404837;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13060318444724528;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07338179916079145;  // std dev = 0.464, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11483499328347208;  // std dev = 0.482, 250.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06399809813789374;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.035503056379083436;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.676', 'seconds']
Parameter learned model CLL:-0.356958 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.765, 175, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.773, 176, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.75, 173, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.482, 158, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 179, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.887, 192, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22584129388825896, nan], 'true': [nan, 0.22584129388825896], 'true,false': [nan, 0.22584129388825896]}
{'': [nan, 0.22061224489796094]}
{'': [nan, 0.22543996435731792], 'false': [0.22543996435731792, nan]}
{'': [nan, 0.22664293342826625], 'false': [0.22664293342826625, nan]}
{'': [nan, 0.2150030080059216]}
{'': [nan, 0.23257600000000006]}
{'': [0.2242344194659671, nan]}
{'': [0.2190041658401085, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then if ( complex(C, F), interaction(G, C) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.15665639778607898;  // std dev = 0.458, 201.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=60 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( interaction(A, J), complex(J, H) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then return 0.08037115732173453;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A), enzyme(A, C) )
%   then return 0.0379822965809185;  // std dev = 0.418, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.03320549123154841;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12612751691038213;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, E), interaction(D, D) )
%   | | | then return 0.44606269593139547;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2822678728178859;  // std dev = 2.228, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(G, H), location(A, I) )
%   | | | then return 0.14130202900257438;  // std dev = 2.023, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.4571665059000868;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09950435681291118;  // std dev = 3.624, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.18701819365438987;  // std dev = 5.522, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06700006302468732;  // std dev = 4.191, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | | else return 0.1537331055154243;  // std dev = 6.657, 196.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(A, F), location(A, E) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.05866358489767376;  // std dev = 1.922, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.20030552915553343;  // std dev = 2.856, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( enzyme(A, H), complex(D, I) )
%   | | | then return 0.11419423667950189;  // std dev = 2.727, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.05926415111126343;  // std dev = 5.188, 136.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=37 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), enzyme(L, M) )
%   | | | then return 0.05820801258431011;  // std dev = 2.391, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.25438309984546925;  // std dev = 2.594, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.4133594404140594;  // std dev = 1.169, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(A, H), enzyme(A, G) )
%   | | | then return 0.1080973904914309;  // std dev = 1.652, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.0031409640733185756;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.08533012927990935;  // std dev = 4.597, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.16111534175602196;  // std dev = 5.171, 110.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( enzyme(F, H), phenotype(A, I) )
%   | | | then return -0.018814437057988027;  // std dev = 1.969, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.1190519213630954;  // std dev = 6.262, 169.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=62 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06131766663911479;  // std dev = 3.926, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return -0.23154951349742708;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(E, G), interaction(H, E) )
%   | | | then return 0.055231707979254314;  // std dev = 2.046, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.05689803952332397;  // std dev = 2.644, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.20336810782909873;  // std dev = 1.882, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.052467483286249963;  // std dev = 3.318, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.07780534448316462;  // std dev = 1.825, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.21563413163193018;  // std dev = 2.403, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.22636803009142223;  // std dev = 1.574, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.06524883498067566;  // std dev = 4.575, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( interaction(F, D), complex(A, E) )
%   | | | then return 0.05972932429453936;  // std dev = 1.830, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.22206850966430364;  // std dev = 2.749, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.03563959844325405;  // std dev = 1.707, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.1185104131197345;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(K, A), interaction(K, I) )
%   | | | then return 0.23356413919982033;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07104534198560927;  // std dev = 2.199, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.06093373469513336;  // std dev = 1.780, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.030887465204921544;  // std dev = 5.281, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(A, F) )
%   | then if ( phenotype(E, F), location(A, G) )
%   | | then if ( complex(E, H), complex(A, H) )
%   | | | then return 0.17933897028217147;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5065505648951941;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(E, I), interaction(I, E) )
%   | | | then return -0.07218786858266829;  // std dev = 2.364, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.12310008817807429;  // std dev = 1.869, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.11444029542249115;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0451423964063082;  // std dev = 4.389, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.08529476583629575;  // std dev = 2.287, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.053126978969996214;  // std dev = 4.605, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( complex(A, G), complex(E, G) )
%   | | then if ( phenotype(F, H), complex(F, I) )
%   | | | then return -0.0337931501557079;  // std dev = 2.418, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.4869750038314695;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(J, A), phenotype(F, K) )
%   | | | then return -0.15691367594409145;  // std dev = 2.456, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return -0.04798497785776323;  // std dev = 4.110, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( interaction(N, L), interaction(P, N) )
%   | | | then return -0.02840884900165213;  // std dev = 2.567, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.13097084010294996;  // std dev = 3.128, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( complex(A, Q) )
%   | | | then return 0.06202371405206538;  // std dev = 2.507, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.16434674840539748;  // std dev = 2.541, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18', 'minutes', 'and', '32.555', 'seconds']
Refined model CLL: -0.414133


******************************************
Best model found
******************************************
Results 

CLL : -0.356803 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.543 

Total Inference Time : 63.30936026573181 

Total revision time: 112.94791326713562
Best scored revision CLL: -0.356958


Results 

CLL : -0.356803 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 113.10879693222046 

Total Inference Time : 63.30936026573181 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.83
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.463, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19019526714584362;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14273679237019657;  // std dev = 0.462, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12085504590290123;  // std dev = 7.713, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.18620385704386572;  // std dev = 7.227, 219.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06629889601373824;  // std dev = 0.460, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07607591913668837;  // std dev = 0.469, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04275524616861285;  // std dev = 0.462, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.02997783815381841;  // std dev = 7.737, 283.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.971', 'seconds']
Parameter learned model CLL:-0.335712 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.579, 173, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.713, 193, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.227, 133, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.46, 196, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.462, 193, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.737, 197, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22179156542090983, nan], 'true': [nan, 0.22179156542090983], 'true,false': [nan, 0.22179156542090983]}
{'': [nan, 0.21365353760157324]}
{'': [nan, 0.2132295319947096], 'false': [0.2132295319947096, nan]}
{'': [nan, 0.2384854360834844], 'false': [0.2384854360834844, nan]}
{'': [nan, 0.21196116895528538]}
{'': [nan, 0.22006968439619098]}
{'': [0.21322953199470912, nan]}
{'': [0.21153966212588665, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 28.353
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(E, A), location(E, D) )
%   | then if ( phenotype(A, F), interaction(G, E) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(E, H), interaction(E, E) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17064893509951234;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( location(I, D), interaction(A, I) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return 0.06403128804068885;  // std dev = 0.404, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else return 0.17522210583122036;  // std dev = 0.465, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, C) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.16066757255144135;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3185322270511979;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.07194428882493917;  // std dev = 0.426, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   else if ( complex(A, F) )
%   | then if ( interaction(A, G), complex(G, F) )
%   | | then return 0.5848911274618221;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.43545300620524674;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), phenotype(I, H) )
%   | | | then return 0.3494628236570543;  // std dev = 1.951, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.19727027597591199;  // std dev = 3.909, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.20375601929191242;  // std dev = 2.050, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.14356669984798826;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.24194205141611488;  // std dev = 4.584, 85.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=37 */
%   | | | else return 0.09818888470550055;  // std dev = 5.861, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), complex(A, G) )
%   | | then if ( phenotype(A, H), complex(E, G) )
%   | | | then return 0.06585899598451517;  // std dev = 2.099, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.31062533859825203;  // std dev = 2.285, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( complex(E, I), complex(D, I) )
%   | | | then return 0.14742509641357815;  // std dev = 2.728, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.029901570301136663;  // std dev = 4.377, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.32357706827062954;  // std dev = 1.920, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.18330406064282448;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.017948051124786774;  // std dev = 2.425, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.1442239687547922;  // std dev = 2.636, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(A, H), enzyme(G, I) )
%   | | | then return 0.28569841795185813;  // std dev = 2.461, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.08213187710039152;  // std dev = 5.325, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.09072117388473429;  // std dev = 3.134, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.012763737697653875;  // std dev = 3.512, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(A, H), complex(G, I) )
%   | | | then return -0.031911449318563496;  // std dev = 2.825, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.04981705305611082;  // std dev = 4.802, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1434390996748992;  // std dev = 3.783, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.04635689473619447;  // std dev = 3.486, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then if ( complex(A, E), interaction(G, A) )
%   | | | then return 0.1201768691297654;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.023248077448903868;  // std dev = 1.689, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1860866279734213;  // std dev = 2.310, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.4700915097657671;  // std dev = 1.246, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.11532574014795799;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.008013214166752018;  // std dev = 3.586, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.0286087074244869;  // std dev = 5.026, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.23989015265403732;  // std dev = 1.739, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( phenotype(F, E), complex(F, G) )
%   | | | then return 0.1894082232482396;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.044669724296997476;  // std dev = 3.102, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.19343886947471656;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.07204726622995099;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(L, A), phenotype(K, M) )
%   | | | then return 0.2260968946151807;  // std dev = 2.083, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.003440126779690117;  // std dev = 1.929, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return -0.030799882154186282;  // std dev = 3.906, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | | else return 0.0517507366033434;  // std dev = 4.608, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.0022238334866546785;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15093661305360231;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, F) )
%   | | | then return 0.29385368454067856;  // std dev = 1.540, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.12318936700098503;  // std dev = 2.016, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( location(A, M), interaction(K, N) )
%   | | | then return 0.020133430568906055;  // std dev = 3.350, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.16104605422696244;  // std dev = 1.785, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.0469875958911357;  // std dev = 4.809, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | | else return 0.14910618617201354;  // std dev = 2.756, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( phenotype(E, G), interaction(A, H) )
%   | | then if ( interaction(I, E) )
%   | | | then return 0.0984747700912936;  // std dev = 3.618, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | | else return 0.34057980070911636;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.08667270170291294;  // std dev = 1.962, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.06057945300418266;  // std dev = 4.900, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.17452767686909287;  // std dev = 1.758, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.09915135021757891;  // std dev = 2.311, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.10137704053415886;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1922457703526283;  // std dev = 1.401, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '23.399', 'seconds']
Refined model CLL: -0.408863


******************************************
Best model found
******************************************
Results 

CLL : -0.334941 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.353 

Total Inference Time : 53.31137776374817 

Total revision time: 91.01132765579223
Best scored revision CLL: -0.335712


Results 

CLL : -0.334941 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 91.17221132087707 

Total Inference Time : 53.31137776374817 

Starting experiment 24_nell_finances_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.545
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16448696326852572;  // std dev = 7.768, 284.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17153885515289805;  // std dev = 0.472, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15601328085526955;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10012138102860173;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13091230435259582;  // std dev = 0.480, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06576498823081606;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06404601643585695;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05008030959923228;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.893', 'seconds']
Parameter learned model CLL:-0.348709 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.768, 197, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.555, 166, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.731, 191, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 176, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.637, 177, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2124950406665352, nan], 'true': [nan, 0.2124950406665352], 'true,false': [nan, 0.2124950406665352]}
{'': [nan, 0.22264792899408514]}
{'': [nan, 0.22562452155165647], 'false': [0.22562452155165647, nan]}
{'': [nan, 0.2150121629315267], 'false': [0.2150121629315267, nan]}
{'': [nan, 0.2306778464558108]}
{'': [nan, 0.21754703719723062]}
{'': [0.22137084532088047, nan]}
{'': [0.22094524793388196, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.194
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(C, E), complex(A, D) )
%   | then return 0.024815601766178853;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( phenotype(C, F), enzyme(A, G) )
%   | | then return 0.25814893509951237;  // std dev = 0.490, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else return 0.15444523139580785;  // std dev = 0.457, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( location(H, J), location(A, J) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( location(A, M), interaction(A, N) )
%   | | then return 0.14847151574467365;  // std dev = 0.454, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.27920156667845974;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(A, E), interaction(F, C) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.06527724658943121;  // std dev = 0.429, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( phenotype(F, D) )
%   | | | then return 0.1907787339422336;  // std dev = 2.997, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.5022227923137536;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return 0.10578301408948618;  // std dev = 0.448, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   else if ( complex(A, I), interaction(J, A) )
%   | then return 0.4241826909504007;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), phenotype(M, N) )
%   | | | then return 0.2804829244479668;  // std dev = 2.669, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.14386734166203782;  // std dev = 2.186, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.004956025945293578;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.16804002278405988;  // std dev = 2.158, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.19451721498765528;  // std dev = 3.799, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.10948795357045328;  // std dev = 6.603, 203.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=63 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), complex(D, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.12581922777980434;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07820017311027895;  // std dev = 1.593, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.02893688817884544;  // std dev = 1.711, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.16189912935011772;  // std dev = 3.080, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else if ( complex(A, L), phenotype(A, M) )
%   | | then if ( interaction(A, N), interaction(N, A) )
%   | | | then return 0.2868871134504016;  // std dev = 1.407, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08883022289772359;  // std dev = 3.163, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.4640520084206945;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19809984449784118;  // std dev = 4.936, 101.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(F, H), phenotype(A, I) )
%   | | | then return 0.19756986547671987;  // std dev = 3.086, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.05933871493076096;  // std dev = 2.920, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.023482833139970835;  // std dev = 4.059, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | | else return 0.09965903234097412;  // std dev = 4.750, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G), location(G, F) )
%   | | | then return 0.14761950990296618;  // std dev = 3.045, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.05416298476234525;  // std dev = 6.472, 191.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=62 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.0685396437972488;  // std dev = 1.430, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.6083440261355664;  // std dev = 0.962, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, F), interaction(G, D) )
%   | | then if ( enzyme(G, H), interaction(D, G) )
%   | | | then return 0.0957521197289353;  // std dev = 4.981, 105.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.015937664369751695;  // std dev = 4.801, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.4420164443576283;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14881549048523457;  // std dev = 1.426, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.33144675925291256;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0422780456294406;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.44765282375151516;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E) )
%   | | | then return -0.019690320457033898;  // std dev = 4.045, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.18313332251533565;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return -0.00751425527868008;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.1453377713191883;  // std dev = 2.191, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | else if ( location(A, J) )
%   | | then if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.217667324591828;  // std dev = 1.988, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.05118505653337627;  // std dev = 5.098, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return -0.025822663915633905;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.2308284796320058;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), interaction(H, E) )
%   | | then if ( interaction(E, H) )
%   | | | then return -0.06502185323600755;  // std dev = 3.786, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return 0.2356757244999686;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.039406890854423414;  // std dev = 2.496, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.15679387071898637;  // std dev = 3.149, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(J, L), interaction(L, A) )
%   | | | then return 0.43130397476070415;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.34759915366717137;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.1827479949450056;  // std dev = 2.540, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.029605734096686223;  // std dev = 3.488, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( complex(A, G), complex(E, H) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.21523657653715175;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4566434323797277;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.08086681162550402;  // std dev = 2.603, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.0966499625735467;  // std dev = 2.431, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.016058244169744378;  // std dev = 1.420, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.183590665564735;  // std dev = 2.026, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return -0.056167114308707335;  // std dev = 4.155, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | | else return 0.005517884540466873;  // std dev = 4.504, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '5.123', 'seconds']
Refined model CLL: -0.419431


******************************************
Best model found
******************************************
Results 

CLL : -0.348305 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.194 

Total Inference Time : 64.41151118278503 

Total revision time: 104.28381220245362
Best scored revision CLL: -0.348709


Results 

CLL : -0.348305 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 104.59441558265686 

Total Inference Time : 64.41151118278503 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.297
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1841677438769387;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16126356984777654;  // std dev = 0.469, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12777373433267186;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.07602427378038906;  // std dev = 8.619, 364.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10759197090152496;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09266792004625757;  // std dev = 0.472, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08524383321090039;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05750843016294609;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.882', 'seconds']
Parameter learned model CLL:-0.344666 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.372, 215, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.428, 224, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.619, 260, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 198, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.327, 208, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2197305451007773, nan], 'true': [nan, 0.2197305451007773], 'true,false': [nan, 0.2197305451007773]}
{'': [nan, 0.22008623076618372]}
{'': [nan, 0.2165377751338471], 'false': [0.2165377751338471, nan]}
{'': [nan, 0.20408163265305598], 'false': [0.20408163265305598, nan]}
{'': [nan, 0.2211539430587075]}
{'': [nan, 0.22257834389636016]}
{'': [0.2257795710714454, nan]}
{'': [0.22222222222222426, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 51.726
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(C, C) )
%   | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( complex(C, F) )
%   | | then if ( location(A, G), location(C, G) )
%   | | | then return 0.221785298735876;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else return 0.11188027838309446;  // std dev = 0.435, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( interaction(H, L), complex(L, I) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, M), interaction(A, H) )
%   | | | then return 0.14981560176617903;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.22596502705353488;  // std dev = 4.498, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | else return 0.14148226843284567;  // std dev = 0.451, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A), complex(A, C) )
%   then return 0.5064260964952734;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.4439767249017512;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10276719593185729;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( complex(D, I), enzyme(A, J) )
%   | | | then return 0.04733384327628006;  // std dev = 1.765, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.11919259076722385;  // std dev = 2.662, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), enzyme(M, N) )
%   | | | then return 0.19318288406993417;  // std dev = 3.214, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.29237550779063387;  // std dev = 2.336, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( enzyme(A, P), location(A, Q) )
%   | | | then return 0.2032053489397703;  // std dev = 3.351, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.13539789448192222;  // std dev = 4.938, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), complex(A, G) )
%   | | | then return 0.10401239979274017;  // std dev = 5.285, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.19855051319101755;  // std dev = 6.255, 164.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( interaction(A, D), interaction(D, D) )
%   | | | then return 0.1571492507577776;  // std dev = 1.902, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.040511864348948635;  // std dev = 5.964, 184.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=48 */
%   | | else if ( interaction(G, D), interaction(G, G) )
%   | | | then return 0.18905913922390344;  // std dev = 3.059, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.05946411126428364;  // std dev = 4.569, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | else if ( complex(A, H) )
%   | | then return 0.30157966113959367;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.11180151135435364;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.008199632195130292;  // std dev = 3.464, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.07159330408430986;  // std dev = 4.420, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | else if ( interaction(A, I), location(I, J) )
%   | | | then return 0.17309597992705028;  // std dev = 2.013, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.07380818718487614;  // std dev = 6.050, 172.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A), phenotype(A, G) )
%   | | | then return -0.08005448393912329;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.033162374443888656;  // std dev = 3.611, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( location(A, H), phenotype(A, I) )
%   | | | then return 0.10874858124997654;  // std dev = 5.455, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | | else return 0.060447229796645754;  // std dev = 5.030, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( enzyme(D, G), interaction(H, D) )
%   | | | then return 0.21551328446635615;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.025987891828240024;  // std dev = 3.806, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( complex(D, I), interaction(D, D) )
%   | | | then return 0.26820844669899546;  // std dev = 1.944, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.13461466705035838;  // std dev = 4.030, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, J), complex(A, K) )
%   | | | then return -0.06017788597382756;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0823564291123011;  // std dev = 4.176, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.15909728819184626;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.012682715393139673;  // std dev = 3.098, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), complex(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.027542879533329012;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16587174858384698;  // std dev = 2.162, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.05484930903598917;  // std dev = 3.178, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.019633782413279368;  // std dev = 5.127, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return 0.17579736705214455;  // std dev = 1.826, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.0385278723303142;  // std dev = 2.877, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return -0.004909375978708353;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.13147328094523156;  // std dev = 3.784, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(F, G), interaction(F, E) )
%   | | then if ( complex(E, H), complex(A, I) )
%   | | | then return 0.29517648882650904;  // std dev = 1.296, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05558722905166928;  // std dev = 3.035, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else if ( phenotype(E, J), complex(E, K) )
%   | | | then return 0.010176957916250924;  // std dev = 3.788, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return -0.0908765621247874;  // std dev = 2.673, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(M, A), phenotype(L, N) )
%   | | | then return 0.19246750361605963;  // std dev = 2.750, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.018033548102432084;  // std dev = 4.685, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else if ( enzyme(A, P), interaction(Q, A) )
%   | | | then return -0.030042304326352576;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19082655251210384;  // std dev = 2.175, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.07685831301217946;  // std dev = 1.765, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.02034202787283102;  // std dev = 2.523, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( enzyme(E, I) )
%   | | | then return 0.1676559518164145;  // std dev = 2.786, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.013174072480014159;  // std dev = 3.443, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L), phenotype(J, M) )
%   | | | then return 0.03207087112643349;  // std dev = 4.068, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return -0.0709199602353365;  // std dev = 4.697, 118.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=29 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return 0.014507784419735437;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.6822341854911054;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '36.688', 'seconds']
Refined model CLL: -0.381057


******************************************
Best model found
******************************************
Results 

CLL : -0.345709 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 51.726 

Total Inference Time : 183.13748741149902 

Total revision time: 245.8220539073944
Best scored revision CLL: -0.344666


Results 

CLL : -0.345709 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 246.13265728759765 

Total Inference Time : 183.13748741149902 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.138
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19269438964496519;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16397222153207414;  // std dev = 0.471, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16834531510893685;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13818457533112544;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11506892785919344;  // std dev = 0.479, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05255171434977388;  // std dev = 0.465, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07610163190225148;  // std dev = 0.477, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.01721792728394712;  // std dev = 7.981, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.702', 'seconds']
Parameter learned model CLL:-0.354543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.824, 183, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.677, 164, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.694, 166, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 170, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.981, 207, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22262479338843102, nan], 'true': [nan, 0.22262479338843102], 'true,false': [nan, 0.22262479338843102]}
{'': [nan, 0.22141711091558647]}
{'': [nan, 0.23022460937500033], 'false': [0.23022460937500033, nan]}
{'': [nan, 0.2294333273240794], 'false': [0.2294333273240794, nan]}
{'': [nan, 0.22982936910475685]}
{'': [nan, 0.2165992865636138]}
{'': [0.2278422003379748, nan]}
{'': [0.21301775147929125, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 34.018
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), enzyme(E, D) )
%   | then return 0.08314893509951238;  // std dev = 0.418, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(C, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A), location(A, I) )
%   | then return 0.0010060779566550668;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.233148935099511;  // std dev = 4.330, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | | else return 0.18335218713203216;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(D, E), interaction(F, D) )
%   | then return 0.10487888727194283;  // std dev = 0.448, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else return 0.18643651412093531;  // std dev = 0.479, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( enzyme(G, I), complex(A, H) )
%   | | then return 0.328231962309977;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, J) )
%   | | | then return 0.15978604575439562;  // std dev = 2.966, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.32153671951363993;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.38288979477366364;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.19097060285447173;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.5843323032416449;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3343323032416449;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.18997638694877042;  // std dev = 3.600, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.10675401431046982;  // std dev = 7.007, 229.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, D) )
%   | | | then return 0.16771230422151961;  // std dev = 2.218, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.04679765778603572;  // std dev = 3.311, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(A, G), phenotype(G, D) )
%   | | | then return -0.031617493406746085;  // std dev = 1.564, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.047845472030684955;  // std dev = 3.084, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.008081538203669476;  // std dev = 1.975, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.10224840225240009;  // std dev = 2.707, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( location(A, L) )
%   | | | then return 0.11641960095401435;  // std dev = 4.827, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | | else return 0.2941472439053445;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2281375517667551;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.12054778349631763;  // std dev = 7.387, 237.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=85 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.020333780464566763;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.008082163166308852;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H) )
%   | | | then return 0.08837565249307831;  // std dev = 4.515, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.3925929023853781;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return -0.03390739426267184;  // std dev = 1.765, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.0789989192938536;  // std dev = 5.800, 150.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(D, F) )
%   | | then if ( interaction(G, E), phenotype(G, H) )
%   | | | then return 0.06051680707393538;  // std dev = 4.491, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | | else return 0.1418072222724153;  // std dev = 3.682, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | else if ( location(A, I), interaction(D, E) )
%   | | | then return 0.2084317952600816;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4239687291151071;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( interaction(K, K) )
%   | | | then return 0.03990468323312921;  // std dev = 1.844, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.22097143047372905;  // std dev = 1.741, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.12215177391718547;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.015050809086045785;  // std dev = 3.884, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, E) )
%   | | then if ( complex(E, F), interaction(G, A) )
%   | | | then return 0.06795398925256395;  // std dev = 3.200, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return -0.03218290739620891;  // std dev = 2.266, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.13516828040210044;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.020217717008308256;  // std dev = 3.185, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.08139406621459534;  // std dev = 2.640, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.0469530482867999;  // std dev = 2.279, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.08373519820009151;  // std dev = 3.605, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.12391044572798456;  // std dev = 2.823, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(A, G), interaction(H, E) )
%   | | then if ( enzyme(H, I), phenotype(A, J) )
%   | | | then return 0.15738436273433307;  // std dev = 1.659, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.055611032161093595;  // std dev = 2.731, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.01888382068624088;  // std dev = 2.367, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.18235121666629467;  // std dev = 2.774, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | else if ( complex(A, M), phenotype(A, N) )
%   | | then if ( interaction(A, P), complex(P, M) )
%   | | | then return -0.18156262499622747;  // std dev = 1.571, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.0041701262562818635;  // std dev = 2.084, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(A, Q), phenotype(Q, R) )
%   | | | then return 0.08655968945855246;  // std dev = 3.061, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return -0.03261083690018106;  // std dev = 4.606, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( complex(E, G), interaction(H, A) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.06858705479971955;  // std dev = 2.489, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 8.764769292861228E-4;  // std dev = 2.824, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.16736590954695846;  // std dev = 1.466, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -8.768651414256916E-4;  // std dev = 4.043, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( location(A, N), location(L, N) )
%   | | | then return 0.08998327961234746;  // std dev = 2.718, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.06181662297107651;  // std dev = 2.310, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.1807176086368245;  // std dev = 2.825, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.020821329935854147;  // std dev = 2.431, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '25.681', 'seconds']
Refined model CLL: -0.398911


******************************************
Best model found
******************************************
Results 

CLL : -0.354386 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.018 

Total Inference Time : 56.54006600379944 

Total revision time: 101.16833172416688
Best scored revision CLL: -0.354543


Results 

CLL : -0.354386 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 101.47893510437012 

Total Inference Time : 56.54006600379944 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.739
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1851451328181428;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17808433028417925;  // std dev = 0.475, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12068132507286608;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10823291966892593;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11118926614602638;  // std dev = 0.474, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08955603451980844;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09997575266608795;  // std dev = 0.482, 234.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03330910887023945;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.744', 'seconds']
Parameter learned model CLL:-0.35557 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.608, 177, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.688, 189, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.649, 183, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.482, 148, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.642, 182, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22006968439618982, nan], 'true': [nan, 0.22006968439618982], 'true,false': [nan, 0.22006968439618982]}
{'': [nan, 0.2256639999999998]}
{'': [nan, 0.21492892561983432], 'false': [0.21492892561983432, nan]}
{'': [nan, 0.21749284835753974], 'false': [0.21749284835753974, nan]}
{'': [nan, 0.2248047367094987]}
{'': [nan, 0.22437469730818907]}
{'': [0.23244941193659113, nan]}
{'': [0.21792158609935508, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 30.336
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, C) )
%   | then return 0.12481560176617902;  // std dev = 0.442, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( phenotype(C, E), interaction(C, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else return 0.12130682983635441;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then return 0.14981560176617903;  // std dev = 0.455, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.26291083986141606;  // std dev = 4.499, 84.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(F, G), interaction(E, D) )
%   | | then return 0.024471663440534745;  // std dev = 0.391, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( enzyme(A, H), complex(E, I) )
%   | | | then return 0.3324666287285059;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17891897978612445;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.4989780970091056;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20793357923298028;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.713707517432178;  // std dev = 0.335, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( phenotype(A, L), complex(A, M) )
%   | then if ( phenotype(N, L), interaction(N, N) )
%   | | then return 0.48970784293808717;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18956386618824908;  // std dev = 0.482, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.11884749472750779;  // std dev = 0.457, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.10532578051844411;  // std dev = 5.703, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | | else return 0.19589666265444391;  // std dev = 4.872, 98.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=39 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(F, H), complex(A, G) )
%   | | | then return 0.07664783674666609;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.025183127029115706;  // std dev = 2.161, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.2918176545740667;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0371721335898027;  // std dev = 3.212, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | else if ( enzyme(A, K), interaction(A, L) )
%   | | then if ( phenotype(L, M), phenotype(A, N) )
%   | | | then return 0.15268156724268067;  // std dev = 1.563, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.36874932957562745;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(A, P), enzyme(A, Q) )
%   | | | then return 0.17864450167942048;  // std dev = 2.069, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.08031186457371196;  // std dev = 5.707, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, G), complex(F, H) )
%   | | | then return 0.22429867502099152;  // std dev = 2.213, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.070935084305186;  // std dev = 5.654, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.057839197129356534;  // std dev = 3.036, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return 0.12774337032167404;  // std dev = 3.485, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return 0.1922345970272476;  // std dev = 3.718, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | | else return 0.043140813237177736;  // std dev = 3.931, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.09026575289810931;  // std dev = 2.136, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.006742528365279279;  // std dev = 4.824, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E), phenotype(G, H) )
%   | | | then return -0.005192153387380017;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.0959860805830105;  // std dev = 1.778, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( complex(D, I), complex(A, I) )
%   | | | then return 0.35059837006607814;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.01632456138784184;  // std dev = 3.071, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 6.256048506000401E-4;  // std dev = 2.252, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.10179765720742559;  // std dev = 5.452, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( location(A, N) )
%   | | | then return 0.1574597389234174;  // std dev = 1.974, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.7052548196311976;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, G) )
%   | | | then return 0.1613480971738795;  // std dev = 2.567, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.05957637519391781;  // std dev = 2.795, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0019363243055836668;  // std dev = 3.965, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | | else return 0.08177530751066417;  // std dev = 4.824, 99.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
%   | else if ( interaction(A, J) )
%   | | then return -0.08247234475684677;  // std dev = 1.118, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.2821400351047964;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(A, F) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(H, A), phenotype(E, I) )
%   | | | then return 0.010903261097688481;  // std dev = 2.752, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.08841441062634378;  // std dev = 2.298, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else return -0.3335163619326304;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), interaction(A, K) )
%   | | | then return 0.06984334881578254;  // std dev = 2.421, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.011282116313486239;  // std dev = 4.817, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.01197687456029508;  // std dev = 1.873, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1424283771759484;  // std dev = 3.357, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), complex(F, H) )
%   | | then if ( complex(A, H), enzyme(G, I) )
%   | | | then return 0.24378649137740305;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -9.61493756710467E-4;  // std dev = 2.352, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.24545412940085426;  // std dev = 2.363, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.0790774955164237;  // std dev = 3.661, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then if ( phenotype(A, M), complex(L, K) )
%   | | | then return -0.18571150417918403;  // std dev = 1.351, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.007692247048172399;  // std dev = 2.574, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.09896923305698557;  // std dev = 2.021, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.01527112889621507;  // std dev = 3.898, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25', 'minutes', 'and', '45.971', 'seconds']
Refined model CLL: -0.403843


******************************************
Best model found
******************************************
Results 

CLL : -0.354857 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 30.336 

Total Inference Time : 55.22709059715271 

Total revision time: 94.01707572937012
Best scored revision CLL: -0.35557


Results 

CLL : -0.354857 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 94.32767910957337 

Total Inference Time : 55.22709059715271 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.425
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17222835748218304;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17704061801237597;  // std dev = 0.474, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.17110676449344955;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10945347954947192;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10038518603653954;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09395373003905765;  // std dev = 0.477, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06612413468639605;  // std dev = 0.474, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0831531174433007;  // std dev = 7.402, 235.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.706', 'seconds']
Parameter learned model CLL:-0.369115 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.725, 190, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.456, 154, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.651, 179, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 169, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.402, 148, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2154335388184397, nan], 'true': [nan, 0.2154335388184397], 'true,false': [nan, 0.2154335388184397]}
{'': [nan, 0.22477508650519118]}
{'': [nan, 0.23067784645581219], 'false': [0.23067784645581219, nan]}
{'': [nan, 0.2200944089547177], 'false': [0.2200944089547177, nan]}
{'': [nan, 0.22349918875067626]}
{'': [nan, 0.22731891421106257]}
{'': [0.22434997558593806, nan]}
{'': [0.23315527387958426, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 45.419
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, D), interaction(A, A) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(C, E), phenotype(A, F) )
%   | | then if ( phenotype(A, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(C, G), interaction(G, G) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.221785298735876;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( complex(A, J), enzyme(A, K) )
%   | | then return 0.08672036367094095;  // std dev = 0.420, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.1384519654025415;  // std dev = 5.160, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(D, C), complex(D, E) )
%   | then return 0.06403788346559039;  // std dev = 0.431, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | else if ( enzyme(C, F), interaction(C, G) )
%   | | then return 0.296257733629077;  // std dev = 0.498, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0.15375047014769075;  // std dev = 0.467, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( location(H, J), location(I, J) )
%   | | then if ( complex(H, K), complex(A, K) )
%   | | | then return 0.04044569884651243;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2376605279101206;  // std dev = 4.592, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
%   | | else return 0.04818394163662478;  // std dev = 0.425, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return 0.4977027670892153;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.007205816422951206;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.34271752737207156;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), interaction(A, A) )
%   | | | then return -0.04456489627683927;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.13549545296645166;  // std dev = 7.547, 255.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(D, F), enzyme(D, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return 0.06534315953076747;  // std dev = 2.023, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2816954304486257;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(E, I), location(A, J) )
%   | | | then return 0.005199285524261509;  // std dev = 3.179, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.13021015805125094;  // std dev = 1.992, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( location(K, M), location(A, N) )
%   | | | then return 0.1368146611426868;  // std dev = 5.585, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
%   | | | else return 0.5167434025758344;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, P), interaction(Q, A) )
%   | | | then return -0.034453074553364424;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04718331997409013;  // std dev = 2.065, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(F, H), interaction(G, F) )
%   | | | then return 0.12802632181823664;  // std dev = 3.550, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.4207525958500617;  // std dev = 1.790, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.00522641680827232;  // std dev = 2.763, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.060350086746527615;  // std dev = 5.778, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.1269350463052218;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0045376610006877234;  // std dev = 3.283, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.1274494730481443;  // std dev = 6.356, 170.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=65 */
%   | | | else return 0.36807545390417484;  // std dev = 1.190, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), complex(D, G) )
%   | | then if ( complex(F, H), complex(A, I) )
%   | | | then return -0.1547578040826183;  // std dev = 1.322, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.036896897647335815;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.051369015312673925;  // std dev = 1.620, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.0309282141618484;  // std dev = 2.669, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( interaction(L, A), location(L, M) )
%   | | then if ( phenotype(L, N), enzyme(A, P) )
%   | | | then return 0.11834966050593944;  // std dev = 3.137, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.036373398736817206;  // std dev = 5.737, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
%   | | else if ( interaction(Q, A), phenotype(Q, R) )
%   | | | then return -0.18849835541300997;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.009655163390332113;  // std dev = 1.663, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then if ( location(E, D), interaction(A, H) )
%   | | | then return 0.024491545802408976;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16062789835270752;  // std dev = 2.953, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( interaction(I, E), interaction(I, I) )
%   | | | then return 0.08184997625085969;  // std dev = 4.649, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return 0.012732268063996105;  // std dev = 4.259, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return -0.19726106389822787;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.1353943824537231;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.02307192832777441;  // std dev = 2.065, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(A, F) )
%   | then if ( enzyme(E, G) )
%   | | then if ( enzyme(A, H), phenotype(E, I) )
%   | | | then return 0.2235251415263112;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0050493507497829295;  // std dev = 2.209, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.03702205926206209;  // std dev = 1.463, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.20221844830175298;  // std dev = 3.098, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( interaction(A, N), phenotype(N, M) )
%   | | | then return 0.17037769130524757;  // std dev = 1.928, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.023419053600305002;  // std dev = 3.834, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | else if ( interaction(A, P), interaction(P, Q) )
%   | | | then return -0.010177688455786468;  // std dev = 2.037, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.09470539532494095;  // std dev = 3.659, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(A, F), location(E, G) )
%   | | then if ( interaction(H, A), complex(E, I) )
%   | | | then return 0.006593470714734085;  // std dev = 2.618, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.09050051665654082;  // std dev = 3.254, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( location(A, J), location(F, J) )
%   | | | then return 0.049153912489875155;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2072344127954866;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.16960174303033274;  // std dev = 2.017, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.027207033555780018;  // std dev = 5.623, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.17480116171188947;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.062450797574733485;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '817', 'milliseconds']
Refined model CLL: -0.402222


******************************************
Best model found
******************************************
Results 

CLL : -0.368742 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.419 

Total Inference Time : 69.1478853225708 

Total revision time: 122.29035701179504
Best scored revision CLL: -0.369115


Results 

CLL : -0.368742 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 122.46288480186462 

Total Inference Time : 69.1478853225708 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.161
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20950028645086022;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15876210742466226;  // std dev = 0.470, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13421593571468002;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1241798037489128;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10031812182246486;  // std dev = 0.473, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07017152306891969;  // std dev = 0.468, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07713393992441579;  // std dev = 0.476, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04019334983663786;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.666', 'seconds']
Parameter learned model CLL:-0.350967 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.213, 192, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.366, 214, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.293, 203, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 197, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.385, 217, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22790357925493288, nan], 'true': [nan, 0.22790357925493288], 'true,false': [nan, 0.22790357925493288]}
{'': [nan, 0.22044203843207086]}
{'': [nan, 0.22008623076618564], 'false': [0.22008623076618564, nan]}
{'': [nan, 0.2240023766830428], 'false': [0.2240023766830428, nan]}
{'': [nan, 0.2232904975859058]}
{'': [nan, 0.21937499999999793]}
{'': [0.22613436937782078, nan]}
{'': [0.21901961355188576, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 50.816
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then if ( phenotype(A, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, C), enzyme(F, G) )
%   | | then return 0.1522665821583356;  // std dev = 0.456, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.21880467280442972;  // std dev = 3.750, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.039967116917694;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.19905802600860323;  // std dev = 0.474, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( phenotype(C, E), location(C, D) )
%   | then if ( complex(C, F), enzyme(C, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.13858448001852328;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2581013505492308;  // std dev = 2.151, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(C, C), phenotype(A, I) )
%   | | | then return 0.2341777547703303;  // std dev = 2.020, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.1307115511137079;  // std dev = 6.028, 173.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=52 */
%   | else if ( phenotype(A, J), complex(C, K) )
%   | | then if ( phenotype(C, L) )
%   | | | then return 0.20802734620101462;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.8321499978189122;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, C), interaction(C, M) )
%   | | | then return 0.2665135296983319;  // std dev = 2.375, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.15590517928397762;  // std dev = 2.028, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   else return 0.08458906386456296;  // std dev = 0.432, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.18837381555329968;  // std dev = 5.043, 108.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=41 */
%   | | | else return 0.13726598748741084;  // std dev = 6.481, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, D), enzyme(A, E) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.4286770101659169;  // std dev = 1.401, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.049164038850165626;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, D), complex(A, I) )
%   | | | then return 0.16010156429908043;  // std dev = 4.712, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
%   | | | else return 0.09379419248019798;  // std dev = 6.202, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.1988443159895746;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4037153886779664;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.04961475324711057;  // std dev = 3.061, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.04019467431685564;  // std dev = 3.693, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.12113085798617439;  // std dev = 6.289, 171.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=62 */
%   | | | else return 0.016125897897512297;  // std dev = 2.811, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( enzyme(F, H), interaction(A, A) )
%   | | | then return -0.18106298990621975;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.03071611446726664;  // std dev = 4.320, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10307860726874185;  // std dev = 6.590, 189.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=68 */
%   | | | else return 0.01862019713213408;  // std dev = 2.273, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F), enzyme(E, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.0813015846773225;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07948472341000525;  // std dev = 1.984, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(I, A), interaction(E, I) )
%   | | | then return 0.1057700437198445;  // std dev = 2.901, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.005790948685311607;  // std dev = 2.408, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( enzyme(J, L), interaction(K, K) )
%   | | | then return -0.08584527140281208;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.20962028321048046;  // std dev = 3.066, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return 0.10412356220890205;  // std dev = 3.423, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.04165724861432546;  // std dev = 4.879, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F), location(A, G) )
%   | | then if ( location(D, G), interaction(H, A) )
%   | | | then return 0.028885278535582426;  // std dev = 2.176, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2958544356331561;  // std dev = 1.297, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(A, E), interaction(D, I) )
%   | | | then return 0.0214354865941401;  // std dev = 3.082, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return -0.047552638481652997;  // std dev = 3.673, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(A, L), interaction(M, J) )
%   | | | then return 0.0810110698209544;  // std dev = 2.493, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 4.4972745466759105E-5;  // std dev = 3.130, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.03834042986760632;  // std dev = 3.564, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.20526377198358334;  // std dev = 3.039, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(A, E), phenotype(F, G) )
%   | | | then return -0.010037410847992251;  // std dev = 2.875, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.36039331340670006;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(E, H), phenotype(E, I) )
%   | | | then return -0.1701195174357224;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.10888045948360878;  // std dev = 2.290, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.05058157367776581;  // std dev = 2.142, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.06162647400973759;  // std dev = 6.597, 190.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=68 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.046717207062681475;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4734213454350884;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(F, F), phenotype(F, G) )
%   | | then if ( interaction(E, F), enzyme(E, H) )
%   | | | then return -0.094626953933171;  // std dev = 1.776, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.06666004042570438;  // std dev = 2.185, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( enzyme(F, I), phenotype(F, J) )
%   | | | then return 0.21206688754010972;  // std dev = 2.463, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.08712443378515879;  // std dev = 3.635, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), interaction(L, M) )
%   | | | then return 0.1428110164414906;  // std dev = 1.953, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.0036682410274734042;  // std dev = 2.351, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( location(A, N), enzyme(A, P) )
%   | | | then return -0.085213571687069;  // std dev = 3.003, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.013054317812457729;  // std dev = 4.581, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '1.742', 'seconds']
Refined model CLL: -0.40453


******************************************
Best model found
******************************************
Results 

CLL : -0.351984 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 50.816 

Total Inference Time : 169.7392063140869 

Total revision time: 231.5278234500885
Best scored revision CLL: -0.350967


Results 

CLL : -0.351984 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 231.70035124015808 

Total Inference Time : 169.7392063140869 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.757
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2291166770349941;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13872030729157275;  // std dev = 0.463, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.153102776606201;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09415417264026592;  // std dev = 7.957, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08977244262937314;  // std dev = 0.468, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09135461820666828;  // std dev = 0.474, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05124537158827612;  // std dev = 0.466, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06110782155532501;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.867', 'seconds']
Parameter learned model CLL:-0.350105 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.607, 156, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.463, 204, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.758, 174, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.957, 203, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.466, 196, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.23335067637877363, nan], 'true': [nan, 0.23335067637877363], 'true,false': [nan, 0.23335067637877363]}
{'': [nan, 0.21420745069393896]}
{'': [nan, 0.22624229747300664], 'false': [0.22624229747300664, nan]}
{'': [nan, 0.21460499856362933], 'false': [0.21460499856362933, nan]}
{'': [nan, 0.2190041658401093]}
{'': [nan, 0.22503834938710154]}
{'': [0.2173996913580234, nan]}
{'': [0.22423441946596342, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 33.609
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(E, A), interaction(D, F) )
%   | then if ( phenotype(E, G), enzyme(D, H) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14075763075168626;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( phenotype(D, I), phenotype(A, I) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(D, J) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( location(A, K) )
%   | then if ( interaction(A, L), complex(L, M) )
%   | | then return 0.09219148829100172;  // std dev = 0.423, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16061807090198083;  // std dev = 5.846, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( interaction(E, A) )
%   | then return 0.13463736956431271;  // std dev = 0.458, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else return -0.02145418095117123;  // std dev = 0.425, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.17988515537136826;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.34655182203803486;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.573095977324257;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.5041174855295457;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21984694272193953;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.17311774275394462;  // std dev = 2.940, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.114418506845814;  // std dev = 4.495, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.08235534037196389;  // std dev = 3.402, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.1377610542639969;  // std dev = 7.125, 229.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=76 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.015634318815514633;  // std dev = 2.445, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.18253210582420235;  // std dev = 1.536, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3502428995444827;  // std dev = 2.271, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.16838178576573504;  // std dev = 3.512, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), complex(K, L) )
%   | | | then return 0.10834539098888009;  // std dev = 2.184, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.019556733426602194;  // std dev = 2.272, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.2416923038050358;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11872428085211659;  // std dev = 4.513, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.06529089770331666;  // std dev = 4.002, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return -0.025278908803085195;  // std dev = 3.501, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.3940363646004893;  // std dev = 1.343, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.11934848656115396;  // std dev = 5.578, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( interaction(H, F), complex(A, I) )
%   | | | then return 0.022479737168850485;  // std dev = 4.656, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | | else return 0.08875682745056063;  // std dev = 4.889, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.24705989988028743;  // std dev = 2.454, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.08483451577736435;  // std dev = 2.895, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), interaction(D, D) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.03022610230402304;  // std dev = 2.369, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.38012643134460944;  // std dev = 1.390, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(D, I) )
%   | | | then return -0.06405617065336237;  // std dev = 3.614, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return 0.08129212326069572;  // std dev = 1.923, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( enzyme(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.12401604451773067;  // std dev = 2.586, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.2762039365789602;  // std dev = 1.928, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.16381327044360477;  // std dev = 1.854, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.06248745447875658;  // std dev = 4.470, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, G) )
%   | | | then return 0.07827784101871865;  // std dev = 2.366, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.48468329222325923;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( phenotype(A, I), interaction(J, E) )
%   | | | then return 0.17881198184325317;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.004497677925630566;  // std dev = 2.782, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.03704676903309665;  // std dev = 3.057, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.022383263936204267;  // std dev = 5.650, 149.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=46 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.03561725431055296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16093449617308292;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, A), interaction(E, E) )
%   | | then if ( enzyme(E, H), interaction(I, G) )
%   | | | then return 0.15611770635681335;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0034106411169713136;  // std dev = 2.368, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(J, A), phenotype(E, K) )
%   | | | then return -0.12393741094322923;  // std dev = 2.571, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return -0.003887383130648952;  // std dev = 3.651, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | else if ( enzyme(A, L) )
%   | | then if ( interaction(M, A), location(M, N) )
%   | | | then return -0.008191949190926823;  // std dev = 3.527, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return -0.18935677962308295;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.007479692046017505;  // std dev = 3.141, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.11337526828000076;  // std dev = 3.627, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.10871869216344505;  // std dev = 2.065, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.11265312656210386;  // std dev = 3.198, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( interaction(A, I), interaction(E, I) )
%   | | | then return 0.3412540517974099;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.039323840919152905;  // std dev = 3.159, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.14729148853474994;  // std dev = 1.600, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.021661266348178897;  // std dev = 2.993, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.058866385630174274;  // std dev = 2.643, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.2137629412150268;  // std dev = 3.588, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14', 'minutes', 'and', '14.197', 'seconds']
Refined model CLL: -0.405575


******************************************
Best model found
******************************************
Results 

CLL : -0.349945 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.609 

Total Inference Time : 51.399463176727295 

Total revision time: 96.47294813728332
Best scored revision CLL: -0.350105


Results 

CLL : -0.349945 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 96.6454759273529 

Total Inference Time : 51.399463176727295 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.079
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20353046120392915;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1797025135870018;  // std dev = 0.476, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15160528113674146;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1225428754555291;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08515633962059051;  // std dev = 0.469, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05267464683319776;  // std dev = 0.463, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06793639135158008;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05571813669039723;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.247', 'seconds']
Parameter learned model CLL:-0.353481 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.503, 163, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.495, 162, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.519, 165, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.463, 191, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 170, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.55, 169, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22609312753020194, nan], 'true': [nan, 0.22609312753020194], 'true,false': [nan, 0.22609312753020194]}
{'': [nan, 0.2269501221131317]}
{'': [nan, 0.22652185223725016], 'false': [0.22652185223725016, nan]}
{'': [nan, 0.22523452008698072], 'false': [0.22523452008698072, nan]}
{'': [nan, 0.22006968439619054]}
{'': [nan, 0.21407811909447522]}
{'': [0.2230834960937487, nan]}
{'': [0.22351403306420425, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 26.189
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E) )
%   | then return 0.17633075328132994;  // std dev = 0.466, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
%   | else return 0.08228686613399513;  // std dev = 0.417, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   else if ( enzyme(A, F) )
%   | then if ( interaction(A, G), interaction(H, A) )
%   | | then return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(I, F), interaction(J, I) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( phenotype(L, M) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), phenotype(A, F) )
%   | then return 0.26387197090638087;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.09612442160609355;  // std dev = 0.440, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   else if ( phenotype(A, G) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), interaction(J, J) )
%   | | | then return 0.3805656051491969;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.12501156522180004;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.178868043220826;  // std dev = 3.624, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.09778079957822339;  // std dev = 2.687, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return 0.11486426777814379;  // std dev = 0.444, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.21826862804486274;  // std dev = 2.832, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.30767171786535863;  // std dev = 2.057, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.05676471667437242;  // std dev = 4.056, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | | else return 0.17000908092773687;  // std dev = 6.378, 177.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(D, F) )
%   | | then if ( phenotype(D, G), location(A, H) )
%   | | | then return 0.1308952178348955;  // std dev = 5.249, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | | else return 0.228727364353514;  // std dev = 2.620, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else return -0.01843802344839903;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.13620614451913346;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3715805289445665;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.03571706376021888;  // std dev = 2.432, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.09890103832843161;  // std dev = 3.474, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.14305253641467608;  // std dev = 2.727, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.07781032767891498;  // std dev = 5.554, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.12455275498565521;  // std dev = 3.364, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.2706159721226446;  // std dev = 2.290, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.021950827671642827;  // std dev = 3.735, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.0570576692839653;  // std dev = 4.845, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.05050832466840882;  // std dev = 3.229, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.12618952322756133;  // std dev = 3.312, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), location(F, E) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.06266959192864041;  // std dev = 3.163, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.1839843370863103;  // std dev = 1.781, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.11191551969855584;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3326090219169925;  // std dev = 1.390, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K), complex(I, L) )
%   | | | then return 0.4052508664648797;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06804571819651375;  // std dev = 4.013, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.04370591379533031;  // std dev = 2.317, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.003526558021366769;  // std dev = 4.241, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( phenotype(D, H) )
%   | | | then return -0.004362173479154119;  // std dev = 2.381, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.2037904784042491;  // std dev = 1.234, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, I), interaction(I, J) )
%   | | | then return -0.05262028594180731;  // std dev = 3.367, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return 0.0706852818614733;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), enzyme(M, N) )
%   | | | then return 0.04488079299395072;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.03134517199779522;  // std dev = 1.940, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.21161965389640983;  // std dev = 2.124, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.06345064715904498;  // std dev = 4.837, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(G, A), complex(A, H) )
%   | | then if ( enzyme(G, E) )
%   | | | then return -0.13652097969375823;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1212485747501405;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(F, F) )
%   | | | then return -0.0036004239853772396;  // std dev = 1.659, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.12771279551998566;  // std dev = 2.194, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(I, K) )
%   | | | then return -0.004854069267771194;  // std dev = 4.288, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | | else return 0.07971838336079114;  // std dev = 3.456, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.0649517094764296;  // std dev = 2.556, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.2605700417187215;  // std dev = 2.661, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( enzyme(A, G), enzyme(E, H) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.15307480017472094;  // std dev = 1.249, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.18537536016747588;  // std dev = 1.313, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(A, I), phenotype(E, J) )
%   | | | then return 0.021870982734239614;  // std dev = 3.148, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.16020048212466798;  // std dev = 3.728, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( complex(A, M), interaction(N, K) )
%   | | | then return 0.3151397821479696;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09018783269334243;  // std dev = 1.842, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(A, P), enzyme(A, Q) )
%   | | | then return -0.1964277319573018;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0032156430319777046;  // std dev = 4.584, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '29.812', 'seconds']
Refined model CLL: -0.409671


******************************************
Best model found
******************************************
Results 

CLL : -0.352761 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.189 

Total Inference Time : 41.576666831970215 

Total revision time: 76.38591372299194
Best scored revision CLL: -0.353481


Results 

CLL : -0.352761 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 76.55844151306152 

Total Inference Time : 41.576666831970215 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.564
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18521660427244377;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16487291836812734;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14331798931435938;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11036247155276162;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11037313060795403;  // std dev = 0.475, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06982296585983568;  // std dev = 0.467, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04941672686385847;  // std dev = 0.465, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.040808355770844504;  // std dev = 7.712, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.255', 'seconds']
Parameter learned model CLL:-0.340675 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.651, 179, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.616, 174, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.672, 182, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.465, 189, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.712, 188, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22009440895471846, nan], 'true': [nan, 0.22009440895471846], 'true,false': [nan, 0.22009440895471846]}
{'': [nan, 0.22137084532088125]}
{'': [nan, 0.222222222222221], 'false': [0.222222222222221, nan]}
{'': [nan, 0.21881952985724284], 'false': [0.21881952985724284, nan]}
{'': [nan, 0.2251999503999028]}
{'': [nan, 0.21839506172839454]}
{'': [0.2158553875236285, nan]}
{'': [0.21627768595041524, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 50.985
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(A, E), complex(C, F) )
%   | then if ( phenotype(A, G), phenotype(C, G) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, C), interaction(H, H) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( enzyme(C, I), complex(A, J) )
%   | | then if ( location(K, D), enzyme(K, I) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.16201633841442947;  // std dev = 0.460, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
%   else if ( interaction(L, A), interaction(M, L) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, N) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(D, E), enzyme(D, F) )
%   | then return 0.093965750507273;  // std dev = 0.453, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( phenotype(D, C), enzyme(D, G) )
%   | | then return 0.8239897264929227;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), interaction(D, D) )
%   | | | then return 0.30276191276802555;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.16905324615742826;  // std dev = 3.992, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   else if ( interaction(I, A), location(I, J) )
%   | then if ( location(A, J), interaction(A, A) )
%   | | then return 0.5039270538214834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12729239631208555;  // std dev = 0.458, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.11496227290862866;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.3132074757569032;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.46683942210180246;  // std dev = 0.840, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(A, G) )
%   | | | then return 0.11267329306568602;  // std dev = 4.546, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | | else return 0.17734142576066095;  // std dev = 5.926, 150.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(D, A), location(D, E) )
%   | | | then return 0.008616406003067387;  // std dev = 3.479, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | | else return 0.07838756966243879;  // std dev = 4.059, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else if ( enzyme(D, F) )
%   | | | then return 0.048238213179073786;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10188859237709268;  // std dev = 1.302, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(A, I), interaction(G, G) )
%   | | | then return -0.08302313109745753;  // std dev = 1.572, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2416177891198765;  // std dev = 3.306, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11232208520645101;  // std dev = 3.487, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.010515007925230274;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, H), phenotype(A, H) )
%   | | | then return 0.0019670132578776295;  // std dev = 3.645, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.09093465158825526;  // std dev = 6.373, 182.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=60 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.13698032584834116;  // std dev = 1.671, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.5475094377596175;  // std dev = 0.847, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( interaction(H, F), location(H, G) )
%   | | | then return 0.0784309145272531;  // std dev = 6.861, 209.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=71 */
%   | | | else return 0.19351871582276817;  // std dev = 2.259, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.016315951219867026;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10091310370381737;  // std dev = 1.967, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(D, F), interaction(D, D) )
%   | | then if ( phenotype(A, G), complex(D, H) )
%   | | | then return 0.06100376538268063;  // std dev = 2.830, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.28327251080722576;  // std dev = 1.665, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( location(D, E), phenotype(D, I) )
%   | | | then return -0.008496666221583503;  // std dev = 4.087, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.07241552697865751;  // std dev = 4.959, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return -0.21019350834760825;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, L) )
%   | | | then return -0.09402783409757205;  // std dev = 1.937, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.0067083299653466905;  // std dev = 1.383, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.06465475501897854;  // std dev = 2.531, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.04254609054687913;  // std dev = 2.971, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.12254752065059317;  // std dev = 3.368, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.040442220090307554;  // std dev = 5.343, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then return -0.2176049741123893;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -3.435943814095288E-4;  // std dev = 1.123, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01991616128377997;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), location(E, H) )
%   | | then if ( complex(E, I) )
%   | | | then return 0.031388647973012294;  // std dev = 5.092, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | | | else return -0.044776240007825686;  // std dev = 3.261, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else return 0.30348032547696435;  // std dev = 1.124, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L), interaction(K, K) )
%   | | | then return 0.3822549346938459;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16625452379609507;  // std dev = 3.182, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.16659183252102117;  // std dev = 1.396, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0622249617530742;  // std dev = 1.717, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( enzyme(F, I), complex(H, E) )
%   | | | then return -0.09879264275480222;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0360532005861904;  // std dev = 2.825, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( interaction(F, J), complex(J, E) )
%   | | | then return 0.10347720001592071;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.36244745595110217;  // std dev = 1.271, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(A, L), phenotype(A, M) )
%   | | | then return -0.08624410167976343;  // std dev = 2.630, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.015523638145301917;  // std dev = 6.043, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.23729959235837628;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0013836623762856954;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '51.290', 'seconds']
Refined model CLL: -0.402597


******************************************
Best model found
******************************************
Results 

CLL : -0.340257 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 50.985 

Total Inference Time : 89.15899682044983 

Total revision time: 148.08005783462525
Best scored revision CLL: -0.340675


Results 

CLL : -0.340257 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 148.19725224876404 

Total Inference Time : 89.15899682044983 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.265
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18519296025674195;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15806525039190825;  // std dev = 0.468, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13301525821020652;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10591045855154721;  // std dev = 8.434, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11378425358730257;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09312004769786093;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04645155848450455;  // std dev = 0.464, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03821332051853629;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.749', 'seconds']
Parameter learned model CLL:-0.339503 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.366, 214, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.397, 219, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.434, 225, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.464, 228, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.445, 227, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22008623076619002, nan], 'true': [nan, 0.22008623076619002], 'true,false': [nan, 0.22008623076619002]}
{'': [nan, 0.21901961355188854]}
{'': [nan, 0.21830938665184277], 'false': [0.21830938665184277, nan]}
{'': [nan, 0.21618425550392562], 'false': [0.21618425550392562, nan]}
{'': [nan, 0.2250692520775619]}
{'': [nan, 0.22506925207756007]}
{'': [0.21512556249092887, nan]}
{'': [0.2154781354679108, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 49.686
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(C, D) )
%   | then if ( complex(C, E), enzyme(C, F) )
%   | | then if ( interaction(C, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.3025933795439568;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( interaction(C, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( phenotype(A, H), enzyme(A, I) )
%   | then if ( interaction(J, A), complex(J, K) )
%   | | then return 0.2391013160518933;  // std dev = 0.486, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1473646213740215;  // std dev = 0.453, 204.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=59 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.07506268194565374;  // std dev = 0.437, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F), complex(A, G) )
%   | | then if ( interaction(H, A), complex(H, G) )
%   | | | then return 0.410376931700873;  // std dev = 1.111, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5059135780103071;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(J, D) )
%   | | | then return 0.27139660124644044;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.1520766633175493;  // std dev = 2.747, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.13352787974894356;  // std dev = 2.624, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.5692800482241245;  // std dev = 1.198, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(P, A), location(A, Q) )
%   | | | then return 0.15108403762995035;  // std dev = 4.362, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.07316445562835742;  // std dev = 2.137, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.09743280760346229;  // std dev = 6.609, 207.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=63 */
%   | | | else return 0.17350454878147198;  // std dev = 5.105, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( phenotype(E, D), interaction(E, G) )
%   | | | then return 0.6019091456347602;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08316573023717676;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( enzyme(E, H), phenotype(E, D) )
%   | | | then return -0.05884282481671693;  // std dev = 1.739, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.07254080588168837;  // std dev = 3.982, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, J), complex(J, I) )
%   | | | then return 0.46039641375044965;  // std dev = 1.404, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.17963073406379554;  // std dev = 2.974, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1806045065255045;  // std dev = 2.796, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.10298658248536739;  // std dev = 4.918, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.06030187738171593;  // std dev = 4.729, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | | else return 0.11176771335622353;  // std dev = 5.927, 154.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=54 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.12412151623727237;  // std dev = 1.534, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.0064948512289528075;  // std dev = 3.338, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(F, H), complex(F, I) )
%   | | | then return -0.028220192872720044;  // std dev = 2.769, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.08775178125754295;  // std dev = 4.685, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.36133503535070416;  // std dev = 1.189, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10574157481863192;  // std dev = 5.974, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(A, G), complex(E, H) )
%   | | | then return -0.09459605892838786;  // std dev = 2.360, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.02873188896591869;  // std dev = 4.625, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.10163229227680726;  // std dev = 5.199, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
%   | | | else return -0.02553670287095825;  // std dev = 3.432, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.4832658423494949;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.22975541303594296;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06567939558879753;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), phenotype(F, D) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.10546056219599172;  // std dev = 2.871, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return -0.04231556148214779;  // std dev = 2.307, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( complex(H, E), interaction(H, I) )
%   | | | then return 0.13433954669509732;  // std dev = 1.639, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.3976040340638844;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.04298603101938831;  // std dev = 3.060, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.0402812517409405;  // std dev = 6.031, 166.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=54 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return -0.12388594486838568;  // std dev = 1.506, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.022396370303951845;  // std dev = 2.228, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( phenotype(F, G), enzyme(F, H) )
%   | | then if ( interaction(F, I), interaction(A, I) )
%   | | | then return -0.04859324096701572;  // std dev = 1.932, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.1949557973487633;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(F, J), phenotype(A, J) )
%   | | | then return 0.3885685112235517;  // std dev = 0.842, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.01639978996764331;  // std dev = 1.833, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), interaction(M, A) )
%   | | | then return 0.04967698546550087;  // std dev = 4.942, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
%   | | | else return 0.13465864960943716;  // std dev = 4.652, 87.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=38 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.17258628443978738;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.03534201379425611;  // std dev = 3.048, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E), complex(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(G, H), location(G, E) )
%   | | | then return 0.02686111105806014;  // std dev = 2.606, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.437719920159015;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.09200340510150921;  // std dev = 4.235, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return 0.09283289702437152;  // std dev = 1.506, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(A, L), location(L, K) )
%   | | | then return -0.006297633186743215;  // std dev = 3.567, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.06854702435867129;  // std dev = 4.907, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.37686356338819105;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08704701080723302;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '22.363', 'seconds']
Refined model CLL: -0.401133


******************************************
Best model found
******************************************
Results 

CLL : -0.340567 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 49.686 

Total Inference Time : 224.60788559913635 

Total revision time: 286.4945316562653
Best scored revision CLL: -0.339503


Results 

CLL : -0.340567 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 286.6117260704041 

Total Inference Time : 224.60788559913635 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.387
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18323727432212558;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2113973664274763;  // std dev = 0.485, 244.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14126920395890863;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10713256735258;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11192558338312267;  // std dev = 0.477, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07436637662390524;  // std dev = 0.472, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04693166891874551;  // std dev = 0.467, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05279987185903922;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.616', 'seconds']
Parameter learned model CLL:-0.355957 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.88, 191, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.485, 152, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.803, 180, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.866, 189, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.467, 194, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.81, 181, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21940591092409814, nan], 'true': [nan, 0.21940591092409814], 'true,false': [nan, 0.21940591092409814]}
{'': [nan, 0.23488309594195084]}
{'': [nan, 0.22383217993079613], 'false': [0.22383217993079613, nan]}
{'': [nan, 0.2202099770772894], 'false': [0.2202099770772894, nan]}
{'': [nan, 0.22784220033797445]}
{'': [nan, 0.2226247933884281]}
{'': [0.2182013790405378, nan]}
{'': [0.22342980584738936, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 36.091
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, C), enzyme(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( enzyme(C, J) )
%   | | then if ( interaction(K, A), phenotype(K, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, D), interaction(C, L) )
%   | | | then return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.37666745361803083;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else if ( enzyme(A, M), phenotype(A, N) )
%   | then return 0.24945328292559932;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.15332965799107762;  // std dev = 0.456, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(E, A), location(E, F) )
%   | then if ( complex(E, G), interaction(D, H) )
%   | | then return 0.09724118504040107;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( phenotype(E, I) )
%   | | | then return 0.19849910969397166;  // std dev = 1.755, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.4796849617345568;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.053365097413835036;  // std dev = 0.418, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   else if ( interaction(J, A), interaction(A, J) )
%   | then return 0.06144514122310577;  // std dev = 0.430, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), phenotype(M, N) )
%   | | | then return 0.19318845380589744;  // std dev = 3.286, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.10653006769743285;  // std dev = 2.700, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(P, A), enzyme(A, Q) )
%   | | | then return 0.28360787993140696;  // std dev = 2.219, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.20355082615254938;  // std dev = 4.124, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.07658006918959406;  // std dev = 5.259, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return 0.14945281481286013;  // std dev = 5.931, 155.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(F, F), location(G, H) )
%   | | | then return 0.15014671757908704;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.027047719751381975;  // std dev = 2.019, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.016805223451056957;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13933255634419298;  // std dev = 2.417, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.44755158778871884;  // std dev = 1.390, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.10712502161030363;  // std dev = 6.628, 199.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=65 */
%   | | else return 0.28670837624802487;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.14023946593597036;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06576710841416679;  // std dev = 1.541, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.14429222107623454;  // std dev = 4.546, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | | else return 0.09973441349303444;  // std dev = 5.945, 157.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.058540205161810945;  // std dev = 3.403, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return -0.06261722374684073;  // std dev = 3.596, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.19070172344983144;  // std dev = 2.223, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.09209166169512878;  // std dev = 5.673, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(D, G) )
%   | | then if ( interaction(D, D), enzyme(A, E) )
%   | | | then return 0.3876407938924615;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04106451975616407;  // std dev = 1.972, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( phenotype(A, H), interaction(D, D) )
%   | | | then return -0.01320586778991188;  // std dev = 1.524, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.1043555469413645;  // std dev = 2.013, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), enzyme(A, J) )
%   | | | then return 0.021578375600926042;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.35671101784408077;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.1337885223634985;  // std dev = 2.475, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.03541029100175633;  // std dev = 6.434, 193.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=60 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(H, D), complex(H, G) )
%   | | | then return -0.17217959921906578;  // std dev = 1.824, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.005510298577206184;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( enzyme(A, I), location(D, J) )
%   | | | then return 0.1131921485049401;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.048760942771055096;  // std dev = 3.477, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return 0.564432250160126;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.09922029892685998;  // std dev = 2.111, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.0991584349781122;  // std dev = 5.149, 112.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(A, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(A, E), phenotype(E, I) )
%   | | | then return 0.34751560680087623;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09457946156469828;  // std dev = 3.278, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(J, E), location(J, K) )
%   | | | then return 0.0067626199962923066;  // std dev = 3.512, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.4508573400289342;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, L), location(A, M) )
%   | | then if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.6914346387512107;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11997530681081202;  // std dev = 3.828, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | else if ( interaction(Q, A), phenotype(Q, R) )
%   | | | then return 0.07780961829258694;  // std dev = 2.878, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return -0.03065812497119969;  // std dev = 3.045, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), interaction(G, H) )
%   | | then if ( interaction(G, G), complex(H, F) )
%   | | | then return -0.10424132859156984;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09661294565858113;  // std dev = 3.201, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.04897341684896095;  // std dev = 1.536, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.16606672943083714;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.09832275117606405;  // std dev = 2.653, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.023356904866346354;  // std dev = 6.272, 190.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=55 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11315426361470593;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.15146369007302116;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '25.834', 'seconds']
Refined model CLL: -0.395434


******************************************
Best model found
******************************************
Results 

CLL : -0.355801 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 36.091 

Total Inference Time : 63.320232629776 

Total revision time: 110.61983831214906
Best scored revision CLL: -0.355957


Results 

CLL : -0.355801 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 110.73703272628785 

Total Inference Time : 63.320232629776 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.72
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284488;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19153882456488114;  // std dev = 0.480, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15588477557202815;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12598859245847818;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07529839560006843;  // std dev = 0.466, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08392352969534106;  // std dev = 0.474, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08020013719970016;  // std dev = 0.478, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06839498197434807;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.607', 'seconds']
Parameter learned model CLL:-0.369139 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.572, 172, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.471, 159, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.495, 162, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.478, 157, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.429, 154, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22222222222222304, nan], 'true': [nan, 0.22222222222222304], 'true,false': [nan, 0.22222222222222304]}
{'': [nan, 0.2299305555555544]}
{'': [nan, 0.22780508121616116], 'false': [0.22780508121616116, nan]}
{'': [nan, 0.22652185223725213], 'false': [0.22652185223725213, nan]}
{'': [nan, 0.21706447187928432]}
{'': [nan, 0.2248047367094964]}
{'': [0.22865755558942624, nan]}
{'': [0.22993055555555347, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.088
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), location(A, F) )
%   | then if ( complex(D, G), phenotype(E, H) )
%   | | then if ( phenotype(A, H), complex(A, G) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.47353355048412765;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( interaction(I, C), location(I, F) )
%   | | | then return 0.1340110040650296;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.30259337954395665;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, J), enzyme(A, K) )
%   | then return 0.10814893509951236;  // std dev = 0.433, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return 0.11529179224236952;  // std dev = 0.437, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.1504566274072046;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.07341745474326782;  // std dev = 0.429, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.585077078986407;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4748767572924368;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.11140103057203478;  // std dev = 2.087, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.32827430478719516;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.05603026309280443;  // std dev = 2.128, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.15249748792345105;  // std dev = 2.014, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.2608693103761048;  // std dev = 2.508, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.1392273072599158;  // std dev = 4.995, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.1967565499784834;  // std dev = 4.685, 90.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
%   | | | else return 0.11965567519938138;  // std dev = 5.867, 159.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( interaction(A, H), phenotype(D, I) )
%   | | | then return -0.03889198750462267;  // std dev = 2.178, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.07604049651536184;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1284205229517171;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2914306453106292;  // std dev = 1.208, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.11486500125972919;  // std dev = 2.706, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.24064596654252637;  // std dev = 3.973, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.19220029418629028;  // std dev = 2.428, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.05831824246443111;  // std dev = 3.701, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.06974269674936076;  // std dev = 6.032, 166.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=53 */
%   | | | else return 0.14626687175077172;  // std dev = 4.284, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05132234858466153;  // std dev = 1.196, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1196631517226739;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.1148144553013801;  // std dev = 3.632, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.23234073742157368;  // std dev = 1.905, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.03718237856372709;  // std dev = 5.594, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | | else return 0.1555922655345842;  // std dev = 2.788, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), phenotype(D, F) )
%   | | then if ( complex(E, G), phenotype(E, H) )
%   | | | then return 0.13574129339244104;  // std dev = 3.505, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.01829639301273642;  // std dev = 2.804, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( phenotype(D, I) )
%   | | | then return -0.052167668618798055;  // std dev = 2.737, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.02728124356190288;  // std dev = 2.589, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), complex(L, M) )
%   | | | then return 0.15968441683275522;  // std dev = 2.730, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.03393291202009758;  // std dev = 3.309, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else return 0.44024356612862237;  // std dev = 0.456, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F), complex(A, E) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.13642644430833845;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.006398277997745111;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(H, D), complex(A, I) )
%   | | | then return 0.07870302589615691;  // std dev = 2.615, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.010341178835077068;  // std dev = 3.763, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.03203931321596841;  // std dev = 2.858, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.20100568657540613;  // std dev = 3.232, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.0355331268012734;  // std dev = 2.408, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.06443046590024243;  // std dev = 2.420, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, F) )
%   | | | then return -0.023230792074854636;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6821513980717643;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, E) )
%   | | | then return -0.10891998493408793;  // std dev = 1.531, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.06815995737018506;  // std dev = 2.703, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), interaction(N, M) )
%   | | | then return -0.007473259719571677;  // std dev = 4.425, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0.07534701426769715;  // std dev = 3.240, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return -0.06627341117660294;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.010849189740188343;  // std dev = 2.871, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G) )
%   | | then if ( complex(E, H), complex(A, H) )
%   | | | then return 0.15862510581762568;  // std dev = 1.498, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.015969092645645038;  // std dev = 2.472, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.4872469282553852;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.054677283012644406;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), phenotype(J, M) )
%   | | | then return -0.011531479157074514;  // std dev = 3.532, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return -0.1186472367950703;  // std dev = 2.172, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.015118491548724057;  // std dev = 4.462, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return 0.06931920495380256;  // std dev = 3.164, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '50.559', 'seconds']
Refined model CLL: -0.406195


******************************************
Best model found
******************************************
Results 

CLL : -0.368464 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.088 

Total Inference Time : 36.35082197189331 

Total revision time: 74.43298807907104
Best scored revision CLL: -0.369139


Results 

CLL : -0.368464 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 74.55018249320983 

Total Inference Time : 36.35082197189331 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.58
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.461, 284.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17566718327469402;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15524475288010026;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12033923135596117;  // std dev = 7.762, 283.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.15342913457773674;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11991785823937758;  // std dev = 0.478, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08153017425418194;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08640934718299527;  // std dev = 0.479, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.018818622178063737;  // std dev = 7.768, 284.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.860', 'seconds']
Parameter learned model CLL:-0.351085 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.706, 187, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.762, 196, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.465, 155, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.478, 160, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.479, 157, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.768, 197, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21670041025094652, nan], 'true': [nan, 0.21670041025094652], 'true,false': [nan, 0.21670041025094652]}
{'': [nan, 0.21754703719723173]}
{'': [nan, 0.21291313413827045], 'false': [0.21291313413827045, nan]}
{'': [nan, 0.23026091113994687], 'false': [0.23026091113994687, nan]}
{'': [nan, 0.22816305790949012]}
{'': [nan, 0.22307359759097162]}
{'': [0.22942421392098988, nan]}
{'': [0.2124950406665325, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.106
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(A, E) )
%   | then return 0.1914822684328457;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(D, F), complex(F, G) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then if ( interaction(J, A), phenotype(J, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.47353355048412765;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else return 0.18282425977483607;  // std dev = 0.468, 154.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( location(A, E), location(D, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05201264308821461;  // std dev = 1.494, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.19011887574984018;  // std dev = 3.193, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.40514824991407355;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.4869132390762701;  // std dev = 1.132, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then return 0.03075615594464908;  // std dev = 0.420, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.10970196236597497;  // std dev = 0.447, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.24740991797810674;  // std dev = 3.045, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.18049179719523295;  // std dev = 4.033, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.10047318592782443;  // std dev = 7.371, 254.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=78 */
%   | | | else return 0.25101252765575344;  // std dev = 2.213, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), interaction(E, F) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.038375690523781744;  // std dev = 3.722, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.16115192820748023;  // std dev = 2.710, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.09996475694936773;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.011507231715045882;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( location(A, I), interaction(A, A) )
%   | | then return 0.39373490494490054;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.12759317197746067;  // std dev = 5.437, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   | | | else return 0.02196108785919772;  // std dev = 1.720, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.10095265177282989;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.011349959868507026;  // std dev = 2.895, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11038190888109618;  // std dev = 6.516, 184.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=65 */
%   | | | else return -0.0071438812116287505;  // std dev = 2.111, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.16020825031920988;  // std dev = 3.065, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.06225792570150482;  // std dev = 6.749, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.474229169378587;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09663271659466106;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(D, F), interaction(G, D) )
%   | | then if ( interaction(A, D), phenotype(A, H) )
%   | | | then return 0.051337073817794836;  // std dev = 2.468, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.14143109622993486;  // std dev = 5.061, 105.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=44 */
%   | | else if ( phenotype(A, E) )
%   | | | then return -0.09526016827032142;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.014345644881236476;  // std dev = 1.201, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K) )
%   | | | then return -0.19872225036789004;  // std dev = 1.532, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.048029851466735204;  // std dev = 1.853, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return -0.022096161707972503;  // std dev = 1.939, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.11517784100490491;  // std dev = 3.306, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A), location(A, G) )
%   | | | then return 0.4331936738869438;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.013452318981456747;  // std dev = 2.413, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.14736936861911387;  // std dev = 1.793, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.02485714656557883;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.4390950602278382;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08836576857471387;  // std dev = 2.656, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.030111381462489893;  // std dev = 5.907, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | | | else return 0.2870418087983112;  // std dev = 1.157, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(A, G), complex(A, H) )
%   | | then if ( interaction(E, I), complex(I, J) )
%   | | | then return 0.12403425450260246;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.011884893198211566;  // std dev = 1.640, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(E, K), interaction(E, L) )
%   | | | then return 0.22699451715035115;  // std dev = 1.648, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.10271410191290711;  // std dev = 1.640, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( enzyme(A, M), interaction(A, N) )
%   | | then if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return -0.004508842848590655;  // std dev = 1.423, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.15021000412761543;  // std dev = 1.920, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(R, A), phenotype(R, S) )
%   | | | then return 0.013933869307998763;  // std dev = 5.097, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | | | else return 0.08361955965796465;  // std dev = 3.802, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), interaction(G, G) )
%   | | then if ( interaction(H, G), phenotype(H, E) )
%   | | | then return -0.19969243930811537;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1552938070582504;  // std dev = 1.288, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.14539034175729426;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04963033209575374;  // std dev = 2.821, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(J, L), complex(J, M) )
%   | | | then return 0.09744711829651026;  // std dev = 1.524, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.023581590317472464;  // std dev = 4.019, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.0827664545693808;  // std dev = 5.031, 107.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=42 */
%   | | | else return 0.3423294952588751;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '3.939', 'seconds']
Refined model CLL: -0.409291


******************************************
Best model found
******************************************
Results 

CLL : -0.350684 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.106 

Total Inference Time : 46.21924304962158 

Total revision time: 86.14621461486817
Best scored revision CLL: -0.351085


Results 

CLL : -0.350684 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 86.24796975708009 

Total Inference Time : 46.21924304962158 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 4.17
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.481, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18830766525823936;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18618858517113718;  // std dev = 0.478, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14386211866535786;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13889347231015478;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07720225176818593;  // std dev = 0.466, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.053272757568009144;  // std dev = 0.462, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06467496358774666;  // std dev = 0.471, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06161550388951708;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.404', 'seconds']
Parameter learned model CLL:-0.350836 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.346, 211, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.478, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.3, 204, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.183, 188, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 210, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.279, 201, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22115394305870698, nan], 'true': [nan, 0.22115394305870698], 'true,false': [nan, 0.22115394305870698]}
{'': [nan, 0.2282562482045399]}
{'': [nan, 0.22364648338674595], 'false': [0.22364648338674595, nan]}
{'': [nan, 0.22931131544380134], 'false': [0.22931131544380134, nan]}
{'': [nan, 0.21724566223794825]}
{'': [nan, 0.21371882086167898]}
{'': [0.22151000040569566, nan]}
{'': [0.22471378661650035, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 41.867
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), interaction(A, E) )
%   | then return 0.1289822684328457;  // std dev = 0.444, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(F, H), complex(H, G) )
%   | | | then return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15226658215833574;  // std dev = 0.456, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else if ( location(A, I) )
%   | then if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(A, L), location(J, I) )
%   | | | then return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.22021790061675373;  // std dev = 3.660, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20158327853385513;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else return 0.13814893509951237;  // std dev = 0.449, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, A) )
%   | then return 0.14950978591239544;  // std dev = 0.463, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( enzyme(A, D), phenotype(C, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3127781501574316;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4895417252645551;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.1963990887349233;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2842557259609934;  // std dev = 2.446, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   else if ( location(A, I), interaction(J, A) )
%   | then return 0.18361286455959885;  // std dev = 0.479, 188.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=67 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.5904863300260276;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, M), complex(A, N) )
%   | | | then return 0.4358694815242619;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1530744656206538;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.10358473995735235;  // std dev = 3.780, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.15518144428177436;  // std dev = 7.313, 232.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.26262473281856674;  // std dev = 1.862, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.08257291793879261;  // std dev = 4.331, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.3501537477800935;  // std dev = 1.839, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.06583764820912393;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then return 0.41814957797262653;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09338702486333725;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.08084423545593046;  // std dev = 6.316, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.08308804192941328;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.4538197805282079;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, G) )
%   | | | then return 0.0707129022146842;  // std dev = 7.916, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   | | | else return 0.008890624387656471;  // std dev = 2.247, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.16520424582173265;  // std dev = 2.965, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.06250646065016544;  // std dev = 6.694, 203.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=66 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.743235284186825;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11366026595092443;  // std dev = 3.436, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.07428612027389445;  // std dev = 2.856, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.03579027968806413;  // std dev = 5.098, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return -0.011562701952940782;  // std dev = 2.266, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.13922894938845126;  // std dev = 4.723, 92.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=38 */
%   | else if ( enzyme(A, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.0428555049737952;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11662240844674258;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return -0.04354939222134669;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.1318677267084157;  // std dev = 1.800, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then return 0.2627414531022699;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.028928514632630204;  // std dev = 1.862, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.119646726656358;  // std dev = 3.397, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.10561107172994567;  // std dev = 2.344, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.0965633883579095;  // std dev = 1.901, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.07614462345679868;  // std dev = 5.558, 132.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=49 */
%   | | | else return -0.04086716498730378;  // std dev = 3.308, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E), enzyme(A, F) )
%   | then if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.2541118015127431;  // std dev = 1.728, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -3.0494383674846876E-4;  // std dev = 1.589, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.15371355095366354;  // std dev = 1.556, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.028274006246576475;  // std dev = 3.539, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( interaction(K, M), interaction(A, M) )
%   | | | then return 0.07131170509602369;  // std dev = 3.868, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return -0.08557640141525467;  // std dev = 3.005, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.338520277317594;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11482602200286332;  // std dev = 4.408, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, E), enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.18898155336948763;  // std dev = 2.000, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.012292203899556283;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return -0.03081065806454625;  // std dev = 6.704, 214.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=63 */
%   | | | else return 0.06005527449793579;  // std dev = 2.839, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return -0.18479452516361472;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.012591340391811942;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.3150309465504144;  // std dev = 1.691, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.08187018124212656;  // std dev = 2.550, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '42.151', 'seconds']
Refined model CLL: -0.401225


******************************************
Best model found
******************************************
Results 

CLL : -0.351854 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 41.867 

Total Inference Time : 78.98998522758484 

Total revision time: 133.3531838054657
Best scored revision CLL: -0.350836


Results 

CLL : -0.351854 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 133.45493894767762 

Total Inference Time : 78.98998522758484 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.391
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.484, 246.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20401359675364586;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17094007670134656;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.17266216698616296;  // std dev = 7.634, 251.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10280063696153577;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1160239847158344;  // std dev = 0.479, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06384653905125973;  // std dev = 0.469, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0632975827906825;  // std dev = 0.473, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05943589762735478;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.295', 'seconds']
Parameter learned model CLL:-0.362913 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.758, 174, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.634, 159, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.88, 191, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 180, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.75, 173, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22624229747300717, nan], 'true': [nan, 0.22624229747300717], 'true,false': [nan, 0.22624229747300717]}
{'': [nan, 0.22423441946596867]}
{'': [nan, 0.23218679068586007], 'false': [0.23218679068586007, nan]}
{'': [nan, 0.21940591092409698], 'false': [0.21940591092409698, nan]}
{'': [nan, 0.22943332732408003]}
{'': [nan, 0.21980785674764824]}
{'': [0.22383217993079427, nan]}
{'': [0.22664293342826416, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.55
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, D) )
%   | then return 0.06745126068090773;  // std dev = 0.407, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else if ( complex(C, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return 0.039967116917694;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, I) )
%   | | | then return 0.19985747781308152;  // std dev = 6.691, 199.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=68 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then return 0.05507769197551795;  // std dev = 0.426, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else return 0.17312133526744267;  // std dev = 0.473, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( enzyme(A, I), complex(A, J) )
%   | | then return 0.5792396387415737;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.43618059753715877;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16885343341424916;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( location(M, N), location(L, N) )
%   | | | then return 0.16923722559007176;  // std dev = 4.233, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return 0.4095170107446058;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.24380300951497857;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.10739074858067614;  // std dev = 3.301, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.0873068284385976;  // std dev = 4.152, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | | | else return 0.15081467182313218;  // std dev = 6.678, 196.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.38504636169254486;  // std dev = 1.845, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.1537872099730302;  // std dev = 2.386, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.05835806486760431;  // std dev = 1.495, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.18828967828280568;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return -0.012568657108349451;  // std dev = 1.999, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.2704258194804121;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.18301315146969602;  // std dev = 1.693, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.10285068359000564;  // std dev = 6.167, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(F, H), phenotype(F, I) )
%   | | | then return -0.009650048360537294;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.11978654881781936;  // std dev = 4.093, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.10482366521834437;  // std dev = 5.614, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | | | else return 0.2009490090794736;  // std dev = 1.985, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.17132723003973177;  // std dev = 2.512, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.07075040685985218;  // std dev = 2.938, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.031627686677354896;  // std dev = 4.381, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.06566732027368827;  // std dev = 5.279, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.3012154701670792;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07165351130212876;  // std dev = 2.567, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.1107966862483725;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.029384735615273282;  // std dev = 2.113, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), interaction(L, L) )
%   | | | then return 0.22135833313308756;  // std dev = 1.998, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.016228339963643406;  // std dev = 3.370, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.19879980534868155;  // std dev = 2.660, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.08285464527182237;  // std dev = 4.550, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.09941222643440259;  // std dev = 1.967, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.02606747406658267;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(I, D), enzyme(I, J) )
%   | | | then return 0.06653312517326805;  // std dev = 1.958, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.004605739461963302;  // std dev = 2.537, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( enzyme(K, M), phenotype(K, N) )
%   | | | then return 0.29397117589073624;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.00701356152636703;  // std dev = 2.547, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( complex(A, P), enzyme(A, Q) )
%   | | | then return -0.11383850493617555;  // std dev = 1.548, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.017507839881724174;  // std dev = 5.930, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), location(A, H) )
%   | | then if ( interaction(G, I), complex(I, F) )
%   | | | then return 0.05094398760196298;  // std dev = 3.969, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return -0.09119198144860056;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(J, A), interaction(J, E) )
%   | | | then return 0.08734155375897047;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.30035970514977667;  // std dev = 1.690, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.007056150344222869;  // std dev = 3.014, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.16556095669927268;  // std dev = 1.788, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.04954613454360132;  // std dev = 4.263, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | | else return 0.02132117935864146;  // std dev = 2.845, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.010108747826332792;  // std dev = 1.650, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.22330414694393305;  // std dev = 1.212, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.12815611726341106;  // std dev = 1.986, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 7.296515589233293E-4;  // std dev = 2.479, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( interaction(I, K), enzyme(I, J) )
%   | | | then return 0.7073982669403721;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11541987326185497;  // std dev = 2.399, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08870524312654031;  // std dev = 4.021, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | | else return 0.020976080042684243;  // std dev = 4.663, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '32.252', 'seconds']
Refined model CLL: -0.394046


******************************************
Best model found
******************************************
Results 

CLL : -0.362762 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.55 

Total Inference Time : 44.097602128982544 

Total revision time: 86.66620303726197
Best scored revision CLL: -0.362913


Results 

CLL : -0.362762 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 86.76795817947388 

Total Inference Time : 44.097602128982544 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.904
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18891816586874235;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1708164326544697;  // std dev = 0.473, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13799766272174482;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.16674736582024177;  // std dev = 7.299, 226.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07187454000398331;  // std dev = 0.465, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0716309268289909;  // std dev = 0.470, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06940666889339805;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03527585602879291;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.315', 'seconds']
Parameter learned model CLL:-0.351717 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.586, 174, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.594, 175, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.299, 140, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 167, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.649, 183, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22136094674556292, nan], 'true': [nan, 0.22136094674556292], 'true,false': [nan, 0.22136094674556292]}
{'': [nan, 0.2235140330642041]}
{'': [nan, 0.22093040325303384], 'false': [0.22093040325303384, nan]}
{'': [nan, 0.23572715169551364], 'false': [0.23572715169551364, nan]}
{'': [nan, 0.21578177622133535]}
{'': [nan, 0.22049997086416928]}
{'': [0.2243746973081912, nan]}
{'': [0.21749284835754157, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 30.645
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), interaction(E, F) )
%   | then if ( interaction(F, F), complex(F, G) )
%   | | then if ( complex(C, G) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, F), interaction(F, H) )
%   | | | then return 0.13814893509951237;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, I), enzyme(A, J) )
%   | then return 0.09344305274657114;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then return 0.13592671287729013;  // std dev = 0.448, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.18072958026080185;  // std dev = 4.508, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(D, E), interaction(F, A) )
%   | then if ( interaction(G, F), phenotype(G, H) )
%   | | then return 0.14061804644393397;  // std dev = 0.463, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.49869199515595586;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.29278706818880096;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.08523103440089218;  // std dev = 0.438, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then if ( location(A, L), location(J, L) )
%   | | then if ( complex(J, M), phenotype(A, N) )
%   | | | then return 0.11653099096279658;  // std dev = 2.075, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.22788251923874156;  // std dev = 3.101, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.0846944871966876;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3657571645440388;  // std dev = 1.935, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return 0.11984480170714021;  // std dev = 0.451, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.2266067126583704;  // std dev = 3.310, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.12406296654582942;  // std dev = 6.726, 207.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=67 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.1308465552522182;  // std dev = 2.098, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.033097819666047315;  // std dev = 2.512, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(E, I) )
%   | | | then return 0.29220221173129635;  // std dev = 1.223, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11455824945920597;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( phenotype(J, L), interaction(J, M) )
%   | | | then return 0.370885044394238;  // std dev = 1.423, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.09435501664211202;  // std dev = 1.670, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.1011022842653276;  // std dev = 3.600, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.16001920393069943;  // std dev = 4.924, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.04504452771465217;  // std dev = 2.503, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.01779220852854754;  // std dev = 4.526, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08938812873470557;  // std dev = 4.814, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.16627038684460327;  // std dev = 3.007, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.03147892538349707;  // std dev = 1.515, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.25572970625646774;  // std dev = 2.387, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.08122360582180047;  // std dev = 5.474, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | | else return 0.011725530032200018;  // std dev = 4.332, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( complex(D, F), interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.03603193121738575;  // std dev = 1.872, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.32015842282731766;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.17989941153158373;  // std dev = 1.555, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.00987201467558329;  // std dev = 3.200, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.42991686743043017;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.006281135195547054;  // std dev = 3.057, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.11103606283821894;  // std dev = 5.293, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, F), location(A, G) )
%   | | then if ( interaction(H, E), complex(H, D) )
%   | | | then return 0.15751402532737413;  // std dev = 2.267, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.02160941295788302;  // std dev = 2.222, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(I, E) )
%   | | | then return 0.1401293171660415;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.38450852241551564;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.15299772713458812;  // std dev = 2.344, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.027724709200945014;  // std dev = 2.447, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.06317210209889389;  // std dev = 3.891, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return -0.010972407245789448;  // std dev = 4.311, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(A, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H) )
%   | | | then return -0.10459068255023195;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.17086543784035885;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.05283010984406852;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(K, I), interaction(K, A) )
%   | | | then return 0.23662858050143068;  // std dev = 1.808, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.027740660460660482;  // std dev = 2.716, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.020150206901420158;  // std dev = 4.499, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | | | else return -0.012574303988240582;  // std dev = 4.954, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(A, G), interaction(E, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.089879421029273;  // std dev = 2.060, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.03747657802746627;  // std dev = 2.071, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(E, E), complex(A, K) )
%   | | | then return 0.3515420332740533;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11978926535686121;  // std dev = 2.331, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(A, L) )
%   | | then if ( phenotype(L, M), interaction(L, A) )
%   | | | then return 0.025181187553406054;  // std dev = 2.164, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.08092008348926863;  // std dev = 4.001, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.04654801254977347;  // std dev = 2.285, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.05610648313990612;  // std dev = 4.203, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '37.121', 'seconds']
Refined model CLL: -0.37987


******************************************
Best model found
******************************************
Results 

CLL : -0.350992 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 30.645 

Total Inference Time : 40.71076059341431 

Total revision time: 81.09560987854005
Best scored revision CLL: -0.351717


Results 

CLL : -0.350992 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 81.19736502075196 

Total Inference Time : 40.71076059341431 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.706
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18037115732173373;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16428939086343725;  // std dev = 0.470, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.126036212236191;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1266326949954298;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12555689486541322;  // std dev = 0.479, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09394737983170495;  // std dev = 0.476, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03956397851397439;  // std dev = 0.463, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06100319944031789;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.109', 'seconds']
Parameter learned model CLL:-0.352805 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.679, 183, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.719, 189, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.601, 172, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.463, 192, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.571, 168, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2183950617283959, nan], 'true': [nan, 0.2183950617283959], 'true,false': [nan, 0.2183950617283959]}
{'': [nan, 0.22094524793388343]}
{'': [nan, 0.2158553875236301], 'false': [0.2158553875236301, nan]}
{'': [nan, 0.22307359759097076], 'false': [0.22307359759097076, nan]}
{'': [nan, 0.22942421392098927]}
{'': [nan, 0.22689600000000137]}
{'': [0.21459128222915952, nan]}
{'': [0.22477508650519049, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.878
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.274815601766179;  // std dev = 0.493, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else return 0.13721870254137267;  // std dev = 0.449, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( complex(F, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16584124279181983;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( location(A, M) )
%   | | | then return 0.27920156667845974;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then if ( enzyme(E, G), phenotype(A, F) )
%   | | then return 0.0624893074238369;  // std dev = 0.425, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(C, E), complex(A, H) )
%   | | | then return 0.26989755667026066;  // std dev = 2.985, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.1497129373247083;  // std dev = 4.519, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | else return 0.33288339929377336;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(I, A), location(I, J) )
%   | then if ( interaction(K, I), interaction(I, K) )
%   | | then return 0.0757044917222826;  // std dev = 0.433, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else return 0.14662007624201195;  // std dev = 0.467, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( location(A, N), location(L, N) )
%   | | | then return 0.16729267857747196;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.09061100593203596;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.493974351222908;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.11455884872226535;  // std dev = 4.588, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0.17928238806377464;  // std dev = 5.941, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( enzyme(D, E), complex(D, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.12088813986368763;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.312205463275233;  // std dev = 1.913, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( enzyme(D, H), interaction(D, D) )
%   | | | then return -0.030007929391956473;  // std dev = 1.812, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.06190856655475716;  // std dev = 4.613, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.05440983937817231;  // std dev = 2.263, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.022751667403533793;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.17154455773397925;  // std dev = 4.428, 82.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=32 */
%   | | | else return 0.06330574216945842;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), complex(H, I) )
%   | | | then return 0.13848676456581022;  // std dev = 3.503, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return -0.013467270527258058;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.2274941553990043;  // std dev = 2.528, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.12282145463399409;  // std dev = 5.405, 126.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( phenotype(A, H), location(A, G) )
%   | | | then return 0.143215573563915;  // std dev = 4.344, 79.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=32 */
%   | | | else return 0.06394653629202722;  // std dev = 5.659, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.024349986740316958;  // std dev = 1.696, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.10620712034878968;  // std dev = 1.542, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( location(E, D) )
%   | | then if ( phenotype(E, F), interaction(A, G) )
%   | | | then return 0.02811419110887883;  // std dev = 3.760, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.1345197201282075;  // std dev = 4.928, 100.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=42 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0695767224277591;  // std dev = 2.286, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.05794846728447735;  // std dev = 2.337, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.09547432334187352;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0013432787939177127;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3738896922809846;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1552622236600988;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( phenotype(A, F), enzyme(D, G) )
%   | | | then return -0.07282921254399116;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.18199912321485998;  // std dev = 2.673, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else return 0.4534999235865839;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.060141012713753036;  // std dev = 2.752, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.06687081680661663;  // std dev = 3.488, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.03460952171225776;  // std dev = 2.721, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.09560707433522342;  // std dev = 4.271, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), complex(E, H) )
%   | | then if ( interaction(A, G), complex(A, I) )
%   | | | then return 0.32630001801594255;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10366270124862227;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( enzyme(A, F), interaction(E, J) )
%   | | | then return 0.136540050377366;  // std dev = 1.297, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.004280181707444569;  // std dev = 2.148, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( phenotype(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return -0.01576676606923702;  // std dev = 3.511, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.08304455358588361;  // std dev = 2.994, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.1461856511340247;  // std dev = 1.507, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.023261815700043337;  // std dev = 4.931, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( complex(A, I), complex(G, J) )
%   | | | then return -0.055878360563917526;  // std dev = 2.104, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.09844244330322231;  // std dev = 2.346, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.1327666745868804;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.06915245845101452;  // std dev = 1.669, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( phenotype(L, M), interaction(N, L) )
%   | | | then return 0.05396225085858205;  // std dev = 2.621, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.3441922694776195;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return -0.015121976618881677;  // std dev = 3.961, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return 0.041905534009533764;  // std dev = 3.833, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '3.971', 'seconds']
Refined model CLL: -0.414008


******************************************
Best model found
******************************************
Results 

CLL : -0.352407 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.878 

Total Inference Time : 58.69955515861511 

Total revision time: 98.39617741966248
Best scored revision CLL: -0.352805


Results 

CLL : -0.352407 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 98.58781970405579 

Total Inference Time : 58.69955515861511 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.3
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18213647404031924;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1595002731360045;  // std dev = 0.468, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14894454857998085;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.08886514316841312;  // std dev = 8.523, 345.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09817975999953915;  // std dev = 0.469, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07150193738468648;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06192994011378643;  // std dev = 0.467, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0600890728770047;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.289', 'seconds']
Parameter learned model CLL:-0.338781 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.385, 217, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.3, 204, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.523, 241, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.467, 220, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.34, 210, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21901961355188906, nan], 'true': [nan, 0.21901961355188906], 'true,false': [nan, 0.21901961355188906]}
{'': [nan, 0.21937500000000248]}
{'': [nan, 0.22364648338674067], 'false': [0.22364648338674067, nan]}
{'': [nan, 0.21057760974584938], 'false': [0.21057760974584938, nan]}
{'': [nan, 0.21973054510077214]}
{'': [nan, 0.21653777513384775]}
{'': [0.2179545800944957, nan]}
{'': [0.22151000040569715, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 45.66
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(H, C), interaction(H, I) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(A, J), phenotype(A, K) )
%   | then if ( complex(A, L), complex(J, L) )
%   | | then if ( interaction(M, A), interaction(M, J) )
%   | | | then return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(J, K), complex(J, N) )
%   | | | then return 0.14703782398840126;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.2792015666784597;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0.16117923812981527;  // std dev = 0.460, 198.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=60 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(C, C), complex(C, D) )
%   | then return 0.20921133204314485;  // std dev = 0.481, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.1198824548914083;  // std dev = 0.457, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E) )
%   | | then if ( location(A, H), phenotype(G, I) )
%   | | | then return 0.17341887929697355;  // std dev = 5.520, 136.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=46 */
%   | | | else return 0.3929299699717348;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.06814364518540998;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.26224945069560357;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.17070774774951256;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.5040410810828458;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33361384398814914;  // std dev = 1.580, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.09667118593283536;  // std dev = 4.959, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.19588961126428273;  // std dev = 6.491, 177.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.11605351216355968;  // std dev = 4.688, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.07711836300190905;  // std dev = 4.569, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | else return -0.0592248741037444;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.2166620395393175;  // std dev = 3.076, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.10429785844820962;  // std dev = 3.478, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.2665624673066851;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.536614863063511;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.12256775708292852;  // std dev = 2.777, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.038454773342856734;  // std dev = 4.558, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.154842063556121;  // std dev = 4.907, 99.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=40 */
%   | | | else return 0.07043799114953612;  // std dev = 3.919, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(A, H), interaction(A, F) )
%   | | | then return 0.005053456730685019;  // std dev = 3.735, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.06548373567267494;  // std dev = 6.508, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.007755382492659132;  // std dev = 1.920, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.16863689451453845;  // std dev = 3.024, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.05604161964830828;  // std dev = 5.985, 165.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=53 */
%   | | | else return -0.04663906343658515;  // std dev = 2.097, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.33912203093260984;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.08678216175317355;  // std dev = 4.567, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.1802257171051042;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.09772231532613807;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.018350567104284364;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( phenotype(A, G), phenotype(D, H) )
%   | | | then return 0.08751696241201154;  // std dev = 5.631, 137.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=50 */
%   | | | else return -0.012742979497265447;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | | else if ( enzyme(E, I), complex(E, J) )
%   | | | then return 0.4347122242897489;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14491952591226037;  // std dev = 2.274, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(A, L), complex(L, K) )
%   | | | then return 0.019025496485123528;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19382253392728999;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return -0.002971740804641391;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12125456258077612;  // std dev = 1.987, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( enzyme(F, G), phenotype(E, H) )
%   | | then if ( complex(F, I), complex(E, J) )
%   | | | then return -0.006885941862443414;  // std dev = 3.130, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.07883499726074132;  // std dev = 3.520, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else if ( interaction(A, F), phenotype(A, K) )
%   | | | then return 0.25882341471833314;  // std dev = 1.460, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09938084139816429;  // std dev = 2.565, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( interaction(N, L), interaction(N, N) )
%   | | | then return 0.006216440085250935;  // std dev = 2.515, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.10154264864652338;  // std dev = 2.671, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( phenotype(A, P), enzyme(A, Q) )
%   | | | then return -0.10977794838603475;  // std dev = 2.352, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.020121892627888098;  // std dev = 4.299, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1925605660205252;  // std dev = 1.758, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07262022573218298;  // std dev = 3.390, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( interaction(I, E), interaction(E, I) )
%   | | | then return -0.017810313679619216;  // std dev = 6.607, 207.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=62 */
%   | | | else return 0.09591503180899037;  // std dev = 2.739, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else if ( complex(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.14041715559800935;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.2679343045452508;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.05785928412865164;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.025474049204681697;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '18.001', 'seconds']
Refined model CLL: -0.391799


******************************************
Best model found
******************************************
Results 

CLL : -0.339848 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.66 

Total Inference Time : 98.42603135108948 

Total revision time: 156.00193544387815
Best scored revision CLL: -0.338781


Results 

CLL : -0.339848 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 156.19357772827146 

Total Inference Time : 98.42603135108948 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.459
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.456, 312.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.459, 306.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18323727432212558;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17258348021725486;  // std dev = 0.473, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14243433071988446;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12312483986267023;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09682956274704192;  // std dev = 0.471, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08259909492263706;  // std dev = 0.472, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05947100047702555;  // std dev = 0.470, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.048792283382313915;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.764', 'seconds']
Parameter learned model CLL:-0.350246 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.88, 191, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.832, 184, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.81, 181, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.47, 188, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.853, 187, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21940591092409814, nan], 'true': [nan, 0.21940591092409814], 'true,false': [nan, 0.21940591092409814]}
{'': [nan, 0.22383217993079552]}
{'': [nan, 0.22222222222222254], 'false': [0.22222222222222254, nan]}
{'': [nan, 0.22342980584738847], 'false': [0.22342980584738847, nan]}
{'': [nan, 0.22181965097942308]}
{'': [nan, 0.2230273323032656]}
{'': [0.22061224489796066, nan]}
{'': [0.2210146323916716, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.549
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( enzyme(A, D) )
%   | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), phenotype(E, H) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, I), complex(E, I) )
%   | | | then return 0.11901850031690367;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.0581489350995122;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.14386322081379807;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.23398786127400847;  // std dev = 5.912, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(C, E), interaction(A, F) )
%   | then if ( interaction(F, G), location(F, D) )
%   | | then return 0.13139887396624145;  // std dev = 0.461, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else return 0.3717022037861896;  // std dev = 0.498, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return 0.12087151350295196;  // std dev = 0.453, 166.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=48 */
%   else if ( location(A, H), interaction(A, I) )
%   | then if ( enzyme(I, J), complex(A, K) )
%   | | then if ( location(I, H) )
%   | | | then return 0.33346654675553333;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5022172744153215;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(I, H), interaction(I, L) )
%   | | | then return 0.18421823657306524;  // std dev = 2.782, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.09037225851301096;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(M, A) )
%   | | then return 0.3444097333267483;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.32721436377616886;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.17778458027792124;  // std dev = 5.455, 127.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=48 */
%   | | | else return 0.12256798460058739;  // std dev = 5.504, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( interaction(G, H), location(A, I) )
%   | | | then return 0.10098092936277962;  // std dev = 3.456, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.5120299580820128;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.03234819141314857;  // std dev = 2.190, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.046465830936750836;  // std dev = 2.271, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( complex(K, M), enzyme(A, N) )
%   | | | then return 0.0636813579140015;  // std dev = 2.932, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.13906700993255366;  // std dev = 4.719, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | else if ( location(A, P) )
%   | | | then return 0.2796272984550342;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.03900299749706217;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(F, H), interaction(I, A) )
%   | | | then return 0.007486180259580855;  // std dev = 2.255, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.17726678508924346;  // std dev = 3.955, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11941305034437409;  // std dev = 4.020, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.04963272789211466;  // std dev = 4.828, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(F, G), phenotype(A, H) )
%   | | | then return -0.0111275422304305;  // std dev = 2.590, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.10680538542366162;  // std dev = 5.544, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
%   | | else if ( location(A, I) )
%   | | | then return -8.48882092786013E-4;  // std dev = 4.897, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | | else return 0.2364491893426519;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), interaction(G, A) )
%   | | then if ( phenotype(G, H), interaction(E, I) )
%   | | | then return -0.0977572956525882;  // std dev = 2.013, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.006000218394409235;  // std dev = 2.695, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( phenotype(E, J), enzyme(A, K) )
%   | | | then return 0.0065846556368041285;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1811035766591384;  // std dev = 2.064, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(L, A), interaction(A, M) )
%   | | then if ( enzyme(L, N) )
%   | | | then return 0.11802565205005386;  // std dev = 1.488, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.37535878584316074;  // std dev = 1.392, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.010792315843669839;  // std dev = 2.509, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.111180249192533;  // std dev = 5.438, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.232900808361198;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.01599855955798724;  // std dev = 2.202, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.07263819520819315;  // std dev = 2.130, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( location(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.044698833042917135;  // std dev = 4.687, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.08620306302139973;  // std dev = 4.999, 106.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=40 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11508591177770193;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.028529620618936387;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( complex(A, F), enzyme(E, G) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0392611222515214;  // std dev = 2.010, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.18669239678702204;  // std dev = 1.592, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(E, J) )
%   | | | then return -0.020399678100905035;  // std dev = 4.304, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | | else return -0.07362581637723234;  // std dev = 3.210, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.028689890324564645;  // std dev = 2.199, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.06873868445924569;  // std dev = 2.489, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.017013591269442466;  // std dev = 1.721, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.1494243641492379;  // std dev = 3.483, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( enzyme(A, F), phenotype(E, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.06410876068287549;  // std dev = 1.930, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.21875158457670768;  // std dev = 2.107, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( enzyme(E, H), complex(A, I) )
%   | | | then return -0.15254270519144808;  // std dev = 1.814, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.02510292886476047;  // std dev = 4.840, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L), complex(A, M) )
%   | | | then return 0.190046735730004;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -6.687475810558563E-4;  // std dev = 3.607, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.19056168039245341;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.055866306116432264;  // std dev = 2.875, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '35.773', 'seconds']
Refined model CLL: -0.390291


******************************************
Best model found
******************************************
Results 

CLL : -0.350087 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.549 

Total Inference Time : 51.314677476882935 

Total revision time: 92.89717660713195
Best scored revision CLL: -0.350246


Results 

CLL : -0.350087 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 93.08881889152526 

Total Inference Time : 51.314677476882935 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.752
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18891816586874235;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18315502662864472;  // std dev = 0.477, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15195960892140128;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1285367160544657;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08854318688779059;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06578611931507058;  // std dev = 0.468, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06563752738346677;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03273690224645418;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.245', 'seconds']
Parameter learned model CLL:-0.349623 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.586, 174, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.503, 163, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.495, 162, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 170, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.669, 186, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22136094674556292, nan], 'true': [nan, 0.22136094674556292], 'true,false': [nan, 0.22136094674556292]}
{'': [nan, 0.2273778835349309]}
{'': [nan, 0.22609312753020105], 'false': [0.22609312753020105, nan]}
{'': [nan, 0.22652185223725507], 'false': [0.22652185223725507, nan]}
{'': [nan, 0.2209304032530325]}
{'': [nan, 0.21878003278873867]}
{'': [0.22308349609374908, nan]}
{'': [0.21620891003460216, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 24.973
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), phenotype(E, F) )
%   | then if ( phenotype(A, F), interaction(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12975387337111732;  // std dev = 0.445, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, G) )
%   | then if ( interaction(A, H), complex(A, I) )
%   | | then if ( enzyme(H, J), complex(H, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.21231560176617884;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(G, A), interaction(E, H) )
%   | | then if ( enzyme(G, I), complex(H, C) )
%   | | | then return 0.5593295879187519;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20872380325623563;  // std dev = 2.080, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.5047143245294959;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return 0.2526486728239472;  // std dev = 0.493, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.08422183142923202;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( interaction(A, L), phenotype(L, M) )
%   | then return 0.14803787249903075;  // std dev = 0.467, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | else if ( interaction(N, A), enzyme(A, P) )
%   | | then return 0.18138718470711634;  // std dev = 0.474, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(Q, A), phenotype(Q, R) )
%   | | | then return 0.23253887217885574;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.3740023171958055;  // std dev = 1.648, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.12874044770031656;  // std dev = 5.879, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.20229055896603626;  // std dev = 4.500, 84.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( enzyme(G, E), phenotype(G, H) )
%   | | | then return 0.10816088161494591;  // std dev = 2.138, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.12866533692759746;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.15332197013795795;  // std dev = 4.092, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | | else return 0.09950574837261682;  // std dev = 5.649, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   | else if ( interaction(A, K) )
%   | | then return 0.07699209268752123;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.14475254668193696;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), location(A, G) )
%   | | then if ( location(F, G) )
%   | | | then return 0.03979642374065415;  // std dev = 6.517, 206.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=60 */
%   | | | else return 0.17667407038375058;  // std dev = 2.266, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( location(A, H), complex(A, I) )
%   | | | then return 0.04916393709440495;  // std dev = 2.016, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.17601217231212155;  // std dev = 2.521, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, H), location(A, I) )
%   | | | then return -0.033939277538581974;  // std dev = 3.467, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.24929930269969336;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.10213521260649647;  // std dev = 5.535, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
%   | | | else return 0.04452704260037169;  // std dev = 3.596, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.006963177820288199;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.7109904443581285;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, E), phenotype(D, H) )
%   | | | then return 0.13432755602067992;  // std dev = 2.014, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.006311869221433129;  // std dev = 2.384, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.020826405206491778;  // std dev = 5.239, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | | else return 0.15076197744069433;  // std dev = 2.286, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.044252611223411724;  // std dev = 1.993, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.05057780750757634;  // std dev = 2.737, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( location(D, E), interaction(D, A) )
%   | | | then return -0.11310823137084884;  // std dev = 1.257, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.04282364729638078;  // std dev = 3.835, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( interaction(G, A), phenotype(D, H) )
%   | | | then return 0.06700300582935605;  // std dev = 3.415, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.29259889819066537;  // std dev = 1.846, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.13788725650687517;  // std dev = 1.496, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4519068292701333;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return -0.1871704524361211;  // std dev = 1.680, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.02680259269655324;  // std dev = 4.293, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then return 0.3752434984503142;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.2534209292732399;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0625142952395606;  // std dev = 2.746, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K) )
%   | | | then return 0.021666406384567665;  // std dev = 4.984, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | | else return 0.2640330366593459;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.04091641605623791;  // std dev = 2.282, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.08158683895065588;  // std dev = 3.270, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(G, I), location(A, J) )
%   | | | then return 0.047684607505218767;  // std dev = 1.543, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.18446317316508493;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.20654757271544288;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09265489676024674;  // std dev = 1.228, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( phenotype(A, L) )
%   | | then if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.011260711721755726;  // std dev = 2.439, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.13119837973378876;  // std dev = 4.637, 87.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=39 */
%   | | else if ( location(A, P) )
%   | | | then return 0.011803068210226178;  // std dev = 4.299, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return 0.31316377001802703;  // std dev = 0.862, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '7.395', 'seconds']
Refined model CLL: -0.420679


******************************************
Best model found
******************************************
Results 

CLL : -0.348893 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.973 

Total Inference Time : 31.7455153465271 

Total revision time: 65.18123755455017
Best scored revision CLL: -0.349623


Results 

CLL : -0.348893 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 65.37287983894348 

Total Inference Time : 31.7455153465271 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.625
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1768302537808302;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18184535858699377;  // std dev = 0.476, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12969286700420296;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12240142486467218;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12316071624021717;  // std dev = 0.479, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0613669502918963;  // std dev = 0.466, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04719951846527918;  // std dev = 0.465, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.037838959112553326;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.497', 'seconds']
Parameter learned model CLL:-0.342376 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.699, 186, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.686, 184, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.608, 173, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.465, 189, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.719, 189, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2171235358048553, nan], 'true': [nan, 0.2171235358048553], 'true,false': [nan, 0.2171235358048553]}
{'': [nan, 0.226472595673086]}
{'': [nan, 0.2179708881959654], 'false': [0.2179708881959654, nan]}
{'': [nan, 0.22264792899408536], 'false': [0.22264792899408536, nan]}
{'': [nan, 0.22942421392099]}
{'': [nan, 0.2167004102509446]}
{'': [0.21585538752363168, nan]}
{'': [0.21585538752363098, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 64.874
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(C, E), interaction(A, D) )
%   | then if ( phenotype(D, F), interaction(D, C) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, C), enzyme(D, H) )
%   | | then return 0.11740819435877163;  // std dev = 0.438, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.21814893509951233;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( interaction(A, K), location(K, L) )
%   | then return 0.09888967584025311;  // std dev = 0.428, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | else if ( interaction(M, A), phenotype(M, N) )
%   | | then return 0.17140194714770407;  // std dev = 0.464, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | else return 0.2899671169176941;  // std dev = 0.495, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(D, E), phenotype(A, F) )
%   | then return 0.08068551491463923;  // std dev = 0.446, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.8269997454010721;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(D, H), phenotype(D, I) )
%   | | | then return 0.2747097122542381;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5517690132609628;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then if ( enzyme(A, L), complex(J, M) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.12169178126355491;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3065657308433867;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.1767398538015469;  // std dev = 3.519, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.101128614032628;  // std dev = 3.403, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | else return 0.08867214516229346;  // std dev = 0.445, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.04558648258830112;  // std dev = 4.677, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return 0.15066235799829963;  // std dev = 6.122, 165.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( interaction(A, D), phenotype(D, H) )
%   | | | then return 0.1531596042458487;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.01620875063468331;  // std dev = 3.461, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.04304377091018906;  // std dev = 1.169, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16007019320909185;  // std dev = 2.377, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.10727266108827321;  // std dev = 3.047, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.2424096625060914;  // std dev = 2.656, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.0890448602694719;  // std dev = 4.348, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return 0.29633320366359683;  // std dev = 1.213, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.47445962920126133;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1424122988586783;  // std dev = 2.360, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.10497933957647533;  // std dev = 5.188, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.035887234434847926;  // std dev = 4.777, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), enzyme(H, I) )
%   | | | then return 0.12635291737181956;  // std dev = 4.085, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return -0.012621965164825413;  // std dev = 4.117, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.05519331172812903;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.1610132032678191;  // std dev = 3.820, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.11165345670418711;  // std dev = 1.720, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.001461420134473838;  // std dev = 1.902, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.1451945815646563;  // std dev = 2.072, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.034256737066724406;  // std dev = 3.919, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.27041672473608874;  // std dev = 1.130, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.019192363477377218;  // std dev = 2.867, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.07374361213799682;  // std dev = 4.655, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( phenotype(D, H) )
%   | | | then return 0.00882857207754911;  // std dev = 3.516, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.12814324153303558;  // std dev = 2.307, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.1648699894170069;  // std dev = 1.303, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.05345395558369115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, J), interaction(A, A) )
%   | | then return 0.35691286841550546;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.01895915820731422;  // std dev = 2.993, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.11081143762181442;  // std dev = 5.018, 105.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=42 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E) )
%   | | then if ( interaction(E, G) )
%   | | | then return 0.04057504155722874;  // std dev = 4.871, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | | else return 0.13844021041237226;  // std dev = 2.229, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.07609445016870851;  // std dev = 1.517, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.04853195627716286;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(A, K), enzyme(I, L) )
%   | | | then return -0.1974225824520691;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.08551706312050769;  // std dev = 1.931, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(M, A), interaction(A, M) )
%   | | | then return -0.13357220656552218;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0018329462484512225;  // std dev = 4.389, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.027110408827902503;  // std dev = 2.736, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.12495374115291999;  // std dev = 1.770, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(F, F), complex(F, H) )
%   | | | then return 0.13396683496253547;  // std dev = 3.665, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | | else return 0.02943583722179795;  // std dev = 5.050, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17926835047342815;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.030873237277993182;  // std dev = 1.105, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.09353877045110477;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1264806246189466;  // std dev = 1.795, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15', 'minutes', 'and', '35.561', 'seconds']
Refined model CLL: -0.400655


******************************************
Best model found
******************************************
Results 

CLL : -0.341962 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 64.874 

Total Inference Time : 180.0517475605011 

Total revision time: 252.95161359214782
Best scored revision CLL: -0.342376


Results 

CLL : -0.341962 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 253.07360856437683 

Total Inference Time : 180.0517475605011 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.23
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.461, 340.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20597502205603066;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15316306007503702;  // std dev = 0.467, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1266309023289829;  // std dev = 8.422, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12262544129971309;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08900952106313692;  // std dev = 0.467, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06685563416804924;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08469394792817558;  // std dev = 0.476, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07506707970434338;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.795', 'seconds']
Parameter learned model CLL:-0.353703 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.236, 195, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.422, 223, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.32, 207, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 196, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.198, 190, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22684310018903814, nan], 'true': [nan, 0.22684310018903814], 'true,false': [nan, 0.22684310018903814]}
{'': [nan, 0.21830938665184493]}
{'': [nan, 0.21689158226486735], 'false': [0.21689158226486735, nan]}
{'': [nan, 0.22257834389636397], 'false': [0.22257834389636397, nan]}
{'': [nan, 0.2183093866518459]}
{'': [nan, 0.21618425550392276]}
{'': [0.22648888888888824, nan]}
{'': [0.2286084501827939, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 51.447
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( location(C, D), interaction(C, C) )
%   | then if ( complex(C, E) )
%   | | then return 0.18373033044834958;  // std dev = 0.469, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( location(F, D), interaction(F, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.11211718906776541;  // std dev = 0.435, 126.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=32 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( enzyme(G, I) )
%   | | then if ( location(A, J), location(G, J) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.16117923812981536;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( complex(A, K), complex(G, K) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.338918165868743;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else return 0.1402002171507944;  // std dev = 0.450, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( complex(A, G), enzyme(E, D) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.18770156530823243;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.03428002894164521;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, C), enzyme(H, I) )
%   | | | then return 0.2691927852655177;  // std dev = 2.264, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.4715632934345233;  // std dev = 1.581, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(J, C), interaction(J, A) )
%   | | then return 0.09175059931752791;  // std dev = 0.439, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(K, C), enzyme(A, L) )
%   | | | then return 0.33831998442920114;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16433938052677904;  // std dev = 2.831, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   else if ( interaction(A, M), phenotype(A, N) )
%   | then return 0.09158377323661344;  // std dev = 0.438, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | else return 0.15936409584257996;  // std dev = 0.473, 125.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.17639350577737978;  // std dev = 7.340, 228.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=86 */
%   | | | else return 0.10988571647100431;  // std dev = 3.574, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.06650568958213164;  // std dev = 2.263, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.1485201499763186;  // std dev = 2.764, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.3951160584839142;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.19660498728094095;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.07321123466704067;  // std dev = 2.318, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.31538576328211754;  // std dev = 1.910, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( location(A, M) )
%   | | | then return 0.07577062054044247;  // std dev = 6.156, 182.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=54 */
%   | | | else return 0.159975486897338;  // std dev = 2.081, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( interaction(A, A), phenotype(A, H) )
%   | | | then return 0.02324076224463852;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.13211442075149635;  // std dev = 4.812, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0890577222473354;  // std dev = 4.942, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | | else return 0.01881184341646937;  // std dev = 4.460, 100.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( enzyme(F, H), location(F, G) )
%   | | | then return 0.2245631085901774;  // std dev = 3.129, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | | else return 0.08705784190498038;  // std dev = 4.549, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.006954260587913044;  // std dev = 3.675, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.07415717668952236;  // std dev = 4.828, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A) )
%   | then if ( complex(A, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.019688513548171728;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08161592428667505;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.26693774922857044;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return 0.008932639295330978;  // std dev = 3.907, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | | else return 0.08935781600464575;  // std dev = 6.504, 182.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=67 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.06865729414222836;  // std dev = 1.820, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.03363610300546252;  // std dev = 2.082, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( location(D, E), complex(D, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.008010397123919358;  // std dev = 5.217, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
%   | | | else return -0.03855922608178827;  // std dev = 4.615, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.07128960946838415;  // std dev = 1.962, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.09593132818228975;  // std dev = 3.458, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then return 0.38906918460191503;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.13674850115180684;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.020844010415988042;  // std dev = 2.045, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(E, H) )
%   | | | then return 0.18241473487760618;  // std dev = 3.134, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | | else return -0.03335884067413885;  // std dev = 1.494, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, I), interaction(F, A) )
%   | | | then return 0.087586163100608;  // std dev = 3.259, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return -0.016064868241300278;  // std dev = 6.275, 191.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=55 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then return -0.06399108607135624;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.06873083627195571;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2448168913119453;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( phenotype(A, F), interaction(A, A) )
%   | | then return 0.4705880484954844;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, F), interaction(E, A) )
%   | | | then return -0.019712685507335344;  // std dev = 3.129, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.1435469396330311;  // std dev = 3.841, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), complex(H, I) )
%   | | | then return -0.004879806838273063;  // std dev = 6.111, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
%   | | | else return -0.15027151430465185;  // std dev = 1.299, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3612888128749306;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05381899180734542;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '39.645', 'seconds']
Refined model CLL: -0.393829


******************************************
Best model found
******************************************
Results 

CLL : -0.35471 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 51.447 

Total Inference Time : 152.2611997127533 

Total revision time: 215.0450913448334
Best scored revision CLL: -0.353703


Results 

CLL : -0.35471 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 215.1670863170624 

Total Inference Time : 152.2611997127533 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.328
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1988896758402513;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.171656905879914;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.138946101616768;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11756637874115042;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08761985459551708;  // std dev = 0.468, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09078320965585739;  // std dev = 0.475, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05054079630353647;  // std dev = 0.467, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04271335842874285;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.351', 'seconds']
Parameter learned model CLL:-0.347319 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.788, 178, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.839, 185, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.832, 184, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.467, 195, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.893, 193, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22463648834019337, nan], 'true': [nan, 0.22463648834019337], 'true,false': [nan, 0.22463648834019337]}
{'': [nan, 0.22423441946596312]}
{'': [nan, 0.2218196509794211], 'false': [0.2218196509794211, nan]}
{'': [nan, 0.22222222222222043], 'false': [0.22222222222222043, nan]}
{'': [nan, 0.21900416584011173]}
{'': [nan, 0.22543996435731675]}
{'': [0.21780038606757335, nan]}
{'': [0.21860264696829718, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.583
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), interaction(A, E) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(H, D), interaction(H, I) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(J, A), complex(A, K) )
%   | then return 0.12345505754849105;  // std dev = 0.441, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.2812258581764354;  // std dev = 0.494, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return 0.1717082571334092;  // std dev = 0.464, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( phenotype(A, E), phenotype(C, F) )
%   | then return 0.5080607839645883;  // std dev = 0.460, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else if ( complex(C, G), complex(A, G) )
%   | | then if ( interaction(C, H), enzyme(H, D) )
%   | | | then return 0.34244648232711894;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5091131489937856;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, I), complex(I, J) )
%   | | | then return 0.09881436284790039;  // std dev = 1.480, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2485816862956519;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( interaction(A, K), interaction(L, A) )
%   | then return 0.08907471858338266;  // std dev = 0.433, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(M, A), complex(A, N) )
%   | | then if ( interaction(P, M), interaction(M, P) )
%   | | | then return 0.5091131489937856;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.21402168407433858;  // std dev = 2.710, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.17067677010954335;  // std dev = 0.474, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.14861515731139724;  // std dev = 5.603, 134.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=48 */
%   | | | else return 0.08634299068922316;  // std dev = 5.581, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.06604017223689419;  // std dev = 1.608, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.010976929460956715;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.2556531614766557;  // std dev = 1.750, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.074284444699102;  // std dev = 2.646, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return 0.2730099230003209;  // std dev = 1.590, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1275907382182999;  // std dev = 2.716, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.4222021991455773;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11458227670193755;  // std dev = 5.766, 150.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=50 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return -0.008745453952897688;  // std dev = 4.169, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return 0.1454244011137354;  // std dev = 2.600, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06773396140239266;  // std dev = 4.178, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.11816310925442078;  // std dev = 4.583, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( location(F, H), complex(A, I) )
%   | | | then return 0.1663163231833489;  // std dev = 3.136, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.060342803451426966;  // std dev = 3.798, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return -0.021170319051601764;  // std dev = 3.801, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.05751212430352081;  // std dev = 4.838, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), phenotype(E, F) )
%   | | then if ( enzyme(A, G), interaction(A, A) )
%   | | | then return -0.22273301013792604;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08418070358910741;  // std dev = 4.433, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06059285994568258;  // std dev = 2.159, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.09811246792995175;  // std dev = 1.993, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), interaction(L, L) )
%   | | | then return 0.27571297825601243;  // std dev = 1.884, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.15234525641304333;  // std dev = 3.764, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.029976428993681508;  // std dev = 2.228, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.10923068057520517;  // std dev = 2.369, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), enzyme(A, D) )
%   | then return -0.22633741828344717;  // std dev = 0.457, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), location(E, G) )
%   | | | then return -0.09592213121110289;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.0123889614154509;  // std dev = 2.259, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.08287768563853548;  // std dev = 4.716, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | | | else return 0.01962767787013099;  // std dev = 5.590, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(G, I) )
%   | | | then return 0.03941879051675769;  // std dev = 1.925, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.3405827965829417;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.10756518742292921;  // std dev = 3.226, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.18835974790707125;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( complex(L, N), enzyme(L, P) )
%   | | | then return 0.17012281077162125;  // std dev = 2.064, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.023634414086473602;  // std dev = 3.332, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( interaction(Q, A), interaction(Q, Q) )
%   | | | then return 0.1780820983395453;  // std dev = 1.420, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.014858950897703933;  // std dev = 5.430, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.01929380536693739;  // std dev = 1.777, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.10912432944736562;  // std dev = 1.930, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( phenotype(E, I) )
%   | | | then return -0.0010283461807032372;  // std dev = 3.280, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.06446756106733399;  // std dev = 2.871, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( complex(J, L), interaction(J, M) )
%   | | | then return -0.08563839381571613;  // std dev = 2.086, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.0874504036999799;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( location(A, N) )
%   | | | then return 0.10441541431288984;  // std dev = 5.027, 106.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=42 */
%   | | | else return -0.07269401651865895;  // std dev = 1.522, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '16.661', 'seconds']
Refined model CLL: -0.388028


******************************************
Best model found
******************************************
Results 

CLL : -0.347158 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.583 

Total Inference Time : 49.49184536933899 

Total revision time: 92.14168380355835
Best scored revision CLL: -0.347319


Results 

CLL : -0.347158 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 92.26367877578735 

Total Inference Time : 49.49184536933899 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.771
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20353046120392915;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16746187593517997;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14801649232634678;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1212011255073969;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10806875638522498;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0837347789063113;  // std dev = 0.475, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04802625528663605;  // std dev = 0.468, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0718804802308397;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.448', 'seconds']
Parameter learned model CLL:-0.363021 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.503, 163, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.527, 166, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.542, 168, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.468, 180, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.437, 155, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22609312753020194, nan], 'true': [nan, 0.22609312753020194], 'true,false': [nan, 0.22609312753020194]}
{'': [nan, 0.2230834960937506]}
{'': [nan, 0.2248047367094976], 'false': [0.2248047367094976, nan]}
{'': [nan, 0.223944447888893], 'false': [0.223944447888893, nan]}
{'': [nan, 0.22652185223725319]}
{'': [nan, 0.22523452008698455]}
{'': [0.2187800327887379, nan]}
{'': [0.22950706771577584, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.066
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(D, C) )
%   | then return 0.0010060779566550774;  // std dev = 0.350, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return 0.18650714405473565;  // std dev = 0.470, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( interaction(A, I), interaction(G, I) )
%   | | | then return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.13265873902108097;  // std dev = 3.187, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( phenotype(A, J), enzyme(E, K) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return 0.09596109035963751;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( location(E, D) )
%   | | | then return 0.23389575896008105;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10040529557005502;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.43389575896008103;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.19107875847663644;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.4337386289033884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, J) )
%   | then if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.1931540669465878;  // std dev = 0.481, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | else return 0.09310866769904104;  // std dev = 0.446, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.08433069218217039;  // std dev = 0.439, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.10777583496632533;  // std dev = 4.081, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | | else return 0.16692620821035775;  // std dev = 6.259, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then if ( enzyme(A, G), complex(F, H) )
%   | | | then return 0.21429585899089093;  // std dev = 1.845, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.05805974304440443;  // std dev = 4.138, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.10179540737546694;  // std dev = 2.604, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.31927865651486564;  // std dev = 2.626, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.09056410145820454;  // std dev = 1.871, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.29557101425040444;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.006784374947815227;  // std dev = 2.737, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.07351013690692923;  // std dev = 2.908, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(G, A), complex(A, H) )
%   | | | then return -0.02662218118485008;  // std dev = 1.979, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.0883949664716509;  // std dev = 3.388, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07809682981893806;  // std dev = 3.929, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.17784645441440744;  // std dev = 4.860, 98.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), complex(G, I) )
%   | | | then return 0.07511014563864685;  // std dev = 3.332, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.0073036192789403915;  // std dev = 4.492, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.16847829154499974;  // std dev = 2.426, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.06553604784726089;  // std dev = 4.517, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), enzyme(G, I) )
%   | | | then return 0.5510431063331948;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1967445717923232;  // std dev = 1.935, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(D, J), interaction(J, D) )
%   | | | then return -0.011431072971939895;  // std dev = 2.581, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.14722821082862195;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( enzyme(A, L), complex(A, M) )
%   | | | then return -0.06644103215434916;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10538941164430103;  // std dev = 2.364, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.01925314453574045;  // std dev = 5.032, 123.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=35 */
%   | | | else return 0.03208978621167487;  // std dev = 3.452, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, G) )
%   | | | then return -0.04355976926396491;  // std dev = 1.959, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.08661606432380399;  // std dev = 2.054, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return -0.25748897510130947;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.16534415244953654;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.021260662096988247;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.045628698427785226;  // std dev = 2.597, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.024397246801632577;  // std dev = 2.291, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.06556954464091673;  // std dev = 5.394, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(H, F) )
%   | | | then return -0.0221670247510546;  // std dev = 4.606, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | | else return -0.16550283128423285;  // std dev = 1.555, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( enzyme(A, I), interaction(E, F) )
%   | | | then return 0.1880853086690679;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 6.219937531139465E-4;  // std dev = 3.494, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A), phenotype(A, K) )
%   | | | then return 0.21553430673797325;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.012266171349135976;  // std dev = 3.114, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return -0.05362768237807832;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17238898175524198;  // std dev = 2.650, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), interaction(H, E) )
%   | | then if ( interaction(I, H) )
%   | | | then return -0.03414388317823955;  // std dev = 4.009, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.3655978717876602;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(E, J), phenotype(A, K) )
%   | | | then return 0.17752365858297128;  // std dev = 2.157, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.019449145979197217;  // std dev = 4.014, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | else if ( complex(A, L) )
%   | | then if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.6595468864167612;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19033999872284663;  // std dev = 2.038, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, P), enzyme(A, Q) )
%   | | | then return -0.059136921008373415;  // std dev = 1.475, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09052420333272344;  // std dev = 3.022, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '37.563', 'seconds']
Refined model CLL: -0.401943


******************************************
Best model found
******************************************
Results 

CLL : -0.362328 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.066 

Total Inference Time : 45.82719087600708 

Total revision time: 85.37929497909546
Best scored revision CLL: -0.363021


Results 

CLL : -0.362328 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 85.50128995132447 

Total Inference Time : 45.82719087600708 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.57
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19405627100684728;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1687548005745751;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1491954339975457;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11714070699492095;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11269671683143405;  // std dev = 0.477, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10483801033665352;  // std dev = 0.481, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04046329560108912;  // std dev = 0.466, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03580620272725741;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.236', 'seconds']
Parameter learned model CLL:-0.354391 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.601, 172, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.571, 168, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.616, 174, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.466, 186, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.679, 183, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.223073597590973, nan], 'true': [nan, 0.223073597590973], 'true,false': [nan, 0.223073597590973]}
{'': [nan, 0.2230735975909731]}
{'': [nan, 0.22477508650518999], 'false': [0.22477508650518999, nan]}
{'': [nan, 0.2222222222222202], 'false': [0.2222222222222202, nan]}
{'': [nan, 0.22731891421106337]}
{'': [nan, 0.23109375000000218]}
{'': [0.21712353580485227, nan]}
{'': [0.21839506172839634, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.056
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), location(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return 0.3126943896449669;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.10814893509951218;  // std dev = 0.433, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then return 0.14386322081379807;  // std dev = 0.452, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return 0.07243464938522651;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.22089403313872716;  // std dev = 4.856, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, A) )
%   | then return 0.18276850680631296;  // std dev = 0.478, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | else return 0.07082839819678605;  // std dev = 0.439, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   else if ( complex(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), phenotype(G, F) )
%   | | then return 0.5756090088199957;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.18796267055500457;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.32412000386656814;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.011134104502422276;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2717072719408657;  // std dev = 2.480, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.13672762087627652;  // std dev = 4.634, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return 0.0108960456336737;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), location(F, G) )
%   | | | then return 0.11701970960717668;  // std dev = 7.398, 251.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=80 */
%   | | | else return 0.2797718992383305;  // std dev = 1.948, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(D, F), interaction(G, A) )
%   | | then if ( complex(G, H), interaction(G, G) )
%   | | | then return 0.12780177118669636;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 8.136817435180033E-4;  // std dev = 2.411, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(D, D), phenotype(A, I) )
%   | | | then return 0.2468064714567791;  // std dev = 0.996, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.054929685899515836;  // std dev = 2.097, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( enzyme(A, K), complex(J, L) )
%   | | | then return 0.19923460630253326;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.04470329173385832;  // std dev = 3.425, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.19697483558147263;  // std dev = 3.584, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.14244996464253493;  // std dev = 4.267, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, H), phenotype(A, I) )
%   | | | then return -0.0032712039130439984;  // std dev = 3.883, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.06745068492449052;  // std dev = 2.772, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.04594863069561939;  // std dev = 3.586, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.12602287201522666;  // std dev = 4.906, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( complex(A, G), interaction(F, H) )
%   | | | then return 0.06611669411518639;  // std dev = 1.858, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.2335555099391999;  // std dev = 3.557, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.019072793046423456;  // std dev = 3.167, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.0885253816376939;  // std dev = 5.351, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.034303670659599515;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.13335626187636057;  // std dev = 2.193, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( phenotype(G, D), enzyme(G, H) )
%   | | | then return -0.011341754702928083;  // std dev = 4.582, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return 0.31325686345954207;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), interaction(J, K) )
%   | | | then return 0.22884175629214454;  // std dev = 2.152, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.022035071071009233;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.016896214352922777;  // std dev = 1.711, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.07968644401138787;  // std dev = 4.382, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(D, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, G) )
%   | | | then return 0.0681955268559787;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20624637833079457;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(A, E), phenotype(A, I) )
%   | | | then return -0.11354426307975177;  // std dev = 2.072, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.014657754156155384;  // std dev = 3.511, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(A, L), phenotype(J, L) )
%   | | | then return -0.04585478363400221;  // std dev = 2.294, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.06887155672445763;  // std dev = 5.568, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
%   | | else return 0.1916411971536455;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), interaction(E, G) )
%   | | then if ( phenotype(E, H), phenotype(G, H) )
%   | | | then return 0.008714089237542756;  // std dev = 4.370, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | | else return 0.240636447133021;  // std dev = 2.038, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.5147270911120788;  // std dev = 0.953, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.15307250215837953;  // std dev = 2.191, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( complex(A, L), enzyme(J, M) )
%   | | | then return -0.05041637425205567;  // std dev = 1.475, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1472065906779643;  // std dev = 2.556, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.12332589540406368;  // std dev = 1.994, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.004613585686248975;  // std dev = 3.462, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return 0.11388530242635501;  // std dev = 3.300, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return -0.044985814376176714;  // std dev = 1.925, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return -0.06690977433562925;  // std dev = 2.920, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 5.649504322608663E-4;  // std dev = 5.699, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | else if ( interaction(A, A) )
%   | | then return -0.25331440561077573;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1123979343558779;  // std dev = 1.111, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.16196992704123572;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '40.891', 'seconds']
Refined model CLL: -0.400748


******************************************
Best model found
******************************************
Results 

CLL : -0.353996 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.056 

Total Inference Time : 39.82572674751282 

Total revision time: 79.87536151504517
Best scored revision CLL: -0.354391


Results 

CLL : -0.353996 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 79.93481333351136 

Total Inference Time : 39.82572674751282 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.167
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20138325853185224;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1728085734338311;  // std dev = 0.474, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13536126347671595;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10922282280472176;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09532655569484122;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09660170070277543;  // std dev = 0.477, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.054967621014346865;  // std dev = 0.469, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08414974181048335;  // std dev = 8.119, 284.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.571', 'seconds']
Parameter learned model CLL:-0.361195 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.265, 199, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.353, 212, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.379, 216, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.469, 215, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.119, 180, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22542452265028698, nan], 'true': [nan, 0.22542452265028698], 'true,false': [nan, 0.22542452265028698]}
{'': [nan, 0.22471378661649755]}
{'': [nan, 0.2207979490466319], 'false': [0.2207979490466319, nan]}
{'': [nan, 0.21937499999999624], 'false': [0.21937499999999624, nan]}
{'': [nan, 0.2211539430587062]}
{'': [nan, 0.22719697310932005]}
{'': [0.21973054510077322, nan]}
{'': [0.23209680618924852, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.343
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( phenotype(A, D) )
%   | then if ( complex(E, C), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( complex(H, C), interaction(H, I) )
%   | | then if ( complex(I, C), interaction(A, I) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.17794588941423448;  // std dev = 0.466, 197.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.028606818452712977;  // std dev = 0.400, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.03913988965244949;  // std dev = 2.643, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.11540517666161686;  // std dev = 2.393, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, C) )
%   | | | then return 0.32989642258483814;  // std dev = 1.424, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16841155531211113;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.08632085846152043;  // std dev = 3.535, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.14121914304912628;  // std dev = 6.096, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
%   else if ( complex(A, J) )
%   | then return 0.5655730792056275;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.23507822197877778;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.16960953164059817;  // std dev = 7.238, 226.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=82 */
%   | | | else return 0.10613479908622853;  // std dev = 3.901, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.1937185426331797;  // std dev = 2.386, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.10525528434897613;  // std dev = 3.032, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( complex(I, D), interaction(I, J) )
%   | | | then return -0.047327484185331156;  // std dev = 2.502, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.14084463126040808;  // std dev = 2.254, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( enzyme(L, M), complex(L, N) )
%   | | | then return 0.22872993719071563;  // std dev = 2.808, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.06884967339705286;  // std dev = 3.897, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else if ( interaction(A, P), interaction(P, A) )
%   | | | then return 0.5338048822229086;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15260345967263378;  // std dev = 4.074, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( enzyme(H, F), complex(H, I) )
%   | | | then return 0.15001323141756637;  // std dev = 3.299, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.533068583482883;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.035882632416531744;  // std dev = 5.275, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | | else return 0.09391470327633754;  // std dev = 5.421, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.03170082162976691;  // std dev = 4.252, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | | else return 0.11694850217844567;  // std dev = 6.146, 161.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=60 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.09738865548050166;  // std dev = 2.718, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.05504016455197328;  // std dev = 2.503, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, D), location(G, E) )
%   | | | then return 0.09459799414581044;  // std dev = 3.361, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.2764196595004966;  // std dev = 1.803, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.024680017543687396;  // std dev = 2.982, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.08514325147735056;  // std dev = 4.026, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.06834416864003401;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.14971032442761315;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.16569114551324773;  // std dev = 2.561, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.006959713155882758;  // std dev = 4.249, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( phenotype(F, E), interaction(F, F) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return 0.03462175298486605;  // std dev = 2.946, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return -0.06733690026772701;  // std dev = 2.093, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.2237494202515875;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), complex(J, L) )
%   | | | then return 0.11105444048838688;  // std dev = 4.703, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
%   | | | else return 0.03102084917006337;  // std dev = 5.080, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.4467851417605957;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08310920745085922;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then if ( complex(G, H), phenotype(G, E) )
%   | | | then return 0.0684159071730118;  // std dev = 2.345, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.03842226752437715;  // std dev = 1.696, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( phenotype(I, E), interaction(A, I) )
%   | | | then return 0.6660717062527185;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08698620211705795;  // std dev = 2.432, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), interaction(J, L) )
%   | | | then return -0.035983313984234405;  // std dev = 2.269, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.15775886138026726;  // std dev = 1.829, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.03485624166581754;  // std dev = 6.231, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   | | | else return -0.06071106349917899;  // std dev = 2.446, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), complex(G, E) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return -0.1412869377884019;  // std dev = 2.178, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.04046371607323081;  // std dev = 1.823, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, F) )
%   | | | then return 0.021001237439076795;  // std dev = 2.676, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.13769404605907012;  // std dev = 1.944, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.1471559070809368;  // std dev = 2.634, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return -0.06063044431877749;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.08075428549629549;  // std dev = 2.476, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.05083467683459427;  // std dev = 5.927, 155.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '19.868', 'seconds']
Refined model CLL: -0.397609


******************************************
Best model found
******************************************
Results 

CLL : -0.362172 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.343 

Total Inference Time : 87.07727193832397 

Total revision time: 133.47580624580382
Best scored revision CLL: -0.361195


Results 

CLL : -0.362172 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 133.53525806427 

Total Inference Time : 87.07727193832397 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.37
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.463, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2053187464202652;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17455728576190363;  // std dev = 0.475, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12480229436007624;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11598182730120345;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11867523943176521;  // std dev = 0.478, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08105282614207047;  // std dev = 0.473, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.060364511665040636;  // std dev = 0.471, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03883236870311652;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.198', 'seconds']
Parameter learned model CLL:-0.353239 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.75, 173, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.913, 196, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.846, 186, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.478, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 184, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.887, 192, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22664293342826763, nan], 'true': [nan, 0.22664293342826763], 'true,false': [nan, 0.22664293342826763]}
{'': [nan, 0.2254399643573204]}
{'': [nan, 0.21739969135802417], 'false': [0.21739969135802417, nan]}
{'': [nan, 0.22141711091558652], 'false': [0.22141711091558652, nan]}
{'': [nan, 0.22863905325443898]}
{'': [nan, 0.22383217993079407]}
{'': [0.22222222222222046, nan]}
{'': [0.21900416584011262, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.812
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), enzyme(C, F) )
%   | then return 0.10814893509951236;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, D), enzyme(A, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.15360348055405781;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(D, A), complex(A, J) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.29650509948307296;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=32 */
%   else if ( phenotype(A, K) )
%   | then if ( phenotype(L, K), interaction(A, L) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12737970433028153;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else return 0.09410399127928734;  // std dev = 0.425, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.16225997614560042;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( complex(A, F) )
%   | | then return 0.5498569100086582;  // std dev = 0.445, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(C, G), location(A, H) )
%   | | | then return 0.10944794019839156;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2895645982917878;  // std dev = 1.642, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then return 0.10879371499522397;  // std dev = 0.447, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then if ( interaction(M, A), location(M, N) )
%   | | | then return 0.3587608008202908;  // std dev = 2.172, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.06809514978507125;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, P), interaction(Q, A) )
%   | | | then return 0.2846663892521679;  // std dev = 1.664, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.13988060842050506;  // std dev = 4.971, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.2013083646372323;  // std dev = 2.801, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.11082292765254967;  // std dev = 7.381, 256.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( enzyme(D, F), enzyme(A, F) )
%   | | then if ( interaction(D, D), complex(D, G) )
%   | | | then return 0.4564818051120527;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11483981459759514;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, H), interaction(H, I) )
%   | | | then return -0.007232510139974878;  // std dev = 3.528, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | | else return 0.1866050237190148;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( location(J, K), location(A, K) )
%   | | | then return 0.4935810953480572;  // std dev = 1.207, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2922911290028638;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.0981075057671242;  // std dev = 4.935, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0.148539248939779;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.029459100514326545;  // std dev = 2.478, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.10187641801859916;  // std dev = 2.567, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.20806525737243203;  // std dev = 2.393, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.09847823450564493;  // std dev = 6.503, 189.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.05474333724288695;  // std dev = 3.592, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.14709159387229837;  // std dev = 3.348, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.09149674241915554;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.05305879666280141;  // std dev = 5.839, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(D, F), interaction(G, E) )
%   | | then if ( interaction(A, H), interaction(I, G) )
%   | | | then return 0.06256607750181067;  // std dev = 2.543, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.2177167798292803;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.209076439672579;  // std dev = 1.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.005340801083366919;  // std dev = 4.951, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then if ( interaction(M, M) )
%   | | | then return 0.11505450086362495;  // std dev = 1.701, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.5113488419235099;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.13172962309073435;  // std dev = 2.358, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.07190371022650752;  // std dev = 3.488, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.047984865512959385;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.17637931338500137;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, D) )
%   | | | then return -0.02619694141008112;  // std dev = 1.944, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.035612505130786135;  // std dev = 3.187, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( location(A, I), phenotype(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.009357580992845995;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2498414506404263;  // std dev = 2.495, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.010752660741457568;  // std dev = 4.405, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.10263482046460351;  // std dev = 3.978, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.15447948920292245;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.0532471479543561;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(E, I) )
%   | | | then return 0.03557671744264114;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.059764491372472806;  // std dev = 1.945, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), interaction(L, M) )
%   | | | then return 0.011436383517254617;  // std dev = 3.218, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.08117967739741279;  // std dev = 1.774, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.10433958685539592;  // std dev = 3.719, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.05339727886115965;  // std dev = 4.843, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.023763715426103463;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.1122935125985274;  // std dev = 2.351, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(I, E), location(A, F) )
%   | | | then return 0.04993422712110073;  // std dev = 4.466, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return -0.05410644441413792;  // std dev = 4.272, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( complex(A, L) )
%   | | | then return -0.12349788739995488;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.3254762645487617;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.05609156221678924;  // std dev = 2.384, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.20538822752951819;  // std dev = 2.223, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16', 'minutes', 'and', '27.700', 'seconds']
Refined model CLL: -0.394315


******************************************
Best model found
******************************************
Results 

CLL : -0.353082 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.812 

Total Inference Time : 60.258167028427124 

Total revision time: 107.26800378036499
Best scored revision CLL: -0.353239


Results 

CLL : -0.353082 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 107.32745559883118 

Total Inference Time : 60.258167028427124 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.829
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16311347410660398;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1580063635259167;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1237558942468307;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14742513712731178;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10582908361615156;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09738452568783927;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05403694944421573;  // std dev = 0.467, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06658690668100957;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.510', 'seconds']
Parameter learned model CLL:-0.352703 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.731, 196, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.707, 192, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.462, 158, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.467, 181, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.503, 163, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2119611689552847, nan], 'true': [nan, 0.2119611689552847], 'true,false': [nan, 0.2119611689552847]}
{'': [nan, 0.21792158609935366]}
{'': [nan, 0.2136535376015718], 'false': [0.2136535376015718, nan]}
{'': [nan, 0.22823165815641017], 'false': [0.22823165815641017, nan]}
{'': [nan, 0.2230834960937487]}
{'': [nan, 0.226521852237255]}
{'': [0.2183506571841363, nan]}
{'': [0.22609312753020142, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 27.961
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), location(A, F) )
%   | then return 0.09911279052119894;  // std dev = 0.428, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | else return 0.4137044906550678;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), enzyme(H, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.45814893509951227;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( interaction(M, A), phenotype(M, N) )
%   | | then if ( interaction(A, P) )
%   | | | then return 0.27920156667845974;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.09219148829100171;  // std dev = 0.423, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), complex(D, E) )
%   | then return 0.13113660826887305;  // std dev = 0.457, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | else return -0.0011502549443270875;  // std dev = 0.401, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   else if ( complex(A, F) )
%   | then if ( location(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), phenotype(I, J) )
%   | | | then return 0.34565057405371924;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09565057405371924;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.11015450292650464;  // std dev = 0.447, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), phenotype(L, M) )
%   | | | then return 0.19628149542172688;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.0865921603620758;  // std dev = 1.731, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.34655182203803486;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17988515537136818;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), interaction(G, A) )
%   | | | then return 0.15418771457054262;  // std dev = 6.749, 201.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=69 */
%   | | | else return 0.08119561178416124;  // std dev = 3.509, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, E) )
%   | | then if ( phenotype(D, F), interaction(D, G) )
%   | | | then return 0.10617072067385318;  // std dev = 2.461, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.3000274236458158;  // std dev = 1.419, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.02981153038081142;  // std dev = 1.796, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.069951107264928;  // std dev = 3.065, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), interaction(L, J) )
%   | | | then return 0.3218481417171634;  // std dev = 2.838, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.13710621271560183;  // std dev = 3.012, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( location(A, M) )
%   | | | then return 0.11013154183145073;  // std dev = 3.941, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.3120293452218974;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( complex(H, G), interaction(I, H) )
%   | | | then return 8.0205112472912E-4;  // std dev = 3.381, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.26528697616932934;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, J), interaction(A, A) )
%   | | | then return 0.42497712683620037;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12405937286982333;  // std dev = 6.537, 185.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return 0.5826603246146026;  // std dev = 0.954, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1000479641040202;  // std dev = 2.769, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.11451219579751129;  // std dev = 3.053, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.02660839604115045;  // std dev = 6.210, 188.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( enzyme(G, D), interaction(A, G) )
%   | | | then return 0.16945012014887517;  // std dev = 1.323, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.003950832282789095;  // std dev = 1.888, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.03748711690453604;  // std dev = 1.602, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2042496285351035;  // std dev = 2.903, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, L) )
%   | | | then return 0.16238296881110056;  // std dev = 3.183, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return -0.048387423350717385;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.055123085655554696;  // std dev = 4.018, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return -0.01789022756158299;  // std dev = 3.358, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, D), phenotype(D, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.056475504154690465;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.38127251518467364;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), enzyme(D, G) )
%   | | | then return -0.13083962621533038;  // std dev = 1.248, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.020815551027689498;  // std dev = 4.326, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), enzyme(H, J) )
%   | | | then return 0.04497697979281653;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1790139747319708;  // std dev = 2.744, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.14502617413745872;  // std dev = 2.210, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.04254246323199396;  // std dev = 4.216, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( phenotype(F, E), interaction(G, F) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.18996311024808774;  // std dev = 2.186, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.06576451644275852;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(I, F), interaction(I, A) )
%   | | | then return 0.10203891154918572;  // std dev = 1.517, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.03884068608550572;  // std dev = 4.555, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.3661573241813416;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.026869961029617598;  // std dev = 3.793, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.13827885642352092;  // std dev = 2.950, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(H, F), location(A, I) )
%   | | | then return -0.04719333134960928;  // std dev = 2.881, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.16708935056141683;  // std dev = 1.991, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.0432633432984991;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.09862766725496896;  // std dev = 3.308, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(L, A), phenotype(A, M) )
%   | | then if ( interaction(N, L), phenotype(L, P) )
%   | | | then return 0.03037621991821653;  // std dev = 2.609, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.1887943131433708;  // std dev = 2.722, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( phenotype(A, Q), complex(A, R) )
%   | | | then return -0.08635315607459215;  // std dev = 1.729, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.06335657240765795;  // std dev = 3.617, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '34.177', 'seconds']
Refined model CLL: -0.414251


******************************************
Best model found
******************************************
Results 

CLL : -0.351982 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.961 

Total Inference Time : 48.76310610771179 

Total revision time: 85.09781579017638
Best scored revision CLL: -0.352703


Results 

CLL : -0.351982 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 85.15726760864257 

Total Inference Time : 48.76310610771179 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.716
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17566718327469402;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1649372662490842;  // std dev = 0.470, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1864402083984569;  // std dev = 7.374, 232.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11204671306313436;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12249362888678335;  // std dev = 0.480, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056062311706035095;  // std dev = 0.466, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05837327072336773;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04415413193899556;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.100', 'seconds']
Parameter learned model CLL:-0.353597 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.706, 187, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.374, 145, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.63, 176, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 176, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.644, 178, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21670041025094652, nan], 'true': [nan, 0.21670041025094652], 'true,false': [nan, 0.21670041025094652]}
{'': [nan, 0.2209452479338843]}
{'': [nan, 0.2343750000000021], 'false': [0.2343750000000021, nan]}
{'': [nan, 0.22137084532087933], 'false': [0.22137084532087933, nan]}
{'': [nan, 0.23067784645581096]}
{'': [nan, 0.21670041025094575]}
{'': [0.22137084532087906, nan]}
{'': [0.2205197579209675, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.111
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(C, C), location(A, E) )
%   | then return 0.06867525088898598;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, C) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.1374282143787903;  // std dev = 0.449, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | else if ( interaction(A, L), complex(A, M) )
%   | | then if ( interaction(L, N), enzyme(A, P) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15162719596907753;  // std dev = 0.455, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, C), complex(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.165613126770861;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.34058293266486406;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.14463532132513293;  // std dev = 0.463, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   else if ( interaction(A, H), location(H, I) )
%   | then if ( enzyme(A, J), enzyme(H, J) )
%   | | then return 0.035132978639302564;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(H, K) )
%   | | | then return 0.3625293431199815;  // std dev = 2.043, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.8092384256307018;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, L) )
%   | | then return 0.03867100894942292;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.2553376756160895;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.179300044829219;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.08385908948116798;  // std dev = 4.540, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | | else return 0.15543110825118955;  // std dev = 6.122, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.41917528990620423;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.07564619221085295;  // std dev = 2.532, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0.7860691503282292;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( complex(A, I), complex(G, I) )
%   | | | then return 0.2413384859711343;  // std dev = 1.665, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.10712921726983989;  // std dev = 6.158, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1588331759209452;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.0802957933286169;  // std dev = 1.601, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(H, F), enzyme(A, I) )
%   | | | then return 0.08479691800459171;  // std dev = 2.684, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.03259848911446443;  // std dev = 3.172, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.17595234545454275;  // std dev = 3.268, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.08065554421852336;  // std dev = 5.518, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, I) )
%   | | | then return 0.06916703182654402;  // std dev = 5.978, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
%   | | | else return 0.5024989792857124;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.33814859628742094;  // std dev = 2.105, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.12145796860797546;  // std dev = 3.532, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( enzyme(E, G), interaction(E, A) )
%   | | | then return 0.3072338881591733;  // std dev = 1.134, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.043790613287382305;  // std dev = 4.009, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return -9.163857466861247E-4;  // std dev = 3.635, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.06565526300046402;  // std dev = 5.136, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( location(J, K) )
%   | | | then return -0.1618855742624239;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.2671030272421154;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.012926001103327044;  // std dev = 1.154, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.1323666862712752;  // std dev = 2.366, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.05705360326428382;  // std dev = 1.692, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(D, J), interaction(A, J) )
%   | | | then return -0.1646272347980554;  // std dev = 1.303, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.02967921369387337;  // std dev = 2.556, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.27314177910613047;  // std dev = 2.175, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.11145330024777067;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else if ( enzyme(A, P) )
%   | | | then return -0.151160522955605;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.05019018753683837;  // std dev = 1.589, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), interaction(H, G) )
%   | | then if ( complex(G, I), phenotype(A, J) )
%   | | | then return 0.2622497949726189;  // std dev = 1.972, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.051652787644154305;  // std dev = 4.080, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else return -0.3094631171478828;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(A, A), complex(A, L) )
%   | | | then return 0.35979216181716756;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08600956234040785;  // std dev = 5.448, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.03269128467763521;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.2014030801110862;  // std dev = 1.276, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(A, A), complex(E, G) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.2155360305091887;  // std dev = 1.284, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.2433055841056937;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), interaction(E, E) )
%   | | | then return 0.02097655973892475;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.08876916079493752;  // std dev = 4.173, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | else if ( complex(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.031050838573200613;  // std dev = 2.395, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.2822392365178608;  // std dev = 1.840, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.04452028991137144;  // std dev = 3.537, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.05109733919510139;  // std dev = 3.552, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '23.616', 'seconds']
Refined model CLL: -0.408811


******************************************
Best model found
******************************************
Results 

CLL : -0.3532 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.111 

Total Inference Time : 57.531447410583496 

Total revision time: 97.51369867515564
Best scored revision CLL: -0.353597


Results 

CLL : -0.3532 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 97.69079551887512 

Total Inference Time : 57.531447410583496 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.184
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.481, 287.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19913254165688607;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17312319604275644;  // std dev = 0.474, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15206455253434817;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13666227556122132;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08249919306896167;  // std dev = 0.468, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07323480571097613;  // std dev = 0.471, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06986449881004335;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09188109131849206;  // std dev = 8.042, 275.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.943', 'seconds']
Parameter learned model CLL:-0.369675 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.279, 201, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.25, 197, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.191, 189, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 200, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.042, 171, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2247137866165031, nan], 'true': [nan, 0.2247137866165031], 'true,false': [nan, 0.2247137866165031]}
{'': [nan, 0.2247137866165025]}
{'': [nan, 0.2261343693778168], 'false': [0.2261343693778168, nan]}
{'': [nan, 0.22896015096273933], 'false': [0.22896015096273933, nan]}
{'': [nan, 0.21937500000000218]}
{'': [nan, 0.22151000040569643]}
{'': [0.22506925207756293, nan]}
{'': [0.2351603305785115, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.892
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(C, E) )
%   | then return 0.2110901115701006;  // std dev = 0.478, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | else return 0.11951257146314868;  // std dev = 0.439, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( complex(A, H) )
%   | | then if ( interaction(G, I), interaction(I, I) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.10814893509951236;  // std dev = 0.433, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.22656998773109083;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.15226658215833588;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then return 0.49804361489464094;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(F, D), interaction(F, G) )
%   | | then if ( complex(G, C) )
%   | | | then return 0.17004920364617995;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3293884178997607;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.20874113578563502;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08320549123154841;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then if ( phenotype(I, J), phenotype(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.22980548391326422;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.4998377106441317;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15574992406839705;  // std dev = 0.468, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else return 0.1423585512359734;  // std dev = 0.461, 231.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(A, G) )
%   | | | then return 0.113145564932857;  // std dev = 5.093, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | | else return 0.16080996219088825;  // std dev = 6.564, 190.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=66 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(A, E) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.10243072962963243;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.01244997957051981;  // std dev = 1.775, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(E, D), enzyme(E, H) )
%   | | | then return 0.23572963637132183;  // std dev = 2.107, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.08394734526022915;  // std dev = 5.608, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), phenotype(J, I) )
%   | | | then return 0.5421371602164129;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09421786320509791;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.1622625547034053;  // std dev = 4.541, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | | else return 0.053413192293505524;  // std dev = 2.253, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), interaction(A, A) )
%   | | then return 0.4692914213016723;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.10430337868295388;  // std dev = 7.226, 231.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=79 */
%   | | | else return 0.04522550591001913;  // std dev = 3.956, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(H, F), complex(A, I) )
%   | | | then return 0.2613529352351144;  // std dev = 2.296, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.09839637725860488;  // std dev = 4.434, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.055943676621432965;  // std dev = 5.603, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
%   | | | else return 0.1470894467003346;  // std dev = 3.210, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( interaction(G, D), complex(G, F) )
%   | | | then return 0.08357769514369846;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.04782312833468494;  // std dev = 2.445, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( complex(D, H), phenotype(D, I) )
%   | | | then return 0.04927912675563867;  // std dev = 6.585, 198.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=64 */
%   | | | else return 0.1182272223398106;  // std dev = 3.689, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | else if ( enzyme(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.04504580326570924;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.01921024741785865;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.24092235795152053;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.11153465333277819;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.11222797964802973;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.09437820990742456;  // std dev = 2.507, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(A, D), phenotype(A, I) )
%   | | | then return -6.386548579478263E-4;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.32108604074742686;  // std dev = 2.593, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, K), phenotype(J, L) )
%   | | | then return 0.0652025870176861;  // std dev = 4.525, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | | | else return 0.0015178538184712827;  // std dev = 4.843, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.31213096147923103;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04602587114199061;  // std dev = 1.991, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(A, F), phenotype(E, G) )
%   | | | then return -0.13860965445891524;  // std dev = 2.143, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.02926013690338229;  // std dev = 2.243, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(A, H), complex(E, I) )
%   | | | then return 0.3827415228154247;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.021282939839239536;  // std dev = 2.698, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.178511146239932;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.0017655826577958288;  // std dev = 2.807, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.12538989082897375;  // std dev = 4.203, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | | else return 0.007220648671966642;  // std dev = 4.883, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( complex(F, G), complex(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.04580878019533872;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.25978986978354884;  // std dev = 1.845, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(H, F), enzyme(H, I) )
%   | | | then return -0.005668216327982352;  // std dev = 4.946, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | | else return 0.09437983509930348;  // std dev = 2.881, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(L, A) )
%   | | | then return -0.17517354510475794;  // std dev = 1.597, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.0539164369166898;  // std dev = 2.539, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( location(A, M) )
%   | | | then return -0.020872733242652625;  // std dev = 4.409, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.12674113259479972;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '5.684', 'seconds']
Refined model CLL: -0.392892


******************************************
Best model found
******************************************
Results 

CLL : -0.370619 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.892 

Total Inference Time : 116.24403810501099 

Total revision time: 160.69959619140627
Best scored revision CLL: -0.369675


Results 

CLL : -0.370619 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 160.87669303512575 

Total Inference Time : 116.24403810501099 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.335
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.481, 252.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2291166770349941;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17377415813489705;  // std dev = 0.476, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.11148906567836127;  // std dev = 7.969, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09633009299514533;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0838554376570764;  // std dev = 0.465, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06742819726107566;  // std dev = 0.465, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07794854577159072;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07972252988367776;  // std dev = 7.694, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.543', 'seconds']
Parameter learned model CLL:-0.353262 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.607, 156, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.969, 205, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.951, 202, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 179, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.694, 166, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.23335067637877363, nan], 'true': [nan, 0.23335067637877363], 'true,false': [nan, 0.23335067637877363]}
{'': [nan, 0.22624229747300761]}
{'': [nan, 0.21381038216055118], 'false': [0.21381038216055118, nan]}
{'': [nan, 0.2150030080059225], 'false': [0.2150030080059225, nan]}
{'': [nan, 0.21659928656361405]}
{'': [nan, 0.21619961974941096]}
{'': [0.22423441946596362, nan]}
{'': [0.22943332732407917, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 36.932
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), phenotype(E, C) )
%   | then if ( enzyme(E, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(D, I), enzyme(A, J) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16117923812981538;  // std dev = 0.460, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( interaction(K, A), interaction(L, K) )
%   | then if ( enzyme(L, M), complex(A, N) )
%   | | then return 0.3819584589090361;  // std dev = 0.499, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else return 0.17545662740720383;  // std dev = 0.465, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else return 0.14050187627598296;  // std dev = 0.450, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then return 0.013509247596142018;  // std dev = 0.404, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(F, A), location(F, G) )
%   | | then return 0.17362927140860815;  // std dev = 0.478, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else return 0.06166365634931877;  // std dev = 0.429, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then if ( location(A, J), location(I, J) )
%   | | then return 0.5658994554432711;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, I), phenotype(K, H) )
%   | | | then return 0.30124636296209045;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.170337382669418;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then if ( enzyme(M, N), interaction(M, A) )
%   | | | then return 0.4716978748945917;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21991431455489388;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.13912241224355706;  // std dev = 0.461, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.21788490642867545;  // std dev = 2.752, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.12164720851849779;  // std dev = 7.341, 246.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.14493588149939227;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.02678672303298124;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(A, G) )
%   | | | then return -0.2161740335180372;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.08788810084908145;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, A), location(I, J) )
%   | | | then return 0.01302759304310954;  // std dev = 2.112, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.127516621726622;  // std dev = 2.714, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.08881680046454694;  // std dev = 4.716, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | | else return 0.19170937117802395;  // std dev = 4.772, 95.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(F, H), enzyme(H, I) )
%   | | | then return -0.0016597759764433995;  // std dev = 3.214, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.15220397270432445;  // std dev = 2.336, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.14715287302462454;  // std dev = 4.148, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0.09636493045145449;  // std dev = 5.223, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return -0.026844282351953453;  // std dev = 3.461, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.05016194269822005;  // std dev = 4.396, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.4011834793497228;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.09707285054086563;  // std dev = 5.339, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(F, G), enzyme(F, H) )
%   | | | then return -0.002759652429965709;  // std dev = 2.242, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.17916614856506735;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else return 0.7463699070219801;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), phenotype(K, J) )
%   | | | then return -0.11363117871834177;  // std dev = 1.547, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.10207625071138049;  // std dev = 3.994, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.04576531712689283;  // std dev = 2.645, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.016849583634022565;  // std dev = 4.663, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(A, H), interaction(I, G) )
%   | | | then return 0.10871161308856343;  // std dev = 2.408, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return -0.001866926271029776;  // std dev = 3.047, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( location(J, E), interaction(J, J) )
%   | | | then return 0.168366714212416;  // std dev = 2.590, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return -0.0025079259109375557;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( location(K, L), phenotype(A, M) )
%   | | | then return -0.133440585910195;  // std dev = 1.274, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.01703833405443183;  // std dev = 2.235, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.04515181551633724;  // std dev = 3.883, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return -0.009445654355809624;  // std dev = 4.170, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), location(A, F) )
%   | then if ( interaction(G, A), location(G, F) )
%   | | then if ( complex(A, H), complex(G, H) )
%   | | | then return -0.005301450635309928;  // std dev = 2.223, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.1095622272923007;  // std dev = 2.997, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.17174867191477738;  // std dev = 1.671, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.01461529090668302;  // std dev = 3.156, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.06891175704109345;  // std dev = 2.169, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.028760906058855406;  // std dev = 3.615, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.10577034610352805;  // std dev = 3.572, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.05138170138579364;  // std dev = 2.312, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.02615086208445671;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.38679301688946194;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.0726187825857151;  // std dev = 2.943, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.008545063774338888;  // std dev = 3.111, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return 0.21449523889127098;  // std dev = 2.101, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.009540253194725736;  // std dev = 2.637, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.029685079687553104;  // std dev = 2.089, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.05225875920402678;  // std dev = 4.980, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '12.933', 'seconds']
Refined model CLL: -0.386475


******************************************
Best model found
******************************************
Results 

CLL : -0.353105 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 36.932 

Total Inference Time : 60.210671186447144 

Total revision time: 108.0327926082611
Best scored revision CLL: -0.353262


Results 

CLL : -0.353105 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 108.20988945198059 

Total Inference Time : 60.210671186447144 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.842
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2210181334117476;  // std dev = 7.402, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18443217795209513;  // std dev = 0.479, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12956185660817215;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10441184207723302;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08474563014127265;  // std dev = 0.468, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10857330527042258;  // std dev = 0.481, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06050993311263403;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06624352727351157;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '54.853', 'seconds']
Parameter learned model CLL:-0.365239 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.402, 151, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.601, 176, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.622, 179, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 170, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.454, 157, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2311951432284721, nan], 'true': [nan, 0.2311951432284721], 'true,false': [nan, 0.2311951432284721]}
{'': [nan, 0.229082712929444]}
{'': [nan, 0.22049997086416806], 'false': [0.22049997086416806, nan]}
{'': [nan, 0.21920968316126901], 'false': [0.21920968316126901, nan]}
{'': [nan, 0.2187800327887375]}
{'': [nan, 0.23119514322847198]}
{'': [0.22308349609375017, nan]}
{'': [0.22865755558942708, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), interaction(D, E) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(E, E), enzyme(A, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2494532829255993;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.14981560176617895;  // std dev = 0.455, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.14628452831985136;  // std dev = 0.453, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.17698951480965672;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.23592671287729014;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), interaction(E, F) )
%   | then if ( interaction(F, A), interaction(E, A) )
%   | | then return 0.032614118356369494;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.245140169925284;  // std dev = 1.714, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.09786126041190617;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.014264371687088294;  // std dev = 0.445, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( complex(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.7592875984119623;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.383642300756567;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(I, M), complex(I, N) )
%   | | | then return -0.029524489473505652;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.21970487904302416;  // std dev = 4.560, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | else return 0.11657124505075127;  // std dev = 0.451, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), location(A, G) )
%   | | | then return 0.15591481783519678;  // std dev = 4.081, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return 0.09570525194952262;  // std dev = 6.451, 201.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=59 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.12554445053144733;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44013359390443085;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.029088667650707115;  // std dev = 2.491, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.1846116205261234;  // std dev = 1.503, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.2561330888182714;  // std dev = 2.031, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.7528795527933886;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.07982408969047733;  // std dev = 3.427, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.18775393742059285;  // std dev = 4.979, 103.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( interaction(H, F), phenotype(F, I) )
%   | | | then return -0.054940782983539875;  // std dev = 3.305, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return 0.15155802917596792;  // std dev = 1.970, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.2366149403619761;  // std dev = 1.803, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.08149330664930801;  // std dev = 6.272, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A), phenotype(A, G) )
%   | | | then return 0.11755103236317327;  // std dev = 1.389, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.048933623486980674;  // std dev = 2.849, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.004136330161722719;  // std dev = 3.351, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.1197892867060613;  // std dev = 5.916, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( location(E, D), interaction(A, E) )
%   | | then if ( complex(E, F), phenotype(E, G) )
%   | | | then return 0.11047611411286211;  // std dev = 3.322, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return -0.03714092893947218;  // std dev = 4.304, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.08887293083809887;  // std dev = 4.845, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
%   | | | else return 0.35069568215685026;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J) )
%   | | | then return -0.15014487437391047;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15132588547200998;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.06044049161577365;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), location(F, E) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.05670043397038234;  // std dev = 2.120, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.05775206902997094;  // std dev = 3.232, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.05796793742129598;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16619474112089425;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return 0.22560805850434618;  // std dev = 2.106, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.08895271816188073;  // std dev = 2.511, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.13902847073748364;  // std dev = 2.178, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.021369259530214645;  // std dev = 4.638, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then if ( phenotype(G, H), complex(A, I) )
%   | | | then return -0.11346277541517193;  // std dev = 2.450, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return -0.0012767092232068718;  // std dev = 2.126, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( enzyme(A, J), phenotype(E, K) )
%   | | | then return 0.14039301738083398;  // std dev = 2.094, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.013492147317091923;  // std dev = 3.043, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( interaction(A, L), complex(A, M) )
%   | | then if ( interaction(N, A) )
%   | | | then return -0.10247565786994477;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.03311782089721258;  // std dev = 1.972, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.2884018860188507;  // std dev = 1.997, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.06780836927179675;  // std dev = 4.524, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(A, F) )
%   | then if ( complex(F, G), phenotype(F, H) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.01509775976609497;  // std dev = 2.613, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.3832659483429383;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, I), interaction(I, A) )
%   | | | then return -0.26337642447932386;  // std dev = 1.550, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.10757353923289921;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then if ( phenotype(J, K), location(A, L) )
%   | | | then return 0.011400175654755039;  // std dev = 5.639, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | | else return -0.06976592040803213;  // std dev = 2.880, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.004446049646725496;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.24893971389625694;  // std dev = 1.472, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '6.377', 'seconds']
Refined model CLL: -0.404358


******************************************
Best model found
******************************************
Results 

CLL : -0.364553 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.634 

Total Inference Time : 37.46961951255798 

Total revision time: 78.1832343826294
Best scored revision CLL: -0.365239


Results 

CLL : -0.364553 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 78.36033122634888 

Total Inference Time : 37.46961951255798 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.458
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20476248091624435;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14656910113869365;  // std dev = 0.465, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.17533963610288159;  // std dev = 7.430, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14685826640321314;  // std dev = 7.430, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0786070315576225;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10136026906371025;  // std dev = 0.480, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08442813924074391;  // std dev = 0.481, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04561369974287124;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.151', 'seconds']
Parameter learned model CLL:-0.372122 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.54, 164, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.43, 151, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.43, 151, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.481, 152, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.563, 167, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22647259567308548, nan], 'true': [nan, 0.22647259567308548], 'true,false': [nan, 0.22647259567308548]}
{'': [nan, 0.21585538752362862]}
{'': [nan, 0.23192218063695966], 'false': [0.23192218063695966, nan]}
{'': [nan, 0.2319221806369602], 'false': [0.2319221806369602, nan]}
{'': [nan, 0.21881952985724154]}
{'': [nan, 0.23067784645581432]}
{'': [0.23150855202114903, nan]}
{'': [0.2251999503999025, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 25.631
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(C, C), phenotype(A, D) )
%   | then return 0.12285481745245355;  // std dev = 0.441, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1340110040650296;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.24839283753853675;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   else if ( interaction(J, A), complex(A, K) )
%   | then return 0.00814893509951222;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then return 0.058148935099512286;  // std dev = 0.400, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.21000078695136418;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), phenotype(D, F) )
%   | then if ( complex(D, G), phenotype(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.13484189477964006;  // std dev = 1.595, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4551070162061548;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.08370435612469793;  // std dev = 0.433, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( complex(A, J), interaction(D, D) )
%   | | then if ( location(D, C), complex(D, K) )
%   | | | then return 0.15005848812085154;  // std dev = 1.857, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.061833522829830075;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(L, D) )
%   | | | then return 0.21797302118650913;  // std dev = 5.297, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | | else return 0.4972826590140768;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, M), interaction(M, N) )
%   | then return 0.17801975679935475;  // std dev = 0.472, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0.040103612804772364;  // std dev = 0.407, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1532303453937161;  // std dev = 6.010, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   | | | else return 0.11310643070103166;  // std dev = 4.642, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A) )
%   | then if ( phenotype(A, D) )
%   | | then return 0.5486129183370472;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, E) )
%   | | | then return 0.18885910427295818;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.010109968252520796;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), enzyme(A, I) )
%   | | | then return -0.07367103834938617;  // std dev = 1.824, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.08053882241152002;  // std dev = 2.642, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18372036270809095;  // std dev = 2.709, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.09688866994338706;  // std dev = 6.109, 172.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=55 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.09348714606230901;  // std dev = 2.819, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.2681414397515219;  // std dev = 3.301, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.0198593518092037;  // std dev = 3.334, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.09643657708760998;  // std dev = 4.991, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.16246127841872154;  // std dev = 2.227, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.034798809097466396;  // std dev = 2.885, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( interaction(A, A), enzyme(A, H) )
%   | | | then return 0.32071054884258166;  // std dev = 1.132, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11531042728568504;  // std dev = 6.330, 168.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.3609089780172532;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23104352307040868;  // std dev = 1.231, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(I, D), interaction(I, J) )
%   | | | then return -0.002300280399823935;  // std dev = 2.232, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.33472408660764436;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.12925809472529964;  // std dev = 1.794, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.040827905041202615;  // std dev = 2.486, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.09921903833997177;  // std dev = 3.805, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.01490031512759242;  // std dev = 5.070, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return -0.23536333212227248;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.00197203912195245;  // std dev = 2.185, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.27560135357268833;  // std dev = 2.009, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.045815650461874385;  // std dev = 4.172, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | else if ( phenotype(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.03894035892578065;  // std dev = 2.202, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.037649191102572616;  // std dev = 2.575, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.057297325590751576;  // std dev = 3.035, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return -0.014846256756140926;  // std dev = 3.196, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.24989794354813716;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.08096479777055181;  // std dev = 1.744, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( enzyme(E, I), location(E, J) )
%   | | | then return -0.07686200883782435;  // std dev = 1.716, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.03902321857029017;  // std dev = 3.293, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, M), interaction(A, M) )
%   | | | then return -0.0073383805154482;  // std dev = 1.598, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.352354911531626;  // std dev = 1.578, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return -0.05194856688951538;  // std dev = 2.424, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.07515008001019004;  // std dev = 5.201, 115.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=43 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A), enzyme(A, E) )
%   | then if ( location(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.19735917390612584;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09387312393288609;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.044437027227293036;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( interaction(A, J), phenotype(J, H) )
%   | | | then return 0.03516098767215491;  // std dev = 2.502, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.04570262379829449;  // std dev = 3.122, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.16428478827895676;  // std dev = 1.764, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.022899334330823085;  // std dev = 6.046, 166.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '35.066', 'seconds']
Refined model CLL: -0.39781


******************************************
Best model found
******************************************
Results 

CLL : -0.371754 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.631 

Total Inference Time : 38.304240226745605 

Total revision time: 71.5064678325653
Best scored revision CLL: -0.372122


Results 

CLL : -0.371754 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 71.628475440979 

Total Inference Time : 38.304240226745605 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.202
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18314893509950927;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18335368380755127;  // std dev = 0.477, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14842926997556574;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11879511700252217;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09904026061342706;  // std dev = 0.473, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05544754765652505;  // std dev = 0.463, 334.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06670270095417646;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06110875807022327;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.100', 'seconds']
Parameter learned model CLL:-0.35141 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.379, 216, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.279, 201, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.313, 206, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.463, 230, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 208, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.279, 201, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21937500000000196, nan], 'true': [nan, 0.21937500000000196], 'true,false': [nan, 0.21937500000000196]}
{'': [nan, 0.22719697310931702]}
{'': [nan, 0.22471378661649624], 'false': [0.22471378661649624, nan]}
{'': [nan, 0.22293444328824114], 'false': [0.22293444328824114, nan]}
{'': [nan, 0.22329049758590888]}
{'': [nan, 0.2144214564882182]}
{'': [0.22222222222222326, nan]}
{'': [0.22471378661650146, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 33.189
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, A) )
%   then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.16370449065506787;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( location(A, K) )
%   | | | then return 0.18741722778244022;  // std dev = 6.018, 164.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=54 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return -0.030871060424704683;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.04907331850438122;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.06625886421436501;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( enzyme(E, G), phenotype(E, H) )
%   | | | then return 0.26726911539967163;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13038885072099723;  // std dev = 2.046, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( enzyme(A, I) )
%   | | then if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.37124818201136717;  // std dev = 2.054, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.19087035369464891;  // std dev = 2.531, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.48702213301503033;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14728991304690517;  // std dev = 6.711, 209.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=66 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.06272681518272469;  // std dev = 3.945, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | | else return 0.1737796341094609;  // std dev = 7.256, 225.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.13479229053840053;  // std dev = 2.153, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.04440655353773075;  // std dev = 1.817, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(A, A), phenotype(A, I) )
%   | | | then return -0.023857118657871264;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.1516358659429262;  // std dev = 4.277, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(K, L) )
%   | | | then return 0.2866722788170813;  // std dev = 2.584, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return 0.04206126121382722;  // std dev = 2.408, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return -0.03377861009471179;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12051412386025324;  // std dev = 4.946, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.017272037673535263;  // std dev = 1.918, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.16244674775732448;  // std dev = 3.454, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.025810614622306598;  // std dev = 5.424, 148.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=40 */
%   | | | else return 0.08569491156381125;  // std dev = 5.114, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.1270547012068669;  // std dev = 2.933, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.3102741304137328;  // std dev = 1.774, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.05047860717337058;  // std dev = 7.148, 237.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=74 */
%   | | | else return 0.16168938260284552;  // std dev = 2.308, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G), interaction(H, A) )
%   | | | then return 0.045117453725278936;  // std dev = 1.446, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3848819666347678;  // std dev = 1.413, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05065338843221566;  // std dev = 3.811, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.3664469937391373;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, J), phenotype(A, K) )
%   | | | then return -0.024430185012709157;  // std dev = 3.119, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.04142294084556042;  // std dev = 6.214, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.12392894773477496;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04059561440144162;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(H, D), phenotype(H, F) )
%   | | | then return 0.11918600782872794;  // std dev = 2.445, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.011550333868058565;  // std dev = 2.202, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( enzyme(A, E), complex(A, I) )
%   | | | then return -0.1905208111845037;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.007735224190507646;  // std dev = 4.050, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5090154315073573;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12381203807096072;  // std dev = 2.182, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.010942093106650064;  // std dev = 3.398, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.08534342861134712;  // std dev = 4.785, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E) )
%   | then if ( interaction(F, A), phenotype(F, E) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.04779743028184553;  // std dev = 2.667, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.05097161040954205;  // std dev = 4.240, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return -0.040046648220804774;  // std dev = 2.261, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.05230460448073663;  // std dev = 3.803, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( enzyme(L, J), interaction(A, L) )
%   | | | then return 0.08099625671057605;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44180950379598793;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.017008532425037914;  // std dev = 3.318, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.1171682586162374;  // std dev = 3.429, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( complex(A, G), enzyme(A, H) )
%   | | then if ( interaction(I, F), interaction(I, I) )
%   | | | then return 0.3486661525428664;  // std dev = 1.435, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.011171911749618438;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.022248025174749612;  // std dev = 3.540, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.11889999843752252;  // std dev = 4.498, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, J), complex(J, K) )
%   | | | then return 0.24135644769858128;  // std dev = 1.115, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.024701265620235707;  // std dev = 4.875, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.02811902683795526;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.10819894138224888;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '23.277', 'seconds']
Refined model CLL: -0.401094


******************************************
Best model found
******************************************
Results 

CLL : -0.352426 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.189 

Total Inference Time : 105.29853868484497 

Total revision time: 150.33489390945434
Best scored revision CLL: -0.35141


Results 

CLL : -0.352426 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 150.45690151786803 

Total Inference Time : 105.29853868484497 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.36
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19763232993345892;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15290653088442757;  // std dev = 0.467, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1637616427741385;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13726454872753932;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06487277819126476;  // std dev = 0.461, 301.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08665089358223975;  // std dev = 0.474, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.060199969330134426;  // std dev = 0.470, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05543121525762713;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.209', 'seconds']
Parameter learned model CLL:-0.352992 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.71, 168, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.71, 168, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.461, 209, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.47, 187, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.81, 181, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2242344194659672, nan], 'true': [nan, 0.2242344194659672], 'true,false': [nan, 0.2242344194659672]}
{'': [nan, 0.21780038606757465]}
{'': [nan, 0.2286390532544378], 'false': [0.2286390532544378, nan]}
{'': [nan, 0.2286390532544367], 'false': [0.2286390532544367, nan]}
{'': [nan, 0.2122272381099556]}
{'': [nan, 0.22423441946596623]}
{'': [0.22101463239166955, nan]}
{'': [0.22342980584739036, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 33.364
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(D, G), interaction(H, D) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.20814893509951232;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( complex(D, C), interaction(A, I) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.21529179224236936;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else return 0.1562855810622454;  // std dev = 0.457, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, A), complex(D, C) )
%   | then return 0.03943927965574119;  // std dev = 0.428, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( enzyme(D, E), phenotype(A, F) )
%   | | then return 0.002721204348453804;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(D, D), enzyme(D, G) )
%   | | | then return 0.4135808353562524;  // std dev = 1.115, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16090895361384744;  // std dev = 3.132, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return 0.1354882246444086;  // std dev = 0.459, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.5835195708599015;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16437875302698773;  // std dev = 3.367, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.4005397255642605;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.20054774012975496;  // std dev = 4.220, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.23023714133173606;  // std dev = 2.745, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.11762372057846546;  // std dev = 7.335, 244.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(E, A), complex(A, G) )
%   | | | then return 0.024674793288605227;  // std dev = 1.751, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.2221244514557712;  // std dev = 2.773, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.7797776378669332;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12937112614651278;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, L) )
%   | | | then return -0.1173467530841115;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.11454229607706463;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.13285191337546523;  // std dev = 4.946, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
%   | | | else return 0.05945823892528643;  // std dev = 4.061, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.09546598152476354;  // std dev = 5.307, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   | | | else return 0.13982507818626785;  // std dev = 5.305, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.008621575068576408;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 9.000826637728249E-4;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, H) )
%   | | | then return -0.05458301878490279;  // std dev = 3.190, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.04772569187467414;  // std dev = 4.025, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return -0.01809396574123236;  // std dev = 3.433, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.10832126333744505;  // std dev = 4.969, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), interaction(G, A) )
%   | | | then return 0.10003970206192472;  // std dev = 1.938, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.009256835061076598;  // std dev = 3.570, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.13884763914735537;  // std dev = 3.142, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.06577901288237749;  // std dev = 5.622, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13843432627604543;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.06324947595692139;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.1388256191881343;  // std dev = 1.865, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.03491146841596691;  // std dev = 1.184, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.35821438252104343;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), interaction(I, I) )
%   | | | then return 0.0837746845046561;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.0717067033832798;  // std dev = 3.414, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.025468025324214997;  // std dev = 3.361, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03776063238739943;  // std dev = 5.527, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(A, G), enzyme(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.11926655688328447;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.015595609687236833;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, E), enzyme(H, F) )
%   | | | then return -0.07569745264143035;  // std dev = 2.321, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.002044167999167806;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.04757821142737711;  // std dev = 3.568, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.24317180463899288;  // std dev = 1.809, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.07919759469121049;  // std dev = 3.536, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return -0.004315985559256186;  // std dev = 4.749, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, E), phenotype(F, G) )
%   | | then if ( complex(A, H), complex(E, H) )
%   | | | then return 0.16019829507304914;  // std dev = 1.590, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.05633656256156473;  // std dev = 2.843, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( phenotype(F, I), interaction(J, A) )
%   | | | then return 0.34574676655336556;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.1286162937560102;  // std dev = 3.546, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), phenotype(K, N) )
%   | | | then return -0.06101420511810205;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.012335776503577851;  // std dev = 3.457, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( enzyme(A, P), interaction(Q, A) )
%   | | | then return 0.17186184692564999;  // std dev = 2.098, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.017745418914240377;  // std dev = 3.198, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13', 'minutes', 'and', '53.589', 'seconds']
Refined model CLL: -0.401012


******************************************
Best model found
******************************************
Results 

CLL : -0.352835 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.364 

Total Inference Time : 52.59856653213501 

Total revision time: 96.8329437007904
Best scored revision CLL: -0.352992


Results 

CLL : -0.352835 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 96.95495130920409 

Total Inference Time : 52.59856653213501 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.895
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18390651085708737;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16758900268991353;  // std dev = 0.471, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1523976483587138;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09122886322820438;  // std dev = 7.725, 281.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09889332694116805;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09130071669137815;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0711907030208406;  // std dev = 0.473, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.058387410045539295;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.809', 'seconds']
Parameter learned model CLL:-0.352349 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.615, 178, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.519, 165, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.725, 195, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 169, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.542, 168, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21963957759412384, nan], 'true': [nan, 0.21963957759412384], 'true,false': [nan, 0.21963957759412384]}
{'': [nan, 0.22222222222222343]}
{'': [nan, 0.22523452008698494], 'false': [0.22523452008698494, nan]}
{'': [nan, 0.2123833284786162], 'false': [0.2123833284786162, nan]}
{'': [nan, 0.22093040325303462]}
{'': [nan, 0.2243746973081922]}
{'': [0.2235140330642056, nan]}
{'': [0.22394444788889614, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 28.286
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then return 0.08542166237223962;  // std dev = 0.419, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else return 0.174815601766179;  // std dev = 0.465, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   else if ( phenotype(A, G) )
%   | then if ( interaction(A, H), complex(A, I) )
%   | | then return 0.10814893509951223;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2160436719416172;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), interaction(M, N) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.30259337954395676;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( phenotype(E, C), interaction(A, E) )
%   | then return 0.10221940210675239;  // std dev = 0.441, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.5524412433591556;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.19628563707519797;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.07976410095335196;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( enzyme(A, I) )
%   | then return 0.06990278565372103;  // std dev = 0.428, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.12618498142842186;  // std dev = 2.213, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.2582387581949664;  // std dev = 1.969, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.1846277656491187;  // std dev = 2.902, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.11100751144245434;  // std dev = 4.711, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.15844992031667635;  // std dev = 5.962, 155.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=55 */
%   | | | else return 0.09406866299616586;  // std dev = 4.699, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(F, D) )
%   | | | then return 0.2052481092775742;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12306139211326027;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.03656817614753777;  // std dev = 2.007, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.07673190173803965;  // std dev = 3.750, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(J, K), interaction(A, I) )
%   | | | then return 0.31599479383296286;  // std dev = 1.802, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.07795745383915212;  // std dev = 4.494, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.12650373159748934;  // std dev = 2.167, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.262575465039522;  // std dev = 2.831, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.14029115585891574;  // std dev = 3.461, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.058737658427472396;  // std dev = 2.515, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09045641505736249;  // std dev = 4.779, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.010693747159977786;  // std dev = 4.206, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), interaction(G, G) )
%   | | | then return 0.18197936221076733;  // std dev = 4.376, 78.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=34 */
%   | | | else return 0.05751312804424672;  // std dev = 3.620, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | else if ( complex(A, H), interaction(A, A) )
%   | | | then return -0.15149354667379658;  // std dev = 1.303, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.06852899919199268;  // std dev = 4.589, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), location(H, E) )
%   | | | then return 0.05057668063334828;  // std dev = 2.166, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.17879755499996075;  // std dev = 2.175, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( location(D, E), phenotype(D, I) )
%   | | | then return 0.07281721879177828;  // std dev = 4.704, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.004575075357711544;  // std dev = 3.708, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), interaction(M, L) )
%   | | | then return 0.08349782295140658;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.016448686832135333;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.2752573887025486;  // std dev = 1.927, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.09872777700233686;  // std dev = 1.937, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( phenotype(A, F), phenotype(D, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.32248540855839863;  // std dev = 1.533, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06544483872292246;  // std dev = 2.538, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( location(D, E) )
%   | | | then return -0.027686399501289122;  // std dev = 4.439, 101.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | | | else return 0.15519215403330408;  // std dev = 1.930, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), phenotype(J, K) )
%   | | | then return -0.02821840251947689;  // std dev = 2.406, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.22558759838729758;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.11826548097816733;  // std dev = 3.527, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.4338732955375198;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), phenotype(G, H) )
%   | | then if ( complex(G, I), location(A, J) )
%   | | | then return -0.09101268613741563;  // std dev = 3.902, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return 0.07030841236347742;  // std dev = 1.356, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.0037286174013211586;  // std dev = 1.884, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.37189161568964507;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(L, A) )
%   | | then if ( enzyme(A, M), interaction(N, L) )
%   | | | then return 0.1209292365749882;  // std dev = 2.704, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return -0.001898248703014903;  // std dev = 5.168, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.09539729523700663;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2580056933521158;  // std dev = 1.126, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( complex(A, F), interaction(E, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.18408326105169026;  // std dev = 1.830, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.05117402617382851;  // std dev = 1.142, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0072933860004697985;  // std dev = 4.259, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | else return -0.0880278084250187;  // std dev = 3.928, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.14042768095091782;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.004352060034720031;  // std dev = 2.669, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.03615871083582184;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.11302543320544442;  // std dev = 2.751, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '223', 'milliseconds']
Refined model CLL: -0.388339


******************************************
Best model found
******************************************
Results 

CLL : -0.351627 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.286 

Total Inference Time : 30.664912462234497 

Total revision time: 67.79255462265014
Best scored revision CLL: -0.352349


Results 

CLL : -0.351627 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 67.91456223106384 

Total Inference Time : 30.664912462234497 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.472
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2283617010569579;  // std dev = 7.402, 235.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19510564292372645;  // std dev = 0.482, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13961002285088003;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09370921850327434;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10214265496025876;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10005240766870327;  // std dev = 0.480, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05010379296578919;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.036146538564079886;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.825', 'seconds']
Parameter learned model CLL:-0.360822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.402, 148, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.482, 150, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.571, 168, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.699, 186, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 176, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.651, 179, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2331552738795845, nan], 'true': [nan, 0.2331552738795845], 'true,false': [nan, 0.2331552738795845]}
{'': [nan, 0.23233456176894715]}
{'': [nan, 0.22477508650519254], 'false': [0.22477508650519254, nan]}
{'': [nan, 0.21712353580485277], 'false': [0.21712353580485277, nan]}
{'': [nan, 0.22562452155165655]}
{'': [nan, 0.23067784645581182]}
{'': [0.22137084532088025, nan]}
{'': [0.22009440895471838, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 34.433
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(A, A) )
%   | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, F), phenotype(C, G) )
%   | | then if ( interaction(C, D), enzyme(D, H) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.12130682983635448;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else if ( interaction(C, D), interaction(D, A) )
%   | | | then return 0.12917697248268875;  // std dev = 4.598, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return 0.22801194879814213;  // std dev = 4.125, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   else if ( phenotype(A, I) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), complex(D, G) )
%   | | then return 0.13148375036427776;  // std dev = 0.457, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.28162893957529533;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4867378931068573;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( enzyme(A, K), interaction(L, I) )
%   | | | then return 0.5944440037523181;  // std dev = 1.222, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.41092989658192547;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return 0.12422673082136688;  // std dev = 0.454, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( interaction(A, M), interaction(M, A) )
%   | then if ( interaction(M, N), phenotype(N, P) )
%   | | then return 0.23024793305657779;  // std dev = 0.489, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.5916855212418093;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.13376765380077596;  // std dev = 0.458, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.1492033652791689;  // std dev = 7.152, 224.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=78 */
%   | | | else return 0.04720672724959456;  // std dev = 2.539, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.15594204514741383;  // std dev = 2.863, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.333160393513966;  // std dev = 2.324, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( phenotype(D, I) )
%   | | | then return 0.002379781994668515;  // std dev = 1.228, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.12661096425121215;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(J, L), location(A, L) )
%   | | | then return 0.05146934502585497;  // std dev = 5.230, 136.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=38 */
%   | | | else return 0.15520602483356077;  // std dev = 3.070, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.4509150585279824;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08429559219293843;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return 0.12757692495965656;  // std dev = 2.055, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.2180297855982707;  // std dev = 3.803, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.14035323768860752;  // std dev = 3.442, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.06457751575053146;  // std dev = 4.776, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.06744916212941073;  // std dev = 3.107, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.09145358189090505;  // std dev = 1.940, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.13573050977138806;  // std dev = 3.256, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.06535294818223991;  // std dev = 5.695, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(D, G) )
%   | | then if ( interaction(F, F), interaction(D, F) )
%   | | | then return -0.00887306765392174;  // std dev = 3.778, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.13966713785770046;  // std dev = 3.273, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.08896618897852712;  // std dev = 2.157, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.012821939750781452;  // std dev = 2.864, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( complex(I, K), complex(A, K) )
%   | | | then return -0.11389793932019233;  // std dev = 1.530, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.04127305188988334;  // std dev = 2.307, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.11389765764832534;  // std dev = 1.757, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.20058619054785895;  // std dev = 2.815, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( enzyme(D, H), interaction(A, G) )
%   | | | then return 0.39455985555998724;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.023451191073762926;  // std dev = 3.169, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( enzyme(D, I) )
%   | | | then return -0.016556765963907167;  // std dev = 1.675, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.1071140019115399;  // std dev = 2.676, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L), interaction(J, K) )
%   | | | then return 0.13257125261664823;  // std dev = 4.293, 75.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=32 */
%   | | | else return -0.006924021605010313;  // std dev = 3.861, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.0671375666285723;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12337436002316554;  // std dev = 1.499, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), phenotype(A, F) )
%   | then if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return -0.07790426882298096;  // std dev = 1.453, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.17681457935473954;  // std dev = 0.959, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, E) )
%   | | | then return 0.08562637181882786;  // std dev = 1.957, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2691132854761719;  // std dev = 2.301, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( phenotype(K, M), complex(K, N) )
%   | | | then return 0.19086666571786617;  // std dev = 1.201, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.11000801500306971;  // std dev = 2.517, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.013537957014891541;  // std dev = 4.470, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.1016257091870023;  // std dev = 3.678, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return -0.006373805564173755;  // std dev = 2.718, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.2972298069420817;  // std dev = 1.358, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.17579546415951658;  // std dev = 1.810, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.06093135986783099;  // std dev = 3.182, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( phenotype(K, L), phenotype(A, M) )
%   | | | then return -0.11023185452202537;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.021403050221887644;  // std dev = 2.480, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.23510057903850148;  // std dev = 2.115, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.043364339822609746;  // std dev = 4.494, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '48.745', 'seconds']
Refined model CLL: -0.420435


******************************************
Best model found
******************************************
Results 

CLL : -0.360437 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.433 

Total Inference Time : 36.56533336639404 

Total revision time: 78.81829193115234
Best scored revision CLL: -0.360822


Results 

CLL : -0.360437 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 78.88089683532715 

Total Inference Time : 36.56533336639404 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.301
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21189043169814828;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1669195456033644;  // std dev = 0.473, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1431872443013774;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11122353739285182;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896063802390298;  // std dev = 0.469, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07929193408049671;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.046751162080267;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05574747073807319;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.855', 'seconds']
Parameter learned model CLL:-0.348161 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.198, 190, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.3, 204, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.353, 212, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.465, 225, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.32, 207, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22860845018279652, nan], 'true': [nan, 0.22860845018279652], 'true,false': [nan, 0.22860845018279652]}
{'': [nan, 0.22329049758590166]}
{'': [nan, 0.22364648338674067], 'false': [0.22364648338674067, nan]}
{'': [nan, 0.22079794904662378], 'false': [0.22079794904662378, nan]}
{'': [nan, 0.22008623076619063]}
{'': [nan, 0.22222222222221957]}
{'': [0.21618425550392043, nan]}
{'': [0.22257834389636053, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 79.195
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.036720363670940885;  // std dev = 0.383, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else return 0.23024195835532626;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else if ( interaction(A, E) )
%   | then if ( location(A, F), location(E, G) )
%   | | then if ( interaction(E, A), phenotype(A, H) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.1914822684328457;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.19148226843284427;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.10814893509951228;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), interaction(F, C) )
%   | then if ( location(A, G), phenotype(F, H) )
%   | | then if ( interaction(A, F), phenotype(A, H) )
%   | | | then return 0.1367492522476194;  // std dev = 3.626, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.20751242354520633;  // std dev = 5.524, 130.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=49 */
%   | | else return 0.09295004311530729;  // std dev = 0.449, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(C, I), complex(I, D) )
%   | | then if ( complex(A, D) )
%   | | | then return 0.23155980252833164;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5433479553867715;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.06718736423076785;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(J, A), complex(A, K) )
%   | then return 0.04707148627606888;  // std dev = 0.418, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then return 0.04997133467613914;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.17947482154805613;  // std dev = 0.477, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.12161751942531737;  // std dev = 7.458, 254.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=82 */
%   | | | else return 0.17638201183823163;  // std dev = 3.716, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5683060696227387;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(D, E), location(D, F) )
%   | | | then return 0.15471875689300416;  // std dev = 3.790, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | | else return 0.2977833351607541;  // std dev = 2.052, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return 0.2949463046088815;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.005908812538498215;  // std dev = 2.765, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11247262490672992;  // std dev = 5.676, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.21328416678757592;  // std dev = 2.229, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.1163089251119279;  // std dev = 5.012, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | | else return 0.048908715387421184;  // std dev = 6.198, 184.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.05755351697621759;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.35441990488946234;  // std dev = 1.520, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(F, F), complex(G, H) )
%   | | | then return 0.06906512734781961;  // std dev = 3.564, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return -0.006200221188062251;  // std dev = 4.747, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.07383614768922417;  // std dev = 3.769, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.1287012015496602;  // std dev = 4.497, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E), interaction(A, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.17769560888352706;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.03483846602638419;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.08549383106212013;  // std dev = 4.330, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.012884302981160427;  // std dev = 6.213, 187.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=54 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.052839284873768495;  // std dev = 1.821, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.10282195725484593;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13717031166691745;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.4523073396256766;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.2707583936511503;  // std dev = 1.468, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07670319204675215;  // std dev = 4.690, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.03242170480351271;  // std dev = 3.698, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.08593262829868803;  // std dev = 4.826, 99.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
%   | else if ( interaction(A, J) )
%   | | then return 0.32170564029162807;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.03428112845128618;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.09550253592181587;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(E, G), phenotype(F, H) )
%   | | then if ( interaction(A, E), interaction(F, F) )
%   | | | then return -0.02157953002609707;  // std dev = 3.498, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.07323858361034567;  // std dev = 6.268, 169.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=62 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.09352705647717846;  // std dev = 2.341, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.02546624811883645;  // std dev = 2.221, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then return 0.6450580727828223;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return -0.28254317048787175;  // std dev = 1.539, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.06812553348989486;  // std dev = 1.765, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, F), interaction(F, F) )
%   | | then if ( complex(A, G), phenotype(F, H) )
%   | | | then return 0.03654361108467399;  // std dev = 3.233, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.16836819770411748;  // std dev = 4.003, 64.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=30 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.11120061059603639;  // std dev = 2.147, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.06351671779594334;  // std dev = 5.118, 112.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=42 */
%   | else if ( phenotype(A, I) )
%   | | then if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.056215612837530446;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08641050885317124;  // std dev = 1.319, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return -0.2264591534879502;  // std dev = 1.510, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.05364524572825997;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21', 'minutes', 'and', '17.451', 'seconds']
Refined model CLL: -0.412935


******************************************
Best model found
******************************************
Results 

CLL : -0.349189 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 79.195 

Total Inference Time : 358.03735971450806 

Total revision time: 449.8764757595062
Best scored revision CLL: -0.348161


Results 

CLL : -0.349189 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 449.939080663681 

Total Inference Time : 358.03735971450806 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.181
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.485, 244.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.463, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21336129031186563;  // std dev = 7.702, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16590909074961316;  // std dev = 0.472, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1634294258547455;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10480213571552123;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1019743364340276;  // std dev = 0.474, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06711659004604122;  // std dev = 0.469, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0647800792120783;  // std dev = 0.473, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03310137578898705;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.020', 'seconds']
Parameter learned model CLL:-0.351781 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.702, 167, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.685, 165, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.873, 190, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 181, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.919, 197, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2290365379168482, nan], 'true': [nan, 0.2290365379168482], 'true,false': [nan, 0.2290365379168482]}
{'': [nan, 0.22302733230326896]}
{'': [nan, 0.22982936910475482], 'false': [0.22982936910475482, nan]}
{'': [nan, 0.21980785674764716], 'false': [0.21980785674764716, nan]}
{'': [nan, 0.22503834938709963]}
{'': [nan, 0.21980785674765124]}
{'': [0.22342980584738598, nan]}
{'': [0.2169993175369058, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 45.281
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), phenotype(A, F) )
%   | then return 0.08037115732173453;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( enzyme(A, G), complex(D, C) )
%   | | then return 0.29564893509951234;  // std dev = 0.496, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0.16403128804068884;  // std dev = 0.461, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(H, I), enzyme(I, J) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( phenotype(A, M), interaction(K, K) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.26439893509951234;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.14582016797622468;  // std dev = 3.868, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), complex(C, F) )
%   | then return 0.04962035228294464;  // std dev = 0.421, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else return 0.19933470924205338;  // std dev = 0.484, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), phenotype(J, I) )
%   | | | then return 0.06413915051438376;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.22406212032678763;  // std dev = 2.593, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else return 0.06662483910520153;  // std dev = 0.431, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), phenotype(M, N) )
%   | | | then return 0.10800823489539804;  // std dev = 2.940, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.29360866977442673;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( location(A, P) )
%   | | | then return 0.19456750686065352;  // std dev = 4.379, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | | else return 0.33945516676236553;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.12518086715233742;  // std dev = 5.097, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | | else return 0.2124374899691269;  // std dev = 5.644, 132.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( complex(F, H), interaction(A, G) )
%   | | | then return 0.07883670338540055;  // std dev = 2.064, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.00784011678791919;  // std dev = 1.539, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2867644904287425;  // std dev = 1.233, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09228947992929346;  // std dev = 2.760, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1685461809834921;  // std dev = 2.227, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.2870425354000426;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.06742039797405748;  // std dev = 2.662, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.12526647187959247;  // std dev = 5.539, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.12604064293246267;  // std dev = 3.567, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.17261410998724597;  // std dev = 3.772, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.03308172905951933;  // std dev = 3.132, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.09177794138964021;  // std dev = 4.714, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( interaction(H, F), phenotype(H, I) )
%   | | | then return -0.011133220206625199;  // std dev = 3.459, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.10318344939057682;  // std dev = 2.990, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.16562726594921698;  // std dev = 3.831, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.0602353007946565;  // std dev = 4.917, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.12764004360202624;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0508562487424437;  // std dev = 2.124, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( enzyme(A, I), interaction(J, D) )
%   | | | then return 0.2596313766120579;  // std dev = 1.928, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.09131875772403303;  // std dev = 3.843, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( phenotype(K, L), location(A, M) )
%   | | | then return 0.12084028306243429;  // std dev = 1.674, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.03238343608174055;  // std dev = 2.868, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.1074879026321095;  // std dev = 2.873, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.026297938783376554;  // std dev = 4.062, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.24703088485206962;  // std dev = 1.017, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.047332692257589806;  // std dev = 1.497, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.2937317425049442;  // std dev = 2.193, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.09848136745090327;  // std dev = 3.599, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( enzyme(K, M), enzyme(A, M) )
%   | | | then return 0.2996914640874999;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.061796005336570904;  // std dev = 3.350, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.015077059466507102;  // std dev = 3.999, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | | else return 0.114579071580163;  // std dev = 2.868, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then if ( complex(G, F), interaction(G, H) )
%   | | then if ( interaction(H, I), complex(I, F) )
%   | | | then return -0.04121355810475612;  // std dev = 2.642, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.12803123507701103;  // std dev = 1.974, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.074041006947337;  // std dev = 1.376, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.008499183144925001;  // std dev = 1.889, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(L, A), interaction(A, L) )
%   | | then if ( complex(L, M) )
%   | | | then return 0.5304153319752838;  // std dev = 0.902, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -9.498162475169436E-4;  // std dev = 1.681, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.10322342983925707;  // std dev = 2.210, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.02169278436761083;  // std dev = 6.024, 163.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(E, G), interaction(E, H) )
%   | | then if ( interaction(H, E), complex(E, I) )
%   | | | then return -0.04183738748000949;  // std dev = 2.043, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.19437158963659695;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(J, A), phenotype(E, K) )
%   | | | then return -0.1812219171770781;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.0807966585282765;  // std dev = 1.904, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.46662706036386553;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05793563308034553;  // std dev = 2.087, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.04963440735599881;  // std dev = 5.226, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
%   | | | else return -0.011378369232150529;  // std dev = 3.923, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '6.211', 'seconds']
Refined model CLL: -0.410724


******************************************
Best model found
******************************************
Results 

CLL : -0.351623 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.281 

Total Inference Time : 53.04038906097412 

Total revision time: 110.20761190605164
Best scored revision CLL: -0.351781


Results 

CLL : -0.351623 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 110.27021681022644 

Total Inference Time : 53.04038906097412 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.853
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.461, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21205840012008753;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14650277406382256;  // std dev = 0.465, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12957288536522438;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13320675382712396;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07972495133121037;  // std dev = 0.465, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0733686308100656;  // std dev = 0.468, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08996475806816208;  // std dev = 0.478, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05284054320763098;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.037', 'seconds']
Parameter learned model CLL:-0.353017 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.454, 157, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.642, 182, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.503, 163, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.478, 157, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.565, 171, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22865755558942658, nan], 'true': [nan, 0.22865755558942658], 'true,false': [nan, 0.22865755558942658]}
{'': [nan, 0.21620891003460296]}
{'': [nan, 0.217921586099353], 'false': [0.217921586099353, nan]}
{'': [nan, 0.22609312753020183], 'false': [0.22609312753020183, nan]}
{'': [nan, 0.21578177622133637]}
{'': [nan, 0.21878003278874125]}
{'': [0.22865755558942522, nan]}
{'': [0.2226528789232261, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 25.394
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, H), phenotype(A, I) )
%   | then if ( interaction(H, J), complex(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0.07814893509951236;  // std dev = 0.414, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( complex(A, L) )
%   | | then return 0.13721870254137283;  // std dev = 0.449, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.22400259363609676;  // std dev = 4.362, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, E), complex(D, F) )
%   | then if ( complex(E, G), enzyme(D, H) )
%   | | then return 0.27339216963154866;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5620999536673843;  // std dev = 0.426, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.42303165660568326;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.12773289912210514;  // std dev = 0.456, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   else if ( interaction(A, A) )
%   | then return 0.06505184480305821;  // std dev = 0.433, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.04959485274060179;  // std dev = 0.437, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.22013347939983716;  // std dev = 3.149, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.14089671404311102;  // std dev = 4.912, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.20344849450050734;  // std dev = 5.804, 139.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=57 */
%   | | | else return 0.10204387324147357;  // std dev = 4.535, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), location(D, E) )
%   | | then if ( enzyme(A, G), interaction(F, D) )
%   | | | then return -0.10647823960357562;  // std dev = 1.992, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.07056785209118645;  // std dev = 4.358, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.44851300660397375;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.09949943776478617;  // std dev = 3.102, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K), complex(I, L) )
%   | | | then return 0.20171953798968698;  // std dev = 2.143, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.0683727059448528;  // std dev = 3.911, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1935110612333791;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5941393438975997;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.5077390897675894;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14370035801515488;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.23117950008239355;  // std dev = 2.017, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.04965565953499308;  // std dev = 7.011, 230.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), interaction(G, G) )
%   | | | then return 0.1596321958454782;  // std dev = 4.420, 80.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=34 */
%   | | | else return 0.05684580393263949;  // std dev = 3.610, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.053326717414515126;  // std dev = 2.903, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.03604854337889426;  // std dev = 3.943, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), enzyme(D, F) )
%   | | then return 0.3350390312453048;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.1696620114795115;  // std dev = 2.140, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 1.4934493403476277E-4;  // std dev = 4.496, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), location(I, L) )
%   | | | then return 0.07103066819432136;  // std dev = 3.441, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return -0.06306464157835236;  // std dev = 1.769, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.19932574270388753;  // std dev = 2.195, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.07771656219408127;  // std dev = 3.546, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, G) )
%   | | then if ( complex(A, H), phenotype(D, I) )
%   | | | then return -0.20226937527586372;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.1270666578267704;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.08521409611696618;  // std dev = 3.332, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return -0.028337367116051667;  // std dev = 3.331, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( interaction(L, A), complex(A, M) )
%   | | then if ( interaction(A, N), complex(N, M) )
%   | | | then return 0.05880725401774567;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6927398182004187;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.1250311427822879;  // std dev = 3.626, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.02541418717707943;  // std dev = 3.969, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, F), complex(G, H) )
%   | | | then return -0.08634917473342642;  // std dev = 2.585, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.0026326322829380347;  // std dev = 3.890, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06815402436959728;  // std dev = 4.709, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.005384237268606935;  // std dev = 3.476, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | else if ( complex(A, K) )
%   | | then return -0.2730035095103358;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.02577952420553418;  // std dev = 1.185, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A) )
%   | then if ( interaction(F, E), enzyme(F, G) )
%   | | then if ( complex(A, H), interaction(F, A) )
%   | | | then return 0.38433957721658224;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.050858806194289216;  // std dev = 3.616, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.04222268277156308;  // std dev = 3.098, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return -0.03324442448323192;  // std dev = 4.913, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return -0.04291344564968182;  // std dev = 1.750, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.08534231793821649;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.6994557986641525;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04005523145910458;  // std dev = 1.813, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '9.292', 'seconds']
Refined model CLL: -0.405269


******************************************
Best model found
******************************************
Results 

CLL : -0.352296 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.394 

Total Inference Time : 40.902446031570435 

Total revision time: 75.63333584976196
Best scored revision CLL: -0.353017


Results 

CLL : -0.352296 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 75.69594075393677 

Total Inference Time : 40.902446031570435 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.614
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.462, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17336632640385938;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17555171378859308;  // std dev = 0.474, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.117585387501719;  // std dev = 7.762, 283.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.119720307471311;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11620452872938336;  // std dev = 0.475, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07322491999440196;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.055671382467059105;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04948227058021435;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.072', 'seconds']
Parameter learned model CLL:-0.342507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.719, 189, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.762, 196, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.644, 178, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.466, 185, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.665, 181, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21585538752363032, nan], 'true': [nan, 0.21585538752363032], 'true,false': [nan, 0.21585538752363032]}
{'': [nan, 0.22434997558593475]}
{'': [nan, 0.21291313413827181], 'false': [0.21291313413827181, nan]}
{'': [nan, 0.2205197579209699], 'false': [0.2205197579209699, nan]}
{'': [nan, 0.22604875283446585]}
{'': [nan, 0.21881952985724615]}
{'': [0.21754703719723015, nan]}
{'': [0.21924426375584538, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.894
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then return 0.10814893509951237;  // std dev = 0.433, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(C, G), complex(D, I) )
%   | | | then return 0.16460054800273813;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.3844647245731966;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return 0.15566959625653584;  // std dev = 0.457, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   else if ( phenotype(A, J) )
%   | then if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, N) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(C, E), interaction(C, A) )
%   | then if ( phenotype(C, F) )
%   | | then return 0.1740210360548293;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.4088574023097009;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.08210782610964332;  // std dev = 0.431, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   else if ( complex(A, G) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.4247290028022002;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.18353113789110811;  // std dev = 3.127, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else return 0.5624892654602527;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then return 0.4978574699358438;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.2444674378357555;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13875207449877872;  // std dev = 4.633, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.04596076352684657;  // std dev = 3.678, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.14391861373946419;  // std dev = 6.776, 206.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(D, F), enzyme(A, G) )
%   | | then if ( enzyme(E, H), interaction(I, E) )
%   | | | then return 0.14256945214743497;  // std dev = 2.417, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.30147828986826947;  // std dev = 2.005, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(D, E), complex(E, J) )
%   | | | then return 0.12349402081936461;  // std dev = 5.345, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   | | | else return 0.0499127673514904;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.20364542500629373;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.1779264196313749;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.023153655725840293;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( location(F, G) )
%   | | | then return 0.08671389523026732;  // std dev = 4.873, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return -0.047644212542237094;  // std dev = 1.983, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.0693055339967393;  // std dev = 4.155, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | | else return 0.18391311675324554;  // std dev = 3.615, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return 0.16300209647379438;  // std dev = 3.904, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | | else return 0.054160183362664864;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04808934344072596;  // std dev = 5.299, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return -0.04790935998583215;  // std dev = 2.489, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( complex(D, G), complex(F, H) )
%   | | | then return 0.04058332812862911;  // std dev = 4.226, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return 0.14660383753165587;  // std dev = 4.736, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.046459465865660375;  // std dev = 2.632, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.05110967355138018;  // std dev = 2.210, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.08021582802711276;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.2246593607502385;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.41421017304786;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, H), complex(H, I) )
%   | | | then return 0.5514111758035469;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12815471953254118;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, J), interaction(K, D) )
%   | | | then return 0.029690205541027463;  // std dev = 3.898, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.38351264841913274;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, L), phenotype(A, M) )
%   | | then if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.10909166332053727;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12672311748790005;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(Q, A), interaction(Q, Q) )
%   | | | then return -0.016895155051067794;  // std dev = 3.316, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.07727327038131893;  // std dev = 4.966, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.17048557803465114;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -8.410885329587868E-4;  // std dev = 2.055, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.14896697866570321;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.05813626518096118;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( complex(K, M), complex(A, N) )
%   | | | then return -0.10330957995545444;  // std dev = 1.812, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.027453759115707993;  // std dev = 3.072, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( interaction(P, A), location(P, Q) )
%   | | | then return 0.08392404175039048;  // std dev = 5.530, 128.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=49 */
%   | | | else return -0.04829289181586465;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( location(A, F) )
%   | | | then return -0.1194182341381332;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.16238188151855554;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.07593387102752562;  // std dev = 1.283, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.10011277832857364;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J), enzyme(I, K) )
%   | | | then return 0.27146822530539283;  // std dev = 1.462, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.013937676329936284;  // std dev = 4.073, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.10493376044807794;  // std dev = 4.002, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
%   | | | else return 0.03767586085437502;  // std dev = 4.046, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '1.431', 'seconds']
Refined model CLL: -0.394475


******************************************
Best model found
******************************************
Results 

CLL : -0.342093 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.894 

Total Inference Time : 38.19618082046509 

Total revision time: 78.00570832061767
Best scored revision CLL: -0.342507


Results 

CLL : -0.342093 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 78.1987057762146 

Total Inference Time : 38.19618082046509 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.105
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19363280606725106;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19781868870063427;  // std dev = 0.481, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.143406184904394;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11431520400375002;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10748804765063409;  // std dev = 0.476, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0749776385835312;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06916363653076521;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06940531071675843;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.996', 'seconds']
Parameter learned model CLL:-0.367213 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.313, 206, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.286, 202, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.32, 207, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 198, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.167, 186, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22293444328824347, nan], 'true': [nan, 0.22293444328824347], 'true,false': [nan, 0.22293444328824347]}
{'': [nan, 0.23175130809479755]}
{'': [nan, 0.22435815284719565], 'false': [0.22435815284719565, nan]}
{'': [nan, 0.22257834389636488], 'false': [0.22257834389636488, nan]}
{'': [nan, 0.22684310018903353]}
{'': [nan, 0.22293444328824122]}
{'': [0.22577957107144286, nan]}
{'': [0.2300118906064206, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 43.069
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.176989514809657;  // std dev = 0.466, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), enzyme(F, G) )
%   | | then if ( interaction(F, H), phenotype(H, E) )
%   | | | then return 0.17890365208064443;  // std dev = 3.398, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.274815601766179;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.24276431971489695;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then return 0.25826653876650124;  // std dev = 0.494, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return 0.07718672234115516;  // std dev = 0.429, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | else if ( interaction(C, C) )
%   | | then return 0.08494627409305122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.43130743868609206;  // std dev = 1.900, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.25269644949584397;  // std dev = 2.267, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( interaction(A, I), location(A, J) )
%   | then if ( interaction(I, A), complex(A, K) )
%   | | then return 0.13824019718625846;  // std dev = 0.460, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(L, A), interaction(L, I) )
%   | | | then return 0.40548200886982827;  // std dev = 1.848, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.14484373540408652;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else return 0.1156470910224981;  // std dev = 0.455, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.19325297178934933;  // std dev = 4.252, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   | | | else return 0.10903410847912139;  // std dev = 7.149, 240.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( phenotype(A, G), complex(D, E) )
%   | | | then return 0.27190651709711733;  // std dev = 2.493, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.07402108584069339;  // std dev = 3.372, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return 0.2021239569301171;  // std dev = 2.821, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.41914854554585285;  // std dev = 1.923, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(J, L), interaction(J, K) )
%   | | | then return 0.017779495422991422;  // std dev = 2.697, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.15283691230464647;  // std dev = 4.790, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | | else if ( location(A, M) )
%   | | | then return 0.2146913162191058;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4343908714738529;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(F, H), location(A, I) )
%   | | | then return 0.03565122533283413;  // std dev = 4.835, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return -0.06347424091516096;  // std dev = 2.510, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.04421193697200832;  // std dev = 5.681, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | | | else return 0.10173605951455524;  // std dev = 3.340, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( interaction(A, F), complex(F, H) )
%   | | | then return 0.284193088295365;  // std dev = 2.458, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.07370322996136468;  // std dev = 4.109, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.03205519912359583;  // std dev = 2.319, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.06333490186900229;  // std dev = 6.274, 175.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(D, F), interaction(G, D) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.08819117516278617;  // std dev = 7.022, 212.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=78 */
%   | | | else return -0.17318417037157852;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return -0.12810717204504485;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.011433030373830444;  // std dev = 2.983, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A), phenotype(L, K) )
%   | | | then return -0.044914434900325914;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2374054693318099;  // std dev = 1.556, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.20088101361172317;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4649863273143446;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(A, F), interaction(G, D) )
%   | | then if ( phenotype(A, E), complex(A, H) )
%   | | | then return -0.036139341499809706;  // std dev = 3.814, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0.05125891198791222;  // std dev = 6.210, 171.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=59 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.1532314221694219;  // std dev = 1.540, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.05527069006195866;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(A, L), interaction(J, L) )
%   | | | then return 0.19091296360677895;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3522615444971366;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.020493273971772318;  // std dev = 2.396, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.1852629563131423;  // std dev = 1.757, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(E, G) )
%   | | then if ( interaction(H, E), interaction(H, A) )
%   | | | then return 0.05835241850636088;  // std dev = 3.018, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.011722348536687703;  // std dev = 3.918, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return -0.08403134091971866;  // std dev = 1.929, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.10160181144985045;  // std dev = 5.200, 111.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=45 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then if ( phenotype(A, M), phenotype(L, N) )
%   | | | then return 0.02757141468376618;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.2352343278029755;  // std dev = 1.592, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.06070639934864515;  // std dev = 2.119, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.00232963548318795;  // std dev = 2.062, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), location(A, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, I), interaction(J, A) )
%   | | | then return -0.07785502807365258;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.08963003507133979;  // std dev = 2.577, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.2717818944992352;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.10512319337630416;  // std dev = 3.439, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.004354869086236562;  // std dev = 2.174, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.11525916916074716;  // std dev = 3.463, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else if ( interaction(Q, A), enzyme(A, R) )
%   | | | then return 0.07976974668589636;  // std dev = 2.413, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.0328878653519013;  // std dev = 4.299, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '28.219', 'seconds']
Refined model CLL: -0.410804


******************************************
Best model found
******************************************
Results 

CLL : -0.368167 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 43.069 

Total Inference Time : 101.32727909088135 

Total revision time: 155.46755669021607
Best scored revision CLL: -0.367213


Results 

CLL : -0.368167 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 155.660554145813 

Total Inference Time : 101.32727909088135 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.539
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.479, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1988896758402513;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19295782477145584;  // std dev = 0.480, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1012090085754035;  // std dev = 8.038, 309.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1768317502999699;  // std dev = 7.492, 236.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07641701111031997;  // std dev = 0.467, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08865356855569471;  // std dev = 0.476, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07393987930552298;  // std dev = 0.477, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03420572534653641;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.474', 'seconds']
Parameter learned model CLL:-0.36002 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.788, 178, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.038, 217, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.492, 144, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 171, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.88, 191, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22463648834019337, nan], 'true': [nan, 0.22463648834019337], 'true,false': [nan, 0.22463648834019337]}
{'': [nan, 0.23061899269511466]}
{'': [nan, 0.20908871922162378], 'false': [0.20908871922162378, nan]}
{'': [nan, 0.237862683137029], 'false': [0.237862683137029, nan]}
{'': [nan, 0.21780038606757265]}
{'': [nan, 0.22664293342826763]}
{'': [0.22744292963611085, nan]}
{'': [0.21940591092409584, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 34.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.09344305274657114;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1831489350995123;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(I, J), phenotype(I, K) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1763307532813305;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else return 0.6081489350995123;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(L, A), phenotype(L, M) )
%   | then if ( enzyme(A, N) )
%   | | then return 0.4831489350995123;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.20814893509951235;  // std dev = 0.477, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else return 0.1510782280288053;  // std dev = 0.455, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), phenotype(E, F) )
%   | then return 0.14831380152420068;  // std dev = 0.471, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | else return -0.0211377413140572;  // std dev = 0.386, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( location(A, G), phenotype(A, H) )
%   | then if ( location(I, G), interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(K, I) )
%   | | | then return 0.11932553410506155;  // std dev = 2.050, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.33707725419021856;  // std dev = 1.728, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.10264041937206651;  // std dev = 0.441, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( interaction(A, L) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.4999605665931781;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.27845883751200456;  // std dev = 2.581, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.2771662210196518;  // std dev = 1.793, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.14106112238700858;  // std dev = 3.396, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.11978061449478196;  // std dev = 5.417, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.1894069018148871;  // std dev = 5.409, 123.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( complex(D, E) )
%   | | | then return -0.023398165608265707;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.05073925815310595;  // std dev = 1.905, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( complex(D, E), enzyme(A, H) )
%   | | | then return 0.2393022086697991;  // std dev = 1.634, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07150520779975872;  // std dev = 2.995, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2837512060377452;  // std dev = 2.389, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.1639966804438392;  // std dev = 2.429, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( location(A, L) )
%   | | | then return 0.13945359678792352;  // std dev = 5.201, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
%   | | | else return -0.03854038504940323;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(A, H), complex(F, I) )
%   | | | then return 0.13590523072981578;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.03775987974363906;  // std dev = 3.028, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.13793495776964987;  // std dev = 3.590, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.084593487708848;  // std dev = 5.987, 158.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.014628390711581167;  // std dev = 3.410, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return -0.04958583195389414;  // std dev = 4.063, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | else if ( location(A, I), phenotype(A, J) )
%   | | | then return 0.1258059264597427;  // std dev = 3.510, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.046365344263132234;  // std dev = 4.798, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), location(A, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.5060475652103444;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24526984627103487;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.17508012091577874;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06649502515109697;  // std dev = 1.600, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( complex(J, H), interaction(J, A) )
%   | | | then return -0.007329836001698757;  // std dev = 2.396, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.2534861872020533;  // std dev = 2.606, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.1653006416404129;  // std dev = 2.076, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.03908213997900626;  // std dev = 5.752, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( complex(A, G), interaction(H, D) )
%   | | | then return 0.20136140527690405;  // std dev = 1.021, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.013925894081218434;  // std dev = 1.619, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.157177679552849;  // std dev = 1.440, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4673714842203261;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, K), interaction(A, A) )
%   | | then return 0.3148935643586123;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.051748279597786134;  // std dev = 1.909, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.05693350874375083;  // std dev = 6.806, 199.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=72 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(E, I) )
%   | | | then return 0.02825377430267797;  // std dev = 2.132, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.10048026994198732;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(E, J), interaction(J, K) )
%   | | | then return -0.14746318191064905;  // std dev = 1.555, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.13049095429973948;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then if ( interaction(N, A), complex(N, L) )
%   | | | then return 0.5062441715377155;  // std dev = 1.010, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04630521882213349;  // std dev = 2.976, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.09024187694487955;  // std dev = 3.425, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return -0.009409153816785979;  // std dev = 5.221, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return -0.026597506786615877;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.20866405760888274;  // std dev = 1.725, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( location(E, H), location(A, H) )
%   | | | then return 0.0660666428902631;  // std dev = 1.522, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.07953814430278569;  // std dev = 1.741, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 1.4968165243756104E-4;  // std dev = 3.159, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.11064925188081366;  // std dev = 1.756, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.1463608500059683;  // std dev = 2.738, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.03589266752203543;  // std dev = 5.451, 130.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=46 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '39.511', 'seconds']
Refined model CLL: -0.423411


******************************************
Best model found
******************************************
Results 

CLL : -0.359867 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.25 

Total Inference Time : 51.71240305900574 

Total revision time: 97.31765290641785
Best scored revision CLL: -0.36002


Results 

CLL : -0.359867 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 97.51065036201477 

Total Inference Time : 51.71240305900574 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.93
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18891816586874235;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16433076146291617;  // std dev = 0.470, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1605183254157798;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09737747315662412;  // std dev = 7.682, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10645721701655371;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07270510082549965;  // std dev = 0.469, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.023500596524883663;  // std dev = 0.454, 296.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05657946122094375;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.376', 'seconds']
Parameter learned model CLL:-0.339897 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.586, 174, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.471, 159, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.682, 188, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.454, 210, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.601, 176, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22136094674556292, nan], 'true': [nan, 0.22136094674556292], 'true,false': [nan, 0.22136094674556292]}
{'': [nan, 0.22136094674556017]}
{'': [nan, 0.2278050812161599], 'false': [0.2278050812161599, nan]}
{'': [nan, 0.21535510682508294], 'false': [0.21535510682508294, nan]}
{'': [nan, 0.2243746973081915]}
{'': [nan, 0.21963957759412175]}
{'': [0.20612673484295105, nan]}
{'': [0.2204999708641685, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.055
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H), interaction(H, J) )
%   | | then if ( interaction(A, K), interaction(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.4414822684328456;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(L, H), phenotype(A, M) )
%   | | | then return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.23314893509951234;  // std dev = 3.873, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | else return 0.10533994633546742;  // std dev = 0.431, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then return 0.06274328995015699;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( enzyme(C, G) )
%   | | then if ( interaction(H, A), interaction(H, C) )
%   | | | then return 0.5832054912315484;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.33320549123154836;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.1631559909446404;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.36370371405356955;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( interaction(I, A), interaction(A, I) )
%   | then if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5832054912315484;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19576417490302697;  // std dev = 0.483, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.1253833884101208;  // std dev = 0.458, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.24379884545037375;  // std dev = 3.043, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.132470691479155;  // std dev = 6.811, 209.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.7686231800036724;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06994485640868853;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.026073456521027077;  // std dev = 1.774, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.08182430910036059;  // std dev = 3.557, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.07571951091411361;  // std dev = 3.823, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.3006869602523275;  // std dev = 1.409, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.3829337390343693;  // std dev = 1.686, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.18996033566595683;  // std dev = 3.877, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(A, H), complex(F, I) )
%   | | | then return 0.07262066674897935;  // std dev = 1.962, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.021911643107312796;  // std dev = 3.699, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.18325539542318675;  // std dev = 2.969, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.06850436621534091;  // std dev = 5.664, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.14143238376232276;  // std dev = 1.803, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.02237362364617129;  // std dev = 3.251, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.059691112321107215;  // std dev = 5.670, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
%   | | | else return 0.1693638805022075;  // std dev = 3.348, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, D), complex(E, F) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2196486688894308;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.08561880721662017;  // std dev = 1.945, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(G, E), complex(G, H) )
%   | | | then return 0.14921296351959007;  // std dev = 3.153, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.06974158824923482;  // std dev = 3.651, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, J) )
%   | | | then return -0.09500670493915639;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.005639834542036085;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return -0.09106892705217093;  // std dev = 1.731, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.03720665065615959;  // std dev = 4.765, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(G, E) )
%   | | then if ( interaction(A, H), enzyme(H, F) )
%   | | | then return 0.003185990466637911;  // std dev = 1.430, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.12058345315739143;  // std dev = 2.445, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(I, E), enzyme(I, J) )
%   | | | then return 0.18775219954115668;  // std dev = 2.179, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.010659186502140728;  // std dev = 4.217, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | else if ( interaction(K, A), interaction(A, L) )
%   | | then if ( enzyme(A, M), interaction(L, L) )
%   | | | then return -0.04772760509228688;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.15935828581081474;  // std dev = 2.572, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( location(A, N) )
%   | | | then return 0.011773075042934976;  // std dev = 4.175, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.2155116451509097;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.04077099296909161;  // std dev = 1.955, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.3814793508659517;  // std dev = 1.461, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.13475989145863881;  // std dev = 2.224, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.025752688144389572;  // std dev = 4.664, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then if ( interaction(K, K), location(A, M) )
%   | | | then return 0.011504247749666593;  // std dev = 1.440, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.10102974124823302;  // std dev = 2.158, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( interaction(N, A), location(A, P) )
%   | | | then return 0.05750968083574195;  // std dev = 3.235, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return -0.03041482411847566;  // std dev = 2.430, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(A, G), phenotype(E, H) )
%   | | then if ( interaction(I, E), complex(I, J) )
%   | | | then return -0.1120821654766903;  // std dev = 3.309, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return -0.001254511740952752;  // std dev = 3.001, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else if ( phenotype(A, K), complex(E, L) )
%   | | | then return 0.11103268863483362;  // std dev = 2.349, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.007842424255314227;  // std dev = 4.798, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | else if ( enzyme(A, M), location(A, N) )
%   | | then if ( interaction(A, P), interaction(P, P) )
%   | | | then return -0.13477774446222895;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.028435038747712194;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, Q), interaction(Q, R) )
%   | | | then return 0.1835560418415468;  // std dev = 2.291, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.040115024871296576;  // std dev = 1.612, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '11.605', 'seconds']
Refined model CLL: -0.391159


******************************************
Best model found
******************************************
Results 

CLL : -0.339138 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.055 

Total Inference Time : 55.885331869125366 

Total revision time: 93.74770294189453
Best scored revision CLL: -0.339897


Results 

CLL : -0.339138 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 93.94070039749145 

Total Inference Time : 55.885331869125366 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.591
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.461, 284.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18037115732173373;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15696615854020496;  // std dev = 0.467, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.11936008230197155;  // std dev = 7.762, 283.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13155392926205914;  // std dev = 7.586, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0835578505428379;  // std dev = 0.464, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08380675398347998;  // std dev = 0.470, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07953877876551718;  // std dev = 0.474, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05615193192928081;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.604', 'seconds']
Parameter learned model CLL:-0.345434 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.679, 183, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.762, 196, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.586, 170, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 169, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.623, 175, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2183950617283959, nan], 'true': [nan, 0.2183950617283959], 'true,false': [nan, 0.2183950617283959]}
{'': [nan, 0.21839506172839404]}
{'': [nan, 0.2129131341382704], 'false': [0.2129131341382704, nan]}
{'': [nan, 0.2239246619933706], 'false': [0.2239246619933706, nan]}
{'': [nan, 0.21501216293152514]}
{'': [nan, 0.22051975792096706]}
{'': [0.2243499755859387, nan]}
{'': [0.22179651535458164, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 45.096
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), location(A, F) )
%   | then if ( phenotype(E, D), location(E, F) )
%   | | then if ( interaction(C, E), enzyme(A, G) )
%   | | | then return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.19522758678490504;  // std dev = 4.460, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | else return 0.1196873966379739;  // std dev = 0.439, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then return 0.11901850031690367;  // std dev = 0.439, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2823913593419366;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), interaction(E, A) )
%   | then return 0.547835426918857;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.40448745252010615;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1975936891346205;  // std dev = 3.725, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | else if ( enzyme(H, C), interaction(I, H) )
%   | | | then return 0.5930344541127943;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1700718839656625;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, J), complex(J, K) )
%   | then return 0.12290737742459273;  // std dev = 0.453, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.457684339214056;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.19689772653565105;  // std dev = 4.102, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | else return 0.049009906120922674;  // std dev = 0.435, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.16815613306526636;  // std dev = 4.304, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | | else return 0.09927676584328739;  // std dev = 6.316, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( interaction(A, H), complex(H, D) )
%   | | | then return -0.07853353897869163;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.028425816189407812;  // std dev = 1.720, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(I, E), interaction(I, I) )
%   | | | then return 0.17507292943961397;  // std dev = 2.711, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.08057892351803418;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( enzyme(J, K), location(A, L) )
%   | | | then return 0.14987436523055495;  // std dev = 1.734, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.40330505698949304;  // std dev = 1.573, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.021106657074431125;  // std dev = 2.859, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.17967230820659855;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11399386127382875;  // std dev = 3.935, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.3643396191160597;  // std dev = 2.087, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.1413016261923279;  // std dev = 2.973, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.05155462996578633;  // std dev = 5.048, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( enzyme(F, H), interaction(F, F) )
%   | | | then return 0.2587053432838088;  // std dev = 1.581, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.009390507652971797;  // std dev = 4.075, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.059197847674740754;  // std dev = 4.409, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.11255552479705716;  // std dev = 4.231, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( phenotype(F, G), interaction(A, H) )
%   | | | then return 0.0377359483166669;  // std dev = 2.156, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.07849458740153421;  // std dev = 2.599, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return 0.23244922443562052;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05141852828220815;  // std dev = 2.002, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.10808204083430213;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.08382920434205754;  // std dev = 3.481, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.19632125686290364;  // std dev = 2.269, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.1042038152286316;  // std dev = 4.366, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.08418305707944995;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.018470431599201628;  // std dev = 1.849, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( location(A, F), interaction(D, D) )
%   | | | then return -0.1477399623350576;  // std dev = 2.177, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.0012455109356235962;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.666730709989761;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10031107353200885;  // std dev = 3.029, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.07055398279202744;  // std dev = 2.702, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.017909905345032076;  // std dev = 5.227, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), location(A, H) )
%   | | then if ( enzyme(A, I), location(E, H) )
%   | | | then return -0.028416887242543817;  // std dev = 2.548, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.06061219588169958;  // std dev = 4.645, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | else if ( location(A, J), location(E, J) )
%   | | | then return 0.03273141423148914;  // std dev = 1.777, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3759933118499306;  // std dev = 1.609, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( phenotype(K, M), enzyme(A, N) )
%   | | | then return -0.16119064131126995;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.008229941523084539;  // std dev = 1.393, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(A, P), interaction(Q, A) )
%   | | | then return -0.12489916112043331;  // std dev = 1.565, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.04594634979316746;  // std dev = 3.794, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(E, G), interaction(H, A) )
%   | | then if ( complex(H, I), interaction(J, H) )
%   | | | then return 0.07796870507698654;  // std dev = 3.386, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return -0.14905628555614203;  // std dev = 1.787, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(E, K), interaction(A, K) )
%   | | | then return -0.04831215172052574;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.47509050298876004;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( phenotype(L, N), phenotype(A, N) )
%   | | | then return -0.1706974175272353;  // std dev = 1.567, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.05104060671768504;  // std dev = 2.824, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2033817603413035;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0063111278807036555;  // std dev = 5.424, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '41.000', 'seconds']
Refined model CLL: -0.418339


******************************************
Best model found
******************************************
Results 

CLL : -0.345024 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.096 

Total Inference Time : 78.61167693138123 

Total revision time: 131.46760460090638
Best scored revision CLL: -0.345434


Results 

CLL : -0.345024 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 131.63033815574647 

Total Inference Time : 78.61167693138123 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18314893509950927;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16243610499612707;  // std dev = 0.470, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1461608417998192;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13738921018185996;  // std dev = 8.221, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09663464964971993;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07244458639949053;  // std dev = 0.469, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06367788874714113;  // std dev = 0.471, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05858656105766835;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.976', 'seconds']
Parameter learned model CLL:-0.352686 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.379, 216, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.313, 206, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.221, 193, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 209, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.286, 202, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21937500000000196, nan], 'true': [nan, 0.21937500000000196], 'true,false': [nan, 0.21937500000000196]}
{'': [nan, 0.2204420384320648]}
{'': [nan, 0.22293444328823872], 'false': [0.22293444328823872, nan]}
{'': [nan, 0.22755047670872453], 'false': [0.22755047670872453, nan]}
{'': [nan, 0.222222222222224]}
{'': [nan, 0.22008623076618536]}
{'': [0.2218661005011806, nan]}
{'': [0.22435815284719476, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 40.896
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( complex(A, D), interaction(A, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), enzyme(I, J) )
%   | | | then return 0.1232091760633673;  // std dev = 4.021, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | | else return 0.20189893509951232;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.15576798271855907;  // std dev = 4.190, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | | | else return 0.23858371770820688;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else if ( interaction(M, A), enzyme(M, N) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, P) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( enzyme(E, G), interaction(E, A) )
%   | | then return 0.5062330161447909;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.08175281540682044;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.25925415781177946;  // std dev = 1.851, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.6381099664528219;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, J) )
%   | | | then return 0.37439118345329825;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( location(A, K) )
%   | then if ( interaction(L, A), complex(A, M) )
%   | | then return 0.1487428087572296;  // std dev = 0.463, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | else return 0.20415707368909253;  // std dev = 0.484, 126.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=47 */
%   | else return 0.025671069201963582;  // std dev = 0.432, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1336746403606245;  // std dev = 6.502, 191.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=64 */
%   | | | else return 0.08141986129728776;  // std dev = 5.369, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( enzyme(F, H), complex(F, I) )
%   | | | then return 0.0020663641717562236;  // std dev = 1.524, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1716048754609393;  // std dev = 3.674, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.019258035635628477;  // std dev = 2.693, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.08626330412653167;  // std dev = 4.401, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(L, L), complex(L, N) )
%   | | | then return 0.5497586095020056;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1882980933970376;  // std dev = 4.462, 83.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   | | else if ( interaction(A, P) )
%   | | | then return -0.018259290970632492;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10076280408409617;  // std dev = 1.627, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.12628797071579517;  // std dev = 4.581, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | | else return -0.053545039151864995;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return -0.011086254527077873;  // std dev = 3.397, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.05869854075451357;  // std dev = 6.119, 175.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.043033192851180076;  // std dev = 2.634, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.07925046524494195;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.12017464077163109;  // std dev = 5.994, 153.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=57 */
%   | | | else return 0.03737535392005287;  // std dev = 3.142, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.0726404603499122;  // std dev = 1.286, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.0835616370829786;  // std dev = 2.797, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1355923073629892;  // std dev = 1.740, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.27371914594177327;  // std dev = 1.792, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(A, K), interaction(I, K) )
%   | | | then return 0.05031234347518903;  // std dev = 2.578, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.14586766974061754;  // std dev = 2.853, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.05003787950680748;  // std dev = 4.342, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return -0.01504361051945343;  // std dev = 4.396, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, A), complex(D, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.06912371733785146;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10285200717817373;  // std dev = 1.262, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( complex(D, H), complex(A, I) )
%   | | | then return 0.38107200341836345;  // std dev = 1.453, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.1255096950428553;  // std dev = 3.103, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, A), phenotype(L, K) )
%   | | | then return 0.016098574624125873;  // std dev = 3.445, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return -0.07474020400904342;  // std dev = 1.775, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.029203977243921493;  // std dev = 5.897, 162.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=51 */
%   | | | else return 0.11016409275181369;  // std dev = 1.938, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(E, H) )
%   | | | then return 0.0020332804978023256;  // std dev = 1.871, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.3818993979927292;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), interaction(I, E) )
%   | | | then return -0.10236786357079097;  // std dev = 2.419, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.006237767282058785;  // std dev = 2.714, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( interaction(A, A), complex(A, K) )
%   | | | then return -0.0654081707570304;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.04958476952254563;  // std dev = 2.711, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2919100835023514;  // std dev = 1.765, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.10845235852110949;  // std dev = 5.869, 144.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=57 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), interaction(E, G) )
%   | | then if ( complex(E, H), phenotype(E, I) )
%   | | | then return 0.416537782396406;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1252877166437885;  // std dev = 1.275, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.14612509195599088;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.053079532670111514;  // std dev = 1.719, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( phenotype(A, L), enzyme(A, M) )
%   | | then if ( enzyme(N, M), interaction(N, P) )
%   | | | then return -0.015769085215405387;  // std dev = 2.109, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.1768414300188893;  // std dev = 1.562, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( complex(A, Q) )
%   | | | then return 0.0263083870918057;  // std dev = 4.483, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return -0.02526764530985265;  // std dev = 5.946, 171.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=49 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '23.591', 'seconds']
Refined model CLL: -0.397317


******************************************
Best model found
******************************************
Results 

CLL : -0.353696 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 40.896 

Total Inference Time : 93.93300938606262 

Total revision time: 145.70151772117615
Best scored revision CLL: -0.352686


Results 

CLL : -0.353696 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 145.86425127601623 

Total Inference Time : 93.93300938606262 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.364
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2079588210310694;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16303305277099872;  // std dev = 0.471, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15003030538329898;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1242831636205996;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09736370725210684;  // std dev = 0.473, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07075158463705757;  // std dev = 0.470, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06417817710323122;  // std dev = 0.472, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04528021555420773;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.113', 'seconds']
Parameter learned model CLL:-0.354182 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.734, 171, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.773, 176, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.78, 177, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 182, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.853, 187, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22744292963611001, nan], 'true': [nan, 0.22744292963611001], 'true,false': [nan, 0.22744292963611001]}
{'': [nan, 0.2218196509794251]}
{'': [nan, 0.22543996435731878], 'false': [0.22543996435731878, nan]}
{'': [nan, 0.22503834938709866], 'false': [0.22503834938709866, nan]}
{'': [nan, 0.22342980584738864]}
{'': [nan, 0.2206122448979592]}
{'': [0.22302733230326532, nan]}
{'': [0.22101463239166852, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 36.526
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(D, G), complex(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.10814893509951236;  // std dev = 0.433, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return 0.1340110040650296;  // std dev = 0.447, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.16584124279182005;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.27706785401843087;  // std dev = 4.244, 74.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( complex(A, D) )
%   | then return 0.06796606723250183;  // std dev = 0.433, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else return 0.18804818870552542;  // std dev = 0.493, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, E), enzyme(A, F) )
%   | | then if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return 0.2185268779640004;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08886254528397465;  // std dev = 1.916, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( complex(A, I), complex(E, I) )
%   | | | then return 0.4366927569537302;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.2108881539709836;  // std dev = 4.104, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( location(A, K), interaction(J, J) )
%   | | | then return 0.5077069839049533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14486394789031556;  // std dev = 5.098, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | else return 0.003405217298995835;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), enzyme(A, G) )
%   | | | then return 0.20827774097157012;  // std dev = 4.628, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | | | else return 0.12090715011879932;  // std dev = 6.175, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(A, F), location(D, G) )
%   | | then if ( interaction(E, H), enzyme(H, F) )
%   | | | then return 0.020564886952972095;  // std dev = 2.099, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.15108559043159683;  // std dev = 2.210, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(I, D), location(I, J) )
%   | | | then return 0.3835800985498581;  // std dev = 2.189, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.12072291663783903;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.09230091136812149;  // std dev = 2.648, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.009419057904310153;  // std dev = 3.390, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( enzyme(A, N), location(A, P) )
%   | | | then return 0.05844972267734392;  // std dev = 2.528, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.13503242781314118;  // std dev = 4.331, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.26165691191629453;  // std dev = 1.208, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.012510549774209364;  // std dev = 4.484, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.20034725458714692;  // std dev = 2.732, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.052215576279897376;  // std dev = 5.839, 166.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( interaction(H, A), complex(F, I) )
%   | | | then return 0.020973848010255005;  // std dev = 3.708, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.09929463898381623;  // std dev = 4.247, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.29905635689804055;  // std dev = 1.652, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.11448269500927087;  // std dev = 4.948, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(D, D), enzyme(D, G) )
%   | | | then return -0.12880627717921037;  // std dev = 1.551, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.00639131234839168;  // std dev = 3.372, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.18996380172402094;  // std dev = 1.980, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.04184329183852115;  // std dev = 2.891, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.06586654744905732;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.22297950068271993;  // std dev = 2.302, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.1105279411492082;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.08191498111450485;  // std dev = 5.077, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.023903050597628997;  // std dev = 1.397, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3249940567570726;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.19410979014512444;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.10584582779453289;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(A, I), interaction(G, J) )
%   | | | then return 0.12507025353837564;  // std dev = 1.747, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.08677606219880939;  // std dev = 3.165, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.0381231270885422;  // std dev = 2.873, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.03365283133801531;  // std dev = 5.935, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( enzyme(E, G) )
%   | | then if ( enzyme(A, G), interaction(E, E) )
%   | | | then return -0.05541868239075989;  // std dev = 1.956, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.16485788250503564;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return -0.11708663885369346;  // std dev = 1.984, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.022486219344163023;  // std dev = 3.487, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), complex(L, K) )
%   | | | then return 0.6999645814858331;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06301962094112545;  // std dev = 2.439, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.0020975634278563933;  // std dev = 4.354, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | | else return 0.05611527354192525;  // std dev = 3.404, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( enzyme(E, G), interaction(A, H) )
%   | | then if ( complex(A, I), interaction(H, A) )
%   | | | then return 0.019582496887626113;  // std dev = 1.347, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2843897159277624;  // std dev = 1.661, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( complex(E, J) )
%   | | | then return 0.006058360743798834;  // std dev = 4.562, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return 0.07909843459889943;  // std dev = 4.203, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | else if ( phenotype(A, K), location(A, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.12278495142519041;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08847650534108466;  // std dev = 2.255, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.09353639542032433;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.08474758958174489;  // std dev = 2.773, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '41.983', 'seconds']
Refined model CLL: -0.39556


******************************************
Best model found
******************************************
Results 

CLL : -0.354025 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 36.526 

Total Inference Time : 54.30461072921753 

Total revision time: 102.26368583679199
Best scored revision CLL: -0.354182


Results 

CLL : -0.354025 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 102.42641939163208 

Total Inference Time : 54.30461072921753 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.807
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 238.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20214893509951148;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16121974319661111;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16039146658462278;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12443851890355216;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09188611658839099;  // std dev = 0.471, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05091807092853132;  // std dev = 0.462, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06487017581379495;  // std dev = 0.471, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05197886447130198;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.338', 'seconds']
Parameter learned model CLL:-0.350352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.511, 164, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.462, 158, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.519, 165, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 193, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 173, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.579, 173, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2256640000000008, nan], 'true': [nan, 0.2256640000000008], 'true,false': [nan, 0.2256640000000008]}
{'': [nan, 0.2209304032530369]}
{'': [nan, 0.22823165815641094], 'false': [0.22823165815641094, nan]}
{'': [nan, 0.22523452008698475], 'false': [0.22523452008698475, nan]}
{'': [nan, 0.22179156542090955]}
{'': [nan, 0.2132295319947096]}
{'': [0.22179156542090972, nan]}
{'': [0.2217915654209099, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 24.252
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), location(A, F) )
%   | then if ( interaction(G, A), enzyme(G, C) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( enzyme(A, I), complex(A, J) )
%   | then return 0.058148935099512224;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.20460562801289717;  // std dev = 5.362, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(A, D) )
%   | then return 0.130195138038161;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.6360612144602324;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2598621663824132;  // std dev = 1.283, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08485338858098157;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return 0.13194297466647975;  // std dev = 0.460, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( phenotype(A, L), phenotype(K, L) )
%   | | | then return 0.3406212797871715;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.102098318729904;  // std dev = 2.093, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.48702213301503033;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22270528965108613;  // std dev = 3.125, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.18886813147961867;  // std dev = 3.886, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.10932217807494854;  // std dev = 6.517, 202.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=61 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( interaction(H, A), phenotype(H, G) )
%   | | | then return 0.12534160255659618;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0390049772343287;  // std dev = 1.744, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.1859441881044049;  // std dev = 2.067, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.08552774488133635;  // std dev = 2.924, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5626070074845612;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19704108682196797;  // std dev = 1.699, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.10558896066662281;  // std dev = 3.623, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.1941547695099563;  // std dev = 4.501, 84.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return 0.09839585705268422;  // std dev = 6.268, 170.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=60 */
%   | | | else return 0.0025101524452157296;  // std dev = 2.869, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.15259353747699642;  // std dev = 2.606, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.3338067704021302;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.04719845298499151;  // std dev = 3.271, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.06570717972122128;  // std dev = 1.509, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return -0.029463572975750186;  // std dev = 1.470, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09416859923838453;  // std dev = 6.438, 181.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.016885006778869165;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.12443856033766053;  // std dev = 1.569, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.19280669068319434;  // std dev = 1.433, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.00701929633644391;  // std dev = 3.577, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( interaction(L, A), interaction(K, L) )
%   | | | then return 0.19077787020637832;  // std dev = 1.580, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.01538530318062509;  // std dev = 3.150, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.23061374831558448;  // std dev = 2.908, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.10644797302919712;  // std dev = 3.773, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), complex(A, E) )
%   | then if ( interaction(F, A), complex(F, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.12987592729531283;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03891148140940968;  // std dev = 2.488, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.10239914376824086;  // std dev = 1.762, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.23764667860887942;  // std dev = 2.296, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.020275910756182847;  // std dev = 1.854, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.25922875271997436;  // std dev = 1.493, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.06629301286517592;  // std dev = 3.198, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return -0.021877175117088556;  // std dev = 4.885, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( phenotype(G, E), enzyme(G, H) )
%   | | | then return -0.1317377617834919;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.23888061892634901;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.05758801259070954;  // std dev = 1.332, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08196074698715673;  // std dev = 1.513, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.0010461970925689343;  // std dev = 2.625, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.15854268778600558;  // std dev = 2.685, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return 0.05028644855499682;  // std dev = 3.609, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return -0.03043846289188578;  // std dev = 4.991, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( complex(F, G) )
%   | | then if ( enzyme(F, H), phenotype(F, E) )
%   | | | then return -0.1253480499627924;  // std dev = 1.788, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.036799591368810204;  // std dev = 3.342, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.1420194272764229;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.07339905322861505;  // std dev = 3.801, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(A, L), interaction(J, M) )
%   | | | then return 0.14563048906877613;  // std dev = 1.920, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.010303253178444834;  // std dev = 3.111, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( enzyme(A, N), interaction(P, A) )
%   | | | then return 0.24145776830097057;  // std dev = 1.787, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.07547656185283644;  // std dev = 2.820, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '23.919', 'seconds']
Refined model CLL: -0.406542


******************************************
Best model found
******************************************
Results 

CLL : -0.349624 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.252 

Total Inference Time : 33.67062425613403 

Total revision time: 66.71965001487732
Best scored revision CLL: -0.350352


Results 

CLL : -0.349624 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 66.8823835697174 

Total Inference Time : 33.67062425613403 

Starting experiment 24_nell_finances_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.521
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20895538671241448;  // std dev = 7.515, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1529852443033375;  // std dev = 0.467, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13278081937915084;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11626746843620132;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12906415022924325;  // std dev = 0.481, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08655392139225053;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07240882554829563;  // std dev = 0.476, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07516844714359557;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '50.954', 'seconds']
Parameter learned model CLL:-0.369334 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.515, 161, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.665, 181, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.637, 177, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 164, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.438, 152, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22774128511966796, nan], 'true': [nan, 0.22774128511966796], 'true,false': [nan, 0.22774128511966796]}
{'': [nan, 0.2183950617283964]}
{'': [nan, 0.21924426375584977], 'false': [0.21924426375584977, nan]}
{'': [nan, 0.2209452479338859], 'false': [0.2209452479338859, nan]}
{'': [nan, 0.23109375000000268]}
{'': [nan, 0.22562452155165613]}
{'': [0.22647259567308364, nan]}
{'': [0.2315085520211489, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 33.504
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(A, E), phenotype(D, F) )
%   | then return 0.22851930546988244;  // std dev = 0.483, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else return 0.12957750652808378;  // std dev = 0.445, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H), interaction(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3966104735610507;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.1359267128772901;  // std dev = 0.448, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(P, A), location(P, Q) )
%   | | | then return 0.3465210281227675;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.32799459053974206;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1613279238730754;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.04429740982338008;  // std dev = 0.405, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | else if ( interaction(C, C), enzyme(A, I) )
%   | | then if ( enzyme(C, J), location(C, K) )
%   | | | then return 0.06778465181497009;  // std dev = 1.229, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.4171605128922196;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(L, C), enzyme(L, M) )
%   | | | then return 0.12084604726144875;  // std dev = 5.230, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | | else return 0.20834190859371574;  // std dev = 3.850, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   else if ( enzyme(A, N) )
%   | then return 0.4884192867863044;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.09078403589082173;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A) )
%   | | | then return 0.1345855036327919;  // std dev = 7.396, 245.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=82 */
%   | | | else return 0.4824332526426849;  // std dev = 1.153, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.597343888353232;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1793049980722117;  // std dev = 1.739, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, E) )
%   | | | then return 0.002441668488246745;  // std dev = 1.767, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.20638836835640498;  // std dev = 2.391, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), interaction(A, M) )
%   | | | then return 0.09798928647777087;  // std dev = 2.617, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.017828563257168615;  // std dev = 2.632, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return 0.1023937804334474;  // std dev = 5.186, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0.3455435235402576;  // std dev = 1.246, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), location(A, G) )
%   | | then if ( phenotype(F, H), phenotype(A, H) )
%   | | | then return 0.1737898507665671;  // std dev = 3.249, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.07761223916399755;  // std dev = 6.372, 184.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=60 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.09670168535317336;  // std dev = 2.153, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.11537945593195137;  // std dev = 1.331, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, A), complex(A, F) )
%   | | then if ( complex(G, F), enzyme(G, H) )
%   | | | then return -0.15289090812913161;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.05580880391124791;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.11349204313633852;  // std dev = 4.787, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | | | else return 0.042332982024700226;  // std dev = 5.764, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, A), enzyme(A, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.007702508282598136;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.15564098385279942;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.03180803735645649;  // std dev = 3.566, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.1352997134207272;  // std dev = 2.540, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, L), location(A, M) )
%   | | | then return 0.32055569911123877;  // std dev = 1.760, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.11426960408622497;  // std dev = 5.016, 107.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.08143563537149005;  // std dev = 1.124, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04641628815898582;  // std dev = 1.499, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F), location(A, G) )
%   | | then if ( phenotype(D, H), location(D, I) )
%   | | | then return 0.05412310129312412;  // std dev = 2.350, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.14766941556611698;  // std dev = 1.497, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.0586697836685924;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1897417541299243;  // std dev = 2.061, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.16898122061025386;  // std dev = 1.630, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.005574356918059325;  // std dev = 5.067, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | | else if ( location(A, Q) )
%   | | | then return 0.0854575989904265;  // std dev = 3.951, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.37163983787839944;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(A, H), complex(F, I) )
%   | | | then return -0.0012068216240895867;  // std dev = 2.364, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.12472544240632318;  // std dev = 1.482, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.16806299340729447;  // std dev = 1.794, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.05719899839466995;  // std dev = 2.572, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L), phenotype(J, M) )
%   | | | then return 0.1759711685293917;  // std dev = 3.174, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.060723780986391564;  // std dev = 4.636, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.09869909509152812;  // std dev = 1.477, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.08511434868116466;  // std dev = 1.932, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, G) )
%   | | then if ( interaction(H, F), phenotype(A, I) )
%   | | | then return 0.11931633664562905;  // std dev = 2.222, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.050683772879365804;  // std dev = 3.746, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.21167413180020236;  // std dev = 1.312, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.07622749615177175;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, L), interaction(M, A) )
%   | | then if ( interaction(M, M), phenotype(A, N) )
%   | | | then return 0.17614253600302482;  // std dev = 1.938, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.03926209620763065;  // std dev = 3.572, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( complex(A, P), phenotype(A, Q) )
%   | | | then return 0.32012780034604515;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.11786649159798818;  // std dev = 3.603, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '28.943', 'seconds']
Refined model CLL: -0.420289


******************************************
Best model found
******************************************
Results 

CLL : -0.368962 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.504 

Total Inference Time : 59.721022605895996 

Total revision time: 101.05819358825684
Best scored revision CLL: -0.369334


Results 

CLL : -0.368962 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 101.30792083740235 

Total Inference Time : 59.721022605895996 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.386
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.482, 282.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21676962475468117;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17865482006646466;  // std dev = 0.477, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12389661059768287;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13391667699995677;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13034760653054;  // std dev = 0.483, 280.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.057254997260204624;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04002669500457461;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.028118421229374413;  // std dev = 8.451, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.135', 'seconds']
Parameter learned model CLL:-0.349402 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.167, 186, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.403, 220, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.213, 192, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.483, 176, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.465, 224, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.451, 228, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2300118906064233, nan], 'true': [nan, 0.2300118906064233], 'true,false': [nan, 0.2300118906064233]}
{'': [nan, 0.22719697310931958]}
{'': [nan, 0.21795458009450255], 'false': [0.21795458009450255, nan]}
{'': [nan, 0.22790357925493088], 'false': [0.22790357925493088, nan]}
{'': [nan, 0.23346938775510248]}
{'': [nan, 0.2186644033795]}
{'': [0.21653777513384814, nan]}
{'': [0.2151255624909295, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 51.51
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(C, F), phenotype(A, G) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3126943896449668;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( complex(A, H) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(A, I), complex(C, J) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3025933795439567;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(K, A), phenotype(A, L) )
%   | then return 0.1611792381298144;  // std dev = 0.460, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | else return 0.2226349164079224;  // std dev = 0.481, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then return 0.1522623464168165;  // std dev = 0.467, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(D, H), interaction(I, A) )
%   | | | then return 0.248948421541563;  // std dev = 2.518, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.580966872954077;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(J, A), location(J, C) )
%   | | then return 0.15248036400900283;  // std dev = 0.467, 183.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=59 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10388831360444367;  // std dev = 2.090, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.33150083474258557;  // std dev = 2.002, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( interaction(L, A), complex(L, M) )
%   | then if ( interaction(A, N) )
%   | | then return 0.1621643591333762;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16501215533875505;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.49549769246670944;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.16016498165087362;  // std dev = 7.887, 270.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=97 */
%   | | | else return 0.03067126610171952;  // std dev = 2.273, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.23952383342067746;  // std dev = 2.079, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.12633190431391236;  // std dev = 5.232, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1340324640309523;  // std dev = 2.253, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.0661134542535247;  // std dev = 4.143, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( interaction(L, L) )
%   | | | then return 0.1214001435511179;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.051784071769903545;  // std dev = 1.998, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.11454429176702319;  // std dev = 2.562, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.006314076884578658;  // std dev = 2.132, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(F, H), interaction(F, G) )
%   | | | then return 0.04859316199871061;  // std dev = 3.993, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | | else return 0.12197978934716752;  // std dev = 6.734, 195.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=71 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.19811545645682868;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.020837670519887958;  // std dev = 2.320, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(F, H), phenotype(A, H) )
%   | | | then return -0.015054763491200461;  // std dev = 3.096, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.08158921254679961;  // std dev = 4.285, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.14633582779787765;  // std dev = 5.206, 112.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=46 */
%   | | | else return 0.0557650653486843;  // std dev = 3.426, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, G) )
%   | | then if ( interaction(A, D), interaction(D, D) )
%   | | | then return -0.03687921849322762;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23491847461417603;  // std dev = 2.115, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(H, D), phenotype(H, E) )
%   | | | then return 0.08525845069400641;  // std dev = 6.523, 185.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=68 */
%   | | | else return -0.028820062981352087;  // std dev = 2.261, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, I), phenotype(A, K) )
%   | | | then return -0.05849576155822102;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.13759423781187488;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.41497698487607765;  // std dev = 1.425, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.12289777186185365;  // std dev = 1.893, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( enzyme(A, G), interaction(D, F) )
%   | | | then return 0.016297604344576385;  // std dev = 2.317, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.23741803339518716;  // std dev = 2.187, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.008181603981546147;  // std dev = 3.390, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.1259955982303878;  // std dev = 2.005, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( complex(I, K) )
%   | | | then return -0.013125852162912639;  // std dev = 5.505, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | | | else return -0.08492086023030705;  // std dev = 2.906, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.20119359002229417;  // std dev = 1.240, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03745999359445389;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(E, A), phenotype(E, G) )
%   | | then if ( interaction(F, F), enzyme(F, H) )
%   | | | then return -0.031044504915415282;  // std dev = 2.621, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.1378285008012421;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( location(A, I), interaction(F, J) )
%   | | | then return -0.05329766739694017;  // std dev = 3.757, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.0574874963220703;  // std dev = 1.960, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.20763401492561187;  // std dev = 1.740, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.01811992513281639;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, P), enzyme(A, Q) )
%   | | | then return -0.031221898177451184;  // std dev = 1.905, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.05734737015009669;  // std dev = 5.198, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( complex(F, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.0432027343943609;  // std dev = 3.459, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.069544299714662;  // std dev = 3.159, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.1317573473023825;  // std dev = 1.551, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.03815402420726171;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(J, A) )
%   | | then if ( location(A, K) )
%   | | | then return 0.06318003647518163;  // std dev = 5.851, 146.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=55 */
%   | | | else return -0.0651999015140781;  // std dev = 2.127, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else return 0.5077547974328255;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '17.398', 'seconds']
Refined model CLL: -0.409878


******************************************
Best model found
******************************************
Results 

CLL : -0.350425 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 51.51 

Total Inference Time : 117.46930146217346 

Total revision time: 180.49359044647218
Best scored revision CLL: -0.349402


Results 

CLL : -0.350425 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 180.7433176956177 

Total Inference Time : 117.46930146217346 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.328
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1988896758402513;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1667189655914202;  // std dev = 0.472, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14458095529618384;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10355954067984025;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11063915192723627;  // std dev = 0.475, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07075098162722546;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08049803044089712;  // std dev = 0.476, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.052926538019989915;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.989', 'seconds']
Parameter learned model CLL:-0.355814 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.788, 178, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.81, 181, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.913, 196, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 172, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.81, 181, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22463648834019337, nan], 'true': [nan, 0.22463648834019337], 'true,false': [nan, 0.22463648834019337]}
{'': [nan, 0.22262479338842694]}
{'': [nan, 0.22342980584738711], 'false': [0.22342980584738711, nan]}
{'': [nan, 0.21739969135802595], 'false': [0.21739969135802595, nan]}
{'': [nan, 0.22584129388825827]}
{'': [nan, 0.21940591092409573]}
{'': [0.22704315886133847, nan]}
{'': [0.2234298058473898, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.594
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.16249676118646889;  // std dev = 0.460, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( complex(A, F) )
%   | | then if ( enzyme(A, G), enzyme(C, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, I) )
%   | then return 0.1145591915097676;  // std dev = 0.437, 117.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.15544623239680966;  // std dev = 0.457, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.29211119925045476;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | | else return 0.16249676118646889;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), location(C, E) )
%   | then if ( complex(A, F), location(A, E) )
%   | | then if ( interaction(D, D), phenotype(A, G) )
%   | | | then return 0.15710395583511746;  // std dev = 2.017, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2605085067380988;  // std dev = 3.453, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else if ( interaction(C, D) )
%   | | | then return 0.20250436476367764;  // std dev = 2.851, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.1110203070155312;  // std dev = 3.041, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( phenotype(C, H), enzyme(A, I) )
%   | | then if ( interaction(C, J), interaction(J, J) )
%   | | | then return 0.34201645941152664;  // std dev = 0.997, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17116738365768983;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.5871949163360088;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3053499717552201;  // std dev = 2.055, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else return 0.1181638095068038;  // std dev = 0.458, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.17151319098703294;  // std dev = 4.874, 102.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=38 */
%   | | | else return 0.11435988863240787;  // std dev = 6.101, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( phenotype(F, H), location(F, I) )
%   | | | then return 0.04235054136371263;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.34058548453435705;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(J, D), interaction(J, J) )
%   | | | then return -0.012019687337568453;  // std dev = 1.531, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.0612832197982193;  // std dev = 2.668, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(K, K), complex(K, M) )
%   | | | then return 0.18775122010447096;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2816177892875468;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.07796483632833939;  // std dev = 3.875, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.14328996737722074;  // std dev = 5.060, 111.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.16947228229979838;  // std dev = 1.682, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.023642450637048614;  // std dev = 3.387, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.2070852849350613;  // std dev = 2.629, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.10413971323070695;  // std dev = 6.193, 171.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( location(A, H) )
%   | | | then return 0.0028680888668494754;  // std dev = 4.999, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.3468044133861038;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.5132153621472147;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08387085381593908;  // std dev = 5.798, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(D, H), complex(G, H) )
%   | | | then return -8.291222090921063E-4;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.27138365902566336;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( complex(A, I), complex(D, I) )
%   | | | then return 0.12317253696805786;  // std dev = 1.705, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.010145934847238287;  // std dev = 4.259, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.11829213549150716;  // std dev = 2.214, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.4234321061370624;  // std dev = 1.219, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, M), enzyme(A, N) )
%   | | | then return 0.0208632692282702;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.11694819239701792;  // std dev = 4.590, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), interaction(D, D) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.12951249895274203;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0842669581636967;  // std dev = 1.580, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( phenotype(D, I), complex(D, J) )
%   | | | then return 0.3470549240209157;  // std dev = 1.534, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.143343792100678;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(K, A), interaction(A, K) )
%   | | then if ( complex(A, L), interaction(K, K) )
%   | | | then return 0.014483058114743364;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12471631365484069;  // std dev = 1.778, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.01746592052543321;  // std dev = 5.328, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
%   | | | else return 0.06819247494195163;  // std dev = 4.214, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(A, E) )
%   | then if ( location(E, F) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return -0.0704698217113636;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.03662926206362464;  // std dev = 1.928, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.19267608603084668;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.17035365105643338;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(A, L), location(J, M) )
%   | | | then return 0.017822722540464145;  // std dev = 3.982, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.12039223148586321;  // std dev = 3.563, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | else if ( interaction(N, A) )
%   | | | then return -0.043131497473298294;  // std dev = 3.075, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.032270486502235955;  // std dev = 3.835, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( location(E, G), location(A, G) )
%   | | then if ( complex(E, H), interaction(A, I) )
%   | | | then return -0.03482362354342429;  // std dev = 3.266, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.10093487885732613;  // std dev = 3.805, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */
%   | | else if ( phenotype(E, J), complex(E, K) )
%   | | | then return 0.18403492782061592;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0844819824639071;  // std dev = 3.357, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then if ( location(A, N), location(L, N) )
%   | | | then return -0.003538619384102668;  // std dev = 3.319, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.1657032152617642;  // std dev = 2.057, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.10750987795999714;  // std dev = 2.192, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.43288070865485506;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15', 'minutes', 'and', '22.423', 'seconds']
Refined model CLL: -0.413998


******************************************
Best model found
******************************************
Results 

CLL : -0.355659 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.594 

Total Inference Time : 51.67520332336426 

Total revision time: 98.36663205337524
Best scored revision CLL: -0.355814


Results 

CLL : -0.355659 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 98.61635930252075 

Total Inference Time : 51.67520332336426 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.767
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284488;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17720549123154772;  // std dev = 0.475, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16543902900437418;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14599293815370712;  // std dev = 7.384, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06669378040469114;  // std dev = 0.464, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05756279422638837;  // std dev = 0.465, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0384410035802525;  // std dev = 0.462, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.062478327910722706;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.231', 'seconds']
Parameter learned model CLL:-0.349629 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.572, 172, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.429, 154, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.384, 149, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.462, 193, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.534, 167, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22222222222222304, nan], 'true': [nan, 0.22222222222222304], 'true,false': [nan, 0.22222222222222304]}
{'': [nan, 0.2256639999999988]}
{'': [nan, 0.22993055555555633], 'false': [0.22993055555555633, nan]}
{'': [nan, 0.2320325939339075], 'false': [0.2320325939339075, nan]}
{'': [nan, 0.21492892561983423]}
{'': [nan, 0.21620891003460252]}
{'': [0.21322953199470668, nan]}
{'': [0.2243746973081931, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 26.036
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(A, E), enzyme(E, C) )
%   | then if ( interaction(E, F), complex(F, G) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, H) )
%   | | then return 0.15226658215833588;  // std dev = 0.456, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.19148226843284566;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   else if ( phenotype(A, K), complex(A, L) )
%   | then return 0.11901850031690367;  // std dev = 0.439, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(A, M), phenotype(A, N) )
%   | | then if ( enzyme(M, P), interaction(Q, A) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0.18222300917358641;  // std dev = 0.468, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, D), enzyme(C, E) )
%   | then return 0.2574576850972667;  // std dev = 0.492, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return 0.11948679130363418;  // std dev = 0.456, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), interaction(I, H) )
%   | | then if ( complex(H, J), phenotype(A, K) )
%   | | | then return 0.1551959897237328;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.41472008645338393;  // std dev = 2.028, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( enzyme(F, L) )
%   | | | then return 0.5011549881269178;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13680489599524562;  // std dev = 2.638, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( interaction(A, M), location(A, N) )
%   | | then return 0.12782942010224152;  // std dev = 0.457, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.08448832146025109;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3345944653702919;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A) )
%   | | | then return 0.3068916045273584;  // std dev = 1.980, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.13224908413001302;  // std dev = 7.235, 235.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.18373173621031302;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06600733707678441;  // std dev = 2.052, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( complex(I, D), enzyme(I, J) )
%   | | | then return 0.4191221435189366;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.1516088978531661;  // std dev = 2.884, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(A, M), phenotype(K, M) )
%   | | | then return -0.04139311623858395;  // std dev = 2.536, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.07406108407615156;  // std dev = 4.445, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.2861171724695057;  // std dev = 1.879, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.11394182405247935;  // std dev = 3.155, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(F, G), interaction(H, A) )
%   | | | then return 0.11990278027880323;  // std dev = 1.917, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.001595164817618356;  // std dev = 3.468, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.19167352589834208;  // std dev = 3.241, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return 0.08380306859923937;  // std dev = 5.528, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.04830989647113871;  // std dev = 2.712, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.045242556771457894;  // std dev = 2.159, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11429155873785386;  // std dev = 6.449, 177.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=66 */
%   | | | else return -0.054171057858259784;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, G) )
%   | | | then return 0.00450759576471646;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.23089590480445904;  // std dev = 1.399, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.042026080008481584;  // std dev = 3.306, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.049874243133067556;  // std dev = 3.271, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.39387502628757237;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10731606066516518;  // std dev = 3.388, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return -0.014903634022218667;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08883304518951429;  // std dev = 3.933, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), enzyme(E, F) )
%   | | then if ( interaction(E, A), complex(E, G) )
%   | | | then return 0.09694915185711271;  // std dev = 1.580, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.045451581487843756;  // std dev = 5.321, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.002104097661208432;  // std dev = 2.376, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.1317027492582047;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.10261587815752449;  // std dev = 2.057, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.07816600491731776;  // std dev = 1.706, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.012430903564443489;  // std dev = 1.860, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.18166977019933844;  // std dev = 3.037, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), interaction(I, E) )
%   | | | then return 0.6367862045253142;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22817605861593335;  // std dev = 1.817, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( enzyme(E, J) )
%   | | | then return -0.11215282824234071;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07176639101485771;  // std dev = 2.855, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.031187199475993355;  // std dev = 4.034, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | | else return 0.049417619809207086;  // std dev = 4.911, 107.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.18083471617265082;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.1945017986111506;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(E, H) )
%   | | | then return -0.008790290361114284;  // std dev = 2.633, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.4008885162381377;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I) )
%   | | | then return -0.09879093437823494;  // std dev = 2.380, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return -0.2717159648022189;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L) )
%   | | | then return 0.13981674226997856;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.06972016451085743;  // std dev = 3.106, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.2071066932612911;  // std dev = 2.650, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.04052475293017662;  // std dev = 4.710, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '50.602', 'seconds']
Refined model CLL: -0.405985


******************************************
Best model found
******************************************
Results 

CLL : -0.348899 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.036 

Total Inference Time : 42.74967288970947 

Total revision time: 77.05065515327453
Best scored revision CLL: -0.349629


Results 

CLL : -0.348899 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 77.30038240242004 

Total Inference Time : 42.74967288970947 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.439
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18399163172872496;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19674389909085999;  // std dev = 0.481, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1450668324836647;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10608733291055121;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07241181534458473;  // std dev = 0.462, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.110449115197311;  // std dev = 0.480, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05399126069682884;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04563234632296802;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.852', 'seconds']
Parameter learned model CLL:-0.351943 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.658, 180, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.481, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.578, 169, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.665, 181, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 194, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.469, 180, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.644, 178, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21966923368261668, nan], 'true': [nan, 0.21966923368261668], 'true,false': [nan, 0.21966923368261668]}
{'': [nan, 0.23109375000000074]}
{'': [nan, 0.22434997558593942], 'false': [0.22434997558593942, nan]}
{'': [nan, 0.21924426375584688], 'false': [0.21924426375584688, nan]}
{'': [nan, 0.21375109231139583]}
{'': [nan, 0.23067784645581405]}
{'': [0.21966923368261512, nan]}
{'': [0.22051975792096823, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 66.85
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), location(C, F) )
%   | then if ( interaction(A, G), location(G, F) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( interaction(C, E), enzyme(E, H) )
%   | | | then return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.20814893509951235;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( location(A, I) )
%   | then if ( phenotype(A, J), interaction(A, K) )
%   | | then return 0.21109011157010057;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0.14020021715079437;  // std dev = 0.450, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( phenotype(C, E), phenotype(A, E) )
%   | then return 0.11842197097399909;  // std dev = 0.451, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(C, F), complex(D, G) )
%   | | then if ( complex(A, H), interaction(F, C) )
%   | | | then return 0.27839250170836105;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.564761367612291;  // std dev = 1.470, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( enzyme(C, I) )
%   | | | then return 0.10694402796861906;  // std dev = 1.898, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.28485692774207955;  // std dev = 2.334, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else if ( interaction(J, A), location(J, K) )
%   | then return 0.13409184650819128;  // std dev = 0.462, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
%   | else if ( interaction(A, L) )
%   | | then if ( complex(A, M), complex(L, M) )
%   | | | then return 0.3353369005907161;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08371215930253977;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.49107214416251294;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.11755930890713179;  // std dev = 4.751, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.18634479125538916;  // std dev = 5.731, 139.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, A), enzyme(A, D) )
%   | then return 0.5279232626560969;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.13153833632858825;  // std dev = 3.117, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.050937117939499246;  // std dev = 3.380, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.11610309328888023;  // std dev = 4.196, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | | else return 0.20923720116294015;  // std dev = 3.840, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.088607629378947;  // std dev = 7.030, 219.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=75 */
%   | | | else return 0.23018062186743712;  // std dev = 2.055, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.07615377576383452;  // std dev = 1.489, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.18888009692201446;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.07570732114402216;  // std dev = 2.505, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.07400256097022286;  // std dev = 2.552, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return 0.10287931144568602;  // std dev = 3.880, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return 0.04305806547402408;  // std dev = 5.551, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), phenotype(D, G) )
%   | | then if ( phenotype(F, H), interaction(I, D) )
%   | | | then return 0.14145547793483482;  // std dev = 3.403, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0.6951861650690354;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.021360481926005315;  // std dev = 1.681, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.13459836447509704;  // std dev = 3.584, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return -0.01548696368674679;  // std dev = 3.551, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | | else return 0.136492539749767;  // std dev = 2.740, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.2769582582262226;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.04190975484568075;  // std dev = 2.109, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.03574747162032347;  // std dev = 3.525, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return -0.09042136618065721;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, E), complex(A, I) )
%   | | | then return 0.4682099473994902;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11558162280794625;  // std dev = 2.418, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.07912945937021712;  // std dev = 3.223, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.026840567169671998;  // std dev = 4.900, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | else if ( location(A, M) )
%   | | | then return 0.25605371782787156;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.11719861369494126;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( phenotype(A, F), interaction(A, A) )
%   | | then return 0.4207025614499053;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(E, G), phenotype(A, H) )
%   | | | then return 0.10797220120672947;  // std dev = 2.142, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.04620426976978288;  // std dev = 4.831, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( enzyme(A, K), interaction(L, I) )
%   | | | then return 0.19361535045496217;  // std dev = 2.188, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.05908225777771967;  // std dev = 2.984, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.06568216127817236;  // std dev = 2.301, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.05667770517308471;  // std dev = 2.907, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, H), enzyme(H, I) )
%   | | | then return -0.014525996274963857;  // std dev = 2.625, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.214483060944278;  // std dev = 1.886, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.12543979951818618;  // std dev = 1.793, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.025671978981525706;  // std dev = 3.769, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( interaction(N, L), interaction(N, A) )
%   | | | then return 0.261381662270065;  // std dev = 1.676, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.049731950930138664;  // std dev = 3.364, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( location(A, P) )
%   | | | then return 0.1361878769514366;  // std dev = 3.377, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | | else return 0.3468017634722289;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '47.474', 'seconds']
Refined model CLL: -0.425078


******************************************
Best model found
******************************************
Results 

CLL : -0.351544 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 66.85 

Total Inference Time : 43.198951721191406 

Total revision time: 117.7009005203247
Best scored revision CLL: -0.351943


Results 

CLL : -0.351544 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 117.88601347351073 

Total Inference Time : 43.198951721191406 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.261
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1969111500832224;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1534373062013512;  // std dev = 0.467, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13093245475215198;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11094994151457006;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08601340988668273;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10214032944726276;  // std dev = 0.476, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07700294201784068;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03382645698373157;  // std dev = 8.445, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.840', 'seconds']
Parameter learned model CLL:-0.344377 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.293, 203, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.403, 220, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.397, 219, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 200, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.445, 227, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22400237668304385, nan], 'true': [nan, 0.22400237668304385], 'true,false': [nan, 0.22400237668304385]}
{'': [nan, 0.21795458009449592]}
{'': [nan, 0.2179545800944956], 'false': [0.2179545800944956, nan]}
{'': [nan, 0.21830938665184554], 'false': [0.21830938665184554, nan]}
{'': [nan, 0.21618425550391906]}
{'': [nan, 0.22684310018903886]}
{'': [0.22506925207756026, nan]}
{'': [0.21547813546791242, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 56.789
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), phenotype(E, F) )
%   | then return 0.14721143509951087;  // std dev = 0.453, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | else return 0.2956489350995123;  // std dev = 0.496, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(G, I), interaction(A, I) )
%   | | then if ( interaction(I, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.25814893509951237;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.1949910403626689;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8392675768648057;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(C, G), interaction(G, A) )
%   | | | then return 0.3059342435314727;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.14246604261048512;  // std dev = 2.973, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.5892675768648057;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( interaction(A, J), enzyme(H, K) )
%   | | then return 0.04083159447387219;  // std dev = 0.423, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(H, L) )
%   | | | then return 0.15825574765481104;  // std dev = 5.796, 153.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=50 */
%   | | | else return 0.08092056492528439;  // std dev = 1.937, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( enzyme(A, M) )
%   | | then return 0.06125655916049644;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else return 0.1533970155862491;  // std dev = 0.472, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.15708448983948334;  // std dev = 4.445, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.08520054604081187;  // std dev = 7.243, 259.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return -0.05002131780917904;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.16844412412951232;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.22418424265554499;  // std dev = 4.066, 67.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | | else return 0.06878920781583821;  // std dev = 1.886, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, J), complex(J, K) )
%   | | | then return 0.02492711859572716;  // std dev = 1.875, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.09668576486287431;  // std dev = 3.763, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.0598789630038202;  // std dev = 2.942, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.14558307617743108;  // std dev = 4.253, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, A), enzyme(F, H) )
%   | | | then return -0.00725041542176284;  // std dev = 2.266, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.16219926202524795;  // std dev = 4.721, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04088784466068414;  // std dev = 6.239, 193.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */
%   | | | else return 0.17307185753170068;  // std dev = 1.885, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), interaction(H, A) )
%   | | | then return 0.039941796332393045;  // std dev = 6.166, 182.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=54 */
%   | | | else return -0.008549685256433324;  // std dev = 2.592, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.15360552782078893;  // std dev = 4.409, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
%   | | | else return 0.002823085906566427;  // std dev = 2.458, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(A, D) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.02681044510324488;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2557982604649411;  // std dev = 1.387, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return -0.03232262130644034;  // std dev = 3.886, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.06271743643985651;  // std dev = 3.026, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), interaction(J, A) )
%   | | | then return 0.10181230187296693;  // std dev = 1.946, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2494322291161715;  // std dev = 2.440, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.06698740256177291;  // std dev = 5.066, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
%   | | | else return 0.19712985378746045;  // std dev = 1.921, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( phenotype(A, G), phenotype(E, G) )
%   | | | then return 0.023143343225551616;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.06360633934980081;  // std dev = 2.876, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.13809433562811613;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.22056322112164814;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.10350496490420866;  // std dev = 3.524, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.0436252501121708;  // std dev = 5.003, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.3979961352096595;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.020581123891156697;  // std dev = 3.417, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, A) )
%   | | then if ( phenotype(E, G) )
%   | | | then return -0.0834365132003357;  // std dev = 2.320, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.19475551856224352;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(E, H), location(A, I) )
%   | | | then return -0.03711443593156901;  // std dev = 2.969, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.13348318990433125;  // std dev = 1.814, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( location(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.062460973866109486;  // std dev = 4.878, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | | else return -0.04485898944616365;  // std dev = 2.292, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.02581566407064756;  // std dev = 4.673, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return 0.1561026479230456;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(A, G) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.1194720718505877;  // std dev = 2.120, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.6788928166605029;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.015144239935101665;  // std dev = 2.681, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.09686452240384953;  // std dev = 2.350, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.19753670487561267;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.09519406790852669;  // std dev = 1.217, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(A, K), interaction(A, A) )
%   | | | then return -0.10563468649733415;  // std dev = 1.557, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.01369008914346947;  // std dev = 6.881, 224.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29', 'minutes', 'and', '39.204', 'seconds']
Refined model CLL: -0.372865


******************************************
Best model found
******************************************
Results 

CLL : -0.345421 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 56.789 

Total Inference Time : 157.45233154296875 

Total revision time: 226.11511235237123
Best scored revision CLL: -0.344377


Results 

CLL : -0.345421 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 226.30022530555726 

Total Inference Time : 157.45233154296875 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.178
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19763232993345892;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17691832798474205;  // std dev = 0.475, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15868170159911515;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11595534252761754;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12044356893561496;  // std dev = 0.480, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06322851015157072;  // std dev = 0.469, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.045106607219700265;  // std dev = 0.467, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.029449460883800082;  // std dev = 7.944, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.329', 'seconds']
Parameter learned model CLL:-0.349776 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.718, 169, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.817, 182, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.467, 195, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.944, 201, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2242344194659672, nan], 'true': [nan, 0.2242344194659672], 'true,false': [nan, 0.2242344194659672]}
{'': [nan, 0.2258412938882583]}
{'': [nan, 0.22824092423775333], 'false': [0.22824092423775333, nan]}
{'': [nan, 0.22302733230326802], 'false': [0.22302733230326802, nan]}
{'': [nan, 0.23061899269511907]}
{'': [nan, 0.21980785674764725]}
{'': [0.21780038606757496, nan]}
{'': [0.215401460704262, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.187
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), enzyme(A, F) )
%   | then return 0.26723984419042146;  // std dev = 0.492, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.13970233315776479;  // std dev = 0.450, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.14703782398840126;  // std dev = 0.453, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(G, G), complex(G, J) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.22656998773109124;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), interaction(M, N) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, C), enzyme(C, E) )
%   | then return 0.07768517286424356;  // std dev = 0.432, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(D, D), enzyme(C, F) )
%   | | then return 0.8402779572412876;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.19574503273362756;  // std dev = 3.106, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.4230355627126609;  // std dev = 1.707, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then if ( complex(A, I), phenotype(H, J) )
%   | | then return 0.5427941835770488;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.007205816422951206;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.27889423388124573;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( enzyme(A, L), interaction(A, M) )
%   | | then return 0.24617206498688712;  // std dev = 0.494, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.1333423326306035;  // std dev = 0.462, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.027212214665318615;  // std dev = 3.130, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.13244527495278333;  // std dev = 7.264, 234.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(A, F), interaction(D, D) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.05656809186945832;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2990936485690076;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(D, I) )
%   | | | then return 0.05295491617123486;  // std dev = 4.835, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | | else return 0.10476374068487812;  // std dev = 4.546, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( enzyme(J, K), complex(A, L) )
%   | | | then return -0.11703375129344369;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.14499847869049837;  // std dev = 2.456, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( location(A, M) )
%   | | | then return 0.3602037975241437;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.17380113999908584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.05984012968376845;  // std dev = 3.334, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.0166239038051542;  // std dev = 2.479, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.06339729797049347;  // std dev = 4.619, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | | else return 0.17205956809805964;  // std dev = 4.642, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(G, H), interaction(A, I) )
%   | | | then return 0.22130878913682533;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.048011889408989844;  // std dev = 5.342, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.03687478977153698;  // std dev = 4.398, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | | else return 0.08477382625210869;  // std dev = 2.482, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.049960639976763525;  // std dev = 1.507, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.14179145809499935;  // std dev = 1.972, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( complex(D, H) )
%   | | | then return -0.08362703360333686;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.04549119004483153;  // std dev = 1.454, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.08532886199823966;  // std dev = 3.433, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return -0.022131592421964302;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.3594910765103535;  // std dev = 1.498, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07599763179881036;  // std dev = 4.839, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.14140133472017138;  // std dev = 1.320, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.06590525006034643;  // std dev = 1.977, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.3831286886568557;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04290617975329818;  // std dev = 1.594, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.01793403202940933;  // std dev = 2.521, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.10350178728833465;  // std dev = 4.136, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.09996947362403608;  // std dev = 3.054, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.03343077430349525;  // std dev = 4.432, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.10424728329425063;  // std dev = 1.797, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.05521822416237302;  // std dev = 2.321, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.39710622131878526;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12866257735030975;  // std dev = 3.666, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.04036296684817268;  // std dev = 1.123, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13204359255461293;  // std dev = 1.835, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.12105382011613472;  // std dev = 2.169, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.011150811443207622;  // std dev = 5.326, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.02428807514432916;  // std dev = 2.275, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.14353360828797862;  // std dev = 2.148, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(E, E), enzyme(A, I) )
%   | | | then return -0.1841030161283723;  // std dev = 1.837, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.058276800738082446;  // std dev = 3.286, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(J, K) )
%   | | | then return 0.09485941186570755;  // std dev = 2.930, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return -0.018739062566522614;  // std dev = 4.021, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.472952283804978;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08360678186227584;  // std dev = 3.331, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14', 'minutes', 'and', '41.570', 'seconds']
Refined model CLL: -0.389934


******************************************
Best model found
******************************************
Results 

CLL : -0.349617 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.187 

Total Inference Time : 54.44643712043762 

Total revision time: 101.19292496681213
Best scored revision CLL: -0.349776


Results 

CLL : -0.349617 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 101.37803791999816 

Total Inference Time : 54.44643712043762 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.691
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21205840012008753;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15982821918439954;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12162550343167285;  // std dev = 7.675, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1268458058250623;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09951379134748944;  // std dev = 0.472, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07728748915562454;  // std dev = 0.470, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07839093882630527;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05057827565599369;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.942', 'seconds']
Parameter learned model CLL:-0.355557 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.454, 157, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.675, 187, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.534, 167, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.476, 162, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.565, 171, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22865755558942658, nan], 'true': [nan, 0.22865755558942658], 'true,false': [nan, 0.22865755558942658]}
{'': [nan, 0.22093040325303595]}
{'': [nan, 0.21578177622133762], 'false': [0.21578177622133762, nan]}
{'': [nan, 0.22437469730819282], 'false': [0.22437469730819282, nan]}
{'': [nan, 0.2226528789232245]}
{'': [nan, 0.22136094674555998]}
{'': [0.2265218522372543, nan]}
{'': [0.22265287892322252, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 28.75
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, C) )
%   | then if ( enzyme(C, E) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), phenotype(F, D) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, G), interaction(G, C) )
%   | | then return 0.15602127552504427;  // std dev = 0.457, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   else if ( enzyme(A, I) )
%   | then if ( interaction(J, A), complex(J, K) )
%   | | then return 0.27920156667845974;  // std dev = 0.494, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.17814893509951232;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else return 0.13537665787178846;  // std dev = 0.448, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), interaction(E, F) )
%   | then if ( complex(C, G), enzyme(F, H) )
%   | | then return 0.09053540681535881;  // std dev = 0.442, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else return 0.16396724146246788;  // std dev = 0.473, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | else return 0.060545433387207005;  // std dev = 0.422, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   else if ( complex(A, I), enzyme(A, J) )
%   | then if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.5731076870828049;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16838358943283435;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, M) )
%   | | then if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.10641371676080685;  // std dev = 2.247, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.26362168467092956;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(A, Q) )
%   | | | then return 0.15664712956897547;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2721663067865403;  // std dev = 3.016, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0980366659634344;  // std dev = 4.426, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | | else return 0.16302784359053912;  // std dev = 6.101, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F), interaction(D, D) )
%   | | then return 0.44872275328248873;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.2504273501097231;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.029368352900452747;  // std dev = 4.172, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( location(I, J) )
%   | | | then return 0.18209272509662636;  // std dev = 3.166, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.45705388354598403;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07803280097033118;  // std dev = 4.009, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.17256895480835469;  // std dev = 2.696, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.07711744751626635;  // std dev = 6.059, 168.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=54 */
%   | | | else return 0.1397649560470649;  // std dev = 4.199, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08017485900739695;  // std dev = 1.262, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.0754234087773172;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(A, H), complex(F, I) )
%   | | | then return 0.036268010807145375;  // std dev = 3.381, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.1302939467304313;  // std dev = 4.863, 100.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=39 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.08182819444067127;  // std dev = 2.250, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -8.076193604902201E-4;  // std dev = 4.103, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.22743137236341246;  // std dev = 1.177, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.048067283155411394;  // std dev = 2.035, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.005246391828083307;  // std dev = 2.361, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.09120700018319029;  // std dev = 1.996, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.22982382176861998;  // std dev = 1.430, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.006216658890397974;  // std dev = 3.513, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.16295818240294263;  // std dev = 3.105, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.08470118986496031;  // std dev = 4.098, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(F, A), interaction(E, A) )
%   | | | then return 0.13197062706993593;  // std dev = 1.715, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.04307519923369686;  // std dev = 4.229, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | | else return 0.3982549894040324;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.15180432491190865;  // std dev = 2.319, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.013108146083084403;  // std dev = 1.694, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07826328728151563;  // std dev = 3.729, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.002098145913001696;  // std dev = 3.687, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, E), complex(E, G) )
%   | | | then return 0.07109334434316134;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.1880834790889942;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7334208980135198;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), phenotype(I, K) )
%   | | | then return 0.1193024764561441;  // std dev = 3.373, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return -0.030653299317186595;  // std dev = 4.424, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.06530921561699429;  // std dev = 3.529, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.19608317390527386;  // std dev = 2.439, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( enzyme(A, H), interaction(E, I) )
%   | | | then return 0.127758114136073;  // std dev = 2.303, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.06503100289671179;  // std dev = 2.735, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.02287506372956558;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.35605759923945196;  // std dev = 1.517, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then if ( enzyme(A, N) )
%   | | | then return -0.25204877243372514;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.12385755881549972;  // std dev = 1.532, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, P), location(A, Q) )
%   | | | then return -0.043792796250146385;  // std dev = 3.478, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.006248151655165514;  // std dev = 4.880, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '27.659', 'seconds']
Refined model CLL: -0.407421


******************************************
Best model found
******************************************
Results 

CLL : -0.354844 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.75 

Total Inference Time : 30.110921621322632 

Total revision time: 67.04980661010742
Best scored revision CLL: -0.355557


Results 

CLL : -0.354844 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 67.23491956329346 

Total Inference Time : 30.110921621322632 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.521
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.482, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1780018762759821;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1844681015402356;  // std dev = 0.477, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.131491944137484;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1176479068715517;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08167041530344732;  // std dev = 0.465, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09539058468477671;  // std dev = 0.475, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06918752550848786;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.060708527390075546;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.583', 'seconds']
Parameter learned model CLL:-0.353137 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.692, 185, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.672, 182, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.63, 176, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 172, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.571, 168, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21754703719723267, nan], 'true': [nan, 0.21754703719723267], 'true,false': [nan, 0.21754703719723267]}
{'': [nan, 0.22731891421106154]}
{'': [nan, 0.21881952985724482], 'false': [0.21881952985724482, nan]}
{'': [nan, 0.22137084532087922], 'false': [0.22137084532087922, nan]}
{'': [nan, 0.21585538752362868]}
{'': [nan, 0.22562452155165585]}
{'': [0.22307359759097314, nan]}
{'': [0.22477508650518901, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 40.792
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A), enzyme(A, C) )
%   then if ( location(A, D) )
%   | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, E), enzyme(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, H), phenotype(E, I) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), interaction(L, K) )
%   | | | then return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.16709202453040622;  // std dev = 5.124, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), phenotype(E, D) )
%   | then if ( complex(A, F), complex(C, G) )
%   | | then if ( interaction(C, C) )
%   | | | then return 0.18792826382859545;  // std dev = 2.129, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.08656761293124782;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(C, C), complex(C, H) )
%   | | | then return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.43990809221462257;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.09164542694320539;  // std dev = 0.442, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( enzyme(I, K), complex(I, L) )
%   | | then return 0.8374703595391061;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), phenotype(I, N) )
%   | | | then return 0.13356956587416544;  // std dev = 2.514, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.2716506812716223;  // std dev = 3.975, 64.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=28 */
%   | else return 0.10612495272171264;  // std dev = 0.448, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.09066428029963187;  // std dev = 5.968, 171.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=50 */
%   | | | else return 0.1767868420584945;  // std dev = 4.822, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, A), phenotype(E, F) )
%   | | then return -0.07176835106619867;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.3122049896839369;  // std dev = 2.177, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.13686776590956723;  // std dev = 3.472, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( phenotype(A, K), location(A, J) )
%   | | | then return 0.13310635783914734;  // std dev = 3.895, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.06408832371950803;  // std dev = 4.389, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.46079567045447406;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14755454629633377;  // std dev = 1.789, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(A, H), interaction(I, F) )
%   | | | then return -0.039108694850049655;  // std dev = 2.314, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.06330503654293591;  // std dev = 3.417, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.047477110627898056;  // std dev = 3.270, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.1359774405929048;  // std dev = 5.500, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.08019479196095541;  // std dev = 2.928, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.037569900956297544;  // std dev = 3.974, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.0996350833222445;  // std dev = 5.657, 142.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=49 */
%   | | | else return 0.5234628172551308;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.23225768867984076;  // std dev = 0.999, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.017182367658434766;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.12344236534711155;  // std dev = 2.234, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.34204778999003405;  // std dev = 2.031, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, J) )
%   | | | then return 0.3554357231002284;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.055310730116071884;  // std dev = 2.975, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.05011891835813426;  // std dev = 2.651, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.02821352174674325;  // std dev = 5.036, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.1095764546258675;  // std dev = 2.013, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.016417010415377693;  // std dev = 1.684, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.10300227627689756;  // std dev = 2.051, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.008269286824351789;  // std dev = 4.322, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( complex(L, M), location(A, N) )
%   | | | then return 0.06244023586862373;  // std dev = 2.412, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.029160703089252598;  // std dev = 2.398, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.33773005822399665;  // std dev = 1.503, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.11308280120979987;  // std dev = 3.541, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(E, H), enzyme(H, I) )
%   | | | then return 0.11272961418733593;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.053789813724336034;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, J), phenotype(E, K) )
%   | | | then return -9.921039698929555E-4;  // std dev = 1.934, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.10575837990640535;  // std dev = 2.947, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( phenotype(A, L), enzyme(A, M) )
%   | | then if ( interaction(N, A), interaction(A, P) )
%   | | | then return 0.11825834816236594;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.047492585509596064;  // std dev = 2.476, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(A, Q), phenotype(Q, R) )
%   | | | then return 0.0362102126699015;  // std dev = 3.454, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.08924857471833127;  // std dev = 4.558, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), complex(F, H) )
%   | | then if ( interaction(A, I), enzyme(A, J) )
%   | | | then return -0.10667064413385893;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.05949661771629731;  // std dev = 3.592, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(K, F), interaction(K, K) )
%   | | | then return -0.14824742752088232;  // std dev = 1.582, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.023962086394970855;  // std dev = 1.881, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then if ( interaction(A, M), enzyme(L, N) )
%   | | | then return -0.06815297919519367;  // std dev = 1.908, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.018063732130518328;  // std dev = 2.695, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( interaction(A, P), enzyme(P, Q) )
%   | | | then return 0.21616016173658922;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.07519870153858124;  // std dev = 4.506, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13', 'minutes', 'and', '50.955', 'seconds']
Refined model CLL: -0.403265


******************************************
Best model found
******************************************
Results 

CLL : -0.35274 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 40.792 

Total Inference Time : 150.58765029907227 

Total revision time: 199.22896364974974
Best scored revision CLL: -0.353137


Results 

CLL : -0.35274 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 199.38949278640746 

Total Inference Time : 150.58765029907227 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.282
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1752221058312167;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17202258549327093;  // std dev = 0.473, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14482726120677217;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12592845168832037;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09338285569067704;  // std dev = 0.470, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10923226637478622;  // std dev = 0.480, 288.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06355564468823177;  // std dev = 0.473, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05076101835690155;  // std dev = 8.306, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.935', 'seconds']
Parameter learned model CLL:-0.356855 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.428, 224, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 205, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.32, 207, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.293, 203, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 184, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 205, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.306, 205, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21653777513385078, nan], 'true': [nan, 0.21653777513385078], 'true,false': [nan, 0.21653777513385078]}
{'': [nan, 0.22329049758591035]}
{'': [nan, 0.22257834389636016], 'false': [0.22257834389636016, nan]}
{'': [nan, 0.22400237668304052], 'false': [0.22400237668304052, nan]}
{'': [nan, 0.2204420384320697]}
{'': [nan, 0.23070987654320785]}
{'': [0.22329049758590572, nan]}
{'': [0.22329049758590735, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 39.153
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(A, E), interaction(D, A) )
%   | then return 0.24276431971489695;  // std dev = 0.487, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.0949910403626702;  // std dev = 0.425, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), interaction(H, A) )
%   | | then if ( interaction(F, H), phenotype(A, I) )
%   | | | then return 0.2803711573217345;  // std dev = 3.313, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.16172036367094092;  // std dev = 3.441, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else if ( location(A, J), location(F, J) )
%   | | | then return 0.3487149728353603;  // std dev = 3.639, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | | else return 0.22957750652808379;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( phenotype(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.11621345122854462;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then if ( interaction(A, C), phenotype(A, F) )
%   | | then if ( phenotype(C, F) )
%   | | | then return 0.1281761269805244;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.42048381928821676;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.6415199576690634;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.15837049392543334;  // std dev = 0.471, 213.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=71 */
%   else if ( enzyme(A, G) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then return 0.24618780215709773;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.31313740673122165;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8443327885846661;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, L), interaction(A, M) )
%   | | then return 0.05381210069361769;  // std dev = 0.438, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.1963128513417506;  // std dev = 0.480, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.15545523377863374;  // std dev = 5.297, 121.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=44 */
%   | | | else return 0.11007973184126502;  // std dev = 6.405, 191.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=60 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( complex(F, E), interaction(A, F) )
%   | | then return -0.14454521468475498;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( enzyme(G, D), interaction(G, H) )
%   | | | then return 0.08403476148331769;  // std dev = 2.347, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.04481710269442226;  // std dev = 1.522, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.24979726945258693;  // std dev = 1.938, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.46265435396094196;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1489582892701905;  // std dev = 5.471, 127.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=48 */
%   | | | else return 0.08814851117394332;  // std dev = 4.909, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, F), enzyme(G, H) )
%   | | | then return -0.007993333482760765;  // std dev = 4.143, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return 0.09831852885996165;  // std dev = 6.824, 208.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=71 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.6968543090000333;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20096077129070453;  // std dev = 1.951, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.024254073077823714;  // std dev = 3.011, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.1941192094094549;  // std dev = 2.885, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.059228454222843493;  // std dev = 3.308, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return 0.04609009844955638;  // std dev = 6.537, 196.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( phenotype(D, H), interaction(A, D) )
%   | | | then return 0.028849966571074043;  // std dev = 1.861, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.18826455892657043;  // std dev = 3.145, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | else if ( interaction(A, D), phenotype(A, I) )
%   | | | then return -0.01138551950194903;  // std dev = 3.174, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.0706660869851606;  // std dev = 5.436, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), enzyme(K, M) )
%   | | | then return -0.22296237462301044;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0926969601410243;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return -0.01193518215184633;  // std dev = 3.071, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.12227254604982533;  // std dev = 1.912, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( phenotype(D, F), interaction(D, D) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 1.8364088865769547E-4;  // std dev = 2.091, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.26945392371754057;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(D, I), interaction(D, J) )
%   | | | then return -0.06367731095771936;  // std dev = 2.768, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.006604896547371298;  // std dev = 4.470, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( location(A, M), location(L, M) )
%   | | | then return 0.10699411890954;  // std dev = 4.720, 94.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=37 */
%   | | | else return 0.022049139599420765;  // std dev = 2.899, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.14984527682669418;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02460730389695649;  // std dev = 1.651, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(A, E), complex(A, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.03480069398272704;  // std dev = 2.579, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.08889781353978889;  // std dev = 2.342, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(A, H), enzyme(E, I) )
%   | | | then return 0.11491082813037043;  // std dev = 2.978, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.03228820035490624;  // std dev = 6.321, 179.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=60 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.28749757432802164;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.032822440077349586;  // std dev = 1.570, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.06016498404367473;  // std dev = 2.314, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.11009001924954624;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.38594157732657347;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0654486047214509;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06848157802838765;  // std dev = 3.679, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return -0.05543410450473815;  // std dev = 3.629, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.06140156199335477;  // std dev = 5.247, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | | | else return 0.03505072967833233;  // std dev = 3.261, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '547', 'milliseconds']
Refined model CLL: -0.393024


******************************************
Best model found
******************************************
Results 

CLL : -0.357849 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 39.153 

Total Inference Time : 86.50502753257751 

Total revision time: 137.06917387008667
Best scored revision CLL: -0.356855


Results 

CLL : -0.357849 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 137.2297030067444 

Total Inference Time : 86.50502753257751 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.31
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20015637004374848;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18858567641581792;  // std dev = 0.479, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.11268911233028803;  // std dev = 7.975, 298.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.15359402283206328;  // std dev = 7.625, 250.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07366034354280715;  // std dev = 0.465, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08061323557017053;  // std dev = 0.472, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09286277161765599;  // std dev = 0.481, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.049988499435178996;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.783', 'seconds']
Parameter learned model CLL:-0.362658 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.78, 177, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.975, 206, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.625, 158, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 200, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.481, 161, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.795, 179, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2250383493871021, nan], 'true': [nan, 0.2250383493871021], 'true,false': [nan, 0.2250383493871021]}
{'': [nan, 0.2294333273240767]}
{'': [nan, 0.2134138101887299], 'false': [0.2134138101887299, nan]}
{'': [nan, 0.23257600000000175], 'false': [0.23257600000000175, nan]}
{'': [nan, 0.21580033777444166]}
{'': [nan, 0.2230273323032656]}
{'': [0.23140495867768437, nan]}
{'': [0.22423441946596817, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 33.825
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.08672036367094095;  // std dev = 0.420, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( enzyme(G, C), complex(G, H) )
%   | | then return 0.2119950889456654;  // std dev = 0.478, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | else return 0.08542166237223962;  // std dev = 0.419, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( interaction(I, K) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( location(L, N), location(A, N) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.20297652130640886;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, P), phenotype(A, Q) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.14223984419042146;  // std dev = 4.231, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( interaction(A, E) )
%   | then if ( enzyme(A, F), phenotype(E, G) )
%   | | then if ( complex(A, H), enzyme(E, F) )
%   | | | then return 0.5026438767106017;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2049921560638958;  // std dev = 2.098, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(E, I), phenotype(E, J) )
%   | | | then return 0.0962247471755321;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.19019401785498105;  // std dev = 2.254, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( location(K, C), interaction(K, A) )
%   | | then if ( complex(K, L), interaction(M, K) )
%   | | | then return 0.09724648009569628;  // std dev = 1.717, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.43201827777280605;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.23033522285430771;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.6332689914915883;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.1367268622247887;  // std dev = 0.461, 177.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.16549042832571176;  // std dev = 5.535, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
%   | | | else return 0.1158078352166645;  // std dev = 5.507, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.05406438342185733;  // std dev = 1.544, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.07257173694822194;  // std dev = 1.188, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(H, D), complex(H, I) )
%   | | | then return 0.0747934459146976;  // std dev = 4.645, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return 0.2577626684209561;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), interaction(K, L) )
%   | | | then return 0.2236964733550149;  // std dev = 3.125, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.556819792114581;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.059793964583458446;  // std dev = 2.772, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.14657224676577543;  // std dev = 3.778, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.10929956553767775;  // std dev = 4.705, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.3548048100392319;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09408454743673332;  // std dev = 4.392, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.02555951861669844;  // std dev = 4.370, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(F, H), interaction(A, I) )
%   | | | then return 0.358377360399306;  // std dev = 1.747, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.061164263230506374;  // std dev = 1.837, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.016407407911214537;  // std dev = 3.798, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.0964244917398429;  // std dev = 6.186, 166.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.03627966195104556;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3138171857763775;  // std dev = 1.702, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.03262244405160656;  // std dev = 2.045, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.09677095162641464;  // std dev = 3.722, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), complex(K, L) )
%   | | | then return -0.10328937972135226;  // std dev = 1.577, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.005872931773726539;  // std dev = 2.821, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.08449043941657412;  // std dev = 4.540, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | | else return -0.003338902185810063;  // std dev = 2.542, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.08191828617171422;  // std dev = 1.768, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.37987078473073116;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A), phenotype(A, I) )
%   | | | then return -0.1728970324155118;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 7.079313127279698E-4;  // std dev = 3.081, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( enzyme(A, L), complex(J, M) )
%   | | | then return 0.20019427241575363;  // std dev = 1.915, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.038081637562247646;  // std dev = 5.595, 138.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=46 */
%   | | else if ( location(A, N), interaction(A, P) )
%   | | | then return 0.08658587244989621;  // std dev = 2.949, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.38711475703262127;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( phenotype(E, G), enzyme(E, H) )
%   | | | then return -0.0594896323412822;  // std dev = 2.804, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.04239826571971873;  // std dev = 4.133, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13794698980210032;  // std dev = 1.698, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.242162924771517;  // std dev = 2.054, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then if ( complex(M, K), interaction(M, N) )
%   | | | then return -0.14969859229381463;  // std dev = 1.563, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.02597680757712722;  // std dev = 1.846, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.059577946989674994;  // std dev = 4.074, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return -0.028841621422104703;  // std dev = 2.288, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( phenotype(A, G), phenotype(E, H) )
%   | | then if ( interaction(A, A), enzyme(A, I) )
%   | | | then return -0.11058534821578699;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.48496032164463293;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.07445479194340335;  // std dev = 2.596, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.06653204525153453;  // std dev = 3.540, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | else if ( phenotype(A, L), location(A, M) )
%   | | then if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.052855409532675784;  // std dev = 1.594, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.06662543214959721;  // std dev = 3.717, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | else if ( interaction(Q, A), interaction(A, R) )
%   | | | then return 0.1111711848782714;  // std dev = 1.697, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.0011977571132015838;  // std dev = 4.267, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '51.214', 'seconds']
Refined model CLL: -0.405569


******************************************
Best model found
******************************************
Results 

CLL : -0.362507 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.825 

Total Inference Time : 52.668453216552734 

Total revision time: 97.47723365783692
Best scored revision CLL: -0.362658


Results 

CLL : -0.362507 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 97.63776279449463 

Total Inference Time : 52.668453216552734 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.754
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1863932099086719;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17383248840758508;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16087871472169374;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13043985989933296;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10049857743069207;  // std dev = 0.474, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09140283109310605;  // std dev = 0.477, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06235234079617358;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.055138077629080524;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.475', 'seconds']
Parameter learned model CLL:-0.365662 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.601, 176, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.462, 158, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.487, 161, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 167, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.503, 163, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22049997086416953, nan], 'true': [nan, 0.22049997086416953], 'true,false': [nan, 0.22049997086416953]}
{'': [nan, 0.22437469730819212]}
{'': [nan, 0.2282316581564083], 'false': [0.2282316581564083, nan]}
{'': [nan, 0.22695012211313248], 'false': [0.22695012211313248, nan]}
{'': [nan, 0.2248047367094968]}
{'': [nan, 0.22780508121615903]}
{'': [0.22437469730819254, nan]}
{'': [0.22609312753020175, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.308
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( enzyme(C, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, C) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( complex(C, G), enzyme(C, H) )
%   | | then return 0.11901850031690367;  // std dev = 0.439, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( phenotype(A, I), complex(C, J) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.20866439901703782;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   else if ( interaction(A, K), enzyme(A, L) )
%   | then if ( interaction(M, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23314893509951226;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.124815601766179;  // std dev = 0.442, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( complex(C, E), interaction(F, A) )
%   | then return 0.16531768543579436;  // std dev = 0.478, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | else return 0.11074521166777725;  // std dev = 0.447, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( complex(A, I), complex(G, J) )
%   | | then if ( interaction(G, K), interaction(K, A) )
%   | | | then return 0.3173144653674248;  // std dev = 1.017, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19178485251353666;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.4901163317939603;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13123138992554362;  // std dev = 4.165, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else if ( phenotype(A, N), interaction(A, P) )
%   | | then return 0.1681333592379377;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, Q), complex(Q, R) )
%   | | | then return 0.5089324792577674;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2797658125911008;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), phenotype(A, G) )
%   | | | then return 0.09133876480912859;  // std dev = 4.678, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | | else return 0.18908912917554954;  // std dev = 5.818, 143.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), interaction(F, F) )
%   | | | then return 0.24423241506399562;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7655062299197652;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.3116263995332497;  // std dev = 1.478, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.06378583532243184;  // std dev = 2.065, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(H, J), phenotype(H, K) )
%   | | | then return 0.1833857039943596;  // std dev = 2.210, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.043097268704250576;  // std dev = 3.590, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.16607300458307178;  // std dev = 4.394, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | else return 0.09432209686914843;  // std dev = 2.987, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A) )
%   | | then if ( phenotype(A, G), interaction(F, F) )
%   | | | then return -0.0808238820525226;  // std dev = 1.988, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.08406487925349077;  // std dev = 6.613, 197.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=66 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.14682528637632603;  // std dev = 2.646, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.5495147177478212;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.04188277326661757;  // std dev = 2.881, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.05177639258621036;  // std dev = 2.037, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.2765960942688018;  // std dev = 1.613, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.08072265664636519;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=63 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, E), enzyme(A, G) )
%   | | | then return 0.05996245928697675;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3917279632374588;  // std dev = 1.441, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( phenotype(H, D), interaction(H, I) )
%   | | | then return 0.16018414087955735;  // std dev = 2.113, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.09939759681270935;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.15034800381094013;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.04434324492451601;  // std dev = 2.420, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.03156945628878953;  // std dev = 3.087, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.06534499162142572;  // std dev = 5.486, 136.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=46 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.023075256980269025;  // std dev = 1.687, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.13966863677407615;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( phenotype(I, D), interaction(I, I) )
%   | | | then return 0.23159299532101157;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.07225483371725908;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( phenotype(J, L), interaction(J, M) )
%   | | | then return 0.435236053703838;  // std dev = 1.296, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.16236773701316354;  // std dev = 1.563, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.18106948579760895;  // std dev = 2.165, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.034054210254995436;  // std dev = 5.753, 153.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=49 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), complex(G, F) )
%   | | then if ( enzyme(G, H), complex(A, F) )
%   | | | then return 0.07068940695794569;  // std dev = 1.114, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06841228500003642;  // std dev = 3.947, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | else if ( interaction(I, E), enzyme(A, J) )
%   | | | then return 0.3048722406739362;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04745774168375389;  // std dev = 2.515, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.003436019059204069;  // std dev = 1.888, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.15604074552906808;  // std dev = 3.269, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return -0.10081684738415024;  // std dev = 1.540, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.05103788653451865;  // std dev = 3.704, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(E, E), location(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.2552361628219111;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.20095734811518007;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(E, I), interaction(A, J) )
%   | | | then return -0.12282864983884123;  // std dev = 1.775, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.001968284764895688;  // std dev = 3.363, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( enzyme(K, M), phenotype(K, N) )
%   | | | then return 0.01172335194547541;  // std dev = 2.365, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.14504543863222782;  // std dev = 2.724, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( complex(A, P) )
%   | | | then return -0.06370975276780909;  // std dev = 3.011, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.020080442088068057;  // std dev = 4.232, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '1.978', 'seconds']
Refined model CLL: -0.409888


******************************************
Best model found
******************************************
Results 

CLL : -0.364978 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.308 

Total Inference Time : 50.59316825866699 

Total revision time: 88.38136144828796
Best scored revision CLL: -0.365662


Results 

CLL : -0.364978 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 88.54189058494568 

Total Inference Time : 50.59316825866699 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.597
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18156900944895385;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16791196388282006;  // std dev = 0.471, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13111151017296227;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09759375411549927;  // std dev = 7.756, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11490226543844373;  // std dev = 0.475, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0836139394410343;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08642087741431154;  // std dev = 0.477, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05180166316556871;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.537', 'seconds']
Parameter learned model CLL:-0.352099 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.672, 182, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.686, 184, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.756, 195, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 161, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.616, 174, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21881952985724437, nan], 'true': [nan, 0.21881952985724437], 'true,false': [nan, 0.21881952985724437]}
{'': [nan, 0.2222222222222235]}
{'': [nan, 0.21797088819596536], 'false': [0.21797088819596536, nan]}
{'': [nan, 0.21333182435491013], 'false': [0.21333182435491013, nan]}
{'': [nan, 0.22519995039989973]}
{'': [nan, 0.2217965153545854]}
{'': [0.22774128511966485, nan]}
{'': [0.22222222222222385, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 57.148
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.1047242775652658;  // std dev = 0.431, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( location(A, F), enzyme(A, G) )
%   | | then if ( complex(E, H), interaction(I, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.17633075328133052;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( interaction(L, A), location(L, M) )
%   | | then if ( location(A, M), interaction(N, L) )
%   | | | then return 0.16742728561497486;  // std dev = 4.552, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(F, C) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then return 0.08441736007462496;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, F) )
%   | | | then return 0.44491670939955574;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1782500427328891;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.8359066015728569;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.32912805741538353;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12381550921258085;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else if ( location(A, L), interaction(M, A) )
%   | then if ( enzyme(A, N), complex(M, P) )
%   | | then return 0.21939088158493075;  // std dev = 0.485, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else return 0.11627083800952022;  // std dev = 0.452, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
%   | else return 0.05800150108032384;  // std dev = 0.430, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.1672261692705151;  // std dev = 5.047, 111.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=40 */
%   | | | else return 0.0894640945911876;  // std dev = 5.828, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.049412238618737746;  // std dev = 2.403, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.10525651368784676;  // std dev = 1.785, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(A, I), location(D, J) )
%   | | | then return -0.015224374343468685;  // std dev = 2.004, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.20441652381326528;  // std dev = 2.025, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( complex(K, M), interaction(K, N) )
%   | | | then return 0.15091761321874136;  // std dev = 2.264, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.01742726547210066;  // std dev = 2.311, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.10795815889963067;  // std dev = 3.500, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.20259168440579328;  // std dev = 4.247, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( complex(A, H), enzyme(F, I) )
%   | | | then return 0.033194760310845804;  // std dev = 2.107, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.179851718168176;  // std dev = 3.981, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10204998872811816;  // std dev = 5.931, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
%   | | | else return -0.12254905443906694;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.09359109329850326;  // std dev = 2.666, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.05747917056071061;  // std dev = 2.351, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.1071987501426024;  // std dev = 6.445, 179.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=65 */
%   | | | else return 0.3238181510477653;  // std dev = 1.329, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, D), phenotype(H, I) )
%   | | | then return 0.27773366449806114;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0348700392710641;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, J), phenotype(D, J) )
%   | | | then return 0.11745673482716337;  // std dev = 1.282, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.04686336072344182;  // std dev = 3.397, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | else if ( enzyme(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.13169931474476987;  // std dev = 1.784, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.040165514941024195;  // std dev = 3.418, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.20130347262321466;  // std dev = 2.274, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.06591596138217123;  // std dev = 4.530, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, F) )
%   | | then if ( interaction(D, G), interaction(A, G) )
%   | | | then return -0.08599023334634223;  // std dev = 1.245, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.14453102241096394;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.10537346619923144;  // std dev = 2.741, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return -0.02403127385722425;  // std dev = 2.393, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.09278519430728015;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2271125609787634;  // std dev = 1.875, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.03523730199355818;  // std dev = 3.811, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | | else return 0.10410454721863396;  // std dev = 4.355, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, I), location(G, J) )
%   | | | then return 0.18269130764499217;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.04264995338087268;  // std dev = 2.100, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(K, A), phenotype(E, F) )
%   | | | then return 0.3313233686629205;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.0781701999925378;  // std dev = 2.260, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( interaction(L, A), location(A, M) )
%   | | then if ( enzyme(L, N), enzyme(A, P) )
%   | | | then return -0.07677273587845707;  // std dev = 2.181, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.04215378021494172;  // std dev = 5.705, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | else if ( interaction(A, Q), interaction(Q, R) )
%   | | | then return 0.018899690997009784;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.1149862691886993;  // std dev = 1.796, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( complex(G, I), complex(E, I) )
%   | | | then return -0.026676190317777102;  // std dev = 2.483, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.13484171422939745;  // std dev = 2.669, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.33813044347261767;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0016612477446679562;  // std dev = 2.831, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(N, M), interaction(N, A) )
%   | | | then return 0.0520441563072571;  // std dev = 5.093, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0.19533700404327053;  // std dev = 2.041, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( complex(A, P) )
%   | | | then return -0.15577063386458337;  // std dev = 1.290, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.05487361047205655;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21', 'minutes', 'and', '14.564', 'seconds']
Refined model CLL: -0.402313


******************************************
Best model found
******************************************
Results 

CLL : -0.351701 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 57.148 

Total Inference Time : 161.29142093658447 

Total revision time: 226.3701871585846
Best scored revision CLL: -0.352099


Results 

CLL : -0.351701 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 226.47031628608704 

Total Inference Time : 161.29142093658447 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.289
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18013035924811613;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17353936587501465;  // std dev = 0.473, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14491688810415587;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11518668167315775;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09106553432225661;  // std dev = 0.468, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09717844422193488;  // std dev = 0.476, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09052336547419401;  // std dev = 0.480, 289.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08258674979564677;  // std dev = 8.094, 281.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.167', 'seconds']
Parameter learned model CLL:-0.368679 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.397, 219, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.313, 206, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.353, 212, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.48, 185, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.094, 177, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21830938665184368, nan], 'true': [nan, 0.21830938665184368], 'true,false': [nan, 0.21830938665184368]}
{'': [nan, 0.2240023766830441]}
{'': [nan, 0.2229344432882417], 'false': [0.2229344432882417, nan]}
{'': [nan, 0.220797949046628], 'false': [0.220797949046628, nan]}
{'': [nan, 0.21937500000000054]}
{'': [nan, 0.22684310018903656]}
{'': [0.2303612265178817, nan]}
{'': [0.23312774660908414, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 51.838
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.15360348055405681;  // std dev = 0.456, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   else if ( complex(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, A), complex(F, H) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.12130682983635441;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( complex(I, E), interaction(I, J) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2391013160518933;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), enzyme(L, M) )
%   | | | then return 0.18167834686421766;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.26240425424844854;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( enzyme(C, F), interaction(A, C) )
%   | | then return 0.0884034347928226;  // std dev = 0.433, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( enzyme(C, G), complex(A, H) )
%   | | | then return 0.29407834280113454;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1498548391796006;  // std dev = 6.272, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then return 0.5874434598912266;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.24415902958231753;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.1616214145173763;  // std dev = 2.308, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( phenotype(A, L) )
%   | then if ( complex(A, M), interaction(A, N) )
%   | | then return 0.0898460924449822;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.19166818874547237;  // std dev = 0.475, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return 0.044692145016610216;  // std dev = 0.418, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.09749158379931352;  // std dev = 7.798, 290.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=86 */
%   | | | else return 0.21416136135701735;  // std dev = 3.273, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then if ( location(F, D), phenotype(F, G) )
%   | | | then return 0.11052371856345171;  // std dev = 6.846, 216.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=69 */
%   | | | else return 0.2167443928738892;  // std dev = 2.574, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(H, E), phenotype(H, I) )
%   | | | then return 0.012473229026147887;  // std dev = 2.319, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.1104445645616891;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( complex(A, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.20221994205456786;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 1.997094761520324E-4;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, L) )
%   | | | then return -0.04430934362495755;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.04423133096221192;  // std dev = 2.087, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), phenotype(F, I) )
%   | | | then return 0.12688330719107868;  // std dev = 3.518, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return -0.005923146029792066;  // std dev = 4.134, 93.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=22 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11573041371941713;  // std dev = 6.179, 168.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=59 */
%   | | | else return 0.004394928090084533;  // std dev = 1.756, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(G, F), interaction(G, G) )
%   | | | then return 0.122473539406685;  // std dev = 6.108, 160.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=59 */
%   | | | else return 0.056151185509662846;  // std dev = 5.251, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.09562438475237058;  // std dev = 1.554, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.04651301088843648;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(D, F), complex(D, G) )
%   | | | then return -0.04962356783930928;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0853924767020468;  // std dev = 2.281, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( complex(D, H), interaction(D, I) )
%   | | | then return 0.11532730726384006;  // std dev = 2.089, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.33189609778192514;  // std dev = 2.038, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( location(A, L), interaction(M, J) )
%   | | | then return 0.0194555243877455;  // std dev = 6.307, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | | | else return 0.17680164081645428;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.20756331529595518;  // std dev = 2.385, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.04554740561102945;  // std dev = 2.347, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( phenotype(A, E), complex(D, G) )
%   | | | then return 0.05936711097810777;  // std dev = 3.967, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return -0.057042286877827864;  // std dev = 2.606, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( complex(A, H), interaction(D, I) )
%   | | | then return 0.06423464544516709;  // std dev = 2.439, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.19348168060423776;  // std dev = 2.266, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.11243424260245305;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12771927639700223;  // std dev = 2.074, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( location(A, L) )
%   | | | then return -2.0476147269657348E-4;  // std dev = 5.286, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | | else return 0.06883355155971307;  // std dev = 1.824, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(A, F), phenotype(E, G) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.10298446207622242;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.35150345388951104;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.027953072187578563;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.11620090209398669;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.12708836564229054;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.038610814028225686;  // std dev = 3.331, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.05099577792095209;  // std dev = 5.661, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
%   | | | else return -0.006487573061267394;  // std dev = 3.456, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(A, F) )
%   | then if ( location(F, G) )
%   | | then if ( complex(E, H), interaction(I, E) )
%   | | | then return 0.007220693702340122;  // std dev = 5.414, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
%   | | | else return 0.22067885167373316;  // std dev = 1.183, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.16916250939985136;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.1529933419097244;  // std dev = 2.672, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.30332554765691405;  // std dev = 1.672, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.1497997381463622;  // std dev = 2.738, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.015089090711844302;  // std dev = 4.068, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '22.508', 'seconds']
Refined model CLL: -0.389158


******************************************
Best model found
******************************************
Results 

CLL : -0.369627 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 51.838 

Total Inference Time : 67.20906567573547 

Total revision time: 130.68278470230103
Best scored revision CLL: -0.368679


Results 

CLL : -0.369627 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 130.78291382980348 

Total Inference Time : 67.20906567573547 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.332
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20271822348902363;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1868504881806204;  // std dev = 0.479, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14584139515816008;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.08957953009159425;  // std dev = 7.969, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12063861532358192;  // std dev = 0.479, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10239782440830882;  // std dev = 0.480, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.044318994180280964;  // std dev = 0.468, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06501047058452263;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.715', 'seconds']
Parameter learned model CLL:-0.364184 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.765, 175, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.78, 177, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.969, 205, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.468, 193, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.718, 169, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22584129388825896, nan], 'true': [nan, 0.22584129388825896], 'true,false': [nan, 0.22584129388825896]}
{'': [nan, 0.22903653791684842]}
{'': [nan, 0.22503834938710174], 'false': [0.22503834938710174, nan]}
{'': [nan, 0.21381038216055165], 'false': [0.21381038216055165, nan]}
{'': [nan, 0.22943332732407878]}
{'': [nan, 0.23061899269511674]}
{'': [0.21860264696829695, nan]}
{'': [0.22824092423775444, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.897
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(G, F), complex(G, H) )
%   | | then return 0.14116780302404067;  // std dev = 0.450, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.0803711573217344;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else if ( enzyme(A, I), interaction(A, J) )
%   | then if ( interaction(J, A), enzyme(J, I) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), enzyme(J, I) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(A, L), complex(A, M) )
%   | | then return 0.13087620782678508;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.19148226843284433;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.3025933795439568;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F), interaction(G, C) )
%   | | then if ( interaction(D, H), phenotype(D, I) )
%   | | | then return 0.1562449619094957;  // std dev = 2.301, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.3608248036391642;  // std dev = 1.774, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.5654201421047195;  // std dev = 0.429, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( phenotype(C, J) )
%   | | then if ( interaction(A, K), phenotype(K, J) )
%   | | | then return 0.30474752756995843;  // std dev = 1.241, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1368253955575303;  // std dev = 4.157, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | else if ( interaction(L, C), interaction(C, L) )
%   | | | then return 0.33435143887657914;  // std dev = 2.123, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1831199315907862;  // std dev = 2.788, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   else if ( location(A, M) )
%   | then return 0.0831648386691118;  // std dev = 0.439, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else return 0.48234018164952125;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, A), phenotype(A, F) )
%   | | | then return -0.031116626632972058;  // std dev = 1.831, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.13978655698297746;  // std dev = 7.596, 254.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(F, H), interaction(A, D) )
%   | | | then return 0.1401111005806345;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08233009436313302;  // std dev = 2.206, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(I, D), phenotype(I, J) )
%   | | | then return -6.526554651118954E-4;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1904004719199972;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( enzyme(A, M), phenotype(L, N) )
%   | | | then return 0.13693581339033228;  // std dev = 1.997, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05186208945186939;  // std dev = 3.594, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( enzyme(A, P), phenotype(A, Q) )
%   | | | then return 0.04376362162008096;  // std dev = 1.744, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.13601204160489128;  // std dev = 5.712, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.007694489991272849;  // std dev = 1.686, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.17439801182308665;  // std dev = 3.412, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.15053775092960014;  // std dev = 3.087, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.06410202346420257;  // std dev = 5.982, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.07584178904560854;  // std dev = 2.177, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.09173634371516337;  // std dev = 2.045, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.02399569760260045;  // std dev = 1.532, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.0744698806266944;  // std dev = 7.102, 225.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), complex(A, E) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.035712143467573586;  // std dev = 2.497, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.365756709549192;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), interaction(D, D) )
%   | | | then return 0.15614532666653888;  // std dev = 1.495, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.03062507950512609;  // std dev = 3.938, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, A), phenotype(K, J) )
%   | | | then return -0.0023845187228273166;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3922700746587549;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.08290161591249863;  // std dev = 4.757, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.011478682867793374;  // std dev = 3.044, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.22181213878392958;  // std dev = 1.388, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0064225501617176765;  // std dev = 3.754, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.3898418634727253;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.016189412734700447;  // std dev = 3.065, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(A, H), phenotype(G, I) )
%   | | | then return 0.5345415559491028;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11505897190094203;  // std dev = 2.920, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1240447625722511;  // std dev = 2.400, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.0308474832693288;  // std dev = 4.188, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(A, F) )
%   | then if ( interaction(E, E), phenotype(E, G) )
%   | | then return 0.3236334245703219;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, H), location(E, I) )
%   | | | then return 0.056428192129226666;  // std dev = 3.281, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return -0.07610527907082491;  // std dev = 3.573, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(A, A), location(A, J) )
%   | | then return -0.1856442387228085;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.11427185984308995;  // std dev = 3.208, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.052837970102493935;  // std dev = 4.859, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(A, F) )
%   | then if ( interaction(E, G), enzyme(G, H) )
%   | | then if ( interaction(A, G), interaction(I, A) )
%   | | | then return -0.049690942954028004;  // std dev = 1.712, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.11609052362338541;  // std dev = 2.260, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(E, J) )
%   | | | then return -0.0196584196592023;  // std dev = 2.339, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.1522758437303051;  // std dev = 2.055, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(M, A), complex(M, L) )
%   | | | then return 0.01141523850257605;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.21039665412678404;  // std dev = 2.147, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.06820813962434606;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.045869077139669846;  // std dev = 5.653, 138.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=50 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '50.525', 'seconds']
Refined model CLL: -0.404606


******************************************
Best model found
******************************************
Results 

CLL : -0.364034 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.897 

Total Inference Time : 48.62327980995178 

Total revision time: 91.42866077804565
Best scored revision CLL: -0.364184


Results 

CLL : -0.364034 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 91.5287899055481 

Total Inference Time : 48.62327980995178 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.759
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2194934729146374;  // std dev = 7.411, 238.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15627244032169427;  // std dev = 0.469, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1406316798042805;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.0969309749576838;  // std dev = 7.682, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10877470608511959;  // std dev = 0.475, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054339479528324276;  // std dev = 0.462, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.053008101954905254;  // std dev = 0.465, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.050986516148874055;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.336', 'seconds']
Parameter learned model CLL:-0.342673 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.411, 152, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.565, 171, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.682, 188, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 193, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.465, 185, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.615, 178, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.23077466280629988, nan], 'true': [nan, 0.23077466280629988], 'true,false': [nan, 0.23077466280629988]}
{'': [nan, 0.22006968439618765]}
{'': [nan, 0.22265287892322413], 'false': [0.22265287892322413, nan]}
{'': [nan, 0.21535510682508216], 'false': [0.21535510682508216, nan]}
{'': [nan, 0.22523452008698394]}
{'': [nan, 0.2132295319947072]}
{'': [0.2166364837080087, nan]}
{'': [0.2196395775941253, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 27.49
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(D, C), interaction(C, E) )
%   | then return 0.16323368086222423;  // std dev = 0.460, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else if ( complex(C, F), phenotype(A, G) )
%   | | then if ( interaction(C, H), phenotype(H, G) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( enzyme(C, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then if ( interaction(J, J), phenotype(A, L) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0.15729423424481137;  // std dev = 0.458, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), phenotype(C, F) )
%   | then return 0.07556202134732137;  // std dev = 0.435, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | else return 0.15351636378162417;  // std dev = 0.470, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.49206264335982836;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, G), complex(G, H) )
%   | | | then return 0.3379027752476256;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14559508293993326;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), enzyme(K, L) )
%   | | | then return 0.14123088915278167;  // std dev = 3.879, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.5551549122094215;  // std dev = 1.275, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.009719075794505332;  // std dev = 1.555, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.15218848953334002;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.18568565550224145;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.10287310710249623;  // std dev = 6.997, 225.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=70 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( interaction(H, A), complex(H, E) )
%   | | | then return 0.1620572351709986;  // std dev = 2.262, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.035129262451663;  // std dev = 2.111, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(D, I), enzyme(I, J) )
%   | | | then return 0.2956584099616865;  // std dev = 1.986, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12365128689109631;  // std dev = 2.328, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(K, L), enzyme(L, M) )
%   | | | then return 0.14801421397844491;  // std dev = 1.971, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.4533136805325946;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, N), interaction(A, P) )
%   | | | then return -0.05815794152587448;  // std dev = 1.558, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.0853670167078129;  // std dev = 5.576, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(A, G) )
%   | | then if ( interaction(G, H), location(A, I) )
%   | | | then return 0.0493233721740406;  // std dev = 4.912, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | | else return 0.36016721156015985;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.12000241249930259;  // std dev = 3.757, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.21247177036213433;  // std dev = 3.876, 61.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), phenotype(A, I) )
%   | | | then return 0.10248435846392374;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.010703046515263551;  // std dev = 2.899, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1400778722166611;  // std dev = 5.060, 107.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=43 */
%   | | | else return 0.0603291166525369;  // std dev = 3.625, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( complex(D, E), enzyme(A, H) )
%   | | | then return 0.027711882506848383;  // std dev = 1.428, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.05366097523836428;  // std dev = 2.944, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else if ( complex(D, E) )
%   | | | then return 0.13192276801023314;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.006706954287522357;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A), enzyme(K, I) )
%   | | | then return -0.1385492062976919;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.03808030366824134;  // std dev = 3.144, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.20518863687559996;  // std dev = 2.239, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.09121577972722714;  // std dev = 5.107, 109.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(D, D) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.08994792113696555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2306511437830848;  // std dev = 1.635, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.025082846719040125;  // std dev = 3.074, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.128692556997083;  // std dev = 1.925, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A), phenotype(A, J) )
%   | | | then return 0.10659102203134661;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3196188213417046;  // std dev = 1.365, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.08616418392001261;  // std dev = 4.473, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return 0.015457714502971301;  // std dev = 3.850, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A), phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.07465530344996671;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.0018090180825541813;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.5049932719543135;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08889203361791669;  // std dev = 2.631, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.024658794506493973;  // std dev = 2.025, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.3798422214947477;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return -0.06555490622710312;  // std dev = 2.475, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.01045564010055115;  // std dev = 5.669, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A), phenotype(A, E) )
%   | then return 0.14719215001505687;  // std dev = 0.493, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), enzyme(H, I) )
%   | | | then return -0.0698774767250106;  // std dev = 3.360, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.01737574427098942;  // std dev = 3.525, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.002258861834326011;  // std dev = 4.552, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | | | else return 0.0927568580679244;  // std dev = 3.305, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '46.175', 'seconds']
Refined model CLL: -0.410291


******************************************
Best model found
******************************************
Results 

CLL : -0.341923 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.49 

Total Inference Time : 39.199777126312256 

Total revision time: 75.2703770866394
Best scored revision CLL: -0.342673


Results 

CLL : -0.341923 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 75.37050621414184 

Total Inference Time : 39.199777126312256 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.585
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.462, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22679300289612128;  // std dev = 7.411, 236.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16285569519627976;  // std dev = 0.472, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1618460386123862;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10046108220124929;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09121456604401919;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05279850031740319;  // std dev = 0.463, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04367836228160438;  // std dev = 0.463, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03614206677060916;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.728', 'seconds']
Parameter learned model CLL:-0.341116 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.411, 149, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.473, 156, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.672, 182, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.463, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.463, 192, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.731, 191, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.23274561907497945, nan], 'true': [nan, 0.23274561907497945], 'true,false': [nan, 0.23274561907497945]}
{'': [nan, 0.2226479289940811]}
{'': [nan, 0.2298430117360149], 'false': [0.2298430117360149, nan]}
{'': [nan, 0.21881952985724396], 'false': [0.21881952985724396, nan]}
{'': [nan, 0.22179651535458356]}
{'': [nan, 0.21417091836734706]}
{'': [0.21459128222915738, nan]}
{'': [0.21501216293152564, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 37.659
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( complex(A, G) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( location(E, H) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32481560176617896;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( interaction(M, A), location(M, N) )
%   | then if ( location(A, N), interaction(P, M) )
%   | | then return 0.17261434390454425;  // std dev = 0.464, 159.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   | | else return 0.24451257146314867;  // std dev = 0.487, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | else return 0.093443052746571;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), phenotype(D, F) )
%   | then if ( interaction(A, G), phenotype(A, F) )
%   | | then if ( enzyme(G, H), complex(G, I) )
%   | | | then return 0.16914451837898112;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5858111850456478;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, J), interaction(D, J) )
%   | | | then return 0.5858111850456478;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24810897327501855;  // std dev = 2.397, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( phenotype(D, K), interaction(L, D) )
%   | | then if ( enzyme(L, M), interaction(D, L) )
%   | | | then return 0.03581118504564777;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.2482668889633531;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( complex(D, C) )
%   | | | then return 0.23176866080664488;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5024778517123144;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.13808170698886815;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.12250645114044732;  // std dev = 7.505, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | | else return 0.3049313932046513;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.15260012082358157;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.48702220149333597;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, E), complex(H, I) )
%   | | | then return 0.08970435265409071;  // std dev = 4.527, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | | else return -0.008952647537511122;  // std dev = 1.787, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( phenotype(J, K), phenotype(A, L) )
%   | | | then return 0.773564000211385;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14786869707956568;  // std dev = 1.786, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return 0.08564910547845252;  // std dev = 2.855, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.17923660612537454;  // std dev = 4.129, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, G), phenotype(A, G) )
%   | | | then return -0.07713753649792056;  // std dev = 2.662, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.0750926247311237;  // std dev = 3.301, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.013881602174048048;  // std dev = 3.063, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.11289408956658718;  // std dev = 5.646, 139.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( function(A, H), function(F, H) )
%   | | | then return 0.1089395349525765;  // std dev = 3.644, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return 0.29621048218578927;  // std dev = 1.155, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.04897083524493271;  // std dev = 2.772, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.05113634662966506;  // std dev = 6.062, 170.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F), interaction(A, G) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.1256626033490246;  // std dev = 1.491, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.035732155369026665;  // std dev = 1.174, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, I), interaction(J, D) )
%   | | | then return 0.055626131692841724;  // std dev = 3.721, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return -0.012310537936228372;  // std dev = 4.214, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( location(K, M), interaction(N, K) )
%   | | | then return 0.07552317790819803;  // std dev = 4.131, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.13610465149408899;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, P), enzyme(P, Q) )
%   | | | then return 0.04829892664454337;  // std dev = 1.431, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.049001495016836094;  // std dev = 1.778, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( location(E, F) )
%   | | | then return 0.04285140416954413;  // std dev = 4.852, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.3185856470173005;  // std dev = 1.543, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(D, E), enzyme(D, G) )
%   | | | then return -0.1745186395680803;  // std dev = 1.289, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.004944821848770123;  // std dev = 5.042, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.081054890076393;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.140047188436603;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.5715969472664991;  // std dev = 0.891, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( phenotype(A, G), complex(A, H) )
%   | | then return 0.5515267262851404;  // std dev = 0.978, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(F, I), location(A, J) )
%   | | | then return -0.06393144613906318;  // std dev = 2.147, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.17145787194913523;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( interaction(A, M), interaction(M, M) )
%   | | | then return 6.337008128152688E-4;  // std dev = 2.038, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.09207172653240402;  // std dev = 3.141, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( location(A, N) )
%   | | | then return 0.024141105463496987;  // std dev = 5.668, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | | else return -0.10286987750743744;  // std dev = 1.505, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(E, E), interaction(A, G) )
%   | | | then return 0.08739971433218319;  // std dev = 3.256, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return -0.004938217832763035;  // std dev = 5.893, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
%   | | else if ( enzyme(F, H) )
%   | | | then return 0.008352342911821051;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.26112806545798295;  // std dev = 2.004, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.005454671442012793;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.08276547411402958;  // std dev = 1.691, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.1339430071954434;  // std dev = 1.523, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '15.259', 'seconds']
Refined model CLL: -0.385172


******************************************
Best model found
******************************************
Results 

CLL : -0.3407 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 37.659 

Total Inference Time : 65.38347935676575 

Total revision time: 110.89565734291077
Best scored revision CLL: -0.341116


Results 

CLL : -0.3407 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 111.08232216262817 

Total Inference Time : 65.38347935676575 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.263
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20025419825740376;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14150666394682754;  // std dev = 0.462, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12737263024496198;  // std dev = 8.434, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09596926641778976;  // std dev = 8.502, 341.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12602590781279518;  // std dev = 0.477, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0789626583659021;  // std dev = 0.469, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.053971360917064566;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05541527133072443;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.778', 'seconds']
Parameter learned model CLL:-0.341094 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.272, 200, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.434, 225, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.502, 237, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.465, 224, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.353, 212, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22506925207756448, nan], 'true': [nan, 0.22506925207756448], 'true,false': [nan, 0.22506925207756448]}
{'': [nan, 0.2137188208616806]}
{'': [nan, 0.216184255503926], 'false': [0.216184255503926, nan]}
{'': [nan, 0.21196928130993092], 'false': [0.21196928130993092, nan]}
{'': [nan, 0.22790357925493054]}
{'': [nan, 0.2200862307661865]}
{'': [0.21653777513384667, nan]}
{'': [0.2207979490466266, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 42.963
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then return 0.10814893509951223;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( complex(D, F), interaction(D, A) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), phenotype(D, H) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( enzyme(A, I), phenotype(A, J) )
%   | then return 0.12130682983635446;  // std dev = 0.440, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( interaction(A, K) )
%   | | then if ( location(K, L), location(A, L) )
%   | | | then return 0.1882460224781517;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | | else return 0.03996711691769403;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.30000940021579137;  // std dev = 3.256, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.21752393509951154;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), complex(C, F) )
%   | then return 0.11432955262730742;  // std dev = 0.454, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(G, C), complex(A, H) )
%   | | then return 0.5003214274140121;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, I), complex(C, J) )
%   | | | then return 0.17251419379868804;  // std dev = 2.310, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.28621862814666216;  // std dev = 3.440, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   else if ( interaction(A, K), enzyme(A, L) )
%   | then return 0.10690199455425867;  // std dev = 0.461, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( phenotype(A, M), interaction(N, A) )
%   | | then if ( phenotype(N, P) )
%   | | | then return 0.1532716612040491;  // std dev = 4.362, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.2840597469703848;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(Q, A), interaction(A, Q) )
%   | | | then return 3.2142741401212466E-4;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.26795821630004646;  // std dev = 3.360, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.050373340320787566;  // std dev = 3.185, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.1492491466623929;  // std dev = 7.633, 255.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then if ( phenotype(A, E), complex(D, F) )
%   | | | then return 0.3873848091220938;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07395014575383704;  // std dev = 2.053, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(A, D), complex(D, G) )
%   | | | then return 0.7533390961219505;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30928365525802537;  // std dev = 2.456, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(I, A), complex(I, H) )
%   | | | then return 0.11437151189766491;  // std dev = 2.295, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.22974340679983676;  // std dev = 3.329, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.0011902156404393674;  // std dev = 3.029, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.0923939915508123;  // std dev = 5.123, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.1166169009726239;  // std dev = 5.326, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return 0.06295343606701176;  // std dev = 6.056, 168.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=54 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5099295364806129;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22408245596288326;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), interaction(G, G) )
%   | | | then return 0.13901609419002486;  // std dev = 2.020, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.041652659442579974;  // std dev = 6.025, 165.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=53 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 2.548446451835242E-4;  // std dev = 4.854, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | | | else return 0.09388987899259552;  // std dev = 2.706, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), location(F, G) )
%   | | then if ( enzyme(E, H), interaction(F, E) )
%   | | | then return 0.17059945301909882;  // std dev = 2.736, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.0277277864242693;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | | else return 0.5034969947158139;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.06614698730561125;  // std dev = 2.798, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return -0.019761216883341544;  // std dev = 5.398, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.01479894401151427;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2302628767741578;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(D, G) )
%   | | | then return -0.03206999782867389;  // std dev = 2.434, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.1406027935932536;  // std dev = 2.465, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.005249370578575271;  // std dev = 1.818, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.11305205443211308;  // std dev = 1.546, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return 0.02600235817118587;  // std dev = 1.805, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2576519925865054;  // std dev = 1.809, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.008079617522679609;  // std dev = 4.068, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.06879075326668674;  // std dev = 5.355, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(A, E), enzyme(A, G) )
%   | | then if ( complex(E, H), enzyme(E, I) )
%   | | | then return 0.3180727863936984;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09877808194724312;  // std dev = 1.953, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( enzyme(A, J), location(E, F) )
%   | | | then return 0.12623227591300454;  // std dev = 3.035, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.04623873038884767;  // std dev = 6.734, 198.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=69 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then return 0.36571169138771786;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.03511595373643021;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.1264353181144986;  // std dev = 2.209, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( enzyme(H, F), interaction(H, I) )
%   | | | then return -0.14170525192860386;  // std dev = 2.203, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.19006452116183387;  // std dev = 1.009, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.0649725651109316;  // std dev = 2.073, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.07110808160265703;  // std dev = 2.095, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), phenotype(M, N) )
%   | | | then return 0.07926884273396154;  // std dev = 6.275, 163.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=64 */
%   | | | else return -0.09998510816125052;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( location(A, P), interaction(Q, A) )
%   | | | then return -0.04930426710342917;  // std dev = 2.843, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.002525580675224157;  // std dev = 2.006, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '44.522', 'seconds']
Refined model CLL: -0.401475


******************************************
Best model found
******************************************
Results 

CLL : -0.342152 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 42.963 

Total Inference Time : 117.1954460144043 

Total revision time: 172.15781681632996
Best scored revision CLL: -0.341094


Results 

CLL : -0.342152 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 172.34448163604736 

Total Inference Time : 117.1954460144043 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.545
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.479, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20015637004374848;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17916634044975085;  // std dev = 0.476, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1260020633674334;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1500168334980066;  // std dev = 7.643, 252.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.093079353070263;  // std dev = 0.472, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06731913757198985;  // std dev = 0.469, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05535479100494596;  // std dev = 0.469, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06142239185531504;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.719', 'seconds']
Parameter learned model CLL:-0.356953 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.78, 177, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.906, 195, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.643, 160, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.469, 189, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.765, 175, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2250383493871021, nan], 'true': [nan, 0.2250383493871021], 'true,false': [nan, 0.2250383493871021]}
{'': [nan, 0.22664293342826392]}
{'': [nan, 0.217800386067575], 'false': [0.217800386067575, nan]}
{'': [nan, 0.23179642227261205], 'false': [0.23179642227261205, nan]}
{'': [nan, 0.22262479338842853]}
{'': [nan, 0.21980785674765013]}
{'': [0.22020997707729, nan]}
{'': [0.22584129388825713, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.855
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), location(A, D) )
%   | then if ( complex(C, F), enzyme(A, G) )
%   | | then if ( phenotype(E, H) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( location(E, D) )
%   | | | then return 0.18314893509951125;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.15485223180280908;  // std dev = 0.457, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   else if ( complex(A, I), interaction(J, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then return 0.17393840878372288;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.26991364098186527;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), enzyme(A, F) )
%   | then return 0.10833877627214301;  // std dev = 0.454, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | else if ( location(D, C), complex(D, G) )
%   | | then return 0.30574617414479716;  // std dev = 0.499, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | else return 0.15152993253003796;  // std dev = 0.467, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then if ( phenotype(A, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return 0.5788241754579826;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2505903777887459;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.14040592295091525;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.22201894921731732;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( location(A, M) )
%   | | then return 0.15936862293912943;  // std dev = 0.469, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else return 0.32201894921731733;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), phenotype(A, G) )
%   | | | then return 0.08990613518869658;  // std dev = 5.183, 128.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | | | else return 0.13269333673679148;  // std dev = 5.991, 163.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(F, F) )
%   | | then if ( interaction(A, A), location(A, G) )
%   | | | then return 0.19502012655563675;  // std dev = 1.323, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.014495457092017884;  // std dev = 2.297, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.059291124510230074;  // std dev = 1.891, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.19555705597981338;  // std dev = 3.682, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.040224194528778935;  // std dev = 1.691, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.044400295994843415;  // std dev = 2.024, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.05096175358269908;  // std dev = 4.419, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | | | else return 0.1286307418009403;  // std dev = 3.447, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(H, I) )
%   | | | then return 0.1264905485981924;  // std dev = 3.379, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.33647928547820916;  // std dev = 1.873, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.03771579066076332;  // std dev = 3.170, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.11384186660795695;  // std dev = 5.818, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( enzyme(A, H), phenotype(F, I) )
%   | | | then return 0.08492998303270761;  // std dev = 2.706, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.029906053535477334;  // std dev = 3.344, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.2197966603811791;  // std dev = 3.168, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.07140519111602202;  // std dev = 5.606, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, A), complex(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1674031538023291;  // std dev = 1.034, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.012870584512380295;  // std dev = 1.729, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.1226594314527633;  // std dev = 3.366, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.23696195416054897;  // std dev = 3.093, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.03906309664491508;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.09701270925973732;  // std dev = 3.668, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.01676625771415016;  // std dev = 3.844, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return -0.07784302585472747;  // std dev = 1.230, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.0601486521201744;  // std dev = 1.616, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.10081621332177655;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.21151687582869858;  // std dev = 1.848, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.49065830862116167;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), enzyme(A, L) )
%   | | | then return -0.13861611691244582;  // std dev = 2.244, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.011369431853576601;  // std dev = 4.252, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return -0.04030404462009753;  // std dev = 2.853, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.059167391239505436;  // std dev = 4.620, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( location(E, G), enzyme(A, H) )
%   | | then if ( phenotype(A, I), location(A, G) )
%   | | | then return 0.052010129717177035;  // std dev = 1.958, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.08313645253772088;  // std dev = 2.648, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( interaction(J, E), complex(J, K) )
%   | | | then return -0.009372954328304735;  // std dev = 3.341, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.1592992889938173;  // std dev = 1.945, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(L, A), enzyme(A, M) )
%   | | then if ( complex(A, N) )
%   | | | then return 0.09587626282239699;  // std dev = 2.336, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.22063653872036895;  // std dev = 1.578, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return -0.0318706282142597;  // std dev = 2.751, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.03891232126602835;  // std dev = 4.354, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( interaction(E, E), complex(E, H) )
%   | | | then return -0.08276678555984986;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.09646293567348427;  // std dev = 2.176, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.3714697310283575;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), location(K, L) )
%   | | | then return 0.007503951121257291;  // std dev = 2.469, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.09394531388259111;  // std dev = 2.612, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.08132959727514709;  // std dev = 2.771, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.011556479263852375;  // std dev = 5.703, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '23.203', 'seconds']
Refined model CLL: -0.400553


******************************************
Best model found
******************************************
Results 

CLL : -0.356798 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.855 

Total Inference Time : 55.75886082649231 

Total revision time: 99.48468699455262
Best scored revision CLL: -0.356953


Results 

CLL : -0.356798 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 99.67135181427003 

Total Inference Time : 55.75886082649231 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.781
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1826772369863041;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13512487578887794;  // std dev = 0.459, 286.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16028585518772212;  // std dev = 7.503, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09885216092070191;  // std dev = 7.707, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10853908158590952;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08890846535298036;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09291084258070854;  // std dev = 0.479, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06439722954273597;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.590', 'seconds']
Parameter learned model CLL:-0.357156 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.622, 179, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.459, 200, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.503, 163, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.707, 192, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.479, 155, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.495, 162, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21920968316126813, nan], 'true': [nan, 0.21920968316126813], 'true,false': [nan, 0.21920968316126813]}
{'': [nan, 0.21027923125825265]}
{'': [nan, 0.2260931275302012], 'false': [0.2260931275302012, nan]}
{'': [nan, 0.21365353760157352], 'false': [0.21365353760157352, nan]}
{'': [nan, 0.22308349609375036]}
{'': [nan, 0.22308349609375053]}
{'': [0.22950706771577845, nan]}
{'': [0.22652185223725282, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.137
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( enzyme(C, G), complex(A, H) )
%   | | then if ( complex(A, D), interaction(C, E) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.14386322081379807;  // std dev = 0.452, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else if ( phenotype(A, I), phenotype(C, I) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( interaction(K, A), phenotype(K, L) )
%   | then return 0.12130682983635366;  // std dev = 0.440, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | else if ( location(A, M) )
%   | | then return 0.2452457092930597;  // std dev = 0.487, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(D, E), interaction(F, C) )
%   | then return 0.140949400922476;  // std dev = 0.464, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | else return 0.048873250679705126;  // std dev = 0.422, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( complex(A, H), enzyme(G, I) )
%   | | then return 0.3255993387430038;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.4922660054096704;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5755993387430037;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( complex(M, L), interaction(M, N) )
%   | | | then return 0.2658940019286725;  // std dev = 1.796, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.4969724690736352;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.23379685873814451;  // std dev = 2.304, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.13906603984803254;  // std dev = 4.177, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.1997332353733529;  // std dev = 3.779, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | | else return 0.10149012702491261;  // std dev = 6.607, 208.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=62 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, D), interaction(A, F) )
%   | | then return 0.3055235735558656;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.15181776535281036;  // std dev = 3.551, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.08338148020134925;  // std dev = 4.902, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(I, J), complex(A, K) )
%   | | | then return 0.3099495069638287;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08897557522948314;  // std dev = 2.275, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -8.685395289488015E-4;  // std dev = 2.635, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.07204317155132287;  // std dev = 2.522, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.051006843311740525;  // std dev = 2.965, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.14470715639669324;  // std dev = 4.992, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.14993780204460722;  // std dev = 2.952, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.03820387993609878;  // std dev = 3.718, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.010703473655395888;  // std dev = 2.985, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.06260497951257166;  // std dev = 5.279, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.16590871264405463;  // std dev = 3.576, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.08723522398190389;  // std dev = 2.664, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), complex(A, E) )
%   | then if ( interaction(A, F), interaction(G, A) )
%   | | then if ( phenotype(A, H), interaction(I, G) )
%   | | | then return -0.008869373987500378;  // std dev = 2.078, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.1357870669617291;  // std dev = 1.887, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.11177795180498447;  // std dev = 2.191, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.015511542927193589;  // std dev = 2.506, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(L, A) )
%   | | then if ( interaction(A, M), interaction(L, M) )
%   | | | then return 0.15489542645518864;  // std dev = 2.508, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.07215038991765484;  // std dev = 5.107, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.10040059337926874;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.45631667892131206;  // std dev = 1.140, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), complex(F, G) )
%   | | then if ( interaction(E, D), interaction(H, A) )
%   | | | then return 0.03565495450573949;  // std dev = 3.703, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return -0.10304355993009003;  // std dev = 3.273, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.03814308657597428;  // std dev = 2.323, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.3590765908577743;  // std dev = 1.281, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( location(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.2099286624667497;  // std dev = 1.856, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.08831044928090968;  // std dev = 4.370, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | else return 0.4036911190304289;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(E, G), phenotype(F, H) )
%   | | then if ( interaction(I, F), phenotype(I, H) )
%   | | | then return 0.032937704327301504;  // std dev = 3.547, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return -0.08142419277533199;  // std dev = 2.614, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( complex(F, J), location(E, K) )
%   | | | then return 0.04444836494687865;  // std dev = 3.251, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.15258352526590088;  // std dev = 2.469, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( location(A, L), interaction(A, M) )
%   | | then if ( interaction(M, N), phenotype(N, P) )
%   | | | then return -0.08323624301564608;  // std dev = 3.024, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.0012573528863595155;  // std dev = 2.124, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( location(A, Q) )
%   | | | then return 0.004127308563399542;  // std dev = 2.667, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.1385668448266656;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), interaction(H, G) )
%   | | then if ( phenotype(F, E), interaction(H, H) )
%   | | | then return 0.27355225118870746;  // std dev = 1.453, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.02787384932932892;  // std dev = 4.241, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | else if ( interaction(F, I), interaction(I, I) )
%   | | | then return 0.17905185764724024;  // std dev = 2.288, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.011903184246052195;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.2174048148987229;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.06488141569100851;  // std dev = 3.880, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.09253201156706589;  // std dev = 1.635, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.04106507861455071;  // std dev = 3.215, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '49.155', 'seconds']
Refined model CLL: -0.390452


******************************************
Best model found
******************************************
Results 

CLL : -0.356448 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.137 

Total Inference Time : 45.51537561416626 

Total revision time: 86.19921232986451
Best scored revision CLL: -0.357156


Results 

CLL : -0.356448 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 86.38587714958192 

Total Inference Time : 45.51537561416626 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.614
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20614893509951127;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17233370185274732;  // std dev = 0.474, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1757889468170921;  // std dev = 7.402, 235.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10610500834611333;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0871559440740215;  // std dev = 0.470, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0797698391672542;  // std dev = 0.473, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06286616726560236;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.047581057095892984;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.149', 'seconds']
Parameter learned model CLL:-0.358651 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.532, 163, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.402, 148, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.637, 177, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 171, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.608, 173, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22689600000000093, nan], 'true': [nan, 0.22689600000000093], 'true,false': [nan, 0.22689600000000093]}
{'': [nan, 0.22477508650518951]}
{'': [nan, 0.23315527387958268], 'false': [0.23315527387958268, nan]}
{'': [nan, 0.220945247933886], 'false': [0.220945247933886, nan]}
{'': [nan, 0.22094524793388542]}
{'': [nan, 0.2239246619933693]}
{'': [0.22349918875067706, nan]}
{'': [0.2226479289940827, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 45.243
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(C, E), complex(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(C, C), phenotype(A, I) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.20814893509951232;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.13373948628061325;  // std dev = 0.447, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.1273797043302816;  // std dev = 0.444, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.23314893509951234;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( location(E, D) )
%   | | | then return 0.17440994683084063;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17440994683084068;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( location(E, D), interaction(E, E) )
%   | | | then return 0.5936197317511935;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3413795593858649;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( phenotype(I, K), location(J, D) )
%   | | | then return 0.23322801967636136;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.5825409009623914;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.34107661349750734;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16715477541335505;  // std dev = 2.686, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   else return 0.15471475285182884;  // std dev = 0.471, 165.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.1871833667545117;  // std dev = 3.937, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return 0.10525051685980732;  // std dev = 6.562, 202.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=62 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), location(E, F) )
%   | | then if ( interaction(A, E), phenotype(E, G) )
%   | | | then return 0.034568562194708385;  // std dev = 2.557, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.1163410055150647;  // std dev = 4.396, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12222909298487565;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03551921577022159;  // std dev = 1.289, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.32881436239357253;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07258892706659871;  // std dev = 2.525, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.11160156142355876;  // std dev = 2.828, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.27619884394492134;  // std dev = 3.280, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(G, H), complex(F, I) )
%   | | | then return 0.03090539945042195;  // std dev = 4.452, 95.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=27 */
%   | | | else return 0.11426194913238857;  // std dev = 5.701, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12189925388925826;  // std dev = 1.956, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.5105363120340507;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.1032539253993996;  // std dev = 2.615, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.36644907897682766;  // std dev = 1.561, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.1158279340083812;  // std dev = 3.344, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.027964240310389115;  // std dev = 6.011, 174.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( phenotype(A, F), complex(A, H) )
%   | | | then return -0.019389863685011353;  // std dev = 2.588, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.10559939666740421;  // std dev = 3.344, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else if ( enzyme(E, I), location(A, J) )
%   | | | then return -0.21520598560159143;  // std dev = 1.858, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return -0.0384947951592016;  // std dev = 2.431, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( phenotype(A, K) )
%   | | then if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.05626936328909833;  // std dev = 2.359, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.256340737366615;  // std dev = 2.382, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return -0.033009985904236816;  // std dev = 1.928, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.07118394724666191;  // std dev = 3.850, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), enzyme(H, D) )
%   | | | then return 0.05782406545200321;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11706535087358301;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(I, E), interaction(I, A) )
%   | | | then return 0.047486364076628367;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2121082234162751;  // std dev = 2.099, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.14605733714982422;  // std dev = 2.168, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.02839751562944096;  // std dev = 3.750, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 1.8135196152164847E-4;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.06616147943404094;  // std dev = 4.222, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( complex(A, G), enzyme(A, H) )
%   | | then if ( interaction(E, I), interaction(I, I) )
%   | | | then return 0.24676026036545012;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.06517350759127231;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(E, J), enzyme(E, K) )
%   | | | then return 0.08112466777470145;  // std dev = 1.955, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.009551205800764363;  // std dev = 4.449, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | else if ( enzyme(A, L), interaction(A, A) )
%   | | then if ( location(A, M) )
%   | | | then return -0.16060158678266778;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.02301581400098503;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.17985859526673675;  // std dev = 2.479, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.031116403982843422;  // std dev = 4.741, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(E, G), location(A, H) )
%   | | then if ( phenotype(E, I), complex(A, J) )
%   | | | then return -0.10006352214529078;  // std dev = 1.753, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.003922190868790587;  // std dev = 3.111, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( interaction(A, F), phenotype(A, K) )
%   | | | then return -0.0603232669801795;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.09856955833556932;  // std dev = 5.681, 131.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=54 */
%   | else if ( phenotype(A, L), interaction(M, A) )
%   | | then return -0.24772581207114935;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.1473864526926974;  // std dev = 1.223, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.06737608058301596;  // std dev = 2.096, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16', 'minutes', 'and', '440', 'milliseconds']
Refined model CLL: -0.40414


******************************************
Best model found
******************************************
Results 

CLL : -0.358262 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 45.243 

Total Inference Time : 141.64940214157104 

Total revision time: 194.76032531929016
Best scored revision CLL: -0.358651


Results 

CLL : -0.358262 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 194.9244204826355 

Total Inference Time : 141.64940214157104 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.104
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.464, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18622464487868903;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18292817384395704;  // std dev = 0.477, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14913854526078746;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.15284724527330676;  // std dev = 8.094, 281.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06151106452589715;  // std dev = 0.461, 340.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0742514248077235;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07407043961108219;  // std dev = 0.475, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.042919816524341264;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.958', 'seconds']
Parameter learned model CLL:-0.353666 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.359, 213, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.272, 200, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.094, 177, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.461, 236, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.475, 198, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.359, 213, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2204420384320692, nan], 'true': [nan, 0.2204420384320692], 'true,false': [nan, 0.2204420384320692]}
{'': [nan, 0.22719697310931466]}
{'': [nan, 0.22506925207755799], 'false': [0.22506925207755799, nan]}
{'': [nan, 0.2331277466090856], 'false': [0.2331277466090856, nan]}
{'': [nan, 0.21231833910034612]}
{'': [nan, 0.22115394305870417]}
{'': [0.22577957107144322, nan]}
{'': [0.2204420384320683, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 47.224
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), phenotype(E, D) )
%   | then if ( enzyme(E, F), interaction(G, E) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1462845283198513;  // std dev = 0.453, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(A, H), phenotype(H, D) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, J), interaction(J, J) )
%   | then if ( enzyme(A, K) )
%   | | then if ( interaction(J, A), complex(J, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.17633075328133055;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else return 0.15995073690131384;  // std dev = 0.459, 222.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=67 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( location(F, C), phenotype(D, G) )
%   | | | then return 0.14956173859929894;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | | else return 0.586421091440406;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.107704470556677;  // std dev = 0.445, 158.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=43 */
%   | else if ( location(H, C), interaction(H, A) )
%   | | then if ( complex(H, I), phenotype(A, J) )
%   | | | then return 0.5735634653032187;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2372428274510721;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.1225556824523727;  // std dev = 0.455, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( interaction(A, K) )
%   | then return 0.17087497387919312;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return 0.3375416405458598;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5042083072125264;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.18690770718421001;  // std dev = 4.187, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.10340726729731271;  // std dev = 7.315, 256.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=76 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(F, A), enzyme(E, G) )
%   | | then if ( interaction(F, F), interaction(E, F) )
%   | | | then return 0.21118047460401956;  // std dev = 1.842, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.04473706731606463;  // std dev = 4.539, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( interaction(E, H), interaction(A, H) )
%   | | | then return 0.28803489319242653;  // std dev = 2.222, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.12101626770040312;  // std dev = 1.979, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.46990207104192044;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.17356167921932952;  // std dev = 3.259, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.08937910323475162;  // std dev = 2.228, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.1628206979530533;  // std dev = 4.043, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, F) )
%   | | | then return 0.1073986545722046;  // std dev = 3.336, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.0014875241710052948;  // std dev = 2.746, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.2040653846723082;  // std dev = 2.436, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.10590833428423518;  // std dev = 6.590, 194.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=66 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( location(A, H) )
%   | | | then return 0.01931825525959801;  // std dev = 5.238, 134.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
%   | | | else return 0.28685265660189563;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.023858544172624868;  // std dev = 3.057, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.09899930153968654;  // std dev = 5.705, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.14236578593908705;  // std dev = 2.049, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.00698886156026614;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return -0.1397287185177438;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.022819651708445913;  // std dev = 3.262, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( interaction(K, A), complex(K, I) )
%   | | | then return -0.021409849262987165;  // std dev = 2.416, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.09981517065077362;  // std dev = 3.469, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.19505979187551534;  // std dev = 2.602, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.10737922166648878;  // std dev = 4.943, 104.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.05156399522676008;  // std dev = 3.461, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.1517838003919597;  // std dev = 3.363, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.04147557206135536;  // std dev = 2.722, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.0395618865480489;  // std dev = 5.753, 148.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
%   | else if ( interaction(A, I) )
%   | | then return 0.4138949295250493;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15089178679562046;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08873340320077562;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( complex(A, H), enzyme(G, I) )
%   | | | then return -0.0012152844442602834;  // std dev = 3.969, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.07907957921696306;  // std dev = 6.155, 160.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=61 */
%   | | else if ( complex(A, J), interaction(K, E) )
%   | | | then return 0.0879309188775963;  // std dev = 1.705, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.07470883848034048;  // std dev = 2.847, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( complex(A, L), phenotype(A, M) )
%   | | then return 0.0804141940783738;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2628448068454812;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A) )
%   | then if ( interaction(E, E), complex(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.17146082435662918;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return -0.06406544859742302;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.012696363692030189;  // std dev = 6.797, 213.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=69 */
%   | | | else return 0.11553480535380065;  // std dev = 3.100, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.11312211585742431;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.08626659460139167;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.04695099432241708;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '2.872', 'seconds']
Refined model CLL: -0.401223


******************************************
Best model found
******************************************
Results 

CLL : -0.354673 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 47.224 

Total Inference Time : 129.20252680778503 

Total revision time: 187.58459275054932
Best scored revision CLL: -0.353666


Results 

CLL : -0.354673 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 187.74868791389466 

Total Inference Time : 129.20252680778503 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.259
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.475, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17982725677783246;  // std dev = 7.900, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19003130704541182;  // std dev = 0.479, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14766409294546048;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11262028390984029;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11696533140160635;  // std dev = 0.478, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054254973640808016;  // std dev = 0.464, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0715312045822133;  // std dev = 0.474, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05722843623706827;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.045', 'seconds']
Parameter learned model CLL:-0.356263 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.9, 194, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.788, 178, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.853, 187, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.478, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 178, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.788, 178, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21820137904054107, nan], 'true': [nan, 0.21820137904054107], 'true,false': [nan, 0.21820137904054107]}
{'': [nan, 0.2290365379168471]}
{'': [nan, 0.22463648834019267], 'false': [0.22463648834019267, nan]}
{'': [nan, 0.2210146323916701], 'false': [0.2210146323916701, nan]}
{'': [nan, 0.2286390532544378]}
{'': [nan, 0.2150030080059249]}
{'': [0.22463648834019323, nan]}
{'': [0.22463648834018965, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 34.649
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then return 0.16584124279182005;  // std dev = 0.462, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( enzyme(D, G), enzyme(A, G) )
%   | | then if ( interaction(D, H) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), interaction(I, D) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6581489350995122;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then return 0.1571180072644595;  // std dev = 0.458, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return 0.12481560176617904;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.19638422921715937;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( complex(A, E), phenotype(C, F) )
%   | then return 0.059341793955635755;  // std dev = 0.439, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else if ( interaction(C, C), phenotype(A, G) )
%   | | then return 0.03633179826398327;  // std dev = 0.401, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return 0.145260000460443;  // std dev = 0.465, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then if ( phenotype(J, H), interaction(J, K) )
%   | | then if ( complex(K, I) )
%   | | | then return 0.10696352442305963;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.49486485144385095;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.10269428014005255;  // std dev = 0.444, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.11084022480284948;  // std dev = 0.444, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.032523132469006226;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17689447321014853;  // std dev = 4.216, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.10044938899839836;  // std dev = 5.538, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | | else return 0.16398561569179135;  // std dev = 5.592, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( complex(E, G), interaction(E, H) )
%   | | | then return 0.09484555217429994;  // std dev = 3.034, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.25328327207676;  // std dev = 2.342, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.04218201970581298;  // std dev = 3.177, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.1068256824664521;  // std dev = 5.932, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | else if ( interaction(A, A) )
%   | | then return 0.04706591416880057;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.02050331931324588;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( complex(F, H), interaction(I, F) )
%   | | | then return 0.11739406768518072;  // std dev = 3.749, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | | else return 0.010822503995122945;  // std dev = 3.363, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.2028403307569917;  // std dev = 3.289, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0.12456437272886486;  // std dev = 4.796, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.007278941669213775;  // std dev = 3.010, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.11093544837426235;  // std dev = 5.305, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.18156858405600854;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.010293572776769589;  // std dev = 4.745, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(D, F), interaction(D, D) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.021861880300862946;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.10140309537420057;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, H), phenotype(H, E) )
%   | | | then return 0.12613890953235532;  // std dev = 1.901, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.031827568691687694;  // std dev = 3.705, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, I) )
%   | | | then return 0.26085120136044004;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2444111134576783;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.1352169612563908;  // std dev = 3.113, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.07883667729254987;  // std dev = 5.286, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( complex(D, F), enzyme(D, G) )
%   | | then if ( interaction(D, H), phenotype(H, I) )
%   | | | then return 0.14518087418861184;  // std dev = 2.168, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.08267731359097209;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.47964239142983556;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15473034659829346;  // std dev = 2.389, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( phenotype(A, L), location(A, M) )
%   | | then if ( interaction(N, A), interaction(A, P) )
%   | | | then return -0.06714184952114322;  // std dev = 1.945, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.02277215354975159;  // std dev = 3.825, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( interaction(Q, A), complex(A, R) )
%   | | | then return -0.014511195976086057;  // std dev = 2.694, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.08553622242547453;  // std dev = 4.511, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( phenotype(F, G), location(A, H) )
%   | | then if ( enzyme(F, I), interaction(F, F) )
%   | | | then return 0.014859450631658827;  // std dev = 1.656, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.29945511215154064;  // std dev = 2.307, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( interaction(F, J), enzyme(A, K) )
%   | | | then return -0.13949954705130846;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.04006345389501422;  // std dev = 2.119, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(L, A) )
%   | | then if ( phenotype(L, M), location(L, N) )
%   | | | then return -0.0303092606622819;  // std dev = 4.344, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return 0.08453422404837883;  // std dev = 4.306, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   | | else if ( complex(A, P) )
%   | | | then return -0.10714995855384839;  // std dev = 1.971, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.05796730229290035;  // std dev = 2.322, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, I), enzyme(I, F) )
%   | | | then return 0.22501543274560507;  // std dev = 1.412, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.08731490881412986;  // std dev = 1.461, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.04288152576321761;  // std dev = 1.776, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.21050559529013976;  // std dev = 2.444, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( enzyme(L, N), complex(A, P) )
%   | | | then return 0.33221571335711725;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.018329364419910312;  // std dev = 5.131, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | else if ( interaction(A, Q), enzyme(Q, R) )
%   | | | then return 0.20279813163985214;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.030550102305357707;  // std dev = 4.089, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23', 'minutes', 'and', '35.845', 'seconds']
Refined model CLL: -0.40169


******************************************
Best model found
******************************************
Results 

CLL : -0.356108 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.649 

Total Inference Time : 68.84363889694214 

Total revision time: 114.7766318397522
Best scored revision CLL: -0.356263


Results 

CLL : -0.356108 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 114.94072700309754 

Total Inference Time : 68.84363889694214 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.063
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.481, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18024631337666522;  // std dev = 7.635, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.147488430110457;  // std dev = 0.464, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16586046611284158;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11895725740537601;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08362742019133076;  // std dev = 0.465, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1048846601806497;  // std dev = 0.478, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06547957463100706;  // std dev = 0.472, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03747848417130009;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.428', 'seconds']
Parameter learned model CLL:-0.34927 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.635, 181, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.462, 158, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.579, 173, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.478, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 171, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.649, 183, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21835065718413857, nan], 'true': [nan, 0.21835065718413857], 'true,false': [nan, 0.21835065718413857]}
{'': [nan, 0.2149289256198355]}
{'': [nan, 0.22823165815640953], 'false': [0.22823165815640953, nan]}
{'': [nan, 0.22179156542090656], 'false': [0.22179156542090656, nan]}
{'': [nan, 0.21663648370801206]}
{'': [nan, 0.22865755558942572]}
{'': [0.22265287892322388, nan]}
{'': [0.21749284835754104, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.912
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.12377393509951237;  // std dev = 0.442, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else return 0.1914822684328457;  // std dev = 0.471, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( phenotype(F, H) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08037115732173443;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.20338703033760666;  // std dev = 4.358, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(C, E) )
%   | then if ( phenotype(A, E), enzyme(C, F) )
%   | | then if ( interaction(C, G), interaction(G, G) )
%   | | | then return 0.2368849559221795;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5901044875264818;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.12315708377474133;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.2396906244472389;  // std dev = 2.962, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else return 0.4814247994523504;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( complex(A, J), location(A, K) )
%   | then if ( interaction(L, A), complex(L, M) )
%   | | then return 0.2059606998273279;  // std dev = 0.483, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.17573748629145966;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.39284934088780527;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.1436484575686169;  // std dev = 0.466, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.16390266955751842;  // std dev = 6.005, 157.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=57 */
%   | | | else return 0.07538442861522021;  // std dev = 4.534, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, F), phenotype(F, E) )
%   | | then if ( complex(D, G), enzyme(F, H) )
%   | | | then return 0.037116040077950885;  // std dev = 1.456, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.27293865430642084;  // std dev = 2.221, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.10944412024831074;  // std dev = 2.583, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.019283967456673948;  // std dev = 4.084, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(A, A), enzyme(A, K) )
%   | | | then return -0.03495499617402531;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12670826302430907;  // std dev = 4.890, 105.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=37 */
%   | | else return 0.2910558645063891;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), enzyme(F, I) )
%   | | | then return 0.05457339491250569;  // std dev = 2.746, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.14672583936424935;  // std dev = 3.443, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.0025964346242479436;  // std dev = 2.754, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.06419436201679941;  // std dev = 5.595, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, H), interaction(I, G) )
%   | | | then return 0.04692929339995994;  // std dev = 4.232, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | | else return 0.15461218823565687;  // std dev = 3.334, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.011801599492750607;  // std dev = 3.214, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.05479753565620646;  // std dev = 4.304, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(F, D), complex(A, G) )
%   | | | then return 0.12399307050217502;  // std dev = 2.227, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.009730018621200726;  // std dev = 4.361, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   | | else return 0.24582783045147194;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J), interaction(K, H) )
%   | | | then return 0.2485904989191991;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04196244228624231;  // std dev = 4.177, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.06871026255680797;  // std dev = 1.989, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2283097766213032;  // std dev = 2.641, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.19636674641063712;  // std dev = 1.575, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.026331454351832956;  // std dev = 3.122, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( phenotype(E, I) )
%   | | | then return -0.06340239124480974;  // std dev = 3.013, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.07549629038760913;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(J, L), phenotype(A, M) )
%   | | | then return 0.35469430436946153;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12795223472661885;  // std dev = 1.829, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.02738825184277287;  // std dev = 1.882, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.09399662610516045;  // std dev = 4.629, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), interaction(G, E) )
%   | | then if ( complex(A, H), location(A, I) )
%   | | | then return 0.668007023850372;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08758636570309784;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( complex(E, J), phenotype(E, K) )
%   | | | then return 0.19907164132584704;  // std dev = 1.527, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.043907327567561764;  // std dev = 1.699, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, L), phenotype(A, M) )
%   | | then if ( interaction(L, N), interaction(N, L) )
%   | | | then return 0.027069974892845107;  // std dev = 3.093, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.09712644321318283;  // std dev = 1.788, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.10766284430697101;  // std dev = 2.316, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.013996169684364871;  // std dev = 5.446, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(A, G), interaction(H, E) )
%   | | then if ( complex(A, I), enzyme(E, J) )
%   | | | then return 0.187354836819173;  // std dev = 1.587, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.04045176932077437;  // std dev = 3.909, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | else if ( interaction(K, E) )
%   | | | then return 0.1754155988731862;  // std dev = 2.984, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.0374202532153936;  // std dev = 3.062, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then if ( complex(M, L) )
%   | | | then return 0.0377289716296014;  // std dev = 2.075, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.2175206357275616;  // std dev = 1.196, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.17065369665595853;  // std dev = 2.201, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return -0.06508389035277538;  // std dev = 3.075, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41', 'minutes', 'and', '16.580', 'seconds']
Refined model CLL: -0.405388


******************************************
Best model found
******************************************
Results 

CLL : -0.348539 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.912 

Total Inference Time : 64.38488459587097 

Total revision time: 103.0037058353424
Best scored revision CLL: -0.34927


Results 

CLL : -0.348539 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 103.16780099868774 

Total Inference Time : 64.38488459587097 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.813
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18399163172872496;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19374803132226492;  // std dev = 0.480, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14030790600450424;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.13217953044479078;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09280276718662499;  // std dev = 0.471, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06673797388558923;  // std dev = 0.468, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04208341603200753;  // std dev = 0.464, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.02708075117945987;  // std dev = 7.768, 284.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.827', 'seconds']
Parameter learned model CLL:-0.341987 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.658, 180, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.608, 173, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.523, 162, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.464, 191, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.768, 197, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21966923368261668, nan], 'true': [nan, 0.21966923368261668], 'true,false': [nan, 0.21966923368261668]}
{'': [nan, 0.23026091113995012]}
{'': [nan, 0.22264792899408267], 'false': [0.22264792899408267, nan]}
{'': [nan, 0.2273189142110593], 'false': [0.2273189142110593, nan]}
{'': [nan, 0.22222222222222104]}
{'': [nan, 0.2192442637558493]}
{'': [0.21501216293152614, nan]}
{'': [0.21249504066653574, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), location(E, D) )
%   | then if ( location(A, D), complex(E, F) )
%   | | then if ( phenotype(C, G), enzyme(A, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22700139411590506;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( location(A, D), phenotype(C, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0.12737970433028153;  // std dev = 0.444, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), location(E, D) )
%   | then if ( phenotype(A, F), interaction(E, A) )
%   | | then if ( phenotype(C, F), complex(A, G) )
%   | | | then return 0.12168036086005504;  // std dev = 2.524, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.3080160404972777;  // std dev = 2.661, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.06986208655616877;  // std dev = 3.253, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.14462183625645217;  // std dev = 4.824, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else return 0.03273829083269713;  // std dev = 0.429, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return 0.04192486198490857;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.17525819531824197;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24192486198490865;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5085915286515753;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.05685964825322088;  // std dev = 3.403, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.16974719622357642;  // std dev = 6.723, 196.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), enzyme(A, G) )
%   | | then if ( interaction(H, E), phenotype(H, I) )
%   | | | then return -0.023851075524481374;  // std dev = 2.348, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.13075748544301138;  // std dev = 1.624, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(J, E) )
%   | | | then return 0.14671205426846423;  // std dev = 6.353, 172.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=64 */
%   | | | else return -0.05087406292609049;  // std dev = 1.592, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( complex(K, M) )
%   | | | then return 0.24670700499425188;  // std dev = 1.647, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.10978887813460532;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3767620830393039;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( location(A, G), interaction(A, A) )
%   | | | then return 0.11776280317321593;  // std dev = 1.789, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.03113816385095894;  // std dev = 3.176, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( location(A, H) )
%   | | | then return 0.13198438005903906;  // std dev = 6.385, 174.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=66 */
%   | | | else return -0.0646244335157882;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(A, G), complex(F, H) )
%   | | | then return 0.04009467328875904;  // std dev = 1.810, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1717856368771384;  // std dev = 3.361, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.028421425931584973;  // std dev = 4.371, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else return 0.07229106083796957;  // std dev = 4.786, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( location(A, G), location(D, H) )
%   | | | then return -0.060476986846996365;  // std dev = 3.035, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.08257646826294768;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( complex(D, I), interaction(J, D) )
%   | | | then return 0.0017462188540648934;  // std dev = 1.472, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.15290448207267543;  // std dev = 1.908, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.27500687804120083;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0700549720622933;  // std dev = 2.546, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.003196390511528763;  // std dev = 2.038, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.07074810864757854;  // std dev = 5.120, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, D), enzyme(A, F) )
%   | | then if ( complex(E, G), interaction(D, A) )
%   | | | then return 0.19464013938843158;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7167061569039476;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.030718049096024724;  // std dev = 2.596, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.19325045238242944;  // std dev = 2.634, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.4171093731726739;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03267822331061735;  // std dev = 5.946, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.04055158907580974;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.11365488012981957;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(G, G), complex(G, H) )
%   | | | then return 0.14878882670625773;  // std dev = 2.001, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.3666918211230619;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.16888784898569867;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.051997992560316994;  // std dev = 3.458, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( enzyme(A, K), interaction(A, L) )
%   | | | then return -0.1097715689480977;  // std dev = 1.774, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.016608773947854722;  // std dev = 5.636, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.03734009755150417;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.24321834899311479;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( interaction(G, A), phenotype(G, F) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.08895726737682663;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2094561828553007;  // std dev = 1.506, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.04540037407546528;  // std dev = 2.356, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.12419682028292356;  // std dev = 1.531, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( enzyme(A, K), interaction(A, L) )
%   | | then if ( location(A, M), enzyme(L, N) )
%   | | | then return 0.12827151307234813;  // std dev = 1.617, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.13010168369197597;  // std dev = 1.777, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return 0.029043947974539405;  // std dev = 6.073, 165.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=57 */
%   | | | else return 0.12511396571776398;  // std dev = 1.685, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '42.448', 'seconds']
Refined model CLL: -0.41457


******************************************
Best model found
******************************************
Results 

CLL : -0.341572 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.376 

Total Inference Time : 51.298707246780396 

Total revision time: 95.42279683494567
Best scored revision CLL: -0.341987


Results 

CLL : -0.341572 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 95.52639614486694 

Total Inference Time : 51.298707246780396 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.165
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.479, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19041730570653792;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18951782451611227;  // std dev = 0.479, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1313673945189662;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12268885673979127;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09682794186023205;  // std dev = 0.472, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0674224384198139;  // std dev = 0.468, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05042253368631122;  // std dev = 0.466, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07633252510672242;  // std dev = 8.191, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.270', 'seconds']
Parameter learned model CLL:-0.353984 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.333, 209, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.372, 215, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.293, 203, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.466, 222, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.191, 189, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.221866100501181, nan], 'true': [nan, 0.221866100501181], 'true,false': [nan, 0.221866100501181]}
{'': [nan, 0.22931131544379474]}
{'': [nan, 0.2197305451007786], 'false': [0.2197305451007786, nan]}
{'': [nan, 0.22400237668304482], 'false': [0.22400237668304482, nan]}
{'': [nan, 0.2225783438963654]}
{'': [nan, 0.21866440337949733]}
{'': [0.2172456622379465, nan]}
{'': [0.22896015096273686, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 44.978
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.11116098329228312;  // std dev = 0.435, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, H), complex(H, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( enzyme(J, L), complex(J, M) )
%   | | | then return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.1914822684328457;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.21109011157009996;  // std dev = 5.213, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.32373365448410585;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4921624286216404;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(I, K) )
%   | | | then return 0.2014368257920469;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.12131797702051188;  // std dev = 2.784, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.19622360658428556;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.49895788639642796;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(M, A), interaction(N, M) )
%   | then return 0.14114177629683158;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
%   | else return 0.2646138890343341;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.19595412022042016;  // std dev = 3.997, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | | else return 0.13102095259577845;  // std dev = 7.272, 240.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( complex(E, G), complex(A, G) )
%   | | | then return 0.01817199504002021;  // std dev = 2.777, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.09057968247809725;  // std dev = 5.138, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
%   | | else if ( interaction(A, H), complex(D, I) )
%   | | | then return 0.23697790988434875;  // std dev = 2.855, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.1322767184527967;  // std dev = 4.495, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.015310964739017451;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1852600685701858;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.06222033121937728;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.007645687970276846;  // std dev = 1.945, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(G, A) )
%   | | then if ( complex(A, H), complex(G, H) )
%   | | | then return 0.1275262271469458;  // std dev = 3.092, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.05053843370291041;  // std dev = 4.754, 110.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=32 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08733001485544536;  // std dev = 3.174, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.15504785107952196;  // std dev = 5.076, 109.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.18786117135812427;  // std dev = 2.026, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.08162379990517162;  // std dev = 6.132, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.022629234893055395;  // std dev = 4.810, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | | | else return 0.0756352644449701;  // std dev = 2.292, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.2556545277530308;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.008513411999424713;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.14841097208684934;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.2860490311824532;  // std dev = 2.217, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), interaction(J, K) )
%   | | | then return -0.03342391181643383;  // std dev = 2.227, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.06257306916294256;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.09133515927298957;  // std dev = 6.052, 158.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=57 */
%   | | | else return 0.030338603999812298;  // std dev = 2.497, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.7122215823336112;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20660466009270562;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(H, D), complex(H, I) )
%   | | | then return 0.0014281142279993738;  // std dev = 3.567, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.17989844824866288;  // std dev = 1.777, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(A, L), complex(A, K) )
%   | | | then return -0.013862464345624593;  // std dev = 2.806, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.061709954263485786;  // std dev = 4.025, 91.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.10083567501913407;  // std dev = 1.780, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.004229114111056672;  // std dev = 5.067, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( enzyme(A, G), enzyme(E, H) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.07860299500802002;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3699212262190626;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, A), complex(A, I) )
%   | | | then return 0.05263940640686458;  // std dev = 2.805, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.03010110406876619;  // std dev = 4.468, 101.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( phenotype(A, L), complex(K, M) )
%   | | | then return -0.05876893637252492;  // std dev = 2.610, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.047557936068275776;  // std dev = 2.774, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.21902059964133405;  // std dev = 1.856, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.08450783474749887;  // std dev = 4.547, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(A, F) )
%   | then if ( enzyme(E, G), complex(E, H) )
%   | | then if ( interaction(E, A) )
%   | | | then return -0.255205401347331;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.09876163627326497;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(E, I) )
%   | | | then return 0.17470685925030496;  // std dev = 1.549, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.01692749157070664;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), interaction(L, M) )
%   | | | then return 0.2021808445549211;  // std dev = 1.869, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.013070585589847509;  // std dev = 1.408, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.019462895180234075;  // std dev = 5.341, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
%   | | | else return 0.06300841739815072;  // std dev = 4.946, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '15.271', 'seconds']
Refined model CLL: -0.391066


******************************************
Best model found
******************************************
Results 

CLL : -0.35499 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 44.978 

Total Inference Time : 110.31714916229248 

Total revision time: 166.93562256622315
Best scored revision CLL: -0.353984


Results 

CLL : -0.35499 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 167.0392218761444 

Total Inference Time : 110.31714916229248 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.397
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21063935655544913;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14886523140965158;  // std dev = 0.466, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1780092687533172;  // std dev = 7.616, 249.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11645012359657436;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08853523906716192;  // std dev = 0.470, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06615631359213746;  // std dev = 0.468, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08049843612161785;  // std dev = 0.477, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06431829380901875;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.556', 'seconds']
Parameter learned model CLL:-0.363045 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.718, 169, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.616, 157, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.81, 181, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.477, 170, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.726, 170, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22824092423775477, nan], 'true': [nan, 0.22824092423775477], 'true,false': [nan, 0.22824092423775477]}
{'': [nan, 0.21699931753690896]}
{'': [nan, 0.23296398445186364], 'false': [0.23296398445186364, nan]}
{'': [nan, 0.22342980584738914], 'false': [0.22342980584738914, nan]}
{'': [nan, 0.2210146323916688]}
{'': [nan, 0.21900416584011023]}
{'': [0.22784220033797573, nan]}
{'': [0.22784220033797692, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.342
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), interaction(E, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.25814893509951237;  // std dev = 0.490, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else return 0.1769895148096573;  // std dev = 0.466, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( complex(A, J), interaction(K, I) )
%   | | then if ( complex(H, L) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.18601778755852874;  // std dev = 0.469, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | else if ( enzyme(A, M), interaction(N, A) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, P), enzyme(P, Q) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3064247971684778;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.5794717743200306;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.07947177432003061;  // std dev = 2.122, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.2637813227273839;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.23460900569588522;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8294717743200306;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return 0.07330425776617372;  // std dev = 0.437, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.07312802213386475;  // std dev = 0.433, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.2726828784206704;  // std dev = 1.461, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.15264554666593974;  // std dev = 4.845, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.05254760935267092;  // std dev = 4.109, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.1286965161120908;  // std dev = 6.824, 210.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), interaction(F, G) )
%   | | then if ( phenotype(F, H), location(G, E) )
%   | | | then return 0.0664600855991993;  // std dev = 3.367, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.16693061918966395;  // std dev = 3.515, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.4348477669396169;  // std dev = 1.451, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.16690559682649522;  // std dev = 1.933, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(K, L), complex(J, M) )
%   | | | then return 0.17299283043691036;  // std dev = 2.618, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.04843057604214848;  // std dev = 4.029, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return -0.14485596102353335;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.10488118209761899;  // std dev = 2.396, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(A, H), phenotype(G, I) )
%   | | | then return 0.05629075104092996;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.16228354960915922;  // std dev = 4.998, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -9.764490026707811E-4;  // std dev = 2.436, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.06089326972814911;  // std dev = 4.262, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( location(F, G), interaction(A, F) )
%   | | | then return -0.03469696328937141;  // std dev = 2.631, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.06153123984241905;  // std dev = 6.447, 189.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=61 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.0502098861034346;  // std dev = 2.757, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.045817832812387216;  // std dev = 2.926, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), enzyme(D, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.10642089338411001;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06460144619898263;  // std dev = 1.985, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( location(A, J), phenotype(A, E) )
%   | | | then return 0.1257669324506516;  // std dev = 2.031, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.026617259821118622;  // std dev = 3.768, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( location(K, L), complex(K, M) )
%   | | | then return 0.4236537366655725;  // std dev = 1.392, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.13018476495983256;  // std dev = 2.206, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.026656504547951886;  // std dev = 3.503, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.09719492324415109;  // std dev = 4.026, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.0029831986099798924;  // std dev = 1.907, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.05830613331750039;  // std dev = 3.539, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( phenotype(A, H), location(E, I) )
%   | | | then return -0.15093241690938788;  // std dev = 2.039, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.020155673719893394;  // std dev = 2.404, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( enzyme(A, K), enzyme(J, K) )
%   | | | then return -0.01861205600948395;  // std dev = 1.490, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.335842402240313;  // std dev = 1.919, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.11939067988652464;  // std dev = 2.450, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.027467945504860515;  // std dev = 4.727, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( complex(E, G), complex(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.5228613425691778;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06816395242429771;  // std dev = 1.607, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(E, I), complex(E, J) )
%   | | | then return 0.020931501569631066;  // std dev = 3.216, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.14237703766565832;  // std dev = 2.369, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return -0.20785493911441688;  // std dev = 1.298, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.11232389104811247;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.0927844231561794;  // std dev = 3.417, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return -0.0033181831962925483;  // std dev = 4.934, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( interaction(E, E), enzyme(E, G) )
%   | | | then return -0.0596544655216231;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0781308656140519;  // std dev = 2.279, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( complex(E, H), complex(A, I) )
%   | | | then return -0.08299505479580703;  // std dev = 3.344, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.004782854255328328;  // std dev = 4.183, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( phenotype(L, K), interaction(L, M) )
%   | | | then return 0.3922412678403373;  // std dev = 1.606, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.015557121237835717;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.05279697917431718;  // std dev = 3.902, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.14213493871251248;  // std dev = 1.965, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '57.067', 'seconds']
Refined model CLL: -0.402667


******************************************
Best model found
******************************************
Results 

CLL : -0.362894 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.342 

Total Inference Time : 52.089370250701904 

Total revision time: 98.74438277626038
Best scored revision CLL: -0.363045


Results 

CLL : -0.362894 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 98.84798208618164 

Total Inference Time : 52.089370250701904 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.933
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17785153732999495;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16459313168972728;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14066039994777987;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1194338708579061;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11207281232212538;  // std dev = 0.475, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07450850197110422;  // std dev = 0.469, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07311323024288828;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.046892558097440626;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.181', 'seconds']
Parameter learned model CLL:-0.350713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.649, 183, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.594, 175, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.586, 174, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 167, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.601, 176, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21749284835754143, nan], 'true': [nan, 0.21749284835754143], 'true,false': [nan, 0.21749284835754143]}
{'': [nan, 0.2209304032530362]}
{'': [nan, 0.2209304032530373], 'false': [0.2209304032530373, nan]}
{'': [nan, 0.22136094674555964], 'false': [0.22136094674555964, nan]}
{'': [nan, 0.22566399999999898]}
{'': [nan, 0.22006968439618924]}
{'': [0.2243746973081922, nan]}
{'': [0.22049997086417022, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 24.987
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), complex(A, F) )
%   | then return 0.221785298735876;  // std dev = 0.481, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else return 0.1213068298363543;  // std dev = 0.440, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   else if ( phenotype(A, G), interaction(A, H) )
%   | then if ( interaction(H, I), phenotype(I, J) )
%   | | then return 0.10814893509951223;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(H, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( enzyme(K, M), location(K, L) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.21257931484634657;  // std dev = 4.252, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.23314893509951218;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D), complex(C, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.11466581323330528;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.13025290201886158;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.5892864376917313;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.5048047810058743;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26211075197759265;  // std dev = 1.854, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( interaction(A, J), phenotype(J, K) )
%   | then return 0.09959368418328936;  // std dev = 0.441, 132.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | else if ( complex(A, L), interaction(M, A) )
%   | | then return 0.08207206666082784;  // std dev = 0.437, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.18136105221002694;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.2310840198074521;  // std dev = 2.775, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.2227666832369951;  // std dev = 4.029, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | | else return 0.11610068071474675;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0.08074265780227517;  // std dev = 2.055, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.03537545953966332;  // std dev = 1.288, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.34748223614550644;  // std dev = 2.287, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.15954420441101666;  // std dev = 4.809, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(A, K), phenotype(I, L) )
%   | | | then return 0.02853877575026413;  // std dev = 2.121, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.23837445674132396;  // std dev = 2.051, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.11105598492306977;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.0280791326002033;  // std dev = 2.759, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), enzyme(G, H) )
%   | | | then return 0.11278451400913306;  // std dev = 5.240, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | | | else return 0.225134363478983;  // std dev = 2.425, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.06612751084891064;  // std dev = 4.041, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return -0.015147607529901803;  // std dev = 2.559, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return 0.3207079928349036;  // std dev = 1.570, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.04890966182770619;  // std dev = 3.315, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.016420836045223014;  // std dev = 4.679, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | | else return 0.07432409643951864;  // std dev = 4.821, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( location(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, D), interaction(H, H) )
%   | | | then return 0.23181565473543064;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07037812153514404;  // std dev = 1.818, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( location(A, I) )
%   | | | then return -0.0059791312157981445;  // std dev = 3.144, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.18930185390486987;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( complex(J, K) )
%   | | | then return -0.07179209484118386;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.05464726873503162;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.13896147479475443;  // std dev = 3.136, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.06247217698952289;  // std dev = 5.145, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.33318523770563974;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.135225611891726;  // std dev = 2.367, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.05138325243741322;  // std dev = 2.033, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.1973697450046985;  // std dev = 1.314, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.014128029361311125;  // std dev = 3.047, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.06544815438380848;  // std dev = 2.772, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.03890504729516572;  // std dev = 5.337, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.0605282606700852;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.18060887825236258;  // std dev = 1.315, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.06569575921085823;  // std dev = 1.730, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.11592249038102331;  // std dev = 1.969, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(A, K) )
%   | | | then return -0.06542651145508739;  // std dev = 1.770, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.06719423250901731;  // std dev = 2.784, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.03804087422387497;  // std dev = 2.932, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.1517565177399702;  // std dev = 4.783, 93.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A) )
%   | | then if ( complex(G, H), enzyme(A, I) )
%   | | | then return 0.08036341377982878;  // std dev = 1.745, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.36630627828732626;  // std dev = 1.818, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( interaction(E, E), phenotype(A, J) )
%   | | | then return 0.17058135000180985;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07001690972221161;  // std dev = 2.272, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.038464228642178605;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.09251616275083054;  // std dev = 2.574, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( complex(A, P), phenotype(A, Q) )
%   | | | then return -0.05666357446211019;  // std dev = 2.454, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.02517086147294593;  // std dev = 5.215, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '25.010', 'seconds']
Refined model CLL: -0.402387


******************************************
Best model found
******************************************
Results 

CLL : -0.349985 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.987 

Total Inference Time : 40.76738619804382 

Total revision time: 74.43799750328064
Best scored revision CLL: -0.350713


Results 

CLL : -0.349985 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 74.5415968132019 

Total Inference Time : 40.76738619804382 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.581
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.466, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20202245288607257;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17973552961088193;  // std dev = 0.476, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14623914286009487;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.113146482931614;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09318592185913258;  // std dev = 0.471, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12203355691344274;  // std dev = 0.485, 230.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05574104705259798;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.023673153675990263;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.756', 'seconds']
Parameter learned model CLL:-0.35808 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.555, 166, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.571, 168, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.623, 175, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.485, 143, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 172, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.719, 189, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22562452155165771, nan], 'true': [nan, 0.22562452155165771], 'true,false': [nan, 0.22562452155165771]}
{'': [nan, 0.22689600000000146]}
{'': [nan, 0.22477508650519262], 'false': [0.22477508650519262, nan]}
{'': [nan, 0.22179651535458314], 'false': [0.22179651535458314, nan]}
{'': [nan, 0.22179651535458064]}
{'': [nan, 0.23517958412098336]}
{'': [0.22307359759097417, nan]}
{'': [0.21585538752362893, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 28.66
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), interaction(A, A) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(E, D) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( location(A, I) )
%   | then if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.12933537577747847;  // std dev = 0.445, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1990580260086024;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | else return 0.058148935099512224;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), complex(E, F) )
%   | then if ( interaction(E, A) )
%   | | then if ( complex(C, F) )
%   | | | then return 0.15821886467030857;  // std dev = 2.007, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.4308889265170054;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.07392328938442655;  // std dev = 0.433, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | else if ( complex(C, G), complex(A, H) )
%   | | then return 0.5533825075080758;  // std dev = 0.450, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.09166441270121385;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.37444703700399895;  // std dev = 1.800, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( interaction(J, A), interaction(J, J) )
%   | then return 0.04730868643285647;  // std dev = 0.425, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else if ( interaction(A, K), location(K, L) )
%   | | then return 0.2791226999584744;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.14077927868282522;  // std dev = 0.462, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.08718856137627903;  // std dev = 4.161, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.18505250281642513;  // std dev = 6.237, 165.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=63 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( interaction(A, G), complex(G, E) )
%   | | | then return 0.04203926626356413;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3606954619368498;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.11871715922911996;  // std dev = 3.070, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.03377658427528301;  // std dev = 4.616, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), interaction(L, A) )
%   | | | then return 0.5385940922322929;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12116883548077341;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.23206581326381925;  // std dev = 1.775, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.10670192947281083;  // std dev = 4.177, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), enzyme(G, H) )
%   | | | then return 0.10408456289771773;  // std dev = 3.122, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.0073819040994439955;  // std dev = 3.918, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.04384387470590918;  // std dev = 3.250, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.1488892829343329;  // std dev = 4.756, 96.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.2938417593630122;  // std dev = 1.500, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10316375887155636;  // std dev = 2.615, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06366499253523801;  // std dev = 6.854, 216.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=69 */
%   | | | else return -0.10984071505443473;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( phenotype(D, G), phenotype(F, G) )
%   | | | then return 0.12419349124759263;  // std dev = 1.892, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.04599875963035944;  // std dev = 1.255, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, H), phenotype(D, I) )
%   | | | then return -0.12410483428305717;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.033932450171323854;  // std dev = 2.306, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.3998304583676864;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.0678768796798621;  // std dev = 1.785, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.004138430552379016;  // std dev = 3.049, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.1058248709832108;  // std dev = 5.363, 121.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=46 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.031225897813864634;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.12590436304014657;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.08014402701731037;  // std dev = 1.934, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.02295885619406182;  // std dev = 2.960, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), interaction(L, A) )
%   | | | then return 0.09304659732663684;  // std dev = 4.049, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return 0.008024731337613167;  // std dev = 4.799, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.3198157064135077;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2005732503026183;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(A, F) )
%   | then if ( phenotype(E, G) )
%   | | then if ( enzyme(E, H), interaction(A, I) )
%   | | | then return 0.11689731351105107;  // std dev = 1.551, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.043023439778472145;  // std dev = 4.237, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | | else return 0.17864946739255763;  // std dev = 1.235, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16908088840565405;  // std dev = 2.450, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.05025168355475181;  // std dev = 2.853, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.012695715863903665;  // std dev = 4.485, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0.12370920379546159;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.14962976171061257;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7137034370389472;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), complex(I, J) )
%   | | | then return 0.06027160933489338;  // std dev = 4.960, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   | | | else return 0.23829888020061613;  // std dev = 1.764, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return -0.08479763646679321;  // std dev = 2.598, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.012252977552240711;  // std dev = 4.252, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '18.152', 'seconds']
Refined model CLL: -0.405825


******************************************
Best model found
******************************************
Results 

CLL : -0.357691 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.66 

Total Inference Time : 34.99681997299194 

Total revision time: 71.537541929245
Best scored revision CLL: -0.35808


Results 

CLL : -0.357691 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 71.7098549041748 

Total Inference Time : 34.99681997299194 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.271
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20138325853185224;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18199331704480423;  // std dev = 0.477, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.17229969615332508;  // std dev = 8.111, 283.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09829714909766389;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07682722068140434;  // std dev = 0.466, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08320684111945907;  // std dev = 0.473, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.09320792389236567;  // std dev = 0.481, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03345201941891273;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.677', 'seconds']
Parameter learned model CLL:-0.358521 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.265, 199, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 193, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.111, 179, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.397, 219, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.481, 181, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.385, 217, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22542452265028698, nan], 'true': [nan, 0.22542452265028698], 'true,false': [nan, 0.22542452265028698]}
{'': [nan, 0.22755047670872253]}
{'': [nan, 0.2324414089325661], 'false': [0.2324414089325661, nan]}
{'': [nan, 0.21830938665183855], 'false': [0.21830938665183855, nan]}
{'': [nan, 0.21689158226486632]}
{'': [nan, 0.2240023766830405]}
{'': [0.2317513080947983, nan]}
{'': [0.21901961355188765, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 34.166
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then if ( phenotype(A, F) )
%   | | then if ( enzyme(C, G) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else return 0.058148935099512224;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( phenotype(C, H), enzyme(C, I) )
%   | | then if ( location(C, D), interaction(J, A) )
%   | | | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.23314893509951218;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(C, K), location(K, D) )
%   | | | then return 0.2024112301814791;  // std dev = 3.711, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(L, A), enzyme(L, M) )
%   | then return 0.13756069980539468;  // std dev = 0.449, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else return 0.18525173883782867;  // std dev = 0.469, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, A), phenotype(C, E) )
%   | then return 0.04731854512015981;  // std dev = 0.432, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.2334375609849832;  // std dev = 0.487, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.10245924443640363;  // std dev = 0.452, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then if ( phenotype(A, I) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.4237336544841058;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1597161405269895;  // std dev = 1.636, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.504761419246356;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then return 0.11450770483568691;  // std dev = 0.448, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.4566811126127569;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.16427156280883845;  // std dev = 5.902, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.17597128524197658;  // std dev = 7.339, 229.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=86 */
%   | | | else return 0.250499868917821;  // std dev = 3.176, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, D), interaction(A, F) )
%   | | then if ( complex(A, G), phenotype(A, E) )
%   | | | then return 0.12269961760980166;  // std dev = 1.940, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.316761205259526;  // std dev = 1.646, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( phenotype(A, H), interaction(I, D) )
%   | | | then return 0.08802130581903204;  // std dev = 5.433, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   | | | else return 0.1534886855429663;  // std dev = 4.387, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return -0.09810410301785466;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.020482707362322532;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.12254966995664549;  // std dev = 2.665, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.05399938748254548;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(A, A), phenotype(A, G) )
%   | | | then return 0.4600421212366711;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10646244725716478;  // std dev = 4.950, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.10017737884223746;  // std dev = 3.513, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.018717924568477692;  // std dev = 5.689, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( complex(F, G), enzyme(F, H) )
%   | | | then return -0.10308869077569774;  // std dev = 1.559, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.026578084127103944;  // std dev = 4.103, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13522929170075293;  // std dev = 6.357, 171.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=66 */
%   | | | else return 0.009205937910913953;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( enzyme(A, H), interaction(D, D) )
%   | | | then return -0.08622563302302025;  // std dev = 1.231, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07364692916463281;  // std dev = 3.317, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.716804460002743;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06981850541349334;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( complex(L, K) )
%   | | | then return -0.05629983262153528;  // std dev = 2.739, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.033654151031785755;  // std dev = 3.072, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.02022809827839996;  // std dev = 3.858, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.08931286805693484;  // std dev = 4.572, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(D, D) )
%   | | then return 0.3482263731468578;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, E), phenotype(E, G) )
%   | | | then return -0.09329191527990328;  // std dev = 2.765, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.01045668925380209;  // std dev = 4.843, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), phenotype(J, I) )
%   | | | then return 0.06710313973297456;  // std dev = 4.853, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   | | | else return -0.05170195133264445;  // std dev = 2.162, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.29213772632376517;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07681511733293617;  // std dev = 2.647, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then if ( complex(E, G), interaction(A, A) )
%   | | then return -0.17099195765529548;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(E, H), complex(A, I) )
%   | | | then return 0.12450823010619247;  // std dev = 1.804, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.05072505786265694;  // std dev = 3.706, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.042004968425223825;  // std dev = 2.972, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.35201721675033854;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.08957074682925681;  // std dev = 5.666, 136.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=52 */
%   | | | else return 0.0077000753264526815;  // std dev = 2.850, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.13707476607462643;  // std dev = 2.627, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.4307462460575202;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return -0.02675625159850903;  // std dev = 2.565, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.15307407377503807;  // std dev = 2.364, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.024616903674551688;  // std dev = 2.579, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.17468913399514402;  // std dev = 1.784, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.11113270473785909;  // std dev = 3.138, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.01482290483089344;  // std dev = 4.683, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '16.979', 'seconds']
Refined model CLL: -0.418296


******************************************
Best model found
******************************************
Results 

CLL : -0.359509 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 34.166 

Total Inference Time : 67.7219660282135 

Total revision time: 113.04692550849914
Best scored revision CLL: -0.358521


Results 

CLL : -0.359509 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 113.21923848342895 

Total Inference Time : 67.7219660282135 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.459, 306.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17648803544553157;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18642394149666638;  // std dev = 0.477, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13194697201934666;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1072564333189771;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07584056270374193;  // std dev = 0.462, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07381211523778625;  // std dev = 0.466, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0555037317340527;  // std dev = 0.465, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07811130608703586;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.779', 'seconds']
Parameter learned model CLL:-0.343584 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.919, 197, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.887, 192, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.906, 195, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 207, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.465, 200, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.742, 172, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21699931753690807, nan], 'true': [nan, 0.21699931753690807], 'true,false': [nan, 0.21699931753690807]}
{'': [nan, 0.22784220033797772]}
{'': [nan, 0.2190041658401124], 'false': [0.2190041658401124, nan]}
{'': [nan, 0.2178003860675722], 'false': [0.2178003860675722, nan]}
{'': [nan, 0.21301775147928997]}
{'': [nan, 0.2173996913580264]}
{'': [0.2158003377744441, nan]}
{'': [0.22704315886134074, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 33.046
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.13433941128998736;  // std dev = 0.447, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( complex(E, I) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, K), phenotype(J, M) )
%   | | | then return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.17243464938522662;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.1440267100958625;  // std dev = 0.460, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( location(A, F), location(C, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.23790006873955832;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.16422924017706358;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.5025025098555578;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32842593867114994;  // std dev = 1.586, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( phenotype(A, I), interaction(J, A) )
%   | then if ( interaction(K, J), location(J, L) )
%   | | then return 0.1481582578746153;  // std dev = 0.464, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.329906244845239;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2290081833182688;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.12915537008217323;  // std dev = 0.461, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1597855010196218;  // std dev = 4.951, 109.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=38 */
%   | | | else return 0.10821904165490569;  // std dev = 6.110, 176.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( location(E, D), phenotype(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.06358049590875631;  // std dev = 2.423, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.20476674101040301;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( interaction(E, E), phenotype(A, H) )
%   | | | then return 0.00925165856645624;  // std dev = 1.942, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.08767957013242471;  // std dev = 3.738, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | else if ( enzyme(A, I) )
%   | | then if ( location(A, J) )
%   | | | then return 0.20172163993664963;  // std dev = 2.910, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.45011432983326033;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.13259399502315672;  // std dev = 3.837, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.020083445290179962;  // std dev = 1.738, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(F, A), complex(F, H) )
%   | | | then return 0.38977113842451167;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.14695719344522068;  // std dev = 3.493, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.020116480753661504;  // std dev = 3.299, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.07794718265236802;  // std dev = 6.063, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(A, A), location(A, H) )
%   | | | then return -0.05002655559783042;  // std dev = 1.794, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.05431179639118606;  // std dev = 4.569, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12634340252245624;  // std dev = 5.847, 145.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
%   | | | else return -0.08429996583032942;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.07096667206747277;  // std dev = 2.186, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.02214341598738586;  // std dev = 3.113, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( complex(A, I), interaction(J, D) )
%   | | | then return 0.05024306075223201;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.14823823575345013;  // std dev = 2.642, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.010686493154067367;  // std dev = 2.428, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.08004205329177862;  // std dev = 2.796, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( interaction(A, P), enzyme(A, Q) )
%   | | | then return -0.04847509225258149;  // std dev = 2.607, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.058741914761228586;  // std dev = 4.249, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.0830658449854508;  // std dev = 2.146, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.04958312014858665;  // std dev = 2.630, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.2604696716318238;  // std dev = 1.915, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.04874533014811238;  // std dev = 3.078, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J) )
%   | | | then return 0.015319184043371091;  // std dev = 2.643, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.12158468201657065;  // std dev = 1.773, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return -0.05700640813979182;  // std dev = 1.953, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.025108678118149368;  // std dev = 4.925, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then if ( location(A, F), interaction(A, G) )
%   | | then if ( complex(A, H), interaction(G, G) )
%   | | | then return 0.13271553706477687;  // std dev = 2.140, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.04164256897584544;  // std dev = 2.964, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.01642527764053542;  // std dev = 3.050, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return -0.14029715861455627;  // std dev = 1.573, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, K), interaction(A, M) )
%   | | | then return 0.537068341703292;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2730336425634798;  // std dev = 2.794, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.1770095685120677;  // std dev = 2.325, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.019580942852181926;  // std dev = 3.921, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( location(E, F), complex(A, G) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.12461309367665073;  // std dev = 1.851, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.026834283461896022;  // std dev = 3.625, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | else if ( location(E, F), phenotype(E, H) )
%   | | | then return 0.08423556937878239;  // std dev = 2.484, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.23620051003069212;  // std dev = 2.546, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( interaction(K, A), enzyme(K, I) )
%   | | | then return -0.183329843465886;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1017222721643856;  // std dev = 2.873, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.06710892908110076;  // std dev = 3.142, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.018164156992187753;  // std dev = 3.185, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '45.864', 'seconds']
Refined model CLL: -0.403203


******************************************
Best model found
******************************************
Results 

CLL : -0.34342 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 33.046 

Total Inference Time : 50.499881982803345 

Total revision time: 94.45905049133302
Best scored revision CLL: -0.343584


Results 

CLL : -0.34342 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 94.63136346626283 

Total Inference Time : 50.499881982803345 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.787
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18765085080832386;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1522557980108065;  // std dev = 0.466, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14104886789947166;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09398722852039466;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12113044524654325;  // std dev = 0.476, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08049706384137228;  // std dev = 0.470, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.11786235595104412;  // std dev = 0.486, 225.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.012791558576261516;  // std dev = 7.755, 286.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.636', 'seconds']
Parameter learned model CLL:-0.350174 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.594, 175, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.594, 175, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.731, 196, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.486, 139, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.755, 200, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22093040325303584, nan], 'true': [nan, 0.22093040325303584], 'true,false': [nan, 0.22093040325303584]}
{'': [nan, 0.21706447187928724]}
{'': [nan, 0.22093040325303587], 'false': [0.22093040325303587, nan]}
{'': [nan, 0.21196116895528383], 'false': [0.21196116895528383, nan]}
{'': [nan, 0.22695012211312937]}
{'': [nan, 0.2209304032530342]}
{'': [0.2361283950617287, nan]}
{'': [0.21027923125825074, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.929
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), interaction(C, E) )
%   | then if ( complex(C, F), phenotype(C, G) )
%   | | then if ( phenotype(E, D), interaction(H, C) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22178529873587588;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(I, C) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(C, J), interaction(A, C) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2607463376969144;  // std dev = 4.303, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
%   else if ( interaction(M, A), complex(A, N) )
%   | then return 0.12285481745245355;  // std dev = 0.441, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else return 0.18467954734441033;  // std dev = 0.469, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.10523990673004932;  // std dev = 0.449, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( complex(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.34252613606398286;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.34252613606398286;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.40329306982051893;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16868042769495387;  // std dev = 3.141, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   else if ( interaction(I, A), interaction(A, I) )
%   | then return 0.048739221816725575;  // std dev = 0.414, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then return 0.10362585505508058;  // std dev = 0.449, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.33414875154698187;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.14518781978881296;  // std dev = 3.896, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), phenotype(A, G) )
%   | | | then return 0.11122384240913016;  // std dev = 4.624, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.20988728883854613;  // std dev = 5.745, 137.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.06552970811461381;  // std dev = 2.391, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.1895132160789155;  // std dev = 2.298, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.02459160921452287;  // std dev = 1.285, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.09869930787768197;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), interaction(L, L) )
%   | | | then return 0.13400605669209117;  // std dev = 4.016, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else return 0.2911511685647127;  // std dev = 2.687, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( location(A, M) )
%   | | | then return 0.11119856486173371;  // std dev = 3.829, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | | else return 0.4457350061633764;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(F, H), location(A, I) )
%   | | | then return 0.1199817746597489;  // std dev = 5.174, 115.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=42 */
%   | | | else return 0.2764701722661221;  // std dev = 2.477, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.010491439039430122;  // std dev = 2.924, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.07331851195208888;  // std dev = 3.585, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(G, H), enzyme(F, I) )
%   | | | then return 0.17434007595609452;  // std dev = 2.286, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.014311785123362368;  // std dev = 5.190, 133.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07361131718603713;  // std dev = 3.918, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.13424077599956188;  // std dev = 2.977, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(D, D) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.11782272323298337;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03424447013208399;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.3668342179173149;  // std dev = 1.466, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.15441128057565465;  // std dev = 2.825, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else if ( interaction(K, A) )
%   | | then if ( phenotype(K, L), location(A, M) )
%   | | | then return 0.038295344965148366;  // std dev = 5.502, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | | else return -0.045121230677977506;  // std dev = 2.850, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.12092072444810165;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2830455504953977;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.15467110919837088;  // std dev = 2.967, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.02258604137893696;  // std dev = 3.572, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.04268356279872164;  // std dev = 3.896, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return -0.010900450352963695;  // std dev = 4.201, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.08413144675335682;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.21972424370140836;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.16185050070147952;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), enzyme(G, H) )
%   | | then if ( location(E, F), location(G, F) )
%   | | | then return 0.00868467945720614;  // std dev = 3.663, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return -0.09575253013572599;  // std dev = 2.391, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( interaction(E, E), enzyme(A, I) )
%   | | | then return -0.046483324463068645;  // std dev = 1.482, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.11533605677006348;  // std dev = 3.380, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), interaction(L, M) )
%   | | | then return -0.1287931938567825;  // std dev = 1.787, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.05952680939548374;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(N, A) )
%   | | | then return -0.02869225965386045;  // std dev = 4.574, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | | | else return -0.16734361622293187;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), interaction(F, A) )
%   | then if ( complex(F, G) )
%   | | then if ( enzyme(F, E) )
%   | | | then return -0.12474199322430284;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -4.4277748172037463E-4;  // std dev = 2.833, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( interaction(H, F), interaction(I, H) )
%   | | | then return 0.2464143120693652;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1339021820429689;  // std dev = 1.842, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return 0.08208946082999384;  // std dev = 3.549, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return -0.04952661095923117;  // std dev = 3.257, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.01300937474026691;  // std dev = 3.455, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return -0.08558839228390075;  // std dev = 2.662, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11', 'minutes', 'and', '7.429', 'seconds']
Refined model CLL: -0.389998


******************************************
Best model found
******************************************
Results 

CLL : -0.349446 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.929 

Total Inference Time : 44.86553978919983 

Total revision time: 83.28112022018432
Best scored revision CLL: -0.350174


Results 

CLL : -0.349446 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 83.45343319511413 

Total Inference Time : 44.86553978919983 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21617362645753588;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14610937972229315;  // std dev = 0.465, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13152094022045377;  // std dev = 7.672, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12671967183345645;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07780328303866382;  // std dev = 0.464, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09309314766277141;  // std dev = 0.475, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07258590143313508;  // std dev = 0.474, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03011772133650132;  // std dev = 7.738, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.658', 'seconds']
Parameter learned model CLL:-0.346223 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.473, 156, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.672, 182, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.578, 169, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.464, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.474, 169, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.738, 192, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2298430117360168, nan], 'true': [nan, 0.2298430117360168], 'true,false': [nan, 0.2298430117360168]}
{'': [nan, 0.21627768595041263]}
{'': [nan, 0.2188195298572425], 'false': [0.2188195298572425, nan]}
{'': [nan, 0.22434997558593933], 'false': [0.22434997558593933, nan]}
{'': [nan, 0.21501216293152564]}
{'': [nan, 0.22519995039990276]}
{'': [0.22434997558593925, nan]}
{'': [0.21459128222916102, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 32.486
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, I), interaction(I, E) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.15226658215833586;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( enzyme(L, C), interaction(M, L) )
%   | | then if ( location(M, D) )
%   | | | then return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, N) )
%   | then return 0.1207751977257741;  // std dev = 0.440, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | else return 0.22656998773109;  // std dev = 0.482, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, A) )
%   then return 0.03660049097847581;  // std dev = 0.399, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.24055654619597733;  // std dev = 2.189, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1402219559973707;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( enzyme(E, H), enzyme(A, H) )
%   | | | then return 0.18583577796165907;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3952921290953826;  // std dev = 1.979, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return 0.04500315069324541;  // std dev = 2.502, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.3254646516007747;  // std dev = 1.244, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.13254268789596632;  // std dev = 3.743, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.22143286265108053;  // std dev = 4.049, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.13334329053734176;  // std dev = 7.445, 249.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=83 */
%   | | | else return 0.3592071585405043;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.12547669804768305;  // std dev = 4.157, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.3173690783767895;  // std dev = 1.640, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( enzyme(A, I), location(A, E) )
%   | | | then return 0.14837641755252529;  // std dev = 2.716, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.035895245296161074;  // std dev = 5.142, 137.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=36 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then return 0.4268139982486141;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.12534183351679237;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2880592983102134;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( location(A, H), interaction(I, G) )
%   | | | then return 0.05570182649069357;  // std dev = 4.394, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return -0.10864084710448221;  // std dev = 1.310, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06787300902258604;  // std dev = 3.958, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | | else return 0.15460442162299337;  // std dev = 4.587, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( enzyme(F, H), complex(F, I) )
%   | | | then return -0.04828851303616277;  // std dev = 2.189, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.08264523537509023;  // std dev = 5.746, 147.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=50 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return -5.611185410550419E-4;  // std dev = 4.299, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | | | else return -0.1112423844640384;  // std dev = 2.172, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( complex(D, H), complex(E, I) )
%   | | | then return 0.05743807218612803;  // std dev = 2.871, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return -0.06404518747083009;  // std dev = 2.457, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( location(D, J), complex(E, K) )
%   | | | then return 0.0587830717726179;  // std dev = 5.921, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0.1704215090799779;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( enzyme(A, L) )
%   | | then if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.347426766658341;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.49277287050094853;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.16749797989488638;  // std dev = 1.299, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.10254473253750769;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.07552258031614863;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3500333046582965;  // std dev = 1.602, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( complex(D, G), interaction(A, D) )
%   | | | then return 0.21112754533748992;  // std dev = 1.774, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.08989156182629358;  // std dev = 2.518, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( location(A, I), location(H, J) )
%   | | | then return 0.04350845289651152;  // std dev = 5.975, 162.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=53 */
%   | | | else return 0.34073954443189175;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.10660227503475779;  // std dev = 1.688, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.05197907973483259;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), location(E, F) )
%   | then if ( location(A, F) )
%   | | then if ( phenotype(E, G), interaction(E, E) )
%   | | | then return 0.08189896660765929;  // std dev = 2.223, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.05716809568382679;  // std dev = 4.488, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2836129185373994;  // std dev = 1.268, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.021389317534041948;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), interaction(K, A) )
%   | | | then return 0.05732474616666589;  // std dev = 1.827, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.7259992479398217;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.003951845965483532;  // std dev = 3.528, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.07849730052249027;  // std dev = 3.454, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.15411075839472613;  // std dev = 1.645, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.42777141381392303;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(E, K) )
%   | | | then return -0.0018672175069050444;  // std dev = 5.088, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
%   | | | else return 0.2742694249198353;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.0973896534982006;  // std dev = 2.909, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.005393323071582657;  // std dev = 4.046, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | else if ( interaction(P, A), interaction(Q, P) )
%   | | | then return -0.17485377714409273;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.2216500974992217;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '20.981', 'seconds']
Refined model CLL: -0.398172


******************************************
Best model found
******************************************
Results 

CLL : -0.345814 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.486 

Total Inference Time : 49.558597564697266 

Total revision time: 89.81964774513244
Best scored revision CLL: -0.346223


Results 

CLL : -0.345814 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 89.97905583763122 

Total Inference Time : 49.558597564697266 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.245
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.461, 339.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2036638852656219;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1410294930434893;  // std dev = 0.462, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13785781017046062;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14010829345045037;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11821078154000036;  // std dev = 0.478, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08018653936318339;  // std dev = 0.473, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07944084612007633;  // std dev = 0.478, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04525236957180386;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.879', 'seconds']
Parameter learned model CLL:-0.360004 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.25, 197, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.366, 214, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.213, 192, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.478, 190, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.473, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.478, 191, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.32, 207, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22613436937782366, nan], 'true': [nan, 0.22613436937782366], 'true,false': [nan, 0.22613436937782366]}
{'': [nan, 0.21371882086167315]}
{'': [nan, 0.22008623076618936], 'false': [0.22008623076618936, nan]}
{'': [nan, 0.22790357925493035], 'false': [0.22790357925493035, nan]}
{'': [nan, 0.22860845018279433]}
{'': [nan, 0.2236464833867442]}
{'': [0.22825624820453846, nan]}
{'': [0.22257834389636114, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 50.248
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( complex(A, E), enzyme(C, F) )
%   | then if ( interaction(C, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.42957750652808374;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( phenotype(A, J), complex(C, K) )
%   | | then if ( phenotype(C, J), location(C, D) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.12644161802634163;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( complex(C, L), complex(A, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   else if ( interaction(M, A), interaction(N, M) )
%   | then return 0.15511863206920956;  // std dev = 0.457, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | else return 0.274815601766179;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, A), enzyme(A, E) )
%   | then return -0.021034827646095024;  // std dev = 0.398, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, C), complex(F, G) )
%   | | | then return 0.13565193626322944;  // std dev = 3.539, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.28701155487654123;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.06081141019676273;  // std dev = 0.436, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( interaction(H, H) )
%   | | then if ( complex(H, J), interaction(I, A) )
%   | | | then return 0.15423910184836162;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5037644222328839;  // std dev = 1.404, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( complex(H, K), interaction(I, L) )
%   | | | then return 0.10447056397861608;  // std dev = 2.560, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.28376839556980493;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0.15369400249559306;  // std dev = 0.465, 167.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.16600330368225988;  // std dev = 4.134, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.10026974789367558;  // std dev = 7.336, 257.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=76 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, D), phenotype(A, F) )
%   | | then if ( phenotype(D, F), interaction(D, A) )
%   | | | then return 0.1307844039459032;  // std dev = 1.591, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.04671453111864121;  // std dev = 2.205, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( enzyme(D, G), location(A, H) )
%   | | | then return -0.0541380603940643;  // std dev = 2.515, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.037369319216614634;  // std dev = 2.721, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, L) )
%   | | | then return 0.02296091738077312;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1107653121495217;  // std dev = 1.850, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.10693778213916894;  // std dev = 2.966, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.1847793758443409;  // std dev = 5.771, 139.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=55 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), location(H, I) )
%   | | | then return -0.009194868768266017;  // std dev = 3.959, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | | else return 0.11444699280415525;  // std dev = 3.616, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11751218190647279;  // std dev = 6.169, 167.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=59 */
%   | | | else return 0.4381317560912957;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.07729680843645308;  // std dev = 3.679, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.2244067356015146;  // std dev = 2.392, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( location(A, I) )
%   | | | then return 0.04596576975552256;  // std dev = 6.766, 212.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=66 */
%   | | | else return -0.06071629836980039;  // std dev = 2.333, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(A, H), interaction(H, D) )
%   | | | then return 0.01617258426080039;  // std dev = 3.946, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | | else return 0.11948444392435248;  // std dev = 4.183, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | else if ( interaction(I, D), phenotype(I, E) )
%   | | | then return -0.02769799655015949;  // std dev = 4.654, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | | else return 0.13462430923468838;  // std dev = 2.041, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, L), interaction(K, M) )
%   | | | then return 0.12562828282992036;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4085669040741171;  // std dev = 1.098, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.14979646669790841;  // std dev = 1.713, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.0319759385707809;  // std dev = 2.179, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.06401246803893962;  // std dev = 2.693, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.052762972558039876;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.06153464073045298;  // std dev = 5.616, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
%   | | | else return 0.1334308306314377;  // std dev = 4.442, 80.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=34 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.040053725086601606;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.18234965777515455;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.09436469475935623;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(A, G), interaction(H, E) )
%   | | then if ( interaction(E, H) )
%   | | | then return -0.03174808549310072;  // std dev = 4.035, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.4030017830555341;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(E, I), enzyme(E, J) )
%   | | | then return 0.135046144535586;  // std dev = 2.521, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.049537142680725024;  // std dev = 5.716, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.10420335681674853;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.20715630281504996;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.06815154422195153;  // std dev = 1.784, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.049636213381479576;  // std dev = 2.843, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( enzyme(A, G), interaction(A, E) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.5010276970500946;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05995256507593568;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(E, H), location(A, I) )
%   | | | then return 0.061875131167734625;  // std dev = 5.465, 129.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=47 */
%   | | | else return -0.022425458612822587;  // std dev = 2.450, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K), interaction(J, L) )
%   | | | then return -0.041064107240579024;  // std dev = 2.077, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.1532567967628822;  // std dev = 1.923, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.09476835231688342;  // std dev = 2.325, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.0036938518551251002;  // std dev = 4.055, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '15.101', 'seconds']
Refined model CLL: -0.395923


******************************************
Best model found
******************************************
Results 

CLL : -0.360985 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 50.248 

Total Inference Time : 120.32342624664307 

Total revision time: 182.32753893661499
Best scored revision CLL: -0.360004


Results 

CLL : -0.360985 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 182.48694702911376 

Total Inference Time : 120.32342624664307 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.488
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20143251718906277;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16275332766088157;  // std dev = 0.471, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13404674708391023;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1256156794895365;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09638513286996345;  // std dev = 0.471, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050080174237187934;  // std dev = 0.460, 303.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06660420152090156;  // std dev = 0.470, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0523099208890858;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.162', 'seconds']
Parameter learned model CLL:-0.344657 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.773, 176, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.873, 190, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.795, 179, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.46, 211, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.47, 187, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.859, 188, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22543996435731922, nan], 'true': [nan, 0.22543996435731922], 'true,false': [nan, 0.22543996435731922]}
{'': [nan, 0.22141711091558514]}
{'': [nan, 0.21980785674765077], 'false': [0.21980785674765077, nan]}
{'': [nan, 0.22423441946596573], 'false': [0.22423441946596573, nan]}
{'': [nan, 0.22181965097942244]}
{'': [nan, 0.21143896567874496]}
{'': [0.2210146323916685, nan]}
{'': [0.22061224489795855, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 31.999
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(D, E), complex(A, E) )
%   | then if ( interaction(A, D) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.17393840878372288;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0.10814893509951236;  // std dev = 0.433, 84.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   else if ( interaction(A, A) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.18908418689807277;  // std dev = 5.548, 139.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(D, E), phenotype(C, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(D, H) )
%   | | | then return 0.23996265919407261;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14471631821725178;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( phenotype(A, I), interaction(J, D) )
%   | | | then return 0.5682879804183478;  // std dev = 1.257, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.31483221189237304;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( location(D, K), location(C, K) )
%   | | then if ( interaction(L, D), location(A, K) )
%   | | | then return 0.22819637714029284;  // std dev = 3.018, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.11775452385390714;  // std dev = 3.055, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.10806873052174584;  // std dev = 1.171, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5483930755620577;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return 0.11915941597656893;  // std dev = 0.453, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.022816468098546563;  // std dev = 2.877, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.1564112037551336;  // std dev = 7.225, 228.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), complex(H, D) )
%   | | | then return 0.20540904064663676;  // std dev = 1.260, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07133802110651406;  // std dev = 2.749, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( complex(I, D), interaction(I, J) )
%   | | | then return 0.03824231367617635;  // std dev = 2.231, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.08347717883797438;  // std dev = 1.316, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.45595447889706375;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.1601515325180882;  // std dev = 3.034, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.09027952960484263;  // std dev = 3.287, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.13460497039501482;  // std dev = 4.422, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, F), enzyme(A, G) )
%   | | | then return 0.18658742310777052;  // std dev = 2.362, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.058258015813636134;  // std dev = 5.331, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.14597730698691733;  // std dev = 4.352, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.41446659470906383;  // std dev = 1.775, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.023654231521678462;  // std dev = 2.713, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.04781842816897177;  // std dev = 4.168, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | else if ( complex(A, I), interaction(A, A) )
%   | | | then return 0.33179172838518817;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06803791586540375;  // std dev = 5.974, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, D), enzyme(G, E) )
%   | | | then return 0.6890317783820815;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2112523808697427;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.38264720916405937;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09084019859266956;  // std dev = 1.965, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.37025857788159844;  // std dev = 1.810, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.005931761052464832;  // std dev = 2.074, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.06859582251665802;  // std dev = 4.315, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | | | else return 0.031058696594810958;  // std dev = 5.240, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.18446492030810388;  // std dev = 2.219, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.04217305343319108;  // std dev = 2.158, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.1302090921163192;  // std dev = 2.382, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.08815036086514254;  // std dev = 3.869, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(J, J), phenotype(J, K) )
%   | | | then return 0.1589510455700962;  // std dev = 1.398, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.006361286675385027;  // std dev = 2.427, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.0015767713186684573;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.18117607121399942;  // std dev = 4.164, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then if ( location(A, H), interaction(A, A) )
%   | | | then return 0.16168224878063678;  // std dev = 1.278, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06460342206898016;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.1686834731789597;  // std dev = 1.580, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.014976699205778725;  // std dev = 4.268, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.12526898158299973;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.3573978783449745;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, P), phenotype(A, Q) )
%   | | | then return -0.008672354240061875;  // std dev = 2.531, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.07641024874497408;  // std dev = 4.716, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( complex(F, H), phenotype(F, I) )
%   | | | then return -0.08630878523895524;  // std dev = 2.590, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.026899743629593954;  // std dev = 3.474, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.13502996589109215;  // std dev = 1.985, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.03648274908942019;  // std dev = 1.834, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( complex(A, M), enzyme(L, N) )
%   | | | then return -0.15113797692935732;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0662210489251823;  // std dev = 3.483, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.0431172992304616;  // std dev = 2.642, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.009977116348531266;  // std dev = 3.922, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25', 'minutes', 'and', '500', 'milliseconds']
Refined model CLL: -0.415118


******************************************
Best model found
******************************************
Results 

CLL : -0.344494 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 31.999 

Total Inference Time : 51.05175852775574 

Total revision time: 95.36240650367736
Best scored revision CLL: -0.344657


Results 

CLL : -0.344494 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 95.52181459617614 

Total Inference Time : 51.05175852775574 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.766
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20916934326277672;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1627792706012539;  // std dev = 0.471, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14385241953300448;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1064719563694115;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08188204149174173;  // std dev = 0.465, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08024999939457729;  // std dev = 0.470, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.1016350327558705;  // std dev = 0.482, 234.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03956738005589002;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.669', 'seconds']
Parameter learned model CLL:-0.355408 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.471, 159, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.55, 169, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.629, 180, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.482, 148, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.615, 178, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22780508121616078, nan], 'true': [nan, 0.22780508121616078], 'true,false': [nan, 0.22780508121616078]}
{'': [nan, 0.22179156542090722]}
{'': [nan, 0.22351403306420609], 'false': [0.22351403306420609, nan]}
{'': [nan, 0.21878003278873925], 'false': [0.21878003278873925, nan]}
{'': [nan, 0.21663648370800936]}
{'': [nan, 0.22136094674556323]}
{'': [0.23244941193659063, nan]}
{'': [0.21963957759412173, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 28.97
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then return 0.13721870254137283;  // std dev = 0.449, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( interaction(G, D), interaction(D, G) )
%   | | then if ( phenotype(G, H), phenotype(D, I) )
%   | | | then return 0.2441138473802134;  // std dev = 3.675, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return 0.45814893509951227;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( enzyme(D, J), interaction(A, K) )
%   | | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.2285193054698827;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   else if ( interaction(A, L), complex(A, M) )
%   | then if ( interaction(L, N), enzyme(N, P) )
%   | | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(L, Q) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.12781185644782697;  // std dev = 0.444, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.22576224990483448;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.03093942509334616;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.12730827919591625;  // std dev = 2.347, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(A, J), phenotype(H, K) )
%   | | | then return 0.20182008914607427;  // std dev = 2.096, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.10210127682748822;  // std dev = 3.296, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(L, A), location(L, C) )
%   | | | then return 0.1841264636568738;  // std dev = 4.620, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | | else return 0.2523644143582909;  // std dev = 2.749, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   else if ( enzyme(A, M) )
%   | then return 0.12612751691038213;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.041867339489205714;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.11640767296916449;  // std dev = 3.616, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.1496319916113991;  // std dev = 6.622, 195.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=67 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(D, E), phenotype(E, F) )
%   | | | then return 0.2794454979394839;  // std dev = 2.526, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.0339431646229414;  // std dev = 1.508, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.16203073302726706;  // std dev = 2.762, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.07382160985452771;  // std dev = 5.508, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return -0.16976543775030267;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.009435344771087128;  // std dev = 2.501, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.08307573346001695;  // std dev = 1.682, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.30669829236909224;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.00781379245585712;  // std dev = 3.818, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | | else return 0.08040378409543453;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.05815446834742153;  // std dev = 2.722, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.20004738201384023;  // std dev = 3.552, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.17224651918337314;  // std dev = 2.970, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.06625343930495665;  // std dev = 5.101, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.07207950875763743;  // std dev = 3.228, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return -0.0015628743521012255;  // std dev = 3.540, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( phenotype(A, E), complex(D, G) )
%   | | | then return -0.015575552811691222;  // std dev = 1.712, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.2603271726733095;  // std dev = 2.360, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( complex(A, H), complex(D, I) )
%   | | | then return 0.1745219140960828;  // std dev = 1.955, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.0038821005712458205;  // std dev = 4.969, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.09873293091050679;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.13186649844045673;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.5098268912742179;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10795404035262571;  // std dev = 3.877, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), enzyme(F, E) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.4190293297294427;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1482414588529096;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.04044097859599463;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.06430096754842059;  // std dev = 2.791, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.23883204603648653;  // std dev = 1.808, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.013075770017038748;  // std dev = 3.515, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.048447515196996464;  // std dev = 3.002, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.13914170117467467;  // std dev = 4.223, 74.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, E), interaction(A, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.11026891928832394;  // std dev = 1.494, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.2935485340062557;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return -0.07096493514808527;  // std dev = 3.257, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.03634637656979344;  // std dev = 5.104, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | else if ( interaction(J, A), interaction(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.0431602945375706;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19841160768503002;  // std dev = 1.887, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.10970871947343433;  // std dev = 2.586, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.006926760479395722;  // std dev = 2.472, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, E), phenotype(G, J) )
%   | | | then return 0.06029147262291039;  // std dev = 2.071, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.1119897120927801;  // std dev = 1.827, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.3770983823990586;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.017283152414622676;  // std dev = 4.515, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | else if ( interaction(M, A), enzyme(A, N) )
%   | | then if ( interaction(M, P), interaction(P, P) )
%   | | | then return 0.05157241458478736;  // std dev = 2.108, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.16765669578745157;  // std dev = 1.294, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(Q, A), enzyme(Q, R) )
%   | | | then return 0.4696409414252404;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08199988658818384;  // std dev = 4.144, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18', 'minutes', 'and', '25.547', 'seconds']
Refined model CLL: -0.405292


******************************************
Best model found
******************************************
Results 

CLL : -0.354694 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 28.97 

Total Inference Time : 44.78526306152344 

Total revision time: 83.78190892791747
Best scored revision CLL: -0.355408


Results 

CLL : -0.354694 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 83.94131702041625 

Total Inference Time : 44.78526306152344 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.499
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18645082189196427;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1934076924315471;  // std dev = 0.480, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13120329256982635;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11858279773680767;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1098227949194826;  // std dev = 0.476, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08940585860087386;  // std dev = 0.476, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.051186720994498176;  // std dev = 0.469, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.04964526899453204;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.857', 'seconds']
Parameter learned model CLL:-0.356329 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.644, 178, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.658, 180, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.608, 173, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.469, 180, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.608, 173, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22051975792096917, nan], 'true': [nan, 0.22051975792096917], 'true,false': [nan, 0.22051975792096917]}
{'': [nan, 0.2302609111399491]}
{'': [nan, 0.21966923368261723], 'false': [0.21966923368261723, nan]}
{'': [nan, 0.2226479289940834], 'false': [0.2226479289940834, nan]}
{'': [nan, 0.2264725956730831]}
{'': [nan, 0.22647259567308317]}
{'': [0.21966923368261768, nan]}
{'': [0.22264792899408078, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 46.12
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then return 0.2265699877310913;  // std dev = 0.482, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else return 0.12481560176617902;  // std dev = 0.442, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( complex(F, H), complex(A, I) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( interaction(J, L), phenotype(L, M) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.1393989350995123;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.35814893509951234;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(A, E), complex(E, D) )
%   | then if ( interaction(E, F), interaction(C, F) )
%   | | then return 0.1582149547682121;  // std dev = 0.470, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.05853772006728831;  // std dev = 0.434, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, G), interaction(G, C) )
%   | | then return 0.5502972528895977;  // std dev = 0.438, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(C, D), enzyme(A, H) )
%   | | | then return 0.5089324792577674;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1925877817084656;  // std dev = 3.296, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return 0.1082968030068819;  // std dev = 0.451, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then return 0.07303504336033152;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.18739071041431707;  // std dev = 3.573, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.33340699353176595;  // std dev = 1.579, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.03916998327861392;  // std dev = 3.779, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.16056356759726198;  // std dev = 6.600, 189.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.17789015345601566;  // std dev = 1.700, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.011176179511225388;  // std dev = 4.073, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.43707167113347084;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15882368541022535;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( interaction(A, A), location(A, M) )
%   | | | then return 0.03256101327353886;  // std dev = 1.521, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.2788015536724098;  // std dev = 3.194, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.15126114038999955;  // std dev = 4.028, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return 0.05475756363930247;  // std dev = 2.251, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(F, H), interaction(G, A) )
%   | | | then return 0.01669184510419983;  // std dev = 4.207, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | | | else return 0.07448051019094225;  // std dev = 6.040, 163.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=54 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08432753117410018;  // std dev = 1.866, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.39277772858298604;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( phenotype(F, H), interaction(F, F) )
%   | | | then return 0.16975261687488524;  // std dev = 1.880, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.005016942359478635;  // std dev = 4.219, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09129300615933703;  // std dev = 5.788, 141.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=52 */
%   | | | else return 0.24740170435317704;  // std dev = 1.610, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.17722775713428157;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12886823447591192;  // std dev = 2.863, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.06689847616571341;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21042796540071698;  // std dev = 1.946, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2584012236209613;  // std dev = 1.918, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.08021782231918143;  // std dev = 4.638, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.013463499583454313;  // std dev = 3.916, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return -0.07619904139483628;  // std dev = 1.658, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( enzyme(D, H), enzyme(A, I) )
%   | | | then return 0.460386509203651;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.016740866398893016;  // std dev = 5.838, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.45046248161730346;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08460041079604781;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, L) )
%   | | | then return 0.3085434064261698;  // std dev = 2.187, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.10154034985578649;  // std dev = 2.609, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.10383728229186112;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.07852881364586128;  // std dev = 1.868, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( phenotype(E, G), interaction(H, E) )
%   | | then if ( location(A, I), location(E, I) )
%   | | | then return 0.16543665165685575;  // std dev = 3.916, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   | | | else return 0.016908089356922028;  // std dev = 2.679, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.12254364516196103;  // std dev = 1.544, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.017833639027938785;  // std dev = 2.318, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( location(L, N) )
%   | | | then return -0.09966680481182644;  // std dev = 1.776, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06058824128351603;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(P, A), location(A, Q) )
%   | | | then return 0.009718314177439024;  // std dev = 4.061, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return -0.05063525670208129;  // std dev = 2.228, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(G, E), complex(G, H) )
%   | | then if ( interaction(G, A), location(A, F) )
%   | | | then return -0.050627412047033124;  // std dev = 4.121, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | | else return 0.07177501789328977;  // std dev = 5.412, 121.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=48 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0967100957567859;  // std dev = 1.925, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.18158731683451862;  // std dev = 1.805, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.16580885711113036;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0642234926562711;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4296833205543324;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13', 'minutes', 'and', '47.791', 'seconds']
Refined model CLL: -0.415518


******************************************
Best model found
******************************************
Results 

CLL : -0.355937 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 46.12 

Total Inference Time : 103.03490734100342 

Total revision time: 156.8303184928894
Best scored revision CLL: -0.356329


Results 

CLL : -0.355937 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 156.93413214111328 

Total Inference Time : 103.03490734100342 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.251
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20597502205603066;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16666550689417198;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13250836610785643;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1304821073099568;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0831133321691291;  // std dev = 0.467, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06380470354474574;  // std dev = 0.465, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05645720459470608;  // std dev = 0.467, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06542599093122761;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.421', 'seconds']
Parameter learned model CLL:-0.348108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.236, 195, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.372, 215, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.25, 197, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.467, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.465, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.467, 219, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.272, 200, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22684310018903814, nan], 'true': [nan, 0.22684310018903814], 'true,false': [nan, 0.22684310018903814]}
{'': [nan, 0.22293444328824463]}
{'': [nan, 0.21973054510077414], 'false': [0.21973054510077414, nan]}
{'': [nan, 0.2261343693778187], 'false': [0.2261343693778187, nan]}
{'': [nan, 0.21795458009449553]}
{'': [nan, 0.21653777513385034]}
{'': [0.21830938665184352, nan]}
{'': [0.22506925207756204, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 51.499
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), location(A, F) )
%   | then return 0.12680565151742132;  // std dev = 0.443, 134.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=36 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( location(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.2781489350995118;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return 0.21370449065506672;  // std dev = 4.541, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | else if ( interaction(A, L) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, A), phenotype(E, C) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.24200124617976965;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1753345795131027;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(E, G) )
%   | | | then return 0.45646994021694653;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.16342760199640302;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, J), complex(H, K) )
%   | | | then return 0.07888678735902409;  // std dev = 1.920, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.184194519135776;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.4372889703016819;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19157055816222335;  // std dev = 3.840, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   else return 0.14944910542607376;  // std dev = 0.468, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.18808106162794505;  // std dev = 3.931, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return 0.11186958477843192;  // std dev = 7.366, 253.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E) )
%   | | then if ( enzyme(A, F), phenotype(D, G) )
%   | | | then return 0.19287143903760184;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.08882753653916031;  // std dev = 3.419, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.0032479496982214286;  // std dev = 2.001, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.049327845261769365;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( location(K, J), complex(K, L) )
%   | | | then return 0.20760814010077588;  // std dev = 3.637, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | | else return -0.020882260494705485;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return 0.03372222103778656;  // std dev = 2.570, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.15119270897032497;  // std dev = 5.190, 115.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), location(F, G) )
%   | | then if ( interaction(F, F), location(A, G) )
%   | | | then return 0.1775208044707555;  // std dev = 3.255, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.06855244294205222;  // std dev = 4.761, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.06596105771724103;  // std dev = 2.314, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.2072338936767645;  // std dev = 4.962, 99.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(A, G), interaction(A, F) )
%   | | | then return 0.030808684177745554;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.15989108558128315;  // std dev = 3.024, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.016838280668137653;  // std dev = 2.879, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.06183971178082637;  // std dev = 6.720, 202.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=68 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(A, G) )
%   | | then if ( enzyme(G, H), phenotype(A, I) )
%   | | | then return 0.04778841985637391;  // std dev = 2.469, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.28730955718964357;  // std dev = 2.669, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.030823827236567874;  // std dev = 2.484, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.16271595566708894;  // std dev = 1.855, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), interaction(M, M) )
%   | | | then return 0.03509519523929931;  // std dev = 3.163, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.07150815328309226;  // std dev = 3.158, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.005378799392810078;  // std dev = 3.450, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.07923453239895654;  // std dev = 3.480, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), interaction(G, A) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return -0.004494315175205955;  // std dev = 1.692, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.2569162838335716;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1493005357307557;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.05102665327508856;  // std dev = 2.907, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -0.05359204832218259;  // std dev = 1.258, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.061155766017541184;  // std dev = 3.651, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.004966270597113773;  // std dev = 5.983, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return -0.06565764435917577;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(F, G), enzyme(E, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.09864784631532592;  // std dev = 1.500, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.013774550066696489;  // std dev = 3.739, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(E, F), enzyme(F, I) )
%   | | | then return 0.18877557007096835;  // std dev = 2.866, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.05855219623916815;  // std dev = 5.848, 147.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=54 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then return 0.5042210346679459;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.42320263627068766;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.021866612067545824;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, E), complex(E, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.12629140946112968;  // std dev = 1.961, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.021684271185904495;  // std dev = 3.112, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( interaction(F, A), complex(E, I) )
%   | | | then return 0.14690880343579685;  // std dev = 3.395, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0.004673631373960798;  // std dev = 6.013, 164.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=53 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.07040150883847765;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11364392842118065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.3171753517945824;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.170008451003381;  // std dev = 2.153, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15', 'minutes', 'and', '11.522', 'seconds']
Refined model CLL: -0.411016


******************************************
Best model found
******************************************
Results 

CLL : -0.349137 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 51.499 

Total Inference Time : 207.7016613483429 

Total revision time: 270.7933557033539
Best scored revision CLL: -0.348108


Results 

CLL : -0.349137 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 270.89716935157776 

Total Inference Time : 207.7016613483429 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.337
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.469, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.479, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19514527209584762;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1521402515199822;  // std dev = 0.466, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1589006915215139;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14699673668146093;  // std dev = 7.660, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06662136536181369;  // std dev = 0.462, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10450766640482866;  // std dev = 0.479, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06324812417959572;  // std dev = 0.473, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0285676737358861;  // std dev = 7.938, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.417', 'seconds']
Parameter learned model CLL:-0.352252 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.81, 181, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.466, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.742, 172, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.66, 162, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.462, 207, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.479, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.473, 181, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.938, 200, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22342980584738956, nan], 'true': [nan, 0.22342980584738956], 'true,false': [nan, 0.22342980584738956]}
{'': [nan, 0.21739969135802417]}
{'': [nan, 0.22704315886134102], 'false': [0.22704315886134102, nan]}
{'': [nan, 0.2310124620249235], 'false': [0.2310124620249235, nan]}
{'': [nan, 0.21301775147929133]}
{'': [nan, 0.22982936910475377]}
{'': [0.22342980584738883, nan]}
{'': [0.21580033777444216, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.74
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( interaction(E, A), phenotype(E, C) )
%   | then return 0.08891816586874314;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.18423589162125145;  // std dev = 0.469, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( complex(A, I), complex(G, I) )
%   | | then return 0.04564893509951222;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(J, A), complex(G, K) )
%   | | | then return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1536034805540578;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.2581489350995111;  // std dev = 3.950, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
%   | | | else return 0.17296374991432717;  // std dev = 3.413, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), location(A, F) )
%   | then return 0.11862634089645649;  // std dev = 0.448, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(D, D) )
%   | | then return 0.3337583008609801;  // std dev = 1.220, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.26300342129986976;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03576323013635478;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return 0.12506483560067036;  // std dev = 0.456, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.11658136678416302;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.23080471307182912;  // std dev = 2.899, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.18321176601708464;  // std dev = 2.137, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.2804360554467741;  // std dev = 3.996, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.04451731543526335;  // std dev = 3.165, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.13285659137610548;  // std dev = 7.256, 238.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.08240952780873573;  // std dev = 2.084, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.0152341316419357;  // std dev = 2.193, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( interaction(G, A), phenotype(G, E) )
%   | | | then return 0.04370759640936736;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22661085514333143;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.11945759385368097;  // std dev = 3.063, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.25603262370415003;  // std dev = 3.415, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12181407731876831;  // std dev = 3.436, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.08868087892526227;  // std dev = 3.682, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.07102363012061835;  // std dev = 1.916, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.16453541218759588;  // std dev = 4.452, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.09076607375680633;  // std dev = 2.236, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.09377897174344266;  // std dev = 5.612, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( interaction(G, G), complex(G, H) )
%   | | | then return 0.054433068601793894;  // std dev = 2.540, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.15134271969528174;  // std dev = 2.843, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.05760271938265565;  // std dev = 2.180, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.04593217148245549;  // std dev = 6.594, 201.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=63 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.1691379784515126;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03447058120489521;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.06845051027427566;  // std dev = 2.853, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.2240091418695112;  // std dev = 3.042, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | else if ( interaction(A, J) )
%   | | then if ( phenotype(A, K), interaction(J, J) )
%   | | | then return -0.12172198386017113;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.013902810781643116;  // std dev = 3.260, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return -0.05056159608671621;  // std dev = 2.116, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.05004653747770529;  // std dev = 4.883, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.43466812672823824;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(A, G), phenotype(D, H) )
%   | | | then return 0.17909989544553426;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.038710097703743264;  // std dev = 1.882, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, J), interaction(A, I) )
%   | | | then return 0.3134864694774744;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.029075337251392955;  // std dev = 6.066, 169.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=54 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.05269162987273779;  // std dev = 2.665, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.15416088376640233;  // std dev = 2.445, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( phenotype(F, E), enzyme(A, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.04397035396233154;  // std dev = 1.401, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.408606929367415;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.10244879869786722;  // std dev = 2.830, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.016717216382020797;  // std dev = 2.441, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.34009814750448725;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07381536665614488;  // std dev = 4.092, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | else if ( complex(A, N), interaction(P, A) )
%   | | | then return -0.036345624130273785;  // std dev = 3.312, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.05700987412157088;  // std dev = 3.942, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), enzyme(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.18390256416158712;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03246493387845331;  // std dev = 2.455, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( complex(A, I), complex(E, I) )
%   | | | then return -0.057869402317904405;  // std dev = 1.942, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.12614354795418264;  // std dev = 2.109, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L), enzyme(A, M) )
%   | | | then return 0.3788479799601838;  // std dev = 1.165, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06295959407552949;  // std dev = 4.154, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.06326604967046137;  // std dev = 2.582, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.016565503405211207;  // std dev = 4.373, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12', 'minutes', 'and', '38.236', 'seconds']
Refined model CLL: -0.393254


******************************************
Best model found
******************************************
Results 

CLL : -0.352095 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.74 

Total Inference Time : 60.79562306404114 

Total revision time: 110.72563467216492
Best scored revision CLL: -0.352252


Results 

CLL : -0.352095 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 110.82944832038879 

Total Inference Time : 60.79562306404114 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.873
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.465, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19277928529406407;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13477954753633936;  // std dev = 0.459, 285.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.12502235078302243;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10643458860840244;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1225094804420004;  // std dev = 0.476, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05231679926290789;  // std dev = 0.458, 288.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0696231531674462;  // std dev = 0.469, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07164657397906711;  // std dev = 7.527, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '56.568', 'seconds']
Parameter learned model CLL:-0.341199 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.565, 171, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.459, 199, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.694, 190, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.688, 189, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.476, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.458, 202, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.469, 178, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.527, 166, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22265287892322444, nan], 'true': [nan, 0.22265287892322444], 'true,false': [nan, 0.22265287892322444]}
{'': [nan, 0.2106986765158507]}
{'': [nan, 0.21450325561856873], 'false': [0.21450325561856873, nan]}
{'': [nan, 0.214928925619836], 'false': [0.214928925619836, nan]}
{'': [nan, 0.2265218522372533]}
{'': [nan, 0.2094425154320981]}
{'': [0.2196395775941249, nan]}
{'': [0.2248047367094991, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.435
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), interaction(E, C) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(C, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, H), enzyme(E, I) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.274815601766179;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else if ( interaction(C, J), phenotype(J, K) )
%   | | then return 0.12130682983635446;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, L), interaction(L, L) )
%   | then if ( complex(A, M), interaction(N, A) )
%   | | then return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.2699136409818652;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return 0.15226658215833488;  // std dev = 0.456, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(D, C) )
%   | then return 0.5570020590293024;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.13728376387195165;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.25533113356186143;  // std dev = 2.149, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.13479212906642604;  // std dev = 0.457, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then return 0.11063343536719607;  // std dev = 0.451, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return 0.2066133422328684;  // std dev = 1.934, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.10707945210295176;  // std dev = 2.838, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.4385844800185234;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19586402450611493;  // std dev = 3.810, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(A, G) )
%   | | | then return 0.07023070474403968;  // std dev = 4.295, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | | else return 0.15433906064529757;  // std dev = 6.308, 174.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=61 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then if ( interaction(H, A), enzyme(H, E) )
%   | | | then return -0.1434512801614111;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14556665859493279;  // std dev = 1.604, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return 0.23581281145637706;  // std dev = 2.644, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.09458145762336378;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( complex(J, L), interaction(M, A) )
%   | | | then return 0.08402235163512964;  // std dev = 2.204, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.009776813036762358;  // std dev = 2.634, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.04614808173367097;  // std dev = 2.577, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.14324314868479596;  // std dev = 4.905, 106.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, A), enzyme(A, F) )
%   | | then return -0.17249310849421326;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.07928513006225263;  // std dev = 6.098, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   | | | else return 0.16253786301482098;  // std dev = 4.297, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H), interaction(F, I) )
%   | | | then return -0.07279492958942796;  // std dev = 2.644, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.020456255375874362;  // std dev = 3.262, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.14364659658521814;  // std dev = 2.220, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.06907011357869185;  // std dev = 6.053, 169.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.021799135772852002;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.27104822704665954;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.01930206445651291;  // std dev = 2.595, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.052751038081232826;  // std dev = 1.999, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( phenotype(A, M), interaction(K, N) )
%   | | | then return 0.053882016949478306;  // std dev = 2.311, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.27345766128189114;  // std dev = 2.355, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( phenotype(A, P), interaction(Q, A) )
%   | | | then return 0.11535036788715196;  // std dev = 3.680, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.03273212751443308;  // std dev = 4.191, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( complex(A, F), enzyme(E, G) )
%   | | then if ( complex(E, F), enzyme(A, G) )
%   | | | then return -0.08117901346092135;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2051825126131724;  // std dev = 2.122, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( enzyme(A, H), complex(E, I) )
%   | | | then return -0.07572684296363362;  // std dev = 2.174, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.026712290903399254;  // std dev = 4.740, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.12732412348182082;  // std dev = 1.892, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.06902200421049258;  // std dev = 1.532, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.38767211284400577;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11885716872976931;  // std dev = 3.731, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(A, G), interaction(H, F) )
%   | | then if ( interaction(H, H), phenotype(H, I) )
%   | | | then return -0.03876137880771043;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.09421023592502703;  // std dev = 2.837, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(A, E), enzyme(F, J) )
%   | | | then return 0.44877171092341567;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13738019527963785;  // std dev = 4.370, 78.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=34 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return 0.4413571702273683;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.004831851591621435;  // std dev = 2.468, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return -0.11118926959244285;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.02701156045819281;  // std dev = 3.473, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return -0.00792037146049368;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.20565690423691083;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(E, I), interaction(E, A) )
%   | | | then return -0.19122856633707103;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0442375233504991;  // std dev = 3.859, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(L, K) )
%   | | | then return -0.015238215789037562;  // std dev = 4.959, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.0603974261831238;  // std dev = 3.145, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.44307582852957295;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10911174506619732;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14', 'minutes', 'and', '51.418', 'seconds']
Refined model CLL: -0.407211


******************************************
Best model found
******************************************
Results 

CLL : -0.340445 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.435 

Total Inference Time : 48.63703751564026 

Total revision time: 86.74834266471862
Best scored revision CLL: -0.341199


Results 

CLL : -0.340445 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 86.8521563129425 

Total Inference Time : 48.63703751564026 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.597
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.463, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.473, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21037565574728453;  // std dev = 7.507, 247.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15763091354340417;  // std dev = 0.469, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.1510852431393417;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11721971499906737;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11566081995065731;  // std dev = 0.478, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06746364369598017;  // std dev = 0.469, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.03793439941811669;  // std dev = 0.463, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05042899920979762;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.245', 'seconds']
Parameter learned model CLL:-0.350076 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.507, 160, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.555, 166, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.608, 173, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.478, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.469, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.463, 193, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.63, 176, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2281630579094897, nan], 'true': [nan, 0.2281630579094897], 'true,false': [nan, 0.2281630579094897]}
{'': [nan, 0.22009440895471669]}
{'': [nan, 0.22562452155165882], 'false': [0.22562452155165882, nan]}
{'': [nan, 0.22264792899408334], 'false': [0.22264792899408334, nan]}
{'': [nan, 0.22858417608566325]}
{'': [nan, 0.22009440895471902]}
{'': [0.21417091836734484, nan]}
{'': [0.22137084532088258, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 29.833
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, D), location(C, E) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(A, F), complex(C, G) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.15226658215833583;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.1604745164948599;  // std dev = 0.459, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(J, H) )
%   | | then return 0.5854216623722396;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.19857446701440598;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, D), phenotype(C, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.1199695390093167;  // std dev = 0.458, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( phenotype(D, E), phenotype(A, E) )
%   | | | then return 0.3244350361341101;  // std dev = 1.859, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.20858345387461844;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else if ( interaction(A, A), phenotype(D, H) )
%   | | then return -0.028891969528708372;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.1472367149178468;  // std dev = 0.465, 144.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=46 */
%   else if ( enzyme(A, I), interaction(A, J) )
%   | then return 0.6297729219951345;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(K, A) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.08221752874049448;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.34020330693105166;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.03221752874049448;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.19854408867299103;  // std dev = 4.443, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
%   | | | else return 0.11150106800298229;  // std dev = 6.093, 172.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.051812990095037224;  // std dev = 1.680, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.096195469924893;  // std dev = 1.306, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( enzyme(D, H), phenotype(D, I) )
%   | | | then return 0.011202743318723167;  // std dev = 1.725, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1335977844399972;  // std dev = 2.204, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), enzyme(K, L) )
%   | | | then return 0.14112566830302872;  // std dev = 4.348, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | | | else return 0.7991174786206917;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.20396679592803965;  // std dev = 2.265, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.08843569717661136;  // std dev = 4.343, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.21880871297952867;  // std dev = 1.456, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.13361146290662357;  // std dev = 2.694, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06485887582432712;  // std dev = 6.683, 206.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=65 */
%   | | | else return 0.16433161044713465;  // std dev = 1.885, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), interaction(H, H) )
%   | | | then return 0.21213921506838324;  // std dev = 2.183, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.02733928515298191;  // std dev = 4.221, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09396638554905645;  // std dev = 5.681, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
%   | | | else return 0.3208428045973967;  // std dev = 1.288, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), location(A, G) )
%   | | then if ( interaction(F, F), location(E, G) )
%   | | | then return 0.06383903943891685;  // std dev = 2.392, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.2000316317226912;  // std dev = 3.191, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.011465740970404759;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06868557179468837;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.05932942948077702;  // std dev = 3.528, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.26950921908752096;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.06556628969729404;  // std dev = 2.317, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.016687029836512008;  // std dev = 4.180, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( complex(D, E), interaction(F, D) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.05249481131546237;  // std dev = 4.125, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.22730990101640028;  // std dev = 3.010, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.21166837455892581;  // std dev = 1.827, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.031271214141042496;  // std dev = 4.475, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.28162973620980114;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.09006567971152157;  // std dev = 1.201, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.06178140408868724;  // std dev = 1.114, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( location(A, G) )
%   | | | then return -0.1727438229400342;  // std dev = 1.819, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return -0.08598421302303354;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.0162196074481968;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, H) )
%   | | | then return 0.05405241362982931;  // std dev = 3.072, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.08255745580652034;  // std dev = 4.229, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.12414055640012232;  // std dev = 2.409, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.014295990843788714;  // std dev = 4.659, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( location(A, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( complex(H, G), phenotype(H, I) )
%   | | | then return -0.020099376911677097;  // std dev = 3.008, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.24159837117801083;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.014522644075209364;  // std dev = 3.442, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.03191550504101128;  // std dev = 5.855, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.06707949122983799;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10655439400986311;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.2342949062180667;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '33.690', 'seconds']
Refined model CLL: -0.398911


******************************************
Best model found
******************************************
Results 

CLL : -0.349674 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 29.833 

Total Inference Time : 31.59311532974243 

Total revision time: 69.96628754615784
Best scored revision CLL: -0.350076


Results 

CLL : -0.349674 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 70.15260928153992 

Total Inference Time : 31.59311532974243 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.18
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.480, 288.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18519296025674195;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16634608205812712;  // std dev = 0.471, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16592584442650654;  // std dev = 8.183, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.1249862629388992;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09637091387900673;  // std dev = 0.472, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07307431628628673;  // std dev = 0.470, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06204652246969992;  // std dev = 0.471, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.07001616847899463;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.970', 'seconds']
Parameter learned model CLL:-0.359481 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.366, 214, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.183, 188, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.272, 200, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.472, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 208, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.198, 190, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22008623076619002, nan], 'true': [nan, 0.22008623076619002], 'true,false': [nan, 0.22008623076619002]}
{'': [nan, 0.2218661005011803]}
{'': [nan, 0.2293113154437974], 'false': [0.2293113154437974, nan]}
{'': [nan, 0.2250692520775602], 'false': [0.2250692520775602, nan]}
{'': [nan, 0.2229344432882419]}
{'': [nan, 0.22115394305870237]}
{'': [0.22222222222222215, nan]}
{'': [0.22860845018279483, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 56.378
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(C, E), interaction(C, A) )
%   | then return 0.09344305274657119;  // std dev = 0.424, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | else return 0.17875962212241245;  // std dev = 0.467, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(F, H), enzyme(G, I) )
%   | | then if ( enzyme(A, J), complex(F, K) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.16249676118646886;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( complex(A, L), interaction(G, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.32481560176617835;  // std dev = 3.864, 60.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | else if ( enzyme(A, M) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.1432662799167127;  // std dev = 0.464, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else if ( phenotype(E, C), interaction(E, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.18443316551386763;  // std dev = 4.108, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return 0.33481940281250705;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(H, C), complex(H, I) )
%   | | | then return 0.423184432770396;  // std dev = 1.903, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.19676486476350263;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(J, A) )
%   | then if ( enzyme(A, K), interaction(A, L) )
%   | | then return 0.4349661220471396;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(J, M) )
%   | | | then return 0.12254302259994705;  // std dev = 4.516, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | | else return 0.2899677564338519;  // std dev = 1.940, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return -0.0400338779528604;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.16732410183564114;  // std dev = 5.139, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.10527120389440886;  // std dev = 6.582, 201.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=63 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(F, F), location(E, D) )
%   | | | then return 0.14639217593590648;  // std dev = 5.591, 136.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=49 */
%   | | | else return 0.06448492957265489;  // std dev = 5.309, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.0984878060332582;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4155444618509869;  // std dev = 1.340, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), interaction(K, A) )
%   | | | then return 0.04374289311703217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0746714008216597;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.08684967550436658;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.009736464620289525;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), location(A, I) )
%   | | | then return 0.14905146490658072;  // std dev = 3.219, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.31491399372536594;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.0525853862450954;  // std dev = 6.830, 226.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=66 */
%   | | | else return 0.12361777315122498;  // std dev = 3.247, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.05710481229090674;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.060049235573058315;  // std dev = 1.452, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.057823327196515895;  // std dev = 4.045, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.09866674998020192;  // std dev = 6.937, 208.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( phenotype(E, F), enzyme(A, G) )
%   | | | then return 0.17986914896958486;  // std dev = 1.636, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.06279465116625137;  // std dev = 3.678, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else if ( location(H, D), enzyme(H, I) )
%   | | | then return 0.03354714406983637;  // std dev = 6.971, 226.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=71 */
%   | | | else return -0.11991047218161414;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.7391344790832729;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.13881722258255064;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.33877392912540194;  // std dev = 0.869, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(G, A), location(G, D) )
%   | | | then return 0.1629291118849835;  // std dev = 3.615, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | | else return 0.3222566290857862;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.029553443053779507;  // std dev = 4.942, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.12125954466752133;  // std dev = 4.509, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.24914878241341554;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.008807167665609914;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.08407899825701495;  // std dev = 1.659, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(G, H), interaction(G, E) )
%   | | | then return 0.23582496531733996;  // std dev = 2.274, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.09013015766154302;  // std dev = 2.239, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(J, E) )
%   | | | then return 0.03329350475810964;  // std dev = 4.997, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   | | | else return 0.11969298916976981;  // std dev = 4.073, 68.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=29 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( complex(K, M), complex(A, M) )
%   | | | then return 0.35909358708206596;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.013186253812343653;  // std dev = 2.359, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.058004096646379504;  // std dev = 1.669, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.15791287089109007;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(E, I) )
%   | | | then return 0.02254748294976819;  // std dev = 2.394, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.08258928290672145;  // std dev = 2.591, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.09236472090604066;  // std dev = 4.228, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | | else return 0.00558058230193794;  // std dev = 5.048, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( interaction(A, N) )
%   | | | then return -0.2225309413428954;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08706511824035326;  // std dev = 1.942, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(P, A), complex(A, Q) )
%   | | | then return 0.14851439065377944;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.028096382118331677;  // std dev = 2.495, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '29.645', 'seconds']
Refined model CLL: -0.410371


******************************************
Best model found
******************************************
Results 

CLL : -0.360464 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 56.378 

Total Inference Time : 212.3907470703125 

Total revision time: 281.07694283294677
Best scored revision CLL: -0.359481


Results 

CLL : -0.360464 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 281.26326456832885 

Total Inference Time : 212.3907470703125 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.309
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23365913918114287;  // std dev = 7.580, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17054492531067653;  // std dev = 0.475, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.14352335435531147;  // std dev = 7.780, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12486281924688081;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11614487683741202;  // std dev = 0.480, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0451320230906084;  // std dev = 0.463, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05889347904019812;  // std dev = 0.472, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.035241940648824625;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.894', 'seconds']
Parameter learned model CLL:-0.355653 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.58, 153, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.78, 177, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.75, 173, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.463, 203, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 183, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.893, 193, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.23450229071220477, nan], 'true': [nan, 0.23450229071220477], 'true,false': [nan, 0.23450229071220477]}
{'': [nan, 0.22543996435731842]}
{'': [nan, 0.2250383493871014], 'false': [0.2250383493871014, nan]}
{'': [nan, 0.22664293342826605], 'false': [0.22664293342826605, nan]}
{'': [nan, 0.23061899269511718]}
{'': [nan, 0.2146049985636297]}
{'': [0.2226247933884279, nan]}
{'': [0.21860264696829776, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 30.691
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(G, D), interaction(G, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1438632208137979;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.08731560176617903;  // std dev = 0.420, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else if ( interaction(A, M), interaction(M, N) )
%   | | then return 0.23910131605189228;  // std dev = 0.486, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | else return 0.1676727446233206;  // std dev = 0.462, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.49309427628511215;  // std dev = 0.468, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( complex(C, E) )
%   | | then return 0.16274527019989107;  // std dev = 0.472, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(F, C), complex(F, G) )
%   | | | then return 0.26770777388407935;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.4931489371241899;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( complex(H, J), phenotype(A, K) )
%   | | then if ( phenotype(H, K), enzyme(I, L) )
%   | | | then return 0.07648227045752318;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.39416299110199765;  // std dev = 1.987, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( enzyme(A, M), phenotype(I, N) )
%   | | | then return 0.1124108252872591;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.21675146595467062;  // std dev = 4.090, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | else return 0.12810807852212225;  // std dev = 0.459, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.10058633704716244;  // std dev = 5.017, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.1672796848150833;  // std dev = 5.938, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), location(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, I) )
%   | | | then return 0.15265054543769296;  // std dev = 2.357, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.07040188009676018;  // std dev = 2.542, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.528918599424635;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2059204613122208;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), enzyme(M, N) )
%   | | | then return -0.027365377029423137;  // std dev = 3.765, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return 0.0981134962034466;  // std dev = 2.273, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return 0.227279460895082;  // std dev = 1.979, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.07845864052851412;  // std dev = 4.968, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.11045341685712641;  // std dev = 1.892, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.0025190779706099563;  // std dev = 3.344, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.1617103568946299;  // std dev = 4.453, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
%   | | | else return 0.07952890186383542;  // std dev = 5.120, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.1273295106951118;  // std dev = 2.204, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.05347403245661097;  // std dev = 3.351, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.006806130465308539;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.0946762344858198;  // std dev = 6.284, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( complex(A, G), location(E, H) )
%   | | | then return 0.03608071440807615;  // std dev = 2.960, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.19648601250949432;  // std dev = 1.806, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.12378766477018603;  // std dev = 2.014, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.03668113455485912;  // std dev = 3.377, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( complex(K, M), interaction(K, N) )
%   | | | then return 0.004504811295401959;  // std dev = 2.578, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.09675731260934668;  // std dev = 2.101, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.23652752506129193;  // std dev = 1.231, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0875131023623289;  // std dev = 4.678, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.08519350233959465;  // std dev = 2.333, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.3237795327160924;  // std dev = 1.875, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( location(D, I), location(A, I) )
%   | | | then return 0.1353264007126339;  // std dev = 2.655, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.0029396629747743858;  // std dev = 2.389, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.04562886570317013;  // std dev = 1.827, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1520381808094134;  // std dev = 2.628, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.08339508864597998;  // std dev = 2.713, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 6.805377652291389E-5;  // std dev = 4.279, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), interaction(I, A) )
%   | | | then return -0.024235481837152302;  // std dev = 2.089, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.14476984560595477;  // std dev = 2.360, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( complex(J, F), phenotype(J, K) )
%   | | | then return 0.07141618502361388;  // std dev = 2.108, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.08496461623255491;  // std dev = 1.769, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.02970430760017203;  // std dev = 2.403, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.21368745637357273;  // std dev = 2.845, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.03324020422239715;  // std dev = 3.294, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.03588774271356807;  // std dev = 4.403, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.18107084748528465;  // std dev = 1.575, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.08510276078059201;  // std dev = 1.979, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.10908478889701301;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2641178212089036;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), location(K, I) )
%   | | | then return 0.024215476114864954;  // std dev = 4.764, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | | | else return 0.1176037759866472;  // std dev = 3.607, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.20821487321881585;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.008984255517329958;  // std dev = 3.895, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '8.674', 'seconds']
Refined model CLL: -0.388555


******************************************
Best model found
******************************************
Results 

CLL : -0.355497 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 30.691 

Total Inference Time : 52.07498598098755 

Total revision time: 93.75052785873413
Best scored revision CLL: -0.355653


Results 

CLL : -0.355497 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 93.93684959411621 

Total Inference Time : 52.07498598098755 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.734
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.474, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22255571476052827;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16876321047411713;  // std dev = 0.474, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.16189116448533314;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.14270113147895108;  // std dev = 7.384, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07555373727712451;  // std dev = 0.468, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07926126659174876;  // std dev = 0.475, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05430243817865837;  // std dev = 0.471, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.053915015584641415;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.826', 'seconds']
Parameter learned model CLL:-0.365077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.393, 150, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.429, 154, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.384, 149, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.471, 172, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.511, 164, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.23161447859810488, nan], 'true': [nan, 0.23161447859810488], 'true,false': [nan, 0.23161447859810488]}
{'': [nan, 0.22437469730819065]}
{'': [nan, 0.2299305555555535], 'false': [0.2299305555555535, nan]}
{'': [nan, 0.23203259393390432], 'false': [0.23203259393390432, nan]}
{'': [nan, 0.2192096831612692]}
{'': [nan, 0.22523452008698175]}
{'': [0.2222222222222202, nan]}
{'': [0.22566400000000192, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 27.16
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then return 0.1456489350995117;  // std dev = 0.453, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | else if ( interaction(F, C), phenotype(A, G) )
%   | | then return 0.35814893509951234;  // std dev = 0.500, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.18282425977483702;  // std dev = 0.468, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   else if ( phenotype(A, H) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17814893509951235;  // std dev = 0.466, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then return 0.046486212931482626;  // std dev = 0.410, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else return 0.19318500284155776;  // std dev = 0.487, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( phenotype(A, I) )
%   | | then if ( phenotype(G, J) )
%   | | | then return 0.27555418459250375;  // std dev = 1.982, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.05973247077105516;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.3241096891469668;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5665770250279252;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return 0.11787416947909286;  // std dev = 0.453, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( location(A, L) )
%   | | | then return 0.191738137521773;  // std dev = 5.058, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
%   | | | else return 0.0790694579874398;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), location(A, G) )
%   | | | then return 0.180162469811095;  // std dev = 6.551, 183.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=69 */
%   | | | else return 0.054572503519791524;  // std dev = 3.517, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.139876401170396;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.053996049356184836;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.25989032092047;  // std dev = 1.399, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1722466641376319;  // std dev = 1.925, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), phenotype(L, M) )
%   | | | then return 0.028049736726659478;  // std dev = 4.054, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | | else return 0.16553499115246195;  // std dev = 1.747, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.06178874990555139;  // std dev = 3.775, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.1381479699849913;  // std dev = 3.959, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), location(A, G) )
%   | | then if ( location(F, G), complex(A, H) )
%   | | | then return 0.06996194132279547;  // std dev = 3.713, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.16190153762492349;  // std dev = 5.370, 120.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=49 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.18531453105820356;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0012999233983572308;  // std dev = 3.118, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( location(A, F), complex(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.11576426458412253;  // std dev = 2.267, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.0095997802584714;  // std dev = 3.790, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07400049978159914;  // std dev = 6.037, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
%   | | | else return 0.3794880313443625;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), phenotype(E, F) )
%   | | then if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.2452849315770382;  // std dev = 1.879, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.05578292065012434;  // std dev = 5.308, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.06855309318758146;  // std dev = 1.802, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.0591609659703781;  // std dev = 3.483, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.18826747412951444;  // std dev = 1.509, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.012378883934227673;  // std dev = 2.062, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1485684071105179;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4926016365206434;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A), complex(D, E) )
%   | | then if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.157883542571781;  // std dev = 1.026, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.09574795987647042;  // std dev = 1.530, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.09461161931233264;  // std dev = 1.382, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.22458465707612166;  // std dev = 1.657, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), complex(K, J) )
%   | | | then return -0.13348760613179736;  // std dev = 1.795, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.0027156253355305705;  // std dev = 3.380, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.08673680250746972;  // std dev = 2.680, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.0028572264403718996;  // std dev = 5.353, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.09688183678066827;  // std dev = 1.667, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.04764173865715614;  // std dev = 1.674, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.13061763796232015;  // std dev = 1.576, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.052211974287827784;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), complex(J, M) )
%   | | | then return 0.0013167417034769952;  // std dev = 2.052, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.4752728773522318;  // std dev = 1.242, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.10377756414398404;  // std dev = 2.699, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.018677097321071246;  // std dev = 5.737, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G), interaction(H, F) )
%   | | then if ( enzyme(H, I), complex(F, E) )
%   | | | then return 0.7216986971056589;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16415053081168046;  // std dev = 2.099, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(J, F), interaction(J, J) )
%   | | | then return -0.04114835768378719;  // std dev = 1.886, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.1376337120784122;  // std dev = 1.846, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.46470908127157096;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.024255513316368292;  // std dev = 2.091, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.04839426185695906;  // std dev = 3.705, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return -0.007736431974846611;  // std dev = 4.739, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13', 'minutes', 'and', '19.207', 'seconds']
Refined model CLL: -0.411284


******************************************
Best model found
******************************************
Results 

CLL : -0.364391 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 27.16 

Total Inference Time : 51.04480528831482 

Total revision time: 86.77869982147217
Best scored revision CLL: -0.365077


Results 

CLL : -0.364391 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 86.96502155685425 

Total Inference Time : 51.04480528831482 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 2.655
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.470, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.472, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19535823742509276;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18206372638943608;  // std dev = 0.477, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15513984339733336;  // std dev = 7.523, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.11751319570050213;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09029569618165978;  // std dev = 0.471, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08785779308930029;  // std dev = 0.475, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.08646830664442613;  // std dev = 0.480, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.023137359371010056;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '56.060', 'seconds']
Parameter learned model CLL:-0.358675 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.594, 171, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.477, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.523, 162, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.594, 171, 87], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.475, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.48, 154, 87], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.719, 189, 87], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22349918875067695, nan], 'true': [nan, 0.22349918875067695], 'true,false': [nan, 0.22349918875067695]}
{'': [nan, 0.22731891421106026]}
{'': [nan, 0.22731891421106218], 'false': [0.22731891421106218, nan]}
{'': [nan, 0.22349918875067493], 'false': [0.22349918875067493, nan]}
{'': [nan, 0.22137084532088244]}
{'': [nan, 0.22604875283446657]}
{'': [0.23067784645581096, nan]}
{'': [0.2158553875236298, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 38.494
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.15987307303054538;  // std dev = 0.459, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.20902612808196822;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), interaction(E, C) )
%   | then if ( enzyme(C, F), phenotype(C, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.219648998022734;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.16941405511326244;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.2735063067927832;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5528970104906737;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1426060575644118;  // std dev = 0.461, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   else if ( interaction(J, A), location(J, K) )
%   | then if ( location(A, K), interaction(L, J) )
%   | | then return 0.1271863136432283;  // std dev = 0.457, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | else if ( enzyme(J, M) )
%   | | | then return 0.09431962480488668;  // std dev = 1.716, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.2868137051716131;  // std dev = 2.641, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else return 0.01620632765021551;  // std dev = 0.396, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.20511672725771934;  // std dev = 5.500, 125.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=50 */
%   | | | else return 0.13032338353524406;  // std dev = 4.947, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.2230507530272845;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05906202213922091;  // std dev = 2.345, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return -0.009030431500007584;  // std dev = 1.776, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.06398659728674405;  // std dev = 1.792, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( complex(A, M), interaction(L, L) )
%   | | | then return 0.03748775360616213;  // std dev = 2.996, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.1432369854202246;  // std dev = 5.644, 137.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=50 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.11435699792530268;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.010167046461875587;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( interaction(H, F), interaction(H, H) )
%   | | | then return 0.07824339884529546;  // std dev = 3.799, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.17901673011995847;  // std dev = 3.226, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.006137972156966565;  // std dev = 4.145, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | | else return 0.09551540957261406;  // std dev = 4.057, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.219802198245448;  // std dev = 2.577, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.0403986517027901;  // std dev = 5.508, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.20458889480071862;  // std dev = 3.500, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | | | else return 0.07578786040235617;  // std dev = 2.319, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( phenotype(A, F), phenotype(E, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.3772619250045432;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02515797424366653;  // std dev = 2.403, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(E, A) )
%   | | | then return 0.020461570883929487;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23772115944901628;  // std dev = 2.126, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( location(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.02609699408024582;  // std dev = 6.548, 194.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=62 */
%   | | | else return -0.1360942076327292;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.021102299069544306;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30752805070970723;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.03654418275098213;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.12669147815432738;  // std dev = 1.853, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.10138787145748883;  // std dev = 2.144, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.007034570013053213;  // std dev = 3.579, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K), phenotype(A, L) )
%   | | | then return 0.10618976348423133;  // std dev = 2.818, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return -0.05220049165536329;  // std dev = 2.426, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.21895853966746504;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.11004055413461837;  // std dev = 4.053, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(F, E), enzyme(F, G) )
%   | | | then return -0.13526388523494004;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0683733909582847;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), complex(H, E) )
%   | | | then return 0.23379641419243052;  // std dev = 1.518, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.06480783852744963;  // std dev = 4.274, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08710288882108357;  // std dev = 1.481, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.0017112967825268109;  // std dev = 5.548, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.028065833791521732;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.35707974890299904;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), complex(G, H) )
%   | | then if ( phenotype(F, I), phenotype(G, I) )
%   | | | then return -0.008399257606821635;  // std dev = 2.776, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.14562125173164867;  // std dev = 1.988, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.3354680694465156;  // std dev = 0.851, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.023914713030993896;  // std dev = 2.127, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), complex(A, N) )
%   | | | then return 0.12796410974064226;  // std dev = 2.967, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 2.3914139385101816E-4;  // std dev = 3.884, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( interaction(A, P), enzyme(P, Q) )
%   | | | then return 0.023301828358992104;  // std dev = 1.596, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.19327437591453855;  // std dev = 3.156, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '24.299', 'seconds']
Refined model CLL: -0.415775


******************************************
Best model found
******************************************
Results 

CLL : -0.358287 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 38.494 

Total Inference Time : 88.98568224906921 

Total revision time: 135.29494769477844
Best scored revision CLL: -0.358675


Results 

CLL : -0.358287 

AUC ROC : 0.5 

AUC PR : 0.007016 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 135.45999438667297 

Total Inference Time : 88.98568224906921 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.319
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.467, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1742583575919106;  // std dev = 8.434, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15957299002206726;  // std dev = 0.468, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.15914100812925244;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.09839259365963775;  // std dev = 8.463, 334.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09813305765580983;  // std dev = 0.470, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08449105720255377;  // std dev = 0.471, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.10363296805050225;  // std dev = 0.482, 283.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.044640309188027395;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.036', 'seconds']
Parameter learned model CLL:-0.353198 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.434, 225, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.468, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.243, 196, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [8.463, 230, 104], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.471, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.482, 179, 104], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [8.353, 212, 104], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21618425550392367, nan], 'true': [nan, 0.21618425550392367], 'true,false': [nan, 0.21618425550392367]}
{'': [nan, 0.2190196135518839]}
{'': [nan, 0.22648888888889004], 'false': [0.22648888888889004, nan]}
{'': [nan, 0.21442145648822244], 'false': [0.21442145648822244, nan]}
{'': [nan, 0.22044203843206445]}
{'': [nan, 0.22186610050117708]}
{'': [0.23244140893256374, nan]}
{'': [0.2207979490466275, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 35.069
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(A, F), complex(D, G) )
%   | | | then return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.2069861444018379;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.14386322081379935;  // std dev = 0.452, 252.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=72 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then if ( interaction(A, K) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, D), phenotype(D, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.2015809293549078;  // std dev = 2.102, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.027710504966299458;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( location(D, C), complex(A, G) )
%   | | | then return 0.22909446070021633;  // std dev = 3.809, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return 0.17112280861907964;  // std dev = 5.474, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), interaction(I, J) )
%   | | | then return 0.28416317417934217;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1474110374272054;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.5063853964015642;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28416317417934217;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return 0.09783191211038943;  // std dev = 0.448, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.10361026025416273;  // std dev = 4.434, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.16715176209389915;  // std dev = 6.974, 212.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=76 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), phenotype(D, G) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.07091328713948154;  // std dev = 3.878, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return 0.23270029270228265;  // std dev = 1.809, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.01475082811941648;  // std dev = 2.635, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.08987090552567795;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.14449686454921085;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2801791815245397;  // std dev = 1.728, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.01480232207647069;  // std dev = 2.468, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.11866083602829527;  // std dev = 5.410, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.2837660331170593;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.13939879477968692;  // std dev = 2.077, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.05519992490961853;  // std dev = 3.192, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.10217899845984307;  // std dev = 6.756, 204.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=69 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(G, G), complex(G, F) )
%   | | | then return -0.08981893825343101;  // std dev = 1.964, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.0661917353706533;  // std dev = 3.988, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.05230246999691361;  // std dev = 4.427, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.1246665720393371;  // std dev = 5.390, 123.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(A, G), phenotype(E, D) )
%   | | | then return 0.011910392183519325;  // std dev = 3.539, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.11400651296075572;  // std dev = 4.683, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | else if ( interaction(A, H), phenotype(H, D) )
%   | | | then return 0.21233736160511685;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.02546314448190644;  // std dev = 2.443, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( complex(I, K), phenotype(I, L) )
%   | | | then return 0.06953798810131404;  // std dev = 1.796, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.05771822765457586;  // std dev = 2.803, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.07235199372590506;  // std dev = 1.962, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.01721193170604024;  // std dev = 3.648, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( location(A, F), interaction(G, D) )
%   | | then if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.20139518432170023;  // std dev = 2.548, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.04231195608153678;  // std dev = 6.646, 199.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=66 */
%   | | else if ( function(A, I), function(D, I) )
%   | | | then return 0.48759438167957425;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08947721523931824;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), phenotype(K, J) )
%   | | | then return -0.07638624377621074;  // std dev = 1.491, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.019301124139376905;  // std dev = 2.359, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.32755823697496333;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.008045702479699796;  // std dev = 2.341, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(E, G), phenotype(A, H) )
%   | | | then return -0.005742726456192176;  // std dev = 2.075, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.22665459020550413;  // std dev = 0.980, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.009794398109771696;  // std dev = 2.402, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.0667039298453788;  // std dev = 4.345, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, A), interaction(L, J) )
%   | | | then return -0.007019222921461331;  // std dev = 1.687, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.28761315376855184;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.003400645148281403;  // std dev = 6.069, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
%   | | | else return -0.1081058346632754;  // std dev = 1.251, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(A, E), phenotype(A, G) )
%   | | | then return -0.034833373664293565;  // std dev = 2.077, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.12675188782596356;  // std dev = 2.101, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.1530130256922587;  // std dev = 1.795, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.016182700533872645;  // std dev = 2.233, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.014762298970720782;  // std dev = 2.331, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.1064781114055536;  // std dev = 1.558, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.12526880804185928;  // std dev = 2.782, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.02959017977173471;  // std dev = 6.099, 167.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=55 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '30.041', 'seconds']
Refined model CLL: -0.3745


******************************************
Best model found
******************************************
Results 

CLL : -0.354206 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.069 

Total Inference Time : 79.44739532470703 

Total revision time: 126.30051063346863
Best scored revision CLL: -0.353198


Results 

CLL : -0.354206 

AUC ROC : 0.5 

AUC PR : 0.007481 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 126.46555732536316 

Total Inference Time : 79.44739532470703 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.594
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.481, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.476, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19391535845717486;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17360782128543306;  // std dev = 0.474, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.10215873459705371;  // std dev = 8.054, 312.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.12912853913487665;  // std dev = 7.803, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06455626530652592;  // std dev = 0.456, 311.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=92 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08563239782138611;  // std dev = 0.470, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06605538916727892;  // std dev = 0.468, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.05089542512752901;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.468', 'seconds']
Parameter learned model CLL:-0.338204 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.817, 182, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.474, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [8.054, 220, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.803, 180, 92], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.456, 219, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.468, 191, 92], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.893, 193, 92], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2230273323032673, nan], 'true': [nan, 0.2230273323032673], 'true,false': [nan, 0.2230273323032673]}
{'': [nan, 0.22463648834018973]}
{'': [nan, 0.20792241946088347], 'false': [0.20792241946088347, nan]}
{'': [nan, 0.223832179930794], 'false': [0.223832179930794, nan]}
{'': [nan, 0.2083105013389015]}
{'': [nan, 0.22061224489796094]}
{'': [0.21940591092409445, nan]}
{'': [0.21860264696829748, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 37.014
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.25814893509951237;  // std dev = 0.490, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else return 0.14847151574467365;  // std dev = 0.454, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( complex(A, G), interaction(H, E) )
%   | | then return 0.5854216623722396;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( interaction(F, I) )
%   | | | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), complex(K, L) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284571;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( complex(A, E), interaction(D, F) )
%   | then if ( phenotype(D, G), location(C, H) )
%   | | then return 0.10825481271743742;  // std dev = 0.461, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.413208529681543;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10444136380462495;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(D, J), location(C, K) )
%   | | then if ( enzyme(C, L) )
%   | | | then return 0.27226918385111315;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6372520743297668;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(C, M), interaction(N, C) )
%   | | | then return 0.13816588549437261;  // std dev = 1.401, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.24466484107047862;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( location(A, P) )
%   | then return 0.14730867384581725;  // std dev = 0.465, 193.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=61 */
%   | else return 0.015023673049730197;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1496289320853301;  // std dev = 4.956, 109.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=38 */
%   | | | else return 0.09176419978965207;  // std dev = 6.180, 184.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.027348980277447036;  // std dev = 1.998, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.06794238321429949;  // std dev = 2.342, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.16105971166133579;  // std dev = 2.373, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.017101389414314962;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), phenotype(L, N) )
%   | | | then return 0.09441494691293544;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3456552945432429;  // std dev = 1.844, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(A, P), phenotype(A, Q) )
%   | | | then return 0.18286391274825012;  // std dev = 2.884, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.08094352255331376;  // std dev = 5.572, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.16529817613951708;  // std dev = 2.573, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.0792968175789807;  // std dev = 2.894, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.039307943589556846;  // std dev = 2.509, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.07905622355183575;  // std dev = 6.426, 189.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=61 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.09379776911869349;  // std dev = 2.202, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.012569449339785292;  // std dev = 3.899, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.2520155400941666;  // std dev = 2.258, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.09913817170450571;  // std dev = 5.915, 155.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, I) )
%   | | | then return -0.07334479193325275;  // std dev = 2.005, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.034802564551119894;  // std dev = 2.140, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.01862374210151025;  // std dev = 1.893, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.08837862274496713;  // std dev = 2.106, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( phenotype(A, L), enzyme(A, M) )
%   | | then if ( interaction(N, A), interaction(A, N) )
%   | | | then return 0.10848370163083661;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.46032500539542937;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.11429909225863213;  // std dev = 3.493, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.05799517789447824;  // std dev = 5.397, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.13951946113677194;  // std dev = 1.608, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.05198994403687778;  // std dev = 1.953, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.016665526209967373;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.13660610155945144;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, A), phenotype(A, G) )
%   | | then return 0.371910560143551;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.07037515813515757;  // std dev = 4.808, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | | | else return 0.005777106692558312;  // std dev = 5.363, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), phenotype(G, E) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.07701220149933126;  // std dev = 2.361, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.20359502564033716;  // std dev = 1.873, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(F, J) )
%   | | | then return 0.12593726684155224;  // std dev = 1.457, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.0841369693985758;  // std dev = 2.601, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then if ( complex(A, M), location(L, K) )
%   | | | then return 0.03330618165796606;  // std dev = 2.919, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return -0.048575364206700854;  // std dev = 2.995, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.031934158444963376;  // std dev = 4.719, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return 0.18330835145379928;  // std dev = 2.436, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(A, F) )
%   | then if ( location(E, G) )
%   | | then if ( phenotype(E, H), complex(E, I) )
%   | | | then return 0.0196063072611811;  // std dev = 2.478, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.05058094253297216;  // std dev = 3.750, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | else return 0.18198496636969;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.06880261931883477;  // std dev = 1.936, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.04130775322442617;  // std dev = 3.560, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.05836492634327184;  // std dev = 3.480, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.16037868500342067;  // std dev = 3.265, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17', 'minutes', 'and', '33.933', 'seconds']
Refined model CLL: -0.379759


******************************************
Best model found
******************************************
Results 

CLL : -0.338037 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 37.014 

Total Inference Time : 51.93334460258484 

Total revision time: 100.58004422950745
Best scored revision CLL: -0.338204


Results 

CLL : -0.338037 

AUC ROC : 0.5 

AUC PR : 0.007074 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 100.74509092140198 

Total Inference Time : 51.93334460258484 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 3.037
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.477, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   return 0;  // std dev = 0.478, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14771122466180148;  // std dev = 7.816, 297.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19903278104745545;  // std dev = 0.480, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then return 0.13874330375717608;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then return 0.10099458525726789;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10169007598189572;  // std dev = 0.470, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11842720231756462;  // std dev = 0.482, 235.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.06569662578004772;  // std dev = 0.472, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then return 0.0375048080442445;  // std dev = 7.642, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.869', 'seconds']
Parameter learned model CLL:-0.350904 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {}, {}]
['proteinclass(A, B)', {'': 'complex(C, D)', 'true': 'complex(C, A)', 'true,false': 'complex(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.816, 211, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.48, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), complex(C, D)', 'false': 'complex(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [7.601, 176, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)', 'false': 'complex(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [7.688, 189, 86], 'false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.47, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A)'}, {'true': [0.0, 0, 0], 'false': [0.482, 149, 86]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [0.472, 170, 86], 'false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'complex(C, D)'}, {'true': [7.642, 182, 86], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.20571597002573505, nan], 'true': [nan, 0.20571597002573505], 'true,false': [nan, 0.20571597002573505]}
{'': [nan, 0.2303531100645985]}
{'': [nan, 0.2204999708641702], 'false': [0.2204999708641702, nan]}
{'': [nan, 0.21492892561983667], 'false': [0.21492892561983667, nan]}
{'': [nan, 0.2213609467455634]}
{'': [nan, 0.23203259393390865]}
{'': [0.223083496093748, nan]}
{'': [0.21792158609935616, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;proteinclass(A, B) :- complex(C, D).;true;true
2;true;complex(C, A).;true;true
2;true,false;complex(E, A).;true;true
3;;proteinclass(A, B) :- complex(C, A).;true;true
4;;proteinclass(A, B) :- complex(C, A), complex(C, D).;true;true
4;false;complex(E, D).;true;true
5;;proteinclass(A, B) :- complex(C, A).;true;true
5;false;complex(D, E).;true;true
6;;proteinclass(A, B) :- complex(C, A).;true;true
7;;proteinclass(A, B) :- complex(C, A).;true;true
8;;proteinclass(A, B) :- complex(C, D).;true;true
9;;proteinclass(A, B) :- complex(C, D).;true;true


Refining candidate
***************************
Model training time 24.018
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, C) )
%   | then return 0.08037115732173453;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( phenotype(D, E), complex(D, F) )
%   | | then if ( interaction(G, A), phenotype(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( enzyme(A, I), complex(A, J) )
%   | then return 0.04564893509951222;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), complex(M, N) )
%   | | | then return 0.1739384087837229;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.30259337954395676;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.13446472457319567;  // std dev = 0.447, 152.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( enzyme(C, E), interaction(C, F) )
%   | then if ( complex(A, D), enzyme(F, E) )
%   | | then return 0.11547566061095403;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.5097891789169162;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3445303360175584;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.1273893679167597;  // std dev = 0.465, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   else if ( interaction(A, H), enzyme(A, I) )
%   | then return 0.4885210981102901;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.635629401698648;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13027714951861832;  // std dev = 3.243, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.25007055836642517;  // std dev = 3.261, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.34174772321879343;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( complex(C, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.10319729837069866;  // std dev = 6.283, 179.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=57 */
%   | | | else return 0.20701528459741686;  // std dev = 4.178, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.05162945460038115;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.15899882619826883;  // std dev = 2.887, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.12156465870705298;  // std dev = 3.061, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.015482997375712617;  // std dev = 4.148, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | else if ( location(A, J) )
%   | | then if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.3399700377336318;  // std dev = 1.922, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.1582319810235727;  // std dev = 3.712, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.003657073497265454;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.02216740645717096;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), complex(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(E, D) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( complex(F, H), phenotype(F, I) )
%   | | | then return 0.18051138195175073;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 9.107841532419568E-4;  // std dev = 3.467, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.2799094828630667;  // std dev = 3.418, 47.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | | | else return 0.10331760280786301;  // std dev = 4.431, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( interaction(A, H), phenotype(G, I) )
%   | | | then return -0.10810225730100194;  // std dev = 2.780, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.05799453505595214;  // std dev = 3.159, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.22574493581112662;  // std dev = 3.853, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | else return 0.012308490927623674;  // std dev = 4.770, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.11930295554229765;  // std dev = 2.541, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.008582763335075927;  // std dev = 4.139, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.05517997240511938;  // std dev = 2.146, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.0595917453511822;  // std dev = 4.687, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.4950304145319904;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13509375759080794;  // std dev = 2.187, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( phenotype(A, P) )
%   | | | then return -0.08498819705169337;  // std dev = 1.304, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.06113886169516489;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( phenotype(A, D), interaction(A, A) )
%   | then return 0.22048801135345805;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.057230369283728925;  // std dev = 1.909, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.04284001266122938;  // std dev = 2.296, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.025891707511880763;  // std dev = 3.122, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.07995553015048143;  // std dev = 5.882, 148.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=55 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, F) )
%   | | | then return 0.028589866704742267;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11410887323606295;  // std dev = 1.715, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(K, E) )
%   | | | then return 0.24398245029854315;  // std dev = 1.458, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.048859179438512874;  // std dev = 2.103, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(A, L) )
%   | | then if ( phenotype(L, M), phenotype(A, M) )
%   | | | then return -0.04067927601310893;  // std dev = 3.030, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.06835040257148571;  // std dev = 4.231, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.05400874031475678;  // std dev = 3.201, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.2423284211624501;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(C, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( complex(F, H), phenotype(F, I) )
%   | | | then return -0.06494206775980448;  // std dev = 2.274, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.14653338172662844;  // std dev = 2.196, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.01985482908549153;  // std dev = 2.135, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.06625040444789998;  // std dev = 4.033, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.07192227158843101;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.025099664414300005;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.13193572461741204;  // std dev = 3.702, 55.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=25 */
%   | | | else return 0.039550951790967404;  // std dev = 2.743, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9', 'minutes', 'and', '2.667', 'seconds']
Refined model CLL: -0.418295


******************************************
Best model found
******************************************
Results 

CLL : -0.350177 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 24.018 

Total Inference Time : 37.47336769104004 

Total revision time: 70.54518287658692
Best scored revision CLL: -0.350904


Results 

CLL : -0.350177 

AUC ROC : 0.5 

AUC PR : 0.006943 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 70.71022956848145 

Total Inference Time : 37.47336769104004 

