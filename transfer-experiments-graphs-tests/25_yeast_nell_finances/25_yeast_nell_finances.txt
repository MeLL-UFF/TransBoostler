Starting experiment 25_yeast_nell_finances 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.979
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13721870254137208;  // std dev = 0.449, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20866439901703673;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else return 0.2058966828472556;  // std dev = 0.476, 555.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.14933023843441018;  // std dev = 4.744, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1813193937156483;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.1496744762838728;  // std dev = 11.469, 606.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.038988084613442935;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.11550131904778256;  // std dev = 2.369, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.11285940902406512;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16207921996823627;  // std dev = 3.943, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else return 0.1658863113133551;  // std dev = 0.479, 541.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08701023781629723;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0.05990436112479373;  // std dev = 0.441, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12449661923256682;  // std dev = 12.224, 664.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.12928643265700177;  // std dev = 3.080, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else return 0.09551288217659638;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11625021705254537;  // std dev = 3.965, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0907285949346545;  // std dev = 0.470, 584.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7433687252202166;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.03754366055619154;  // std dev = 4.797, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.18394489240794684;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else return 0.06988713843192726;  // std dev = 12.035, 659.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.14401231773911535;  // std dev = 2.871, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else return 0.010946251086180029;  // std dev = 4.518, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07390029754948053;  // std dev = 11.944, 635.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1891867663218784;  // std dev = 2.087, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.03877738738151364;  // std dev = 2.093, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.05920044147117297;  // std dev = 0.465, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05839134504842518;  // std dev = 0.474, 661.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.061629663398689374;  // std dev = 0.472, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.024282820846139867;  // std dev = 2.028, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.029491079594971405;  // std dev = 3.511, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02564094681927346;  // std dev = 11.433, 598.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.48134725727854555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.009210701055295563;  // std dev = 2.263, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03024327873952406;  // std dev = 4.110, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.06607862174976999;  // std dev = 4.578, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.027995561462041307;  // std dev = 11.367, 584.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '2.139', 'seconds']
Parameter learned model CLL:-0.370436 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.176, 10, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.449, 62, 24], 'false,true': [4.699, 63, 34], 'false,false': [0.476, 362, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.744, 72, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.699, 63, 34], 'false,false,false,false': [11.469, 413, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.866, 3, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.369, 18, 8], 'true,false,false': [4.847, 76, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.943, 45, 24], 'false,false,false': [0.479, 348, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.467, 19, 9], 'true,false': [0.441, 67, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.224, 437, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.08, 26, 15], 'true,false': [4.346, 58, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.965, 47, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 391, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.797, 82, 32], 'false,false,true': [2.582, 15, 12], 'false,false,false': [12.035, 444, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.871, 19, 15], 'true,false': [4.518, 76, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.944, 418, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.087, 9, 9], 'true,false,true': [2.093, 16, 6], 'true,false,false': [0.465, 39, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 434, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.472, 79, 43], 'false,true,true,true': [2.028, 13, 6], 'false,true,true,false': [3.511, 40, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.433, 405, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.263, 14, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.11, 56, 24], 'false,true': [4.578, 56, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.367, 391, 193]}]
{'': [0.21551020408163402, 0.2269444653543628], 'false': [0.22765437347220893, 0.22681925168411948], 'true': [0.2493074792243767, 0.2011898323418074], 'true,false': [nan, 0.2011898323418074]}
{'': [0.21436180826607412, 0.21863330097864975], 'false': [nan, 0.2186333009786475], 'false,false': [nan, 0.21863330097864975], 'false,false,false': [0.2276543734722068, 0.21705116056159793]}
{'': [0.2133760144760224, 0.2290139500753845], 'false': [nan, 0.2290139500753845], 'false,false': [0.2253586707394721, 0.22947851073352873], 'false,false,true': [nan, 0.2253586707394721], 'true': [0.18750000000000006, 0.21397902091962195], 'true,false': [0.2157727298236298, 0.21355371900826556], 'true,true': [0.18750000000000006, nan]}
{'': [0.19989859847984356, 0.22502597712409142], 'false': [nan, 0.22502597712409142], 'false,false': [nan, 0.22502597712409142], 'true': [0.21778440835795773, 0.19422239505733255]}
{'': [0.22364704441685468, 0.22134190361993009], 'true': [0.23137429581153884, 0.2195948800261924], 'false': [0.22141194329958583, 0.2212627838243601], 'false,true': [nan, 0.2214119432995854], 'false,false': [nan, 0.2212627838243601]}
{'': [0.0, 0.21873047846999552], 'false': [0.20183763002990696, 0.22134442323837805], 'false,false': [0.24691358024691362, 0.2197848022249552], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.21095534708297606, 0.22464949743837653], 'false': [nan, 0.22464949743837193], 'false,false': [nan, 0.22464949743837653], 'false,false,false': [nan, 0.22464949743837653], 'true': [0.24246660131630068, 0.19629110063614957]}
{'': [0.219907380332549, 0.22502310950624352], 'false': [nan, 0.22502310950624352], 'false,false': [nan, 0.22502310950624352], 'true': [0.2420688977061999, 0.21144212033557455], 'true,false': [0.19915987328295612, 0.21606648199445977]}
{'': [0.22277534730145301, 0.21800011215571796], 'false': [0.21349252677018618, 0.21857976980123328], 'false,false': [nan, 0.21857976980123328], 'false,true': [0.21349252677018618, nan], 'false,true,true': [0.21643601960986997, 0.21252158569730423]}
{'': [0.21578604943648966, 0.22297965108787876], 'false': [0.23286355535566355, 0.22126278382436018], 'false,false': [nan, 0.22126278382436018], 'true': [0.2319010010906072, 0.21115294391085274], 'true,true': [0.0, 0.23275008926292398], 'true,false': [nan, 0.21115294391085274], 'true,false,false': [nan, 0.21115294391085274]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 10.799
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( acquired(E, A), cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( acquired(A, G), companyceo(G, H) )
%   | | | then return 0.11396288858788445;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.17505034355021237;  // std dev = 12.397, 710.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=225 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.7613380182753303;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.16213879441219678;  // std dev = 0.029, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( acquired(A, G), cityhascompanyoffice(H, A) )
%   | then if ( companyceo(A, I) )
%   | | then return 0.18845286818422488;  // std dev = 0.473, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return -0.0850230386763125;  // std dev = 0.243, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( acquired(A, J), companyceo(J, K) )
%   | | then if ( acquired(J, L) )
%   | | | then return 0.09370229026608734;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8437022902660875;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(M, A) )
%   | | | then return 0.1440523100578943;  // std dev = 3.860, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.1740459368969275;  // std dev = 11.059, 548.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=186 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7019105138518115;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.12732436207796985;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( companyalsoknownas(C, F), acquired(G, C) )
%   | | | then return 0.09339645878943542;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.15738570055666856;  // std dev = 0.057, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.6121128682861708;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( bankboughtbank(I, A) )
%   | | then if ( bankchiefexecutiveceo(A, J) )
%   | | | then return 0.20883447303688008;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07508750580827966;  // std dev = 1.164, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | | then return 0.17757430764694795;  // std dev = 3.205, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.14917942270325046;  // std dev = 11.931, 639.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=218 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( bankboughtbank(A, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.09082070855267009;  // std dev = 0.373, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.0678047254745346;  // std dev = 0.272, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   else if ( cityhascompanyoffice(F, A), acquired(A, G) )
%   | then if ( companyceo(A, H) )
%   | | then if ( economicsectorcompany(B, G) )
%   | | | then return 0.6156097147796402;  // std dev = 0.403, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0598965420799028;  // std dev = 2.999, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else return -0.06959307310702928;  // std dev = 0.231, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6875631165183865;  // std dev = 1.573, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.19498023395813713;  // std dev = 0.208, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.21677074151709746;  // std dev = 2.453, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.137041745096064;  // std dev = 10.737, 512.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=182 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.1545708358464756;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( cityhascompanyoffice(D, F), economicsectorcompany(B, F) )
%   | | then return 0.49788915245488385;  // std dev = 0.290, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13546488896071945;  // std dev = 0.091, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then if ( countryhascompanyoffice(H, A) )
%   | | then return 0.3261890607989481;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.47101703167658215;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.6201737464579008;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.7072719781500193;  // std dev = 0.248, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08133688270150743;  // std dev = 11.973, 710.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=228 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.25275113513446645;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( companyceo(A, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then if ( countryhascompanyoffice(F, A) )
%   | | | then return 0.25459056669969515;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5643962264503938;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankboughtbank(G, A), acquired(G, H) )
%   | | | then return 0.2023663899752767;  // std dev = 1.034, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.021113815130784714;  // std dev = 4.231, 129.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=29 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then if ( cityhascompanyoffice(J, I) )
%   | | | then return 0.39915186770021727;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.47314005565708994;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(K, A), companyalsoknownas(K, L) )
%   | | | then return -0.020252361144522984;  // std dev = 1.755, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.0750446891163168;  // std dev = 11.192, 621.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( companyalsoknownas(C, D), acquired(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.675769084610928;  // std dev = 0.243, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(F, E) )
%   | | | then return 0.4232206677768154;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10360777516048914;  // std dev = 0.628, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.020607877261431803;  // std dev = 0.358, 100.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   else if ( companyalsoknownas(A, G), cityhascompanyoffice(H, A) )
%   | then return 0.018884665108583724;  // std dev = 0.370, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.3334922931119021;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13040568241959502;  // std dev = 2.623, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( acquired(A, J) )
%   | | | then return -0.009298711276834867;  // std dev = 3.357, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.06587878745823247;  // std dev = 10.415, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.525800316175525;  // std dev = 0.223, 59.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | else return -0.19656278963711188;  // std dev = 0.043, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( companyceo(A, E) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then if ( companyalsoknownas(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.5720273966772216;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21695911775967808;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06663280747931902;  // std dev = 0.347, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( companyalsoknownas(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.57444494624451;  // std dev = 0.723, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.29096772894313844;  // std dev = 0.044, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.5443322271191525;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.034066918135406514;  // std dev = 10.507, 535.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=170 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(E, C) )
%   | then return -0.13114938384997868;  // std dev = 0.541, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | then return 0.040359248747160216;  // std dev = 0.258, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.36957155072609565;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23914146135927047;  // std dev = 1.041, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( companyalsoknownas(A, I), cityhascompanyoffice(J, I) )
%   | then if ( cityhascompanyoffice(K, A), companyceo(I, L) )
%   | | then return -0.01297197823469521;  // std dev = 0.311, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return -0.07579094826649457;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | then return 0.3325991219530213;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(N, A), companyceo(N, P) )
%   | | | then return -0.07064694317188802;  // std dev = 2.538, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.04087199473414046;  // std dev = 11.015, 644.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=214 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.16107908161567705;  // std dev = 0.573, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return -0.030122128756083732;  // std dev = 0.541, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16959534603916346;  // std dev = 1.388, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( bankboughtbank(G, A), bankchiefexecutiveceo(G, H) )
%   | | then return -0.1519654642777322;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0.14322391650257285;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.030508264204255627;  // std dev = 3.134, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   else if ( countryhascompanyoffice(J, A), bankbankincountry(K, J) )
%   | then if ( companyceo(A, L) )
%   | | then return -0.06261939086180096;  // std dev = 0.195, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else return 0.053853190385663115;  // std dev = 0.359, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | else return 0.03916631074073878;  // std dev = 0.439, 593.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=201 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '37.883', 'seconds']
Refined model CLL: -0.309836


******************************************
Best model found
******************************************
Results 

CLL : -0.309725 

AUC ROC : 0.768278 

AUC PR : 0.110987 

Precision : 0.112442 

Recall : 0.235521 

F1 : 0.152215 

Total Learning Time : 10.799 

Total Inference Time : 51.67507195472717 

Total revision time: 132.40161454963683
Best scored revision CLL: -0.309836


Results 

CLL : -0.309725 

AUC ROC : 0.768278 

AUC PR : 0.110987 

Precision : 0.112442 

Recall : 0.235521 

F1 : 0.152215 

Total Learning Time : 132.49125874328612 

Total Inference Time : 51.67507195472717 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.638
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26936388837054054;  // std dev = 0.492, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1914822684328443;  // std dev = 4.619, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | else return 0.18555107033082455;  // std dev = 0.469, 562.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.16613100313273818;  // std dev = 5.371, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.20967607946684322;  // std dev = 4.467, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return 0.1501793486719274;  // std dev = 11.217, 582.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.046490920346540676;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.12523233513064225;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18358769454009047;  // std dev = 4.697, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
%   | | else return 0.1467302821840818;  // std dev = 0.472, 550.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.12132400732270793;  // std dev = 0.474, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.13083197740877675;  // std dev = 0.479, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1263308970928869;  // std dev = 11.951, 638.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.061923817499978585;  // std dev = 2.897, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else return 0.05807459106417612;  // std dev = 4.433, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1549403400165878;  // std dev = 4.593, 87.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11347312378166097;  // std dev = 0.476, 531.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.18990598544283413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.10364972429254755;  // std dev = 5.195, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.12845833498365006;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.054879452981222536;  // std dev = 11.993, 674.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.020667892606486462;  // std dev = 2.910, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0.07082513024577285;  // std dev = 4.321, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05321847018874075;  // std dev = 12.182, 678.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07032422398162812;  // std dev = 2.352, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.0018675976202231863;  // std dev = 1.905, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.09328561396890926;  // std dev = 0.493, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04560239234314326;  // std dev = 0.467, 673.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.028539008665053392;  // std dev = 0.463, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.025453111238837284;  // std dev = 2.106, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.010606362239923062;  // std dev = 4.329, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.042104677994049;  // std dev = 11.134, 564.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06410352730005943;  // std dev = 2.357, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04990121075754653;  // std dev = 4.626, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.04791844605679484;  // std dev = 4.593, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.042376890659161545;  // std dev = 11.060, 549.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '5.779', 'seconds']
Parameter learned model CLL:-0.368437 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.492, 63, 44], 'false,true': [4.619, 64, 32], 'false,false': [0.469, 378, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.371, 84, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.467, 53, 32], 'false,false,false,false': [11.217, 398, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.449, 24, 8], 'true,false,false': [4.654, 67, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.697, 57, 36], 'false,false,false': [0.472, 366, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.474, 17, 9], 'true,false': [0.479, 62, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.951, 422, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.897, 28, 12], 'true,false': [4.433, 66, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.593, 51, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 347, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [5.195, 71, 44], 'false,false,true': [2.225, 13, 8], 'false,false,false': [11.993, 466, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.91, 29, 12], 'true,false': [4.321, 56, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.182, 458, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.352, 16, 9], 'true,false,true': [1.905, 13, 5], 'true,false,false': [0.493, 42, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.467, 457, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.463, 88, 40], 'false,true,true,true': [2.106, 12, 7], 'false,true,true,false': [4.329, 53, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.134, 380, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.357, 14, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.626, 56, 35], 'false,true': [4.593, 62, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.06, 365, 184]}]
{'': [0.24211721547733508, 0.22050794061400267], 'true': [nan, 0.24211721547733508], 'false': [0.22222222222222363, 0.2202099770772942]}
{'': [0.22540238546637867, 0.21895601796438643], 'false': [nan, 0.21895601796438505], 'false,false': [nan, 0.21895601796438643], 'false,false,false': [0.23474048442906637, 0.21619961974941435]}
{'': [0.2122634093330385, 0.22490858058488017], 'false': [nan, 0.22490858058488017], 'false,false': [0.23725286160249742, 0.22262479338843028], 'false,false,true': [nan, 0.23725286160249742], 'true': [nan, 0.21226340933303833], 'true,false': [0.1874999999999998, 0.21875318845015776]}
{'': [0.22869688261798432, 0.22387587514296664], 'true': [0.22511594606380275, 0.22963761202285246], 'false': [nan, 0.22387587514296664], 'false,false': [nan, 0.22387587514296664]}
{'': [0.20933341081887893, 0.22891475506361147], 'false': [0.24252557439764452, 0.22644266405637567], 'false,true': [nan, 0.2425255743976443], 'false,false': [nan, 0.22644266405637567], 'true': [0.20988427381287797, 0.20909457818519728]}
{'': [0.0, 0.21740255810455697], 'false': [0.23471485248446058, 0.21423032653179364], 'false,false': [0.23582766439909297, 0.21339382843039847], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.21766699245233914, 0.21888122545530808], 'false': [nan, 0.2188812254553076], 'false,false': [nan, 0.21888122545530808], 'false,false,false': [nan, 0.21888122545530808], 'true': [0.2065311382330449, 0.22227718436496569]}
{'': [0.23287303464046144, 0.21795032723626326], 'true': [0.22127603315655336, 0.23608966705272647], 'true,false': [0.201540310070908, 0.2430555555555551], 'false': [nan, 0.21795032723626326], 'false,false': [nan, 0.21795032723626326]}
{'': [0.21426944145156018, 0.22138457045642004], 'false': [0.22949034026696197, 0.2198078567476487], 'false,true': [0.22949034026696197, nan], 'false,true,true': [0.2333807194412627, 0.22854744467716778], 'false,false': [nan, 0.2198078567476487]}
{'': [0.23649217466014386, 0.2230657016123914], 'true': [0.24158339655824848, 0.23516468728342066], 'true,true': [nan, 0.2415833965582483], 'true,false': [nan, 0.23516468728342066], 'true,false,false': [nan, 0.23516468728342066], 'false': [0.22443903895979253, 0.22282606892478551], 'false,false': [nan, 0.22282606892478551]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 10.607
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E), companyceo(C, F) )
%   | then return 0.17814893509951235;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(D, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( acquired(A, G) )
%   | then if ( companyceo(G, H) )
%   | | then if ( companyalsoknownas(A, I) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.5914822684328456;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return 0.12644161802634116;  // std dev = 0.443, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return 0.10814893509951151;  // std dev = 0.433, 104.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=26 */
%   | | else return 0.19529179224236504;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=177 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankboughtbank(D, A) )
%   then if ( companyceo(A, E) )
%   | then return 0.3157264684445291;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.5826753938460708;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.7690063453060458;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(F, H), companyceo(H, I) )
%   | | | then return -0.03623372526815182;  // std dev = 1.594, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.19640326696376254;  // std dev = 2.604, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( companyalsoknownas(A, J), acquired(A, K) )
%   | | then if ( countryhascompanyoffice(L, K), countryhascompanyoffice(L, J) )
%   | | | then return 0.34204966939976966;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.024288899371095792;  // std dev = 1.852, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( companyalsoknownas(A, M), economicsectorcompany(B, M) )
%   | | | then return 0.836044549271695;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15345077528230708;  // std dev = 12.213, 686.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=220 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(D, E), companyalsoknownas(E, F) )
%   | then return -0.16124140780082866;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( companyceo(A, G), acquired(H, A) )
%   | | then return 0.2509808393794582;  // std dev = 0.474, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.024878408757176555;  // std dev = 0.397, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   else if ( companyalsoknownas(A, I), companyceo(I, J) )
%   | then if ( companyalsoknownas(I, K), economicsectorcompany(B, K) )
%   | | then return 0.7417198074796774;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.18980812136710307;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(L, A), cityhascompanyoffice(M, L) )
%   | | then if ( companyceo(A, N) )
%   | | | then return 0.7319511146889907;  // std dev = 0.222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15088274448970554;  // std dev = 2.872, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( acquired(A, P) )
%   | | | then return 0.18955505502480752;  // std dev = 4.244, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   | | | else return 0.13567071131358133;  // std dev = 11.416, 598.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=194 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankboughtbank(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.13326112965262954;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.5210799661174922;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | then if ( companyceo(F, G) )
%   | | then return 0.5121743617706209;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6937945155666816;  // std dev = 0.262, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then if ( cityhascompanyoffice(I, A), cityhascompanyoffice(I, H) )
%   | | | then return 0.5324883846025625;  // std dev = 0.249, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7628890841703724;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(J, A), companyceo(J, K) )
%   | | | then return -0.03284926627349648;  // std dev = 2.755, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | | else return 0.12246927665890034;  // std dev = 12.089, 662.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=222 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, C) )
%   | then return 0.4172722311994998;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6191715188358884;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(A, E), acquired(A, F) )
%   | then if ( companyceo(E, G), acquired(H, A) )
%   | | then return 0.16986329358119726;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( countryhascompanyoffice(I, F), countryhascompanyoffice(I, E) )
%   | | | then return 0.09902847586807025;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.08630547231597824;  // std dev = 1.579, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | else if ( acquired(A, J), countryhascompanyoffice(K, J) )
%   | | then if ( countryhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.7304030044745559;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2608066340863614;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(A, M), companyceo(M, N) )
%   | | | then return -0.009123297481305892;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.09050971758224666;  // std dev = 12.138, 687.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=225 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.1629002664291788;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( acquired(A, D), companyalsoknownas(A, E) )
%   | then if ( acquired(F, A) )
%   | | then if ( companyceo(E, G) )
%   | | | then return 0.23351199981733278;  // std dev = 0.930, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.036511989902229404;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return -0.002502346244212613;  // std dev = 1.931, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.1644110562701592;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6235297919200465;  // std dev = 0.993, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.2552309050344665;  // std dev = 0.348, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( acquired(K, A), companyalsoknownas(K, L) )
%   | | | then return 0.03180867721377959;  // std dev = 2.783, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.08858807966951818;  // std dev = 11.594, 622.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=216 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3803281047567183;  // std dev = 0.096, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(A, D), cityhascompanyoffice(E, D) )
%   | then if ( cityhascompanyoffice(E, F), bankboughtbank(G, F) )
%   | | then if ( companyceo(D, H) )
%   | | | then return -0.027441311341249757;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.20157290652726711;  // std dev = 1.375, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.04450065569794348;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.23559695438751302;  // std dev = 0.949, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( acquired(J, A) )
%   | | then if ( companyalsoknownas(J, K), companyceo(J, L) )
%   | | | then return 0.11089513343432753;  // std dev = 2.176, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.013445983118389368;  // std dev = 3.488, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.06122157328336119;  // std dev = 4.364, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | | | else return 0.06627364539993574;  // std dev = 10.602, 536.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=180 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankboughtbank(D, C) )
%   then return 0.33757998868434574;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( companyalsoknownas(A, E), acquired(A, F) )
%   | then if ( acquired(G, A), companyceo(E, H) )
%   | | then return 0.3279251860771209;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.010317750242858423;  // std dev = 1.940, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.1578341034777465;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( acquired(A, J), acquired(K, A) )
%   | | then if ( acquired(J, K) )
%   | | | then return 0.21149003200964103;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11598273602496742;  // std dev = 1.419, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.02117164039806291;  // std dev = 4.601, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | | | else return 0.0457755616412624;  // std dev = 11.298, 621.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=208 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.3902586847173192;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( cityhascompanyoffice(E, D) )
%   | | then if ( acquired(F, D) )
%   | | | then return -0.19756862669881212;  // std dev = 0.234, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.028333972147795507;  // std dev = 1.989, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( companyceo(D, G) )
%   | | | then return 0.2534158226461709;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.009786590631756268;  // std dev = 2.070, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( acquired(A, H) )
%   | | then if ( companyceo(H, I) )
%   | | | then return -0.008216354743873106;  // std dev = 2.301, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.13325935978217016;  // std dev = 3.201, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.04710793462905064;  // std dev = 3.987, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.0232334960942731;  // std dev = 10.651, 551.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=174 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return -0.05114125597859278;  // std dev = 0.315, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.6038468683676642;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(C, E), bankboughtbank(F, C) )
%   | | | then return 0.22401921722167284;  // std dev = 0.549, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.025979076782507497;  // std dev = 3.895, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   else if ( companyalsoknownas(A, G), acquired(H, A) )
%   | then return 0.3778678020732209;  // std dev = 0.298, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(I, A), countryhascompanyoffice(J, I) )
%   | | then if ( bankchiefexecutiveceo(I, K), companyceo(I, K) )
%   | | | then return -0.30534549761576296;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.032259399292063826;  // std dev = 1.920, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.001562775729813348;  // std dev = 2.350, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.06632601796184898;  // std dev = 10.854, 537.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=199 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.370', 'seconds']
Refined model CLL: -0.343963


******************************************
Best model found
******************************************
Results 

CLL : -0.344077 

AUC ROC : 0.605055 

AUC PR : 0.051348 

Precision : 0.192469 

Recall : 0.088803 

F1 : 0.121532 

Total Learning Time : 10.607 

Total Inference Time : 24.779496908187866 

Total revision time: 100.39356386184693
Best scored revision CLL: -0.343963


Results 

CLL : -0.344077 

AUC ROC : 0.605055 

AUC PR : 0.051348 

Precision : 0.192469 

Recall : 0.088803 

F1 : 0.121532 

Total Learning Time : 100.48320805549622 

Total Inference Time : 24.779496908187866 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.307
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.20551735615214253;  // std dev = 0.476, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1979547603422294;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | else return 0.19324593686317626;  // std dev = 0.472, 567.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.12443105368296231;  // std dev = 4.826, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17883869497267066;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.17224595722335842;  // std dev = 11.204, 560.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.13974373923441263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.29454670883767226;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.13917394266860741;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07622312209303284;  // std dev = 3.839, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | else return 0.16609332525485987;  // std dev = 0.480, 530.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.012084673791028414;  // std dev = 0.402, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.11239120254456544;  // std dev = 0.467, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1253979268760479;  // std dev = 12.145, 653.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.049141942656603814;  // std dev = 2.535, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else return 0.1438019848405695;  // std dev = 4.893, 101.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09679012891403403;  // std dev = 3.705, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09691403323042895;  // std dev = 0.473, 561.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.07999994070659726;  // std dev = 4.695, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.10917738614241206;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.07221301970754108;  // std dev = 12.112, 661.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return -0.024576942166374124;  // std dev = 2.614, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else return 0.13430893727827356;  // std dev = 4.763, 93.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07818658556945283;  // std dev = 11.684, 601.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.014901727022951044;  // std dev = 1.894, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.208155164544082;  // std dev = 2.044, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return 0.028536828472405854;  // std dev = 0.455, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05752564023431756;  // std dev = 0.477, 644.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.04933390356228537;  // std dev = 0.480, 131.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.04128300444361436;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.010704072188597093;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04290883968102299;  // std dev = 11.157, 551.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05348879099007858;  // std dev = 1.825, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05412639294295196;  // std dev = 4.253, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return -0.013142433614082386;  // std dev = 4.896, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.024058510918533175;  // std dev = 11.240, 567.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.051', 'seconds']
Parameter learned model CLL:-0.37752 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.476, 62, 33], 'false,true': [4.807, 68, 35], 'false,false': [0.472, 377, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.826, 80, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.782, 66, 35], 'false,false,false,false': [11.204, 370, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.596, 14, 13], 'true,false,false': [4.83, 70, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.839, 56, 20], 'false,false,false': [0.48, 340, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.402, 19, 5], 'true,false': [0.467, 59, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.145, 428, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.535, 22, 9], 'true,false': [4.893, 62, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.705, 44, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 371, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.695, 69, 33], 'false,false,true': [1.793, 9, 5], 'false,false,false': [12.112, 441, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.614, 28, 9], 'true,false': [4.763, 54, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.684, 391, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.894, 14, 5], 'true,false,true': [2.044, 8, 9], 'true,false,false': [0.455, 46, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 419, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.48, 83, 48], 'false,true,true,true': [1.238, 7, 2], 'false,true,true,false': [3.657, 52, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.157, 361, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.825, 11, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.253, 51, 28], 'false,true': [4.896, 79, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.24, 377, 190]}]
{'': [0.22558593750000142, 0.22304522165293178], 'true': [0.0, 0.22670360110803467], 'false': [0.22433782637383498, 0.2228070011726713]}
{'': [0.2061276295308289, 0.22452453937801717], 'false': [nan, 0.22452453937801695], 'false,false': [nan, 0.22452453937801717], 'false,false,false': [0.226448387412998, 0.22417091836735106]}
{'': [0.23073953475316844, 0.22633742373245985], 'true': [0.0, 0.23176174542365724], 'true,false': [0.2496570644718796, 0.22222222222222252], 'false': [nan, 0.22633742373245985], 'false,false': [0.19390581717451552, 0.2299750800996775], 'false,false,true': [nan, 0.19390581717451552], 'true,true': [0.0, nan]}
{'': [0.20828613595633547, 0.22587570965141193], 'false': [nan, 0.22587570965141193], 'false,false': [nan, 0.22587570965141193], 'true': [0.161918386066666, 0.21772713260887502]}
{'': [0.2316394662716326, 0.22300730952672904], 'true': [0.20727596631093168, 0.2370130068124798], 'false': [0.2145147450993114, 0.22397615665939363], 'false,false': [nan, 0.22397615665939363], 'false,true': [nan, 0.21451474509931143]}
{'': [nan, 0.2213395049706737], 'false': [0.2161249255957457, 0.22212101614661744], 'false,false': [0.229591836734694, 0.22193444453103547]}
{'': [0.2322106013683025, 0.2271437458684479], 'true': [0.18471019841668027, 0.2439235746877141], 'false': [nan, 0.22714374586845107], 'false,false': [nan, 0.2271437458684479], 'false,false,false': [nan, 0.2271437458684479]}
{'': [0.21471631874461924, 0.22740018620637958], 'false': [nan, 0.22740018620637958], 'false,false': [nan, 0.22740018620637958], 'true': [0.1887431027671963, 0.22024763882056592], 'true,false': [0.24584660903381142, 0.2068639053254442]}
{'': [0.2303833914593605, 0.22162103154160986], 'false': [0.1887752473987795, 0.22592152199762294], 'false,false': [nan, 0.22592152199762294], 'false,true': [0.1887752473987795, nan], 'false,true,true': [0.17036146399893898, 0.19103620674880417]}
{'': [0.22542433564138756, 0.2208963864407666], 'true': [0.20805951425756444, 0.22894119302201282], 'true,false': [nan, 0.22894119302201282], 'true,false,false': [nan, 0.22894119302201282], 'false': [0.210241349641391, 0.22280700117267146], 'false,false': [nan, 0.22280700117267146], 'true,true': [nan, 0.2080595142575645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 20.445
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16656015005278196;  // std dev = 0.462, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   else if ( companyceo(A, D) )
%   | then if ( bankchiefexecutiveceo(E, D), economicsectorcompany(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankchiefexecutiveceo(A, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.258148935099511;  // std dev = 4.648, 90.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
%   | else if ( cityhascompanyoffice(F, A), acquired(A, G) )
%   | | then if ( cityhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(A, I), companyceo(I, J) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.1853884232165099;  // std dev = 10.974, 547.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=179 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E), acquired(E, F) )
%   | then return 0.22373365448410606;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( companyceo(A, G), countryhascompanyoffice(H, A) )
%   | | then return -0.1719641240154954;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( acquired(A, I) )
%   | | | then return 0.1011504747906845;  // std dev = 1.482, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.16530192588474063;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( cityhascompanyoffice(J, A), bankchiefexecutiveceo(A, K) )
%   | then if ( cityhascompanyoffice(J, L), economicsectorcompany(B, L) )
%   | | then return 0.8106591689389792;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14577332132339244;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( companyalsoknownas(A, M), acquired(N, M) )
%   | | then return 0.5821188229466413;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( acquired(P, A), economicsectorcompany(B, P) )
%   | | | then return 0.8366403189853014;  // std dev = 8.43e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.13940087394842637;  // std dev = 12.538, 747.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=229 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.1713249086660519;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.5226295909794106;  // std dev = 0.448, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.6892894538499964;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11338749479289018;  // std dev = 4.927, 121.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=37 */
%   else if ( acquired(G, A) )
%   | then return 0.021950513465596243;  // std dev = 0.383, 92.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.7632254711980501;  // std dev = 0.318, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1853611655644943;  // std dev = 0.048, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.11491014705670748;  // std dev = 2.578, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.14068129390828493;  // std dev = 10.553, 507.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=166 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), countryhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(E, A), bankchiefexecutiveceo(A, F) )
%   | then return 0.053298374183350226;  // std dev = 0.346, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( countryhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | then return 0.7492286480626785;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.2148345689202022;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( companyalsoknownas(A, H), acquired(A, I) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.7114462003565095;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( countryhascompanyoffice(J, H), countryhascompanyoffice(K, A) )
%   | | | then return -0.20625379356057733;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2120978953276448;  // std dev = 3.082, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( companyalsoknownas(A, L), companyceo(L, M) )
%   | | then return -0.019608492094015578;  // std dev = 0.381, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( acquired(A, N), acquired(N, P) )
%   | | | then return -0.06878100235336326;  // std dev = 1.316, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.10453420832210648;  // std dev = 11.943, 693.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=219 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.6106884034480319;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.0886232263752569;  // std dev = 0.314, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   else if ( countryhascompanyoffice(E, A), bankbankincountry(F, E) )
%   | then if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | | then if ( companyceo(A, I), companyceo(G, J) )
%   | | | then return 0.039313212876273144;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07473441066833018;  // std dev = 1.098, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( countryhascompanyoffice(E, K), economicsectorcompany(B, K) )
%   | | | then return 0.5474660233514419;  // std dev = 1.011, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.1723743701617056;  // std dev = 0.173, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | then return 0.7120212278457144;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( acquired(A, M), companyceo(A, N) )
%   | | | then return 0.004189190834653894;  // std dev = 2.719, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.12530124672226278;  // std dev = 11.266, 572.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=203 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then return 0.018774932891332457;  // std dev = 0.353, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return -0.12125289658908171;  // std dev = 0.228, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0.11112097193726124;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.5888878263648651;  // std dev = 0.271, 61.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=57 */
%   | | else return -0.2249663076896528;  // std dev = 0.428, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( bankchiefexecutiveceo(A, I) )
%   | | then if ( companyceo(J, I), economicsectorcompany(B, J) )
%   | | | then return 0.44939899039620634;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12566050816226504;  // std dev = 1.197, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.6271009709354808;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08208882741569042;  // std dev = 10.730, 554.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=184 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( countryhascompanyoffice(D, A), companyceo(A, E) )
%   | then if ( countryhascompanyoffice(D, F), economicsectorcompany(B, F) )
%   | | then return 0.575360459408283;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.20607127507879675;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.4894645824101554;  // std dev = 0.194, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.4450069249573865;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05571461863743136;  // std dev = 3.120, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   else if ( acquired(A, H), bankboughtbank(I, H) )
%   | then return -0.18029789374700256;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | then return -0.005916299240803754;  // std dev = 0.345, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return 4.892367939922412E-4;  // std dev = 1.973, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08996124800305737;  // std dev = 10.745, 550.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=199 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.303215469136502;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.09825664813013768;  // std dev = 0.231, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( bankchiefexecutiveceo(G, C), economicsectorcompany(B, G) )
%   | | | then return 0.40217926725170994;  // std dev = 0.443, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.011640250288996309;  // std dev = 3.907, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.506351685669516;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, I), companyceo(I, J) )
%   | | then if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.02826910870058642;  // std dev = 0.887, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.1258269149074633;  // std dev = 0.688, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.04983422461044928;  // std dev = 3.724, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.03861266627564192;  // std dev = 10.266, 519.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=164 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.2519775204581906;  // std dev = 0.238, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5751343325625052;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.28364393047321834;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, G), companyceo(A, H) )
%   | | | then return 0.04446955179889074;  // std dev = 2.139, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.08851673147526483;  // std dev = 2.524, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | else if ( acquired(I, A), countryhascompanyoffice(J, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.33971298023962304;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11117413415197301;  // std dev = 1.251, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.39174842513144964;  // std dev = 0.323, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.034625643011581435;  // std dev = 11.033, 641.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=208 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E), economicsectorcompany(B, E) )
%   | then return 0.5699867645242787;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.057526478897356716;  // std dev = 0.280, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   else if ( countryhascompanyoffice(F, A), acquired(A, G) )
%   | then if ( companyalsoknownas(A, H) )
%   | | then if ( companyceo(A, I), acquired(H, J) )
%   | | | then return 0.07529705808076022;  // std dev = 0.946, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.0074290899883155005;  // std dev = 1.002, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.1161795433436561;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( acquired(A, K) )
%   | | then if ( companyceo(A, L), cityhascompanyoffice(M, K) )
%   | | | then return -0.12858821504551154;  // std dev = 0.474, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10897161901649212;  // std dev = 3.273, 67.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=30 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.0683443227853377;  // std dev = 3.506, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | | else return 0.03878700092454188;  // std dev = 10.099, 488.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=165 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.065', 'seconds']
Refined model CLL: -0.314882


******************************************
Best model found
******************************************
Results 

CLL : -0.315083 

AUC ROC : 0.72254 

AUC PR : 0.089634 

Precision : 0.192399 

Recall : 0.155769 

F1 : 0.172157 

Total Learning Time : 20.445 

Total Inference Time : 44.376550912857056 

Total revision time: 130.47075524520875
Best scored revision CLL: -0.314882


Results 

CLL : -0.315083 

AUC ROC : 0.72254 

AUC PR : 0.089634 

Precision : 0.192399 

Recall : 0.155769 

F1 : 0.172157 

Total Learning Time : 130.56039943885804 

Total Inference Time : 44.376550912857056 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.356
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13087620782678436;  // std dev = 0.445, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.19148226843284427;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | else return 0.1792803826868622;  // std dev = 0.467, 601.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.14282941657809467;  // std dev = 4.790, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.19490761889112357;  // std dev = 4.659, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
%   | | | else return 0.1653738019773225;  // std dev = 11.367, 584.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.3059681098987904;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.07452949645047299;  // std dev = 2.440, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return 0.14433472880983803;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.126374575661023;  // std dev = 4.070, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | else return 0.1447298316430443;  // std dev = 0.472, 578.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1321251969930886;  // std dev = 0.474, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.02057622665535568;  // std dev = 0.412, 111.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13061200111418575;  // std dev = 12.202, 660.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.20377675886936464;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else return 0.07863311855300519;  // std dev = 4.399, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09666831217075643;  // std dev = 4.071, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10654144019522001;  // std dev = 0.474, 565.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6861436438794284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06901652288237142;  // std dev = 4.754, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.11806562305245855;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.09227925106493515;  // std dev = 11.847, 619.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.21417109961064523;  // std dev = 2.636, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else return 0.026776620519266544;  // std dev = 4.464, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0659197033009452;  // std dev = 12.010, 650.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10008836260719157;  // std dev = 2.279, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.09879801951645684;  // std dev = 2.041, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.04942028081261655;  // std dev = 0.454, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04597934320538511;  // std dev = 0.471, 679.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.028473746897861196;  // std dev = 0.468, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.031471600856844875;  // std dev = 2.055, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.00958494835043602;  // std dev = 3.667, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05614501199010837;  // std dev = 11.187, 549.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.43862968510021383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0872566616096295;  // std dev = 2.180, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05315896855024204;  // std dev = 4.101, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.022283260252645015;  // std dev = 4.715, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.030190639465389104;  // std dev = 11.308, 572.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.326', 'seconds']
Parameter learned model CLL:-0.372328 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.372, 15, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.445, 64, 24], 'false,true': [4.761, 68, 34], 'false,false': [0.467, 408, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.79, 75, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.659, 60, 34], 'false,false,false,false': [11.367, 391, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.44, 23, 8], 'true,false,false': [4.737, 66, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.07, 54, 24], 'false,false,false': [0.472, 385, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.474, 17, 9], 'true,false': [0.412, 87, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.202, 433, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.87, 19, 15], 'true,false': [4.399, 62, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.071, 55, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 372, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.754, 77, 32], 'false,false,true': [2.683, 18, 12], 'false,false,false': [11.847, 404, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.636, 14, 15], 'true,false': [4.464, 69, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.01, 433, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.279, 13, 9], 'true,false,true': [2.041, 12, 6], 'true,false,false': [0.454, 44, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 452, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.468, 86, 43], 'false,true,true,true': [2.055, 14, 6], 'false,true,true,false': [3.667, 54, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.187, 356, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.18, 12, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.101, 55, 24], 'false,true': [4.715, 66, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.308, 379, 193]}]
{'': [0.20782844387755237, 0.2186362449894703], 'false': [0.22222222222222365, 0.21800604095780737], 'true': [0.23437500000000003, 0.19834710743801753], 'true,false': [nan, 0.19834710743801753]}
{'': [0.21243639892639796, 0.22269943519716287], 'false': [nan, 0.22269943519716281], 'false,false': [nan, 0.22269943519716287], 'false,false,false': [0.230873698506112, 0.22126278382434794]}
{'': [0.21859350928657834, 0.22125642515693417], 'false': [nan, 0.22125642515693417], 'false,false': [0.2123807290169484, 0.22241412339412084], 'true': [0.25, 0.21763675474335076], 'true,true': [0.25, nan], 'true,false': [0.1921001624501162, 0.22440000000000082], 'false,false,true': [nan, 0.2123807290169484]}
{'': [0.181861396851261, 0.22557892885923106], 'false': [nan, 0.22557892885923106], 'false,false': [nan, 0.22557892885923106], 'true': [0.2249430949909476, 0.16940871023151474]}
{'': [0.22561941470235525, 0.22306333515431978], 'true': [0.2422094528722121, 0.2150579407864318], 'false': [0.20979070023874802, 0.2249071971180204], 'false,false': [nan, 0.2249071971180204], 'false,true': [nan, 0.2097907002387486]}
{'': [0.0, 0.22456860371305795], 'false': [0.20737528566378183, 0.22737023664847994], 'false,false': [0.2399999999999999, 0.22672739511477233], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.21948419677471356, 0.22189705284925892], 'false': [nan, 0.22189705284925948], 'false,false': [nan, 0.22189705284925892], 'false,false,false': [nan, 0.22189705284925892], 'true': [0.2395878428032539, 0.2053914154139206]}
{'': [0.21761968886232033, 0.222302941489502], 'false': [nan, 0.222302941489502], 'false,false': [nan, 0.222302941489502], 'true': [0.23615024163489995, 0.2121862717941923], 'true,false': [0.231483102671622, 0.20603537981269507]}
{'': [0.21898925428079827, 0.22325360379594594], 'false': [0.19239262016453376, 0.2279620837356235], 'false,false': [nan, 0.2279620837356235], 'false,true': [0.19239262016453376, nan], 'false,true,true': [0.21116158794289172, 0.186812574475007]}
{'': [0.21732339361232372, 0.22339220328251258], 'false': [0.2223486776792084, 0.22356533326812575], 'false,false': [nan, 0.22356533326812575], 'true': [0.23189684321879828, 0.21290686949689772], 'true,true': [0.0, 0.23761249482559954], 'true,false': [nan, 0.21290686949689772], 'true,false,false': [nan, 0.21290686949689772]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 9.702
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(A, D) )
%   | then if ( acquired(D, E), cityhascompanyoffice(F, D) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(D, G), companyceo(A, H) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.07027014722072432;  // std dev = 4.068, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | else if ( acquired(I, A), companyceo(A, J) )
%   | | then if ( countryhascompanyoffice(K, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( acquired(L, A), countryhascompanyoffice(M, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19798633347349204;  // std dev = 11.746, 615.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=209 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( countryhascompanyoffice(E, D), economicsectorcompany(B, D) )
%   | then return 0.7904644683560674;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(F, A) )
%   | | | then return 0.5669017497041159;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.059487121251541854;  // std dev = 2.332, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.800688580653868;  // std dev = 0.150, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return -0.16874691046729398;  // std dev = 0.173, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.8379923771820167;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3322996346721071;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.1314546133379119;  // std dev = 0.457, 635.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=191 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( bankboughtbank(A, D), companyceo(D, E) )
%   | then return 0.12101924133965616;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( countryhascompanyoffice(F, A) )
%   | | then return -0.15261633013120668;  // std dev = 0.259, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( acquired(C, G) )
%   | | | then return 0.15186539405368726;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.020190988842419173;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.7168047383271551;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.7330572224903915;  // std dev = 0.486, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.1767518539078669;  // std dev = 0.180, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.6111304833071495;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.10363873764713281;  // std dev = 11.856, 708.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=208 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5723706326689596;  // std dev = 0.100, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return -0.10792841436296265;  // std dev = 0.211, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else return 0.03678014070619637;  // std dev = 0.428, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   else if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | then if ( companyalsoknownas(A, G), cityhascompanyoffice(F, G) )
%   | | then return 0.43361181081976663;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.012655206063570233;  // std dev = 0.363, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( companyceo(A, H) )
%   | | then if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.4706863222889436;  // std dev = 0.260, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08561093467684296;  // std dev = 3.448, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.11856577478258597;  // std dev = 3.631, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | | else return 0.13728496038715843;  // std dev = 10.177, 475.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=163 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.43338293686566887;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(C, E), acquired(F, E) )
%   | | then return 0.3257931067882114;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( countryhascompanyoffice(G, C), countryhascompanyoffice(G, A) )
%   | | | then return 0.11750406470049782;  // std dev = 1.143, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.05561833508739613;  // std dev = 2.222, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then if ( cityhascompanyoffice(I, A) )
%   | | then return 0.2994348977027414;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.45815684730567957;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.4842091179921011;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04182006187203133;  // std dev = 3.123, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | else return 0.10734777755299484;  // std dev = 0.459, 606.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=203 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.7140347737853752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then if ( acquired(A, E) )
%   | | | then return 0.2847489522371558;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.38813776701148905;  // std dev = 0.327, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return -0.1184967500428228;  // std dev = 1.009, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.012775033052849384;  // std dev = 3.482, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.3047958779829603;  // std dev = 0.222, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6920555033884414;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06421327364015118;  // std dev = 0.439, 692.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=218 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), countryhascompanyoffice(E, A) )
%   | then return 0.2153733580888699;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4822571254795549;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then if ( acquired(G, A) )
%   | | | then return 0.2464456609694193;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.333178105676012;  // std dev = 0.176, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyalsoknownas(F, H) )
%   | | | then return -0.1661779040352968;  // std dev = 0.973, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return -0.013976475789284525;  // std dev = 3.953, 110.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=26 */
%   | else if ( companyalsoknownas(A, I), acquired(J, I) )
%   | | then return -0.25605099316468644;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.05636967493375248;  // std dev = 3.769, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.08020810368536528;  // std dev = 10.581, 519.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=177 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), cityhascompanyoffice(D, A) )
%   then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | then return 0.5026625538619114;  // std dev = 0.211, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.1899051568417059;  // std dev = 0.042, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( acquired(F, A) )
%   | then if ( companyalsoknownas(F, G), economicsectorcompany(B, G) )
%   | | then return 0.5078707100484943;  // std dev = 0.496, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( economicsectorcompany(B, F) )
%   | | | then return 0.26097359589191144;  // std dev = 0.325, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.0639942939931054;  // std dev = 3.512, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | else if ( acquired(A, H) )
%   | | then if ( acquired(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.4493142495792626;  // std dev = 0.445, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06072018980746149;  // std dev = 2.559, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.05358395509166913;  // std dev = 3.469, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | | else return 0.08183952977695613;  // std dev = 9.984, 447.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=159 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( companyceo(A, D), companyalsoknownas(C, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.4741681330499656;  // std dev = 0.420, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03536503052812482;  // std dev = 0.331, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.22482223338574858;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.04400002514683461;  // std dev = 0.351, 93.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   else if ( countryhascompanyoffice(F, A), companyceo(A, G) )
%   | then return -0.031493466595648785;  // std dev = 0.207, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( acquired(A, H), companyceo(H, I) )
%   | | then if ( companyalsoknownas(H, J) )
%   | | | then return -0.22177542456630028;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1621972470554428;  // std dev = 1.891, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( companyalsoknownas(A, K), acquired(L, K) )
%   | | | then return -0.09023139965148094;  // std dev = 1.177, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.0471608380980113;  // std dev = 10.956, 601.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=203 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.025050677639667365;  // std dev = 0.307, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return -0.05549022621777047;  // std dev = 0.162, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.40513316224233975;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06930068943742268;  // std dev = 2.720, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   else if ( cityhascompanyoffice(G, A), acquired(A, H) )
%   | then return 0.06766294238050422;  // std dev = 0.332, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankboughtbank(J, A) )
%   | | | then return -0.2503989565669642;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0023028804589384747;  // std dev = 2.417, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.39203898227620665;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03726636869354743;  // std dev = 10.701, 567.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=192 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '25.017', 'seconds']
Refined model CLL: -0.316642


******************************************
Best model found
******************************************
Results 

CLL : -0.316959 

AUC ROC : 0.732133 

AUC PR : 0.096147 

Precision : 0.221884 

Recall : 0.140927 

F1 : 0.172373 

Total Learning Time : 9.702 

Total Inference Time : 45.36322379112244 

Total revision time: 122.1277705745697
Best scored revision CLL: -0.316642


Results 

CLL : -0.316959 

AUC ROC : 0.732133 

AUC PR : 0.096147 

Precision : 0.221884 

Recall : 0.140927 

F1 : 0.172373 

Total Learning Time : 122.26027074623107 

Total Inference Time : 45.36322379112244 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.539
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27719655414713157;  // std dev = 0.493, 105.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.18467954734440892;  // std dev = 4.642, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else return 0.19576361399859044;  // std dev = 0.473, 545.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.2569627927628392;  // std dev = 4.980, 101.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.16748208488031666;  // std dev = 4.619, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | | else return 0.17782540582851245;  // std dev = 10.976, 533.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.030029904947214803;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.13289785697114256;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1891208140381246;  // std dev = 4.612, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
%   | | else return 0.11148245073136259;  // std dev = 0.460, 603.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10539330977114458;  // std dev = 0.473, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.10253382473306136;  // std dev = 0.475, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1045888167755884;  // std dev = 12.153, 683.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.14325448095495177;  // std dev = 2.728, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else return 0.06496488216340303;  // std dev = 4.442, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14447167450451154;  // std dev = 4.575, 86.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09951826464941782;  // std dev = 0.470, 559.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.06595288832671224;  // std dev = 5.281, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.07737782751454103;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.06963083076744352;  // std dev = 11.922, 657.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05934395967245153;  // std dev = 2.822, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.061283077777644836;  // std dev = 4.373, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06644535473774084;  // std dev = 12.079, 656.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.05895736634800758;  // std dev = 2.362, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.026920109469587145;  // std dev = 1.851, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 9.257812284307974E-4;  // std dev = 0.471, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05695336218528733;  // std dev = 0.470, 654.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return -2.988912591414511E-4;  // std dev = 0.450, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.05400059192660753;  // std dev = 2.063, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.08569833249893262;  // std dev = 4.101, 69.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05035839997627098;  // std dev = 11.055, 548.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.23570244828661724;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.037545211695716556;  // std dev = 2.493, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06624019870106178;  // std dev = 4.548, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.01090842894610102;  // std dev = 4.762, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02758572327650544;  // std dev = 11.158, 569.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.099', 'seconds']
Parameter learned model CLL:-0.366257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.493, 61, 44], 'false,true': [4.642, 66, 32], 'false,false': [0.473, 361, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.98, 57, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.619, 64, 32], 'false,false,false,false': [10.976, 349, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.449, 24, 8], 'true,false,false': [4.654, 67, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.612, 52, 36], 'false,false,false': [0.46, 419, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.473, 17, 9], 'true,false': [0.475, 65, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.153, 467, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.728, 20, 12], 'true,false': [4.442, 66, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.575, 50, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 375, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.281, 79, 44], 'false,false,true': [2.309, 16, 8], 'false,false,false': [11.922, 449, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.822, 24, 12], 'true,false': [4.373, 60, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.079, 436, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.362, 15, 9], 'true,false,true': [1.851, 11, 5], 'true,false,false': [0.471, 60, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 438, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.45, 101, 40], 'false,true,true,true': [2.063, 11, 7], 'false,true,true,false': [4.101, 40, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.055, 364, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.493, 21, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.548, 51, 35], 'false,true': [4.762, 77, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.158, 385, 184]}]
{'': [0.24344671201814141, 0.22307950920186292], 'true': [nan, 0.24344671201814141], 'false': [0.21990837151187143, 0.22363100749095494]}
{'': [0.24555092097024675, 0.22547271303211658], 'false': [nan, 0.22547271303211683], 'false,false': [nan, 0.22547271303211658], 'false,false,false': [0.22222222222222132, 0.22604183900116206]}
{'': [0.2130722739166651, 0.2164828899664389], 'false': [nan, 0.2164828899664389], 'false,false': [0.24173553719008167, 0.21202995525413373], 'false,false,true': [nan, 0.24173553719008167], 'true': [nan, 0.21307227391666528], 'true,false': [0.1874999999999998, 0.21875318845015795]}
{'': [0.22548857887073076, 0.21623662153268303], 'true': [0.22396928494716406, 0.22588190804465366], 'false': [nan, 0.21623662153268303], 'false,false': [nan, 0.21623662153268303]}
{'': [0.21683876459256612, 0.22405414443280366], 'false': [0.24336744993031995, 0.2208134254562658], 'false,true': [nan, 0.2433674499303201], 'false,false': [nan, 0.2208134254562658], 'true': [0.23255794010769826, 0.20993091812143577]}
{'': [nan, 0.21812388721647646], 'false': [0.22676547995483604, 0.21656068279163662], 'false,false': [0.22222222222222202, 0.21635175346599897]}
{'': [0.21846947700617816, 0.22239639003072295], 'false': [nan, 0.22239639003072761], 'false,false': [nan, 0.22239639003072295], 'false,false,false': [nan, 0.22239639003072295], 'true': [0.22127924067688248, 0.21731893656692047]}
{'': [0.2236020772935846, 0.2211552840687961], 'true': [0.232381900743022, 0.22107370050972414], 'false': [nan, 0.2211552840687961], 'false,false': [nan, 0.2211552840687961], 'true,false': [0.2140395539989595, 0.22222222222222238]}
{'': [0.20289743084150078, 0.2257791120095502], 'false': [0.24239726643930162, 0.2230273323032663], 'false,true': [0.24239726643930162, nan], 'false,true,true': [0.23641616619946296, 0.24374967481892987], 'false,false': [nan, 0.2230273323032663]}
{'': [0.2326242218239936, 0.21711650956369447], 'true': [0.2017556859502975, 0.2405349097310627], 'true,false': [nan, 0.2405349097310627], 'true,false,false': [nan, 0.2405349097310627], 'false': [0.20807733661489558, 0.2188033765648133], 'false,false': [nan, 0.2188033765648133], 'true,true': [0.0, 0.20721422095251132]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 14.591
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyceo(C, D) )
%   | | then return 0.06449814144871872;  // std dev = 0.405, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else if ( acquired(A, E) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.7956489350995116;  // std dev = 1.369, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.11814893509951237;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.1882078741957751;  // std dev = 10.609, 509.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=168 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.8077742179626584;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.8046852220809578;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.024892818205470454;  // std dev = 0.389, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   else if ( acquired(A, F), acquired(F, G) )
%   | then if ( cityhascompanyoffice(H, A) )
%   | | then return 0.15327127412243996;  // std dev = 0.424, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( countryhascompanyoffice(I, F) )
%   | | | then return 0.5574857502559226;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26494274692849873;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then return 0.10001908839028668;  // std dev = 0.428, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.22682338977039118;  // std dev = 3.775, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
%   | | | else return 0.1505555142054316;  // std dev = 11.224, 606.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=192 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(D, E) )
%   | | then return 0.7059909517435558;  // std dev = 0.058, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.4099588044239775;  // std dev = 0.454, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else return -0.15884374249448807;  // std dev = 0.422, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | then if ( cityhascompanyoffice(H, F) )
%   | | then if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.8180211387433988;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1103211755023306;  // std dev = 0.926, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.811721738445894;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, J), bankboughtbank(J, K) )
%   | | then return 0.40826765033866613;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( bankboughtbank(A, L) )
%   | | | then return -0.05151091151131199;  // std dev = 0.917, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.13841460428420443;  // std dev = 11.470, 604.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=199 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, C) )
%   | then return 0.6817538535820379;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5989288156415091;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( acquired(F, A), acquired(G, F) )
%   | | then return -0.25547446729957546;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(H, E) )
%   | | | then return -0.18592110281392488;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.011289617449504024;  // std dev = 3.035, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.51362710204538;  // std dev = 1.318, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return -0.13853921579556683;  // std dev = 0.311, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( acquired(K, A), cityhascompanyoffice(L, K) )
%   | | | then return 0.03331749993918149;  // std dev = 2.790, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.13170777987506382;  // std dev = 10.940, 536.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=185 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.435, 783.000 (wgt'ed) examples reached here.  /* #neg=523 #pos=260 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.3978535324336069;  // std dev = 0.227, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | else return -0.12300394006096078;  // std dev = 0.316, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.5028048644425739;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, F) )
%   | | | then return -0.19924248896273872;  // std dev = 0.166, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.016333204185998686;  // std dev = 2.523, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | | then if ( acquired(I, G) )
%   | | | then return 0.48996807213754084;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02184376420416919;  // std dev = 2.255, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( companyceo(A, J), acquired(A, K) )
%   | | | then return 0.31254699513188045;  // std dev = 2.043, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.09909032273688398;  // std dev = 10.794, 527.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=177 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(A, E), companyceo(D, F) )
%   | | then return 0.39796756449440146;  // std dev = 0.082, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.24347378774582712;  // std dev = 0.284, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | else return -0.11149465753305715;  // std dev = 0.282, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then if ( companyceo(H, G), acquired(H, I) )
%   | | then return 0.3118605102086461;  // std dev = 0.874, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.21115847301086624;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( acquired(J, A), bankboughtbank(J, K) )
%   | | then if ( acquired(L, J) )
%   | | | then return 0.23349322524192395;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.23410408529825244;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( companyalsoknownas(A, M), economicsectorcompany(B, M) )
%   | | | then return 0.3796728713722843;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08642836189561881;  // std dev = 11.350, 588.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=199 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | | then return 0.5906809039658902;  // std dev = 0.188, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.2346858913794242;  // std dev = 0.128, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.25804933414703096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.24604307886552337;  // std dev = 0.202, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | else return -0.09829636987396202;  // std dev = 0.186, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( acquired(H, A), cityhascompanyoffice(I, H) )
%   | | then if ( companyceo(H, J) )
%   | | | then return 0.045224995890614246;  // std dev = 2.221, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.46190712027437186;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( bankboughtbank(K, A), companyceo(A, L) )
%   | | | then return -0.24127110151302647;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07778372005567001;  // std dev = 10.660, 519.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=182 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.2705883868724963;  // std dev = 0.286, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.23650709634981476;  // std dev = 0.331, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.06324570898071227;  // std dev = 1.480, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.09401537451392203;  // std dev = 0.237, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( acquired(G, A), acquired(A, H) )
%   | | then if ( companyalsoknownas(A, I), companyceo(G, J) )
%   | | | then return -0.06990392108920265;  // std dev = 0.346, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.28230954008114856;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.13195464653025268;  // std dev = 3.113, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | | else return 0.04199424795493278;  // std dev = 10.925, 571.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=188 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, F) )
%   | | | then return -0.10204755574573013;  // std dev = 0.527, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.02518476947695147;  // std dev = 1.536, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( acquired(A, G) )
%   | | then return -0.025429896794104394;  // std dev = 0.193, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( companyceo(A, H), cityhascompanyoffice(I, A) )
%   | | | then return 0.14124485786125995;  // std dev = 0.299, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08422170869174549;  // std dev = 3.344, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   else if ( countryhascompanyoffice(J, A) )
%   | then if ( countryhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | then return 0.4624951575072543;  // std dev = 0.182, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.18845608879443104;  // std dev = 0.103, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0.02274479536697334;  // std dev = 0.425, 628.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=198 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '28.072', 'seconds']
Refined model CLL: -0.292908


******************************************
Best model found
******************************************
Results 

CLL : -0.292616 

AUC ROC : 0.75577 

AUC PR : 0.073483 

Precision : 0.074357 

Recall : 0.301158 

F1 : 0.119266 

Total Learning Time : 14.591 

Total Inference Time : 76.30219078063965 

Total revision time: 157.08655488967895
Best scored revision CLL: -0.292908


Results 

CLL : -0.292616 

AUC ROC : 0.75577 

AUC PR : 0.073483 

Precision : 0.074357 

Recall : 0.301158 

F1 : 0.119266 

Total Learning Time : 157.21905506134033 

Total Inference Time : 76.30219078063965 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.707
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14981560176617784;  // std dev = 0.455, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.2116842886348645;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | else return 0.19682986201572886;  // std dev = 0.473, 561.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.12951207507503792;  // std dev = 4.842, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.18037900348433877;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.1741876081134045;  // std dev = 11.184, 556.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.17161225265661556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.20572579817181064;  // std dev = 2.832, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return 0.12751437839512803;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05436715651682717;  // std dev = 3.914, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | else return 0.13432893952654065;  // std dev = 0.469, 580.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.048199432834414815;  // std dev = 0.422, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else return 0.12794830242158636;  // std dev = 0.466, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10926454666564589;  // std dev = 12.326, 693.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04999110367650149;  // std dev = 2.557, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return 0.10734653541233784;  // std dev = 5.061, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06850371620802465;  // std dev = 3.804, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10042242654451282;  // std dev = 0.472, 568.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.11133048846417955;  // std dev = 4.663, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.01736295405537391;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.0984150979087271;  // std dev = 11.943, 626.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.003164170617756571;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else return 0.11149357254643665;  // std dev = 4.890, 101.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07452209875205439;  // std dev = 11.743, 614.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.05448536103761813;  // std dev = 2.002, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.015804078185120907;  // std dev = 2.493, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0.12725030549912394;  // std dev = 0.485, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05839361446622669;  // std dev = 0.476, 651.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.047434137110414346;  // std dev = 0.474, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.0815720999628942;  // std dev = 1.249, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.09579528316138;  // std dev = 3.362, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.019055031659046113;  // std dev = 11.386, 598.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.16089923228631484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.008489480972442641;  // std dev = 1.946, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0468521080132013;  // std dev = 4.287, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.05068528263068403;  // std dev = 4.706, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.034800435880231365;  // std dev = 11.220, 563.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.902', 'seconds']
Parameter learned model CLL:-0.370048 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.952, 16, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.455, 68, 28], 'false,true': [4.757, 64, 35], 'false,false': [0.473, 371, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.842, 81, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.77, 65, 35], 'false,false,false,false': [11.184, 366, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.832, 21, 13], 'true,false,false': [4.864, 73, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.914, 66, 20], 'false,false,false': [0.469, 390, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.422, 16, 5], 'true,false': [0.466, 59, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.326, 468, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.557, 23, 9], 'true,false': [5.061, 75, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.804, 53, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 378, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.663, 65, 33], 'false,false,true': [1.919, 14, 5], 'false,false,false': [11.943, 406, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.598, 27, 9], 'true,false': [4.89, 62, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.743, 404, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.002, 23, 5], 'true,false,true': [2.493, 20, 9], 'true,false,false': [0.485, 31, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 426, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.474, 92, 48], 'false,true,true,true': [1.249, 10, 2], 'false,true,true,false': [3.362, 31, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.386, 408, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.946, 17, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.287, 53, 28], 'false,true': [4.706, 62, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.22, 373, 190]}]
{'': [0.20249835634451155, 0.22469008264463053], 'false': [0.2285481073359876, 0.22397615665939327], 'true': [0.1814058956916098, 0.20659722222222343], 'true,false': [nan, 0.20659722222222343]}
{'': [0.20565913399643734, 0.2253432796241659], 'false': [nan, 0.22534327962416467], 'false,false': [nan, 0.2253432796241659], 'false,false,false': [0.22749999999999954, 0.22494953677345644]}
{'': [0.22333337718106808, 0.21554899187271628], 'true': [0.0, 0.22419963886906716], 'true,false': [0.23590471130038815, 0.2190500685871049], 'false': [nan, 0.21554899187271628], 'false,false': [0.178117888628584, 0.2202734839476787], 'false,false,true': [nan, 0.178117888628584], 'true,true': [0.0, nan]}
{'': [0.2107557285773846, 0.21924208070401283], 'false': [nan, 0.21924208070401283], 'false,false': [nan, 0.21924208070401283], 'true': [0.17775423574398364, 0.21748496239666568]}
{'': [0.2207530497320035, 0.21994228765833143], 'true': [0.20424709469831331, 0.22466528206512343], 'false': [0.1982663235838692, 0.2226120809363215], 'false,false': [nan, 0.2226120809363215], 'false,true': [nan, 0.19826632358386923]}
{'': [nan, 0.2263976019936057], 'false': [0.22187705812644481, 0.22705355638145602], 'false,false': [0.19390581717451538, 0.22786611924002598]}
{'': [0.22611306534617845, 0.22457584358233626], 'true': [0.18752025482726858, 0.2367852008223405], 'false': [nan, 0.22457584358233595], 'false,false': [nan, 0.22457584358233626], 'false,false,false': [nan, 0.22457584358233626]}
{'': [0.21161097222641098, 0.22612336248627599], 'false': [nan, 0.22612336248627599], 'false,false': [nan, 0.22612336248627599], 'true': [0.1432108717434619, 0.23066444522120114], 'true,false': [0.2142939429641467, 0.23560000000000003]}
{'': [0.22479936700213493, 0.21683948643129147], 'false': [0.21587171961003784, 0.21677609870135317], 'false,false': [nan, 0.21677609870135317], 'false,true': [0.21587171961003784, nan], 'false,true,true': [0.12998330776486436, 0.23071692354982085]}
{'': [0.21401676962726457, 0.22431844610217053], 'false': [0.2283513125025108, 0.2235865336988795], 'false,false': [nan, 0.2235865336988795], 'true': [0.16561750683321816, 0.22691052936261477], 'true,false': [nan, 0.22691052936261477], 'true,false,false': [nan, 0.22691052936261477], 'true,true': [0.0, 0.17213563044322175]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 12.23
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( companyceo(A, E), cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.0714822684328457;  // std dev = 3.548, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.18984828150473654;  // std dev = 11.648, 612.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=203 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(A, E) )
%   | | then if ( companyceo(D, F) )
%   | | | then return 0.11015460443880382;  // std dev = 1.417, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.34415545948412696;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( companyalsoknownas(D, G), acquired(H, G) )
%   | | | then return 0.18255605699492214;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.004798804150991322;  // std dev = 2.771, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.7921454113770107;  // std dev = 0.156, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0.500099116143274;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.18448673596683282;  // std dev = 11.446, 586.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=206 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E) )
%   | | then return 0.26683605292421303;  // std dev = 0.430, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else return 0.0940986504586999;  // std dev = 0.428, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   else if ( companyceo(A, F) )
%   | then if ( bankchiefexecutiveceo(G, F), economicsectorcompany(B, G) )
%   | | then return 0.7748562859245375;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.06679418770083734;  // std dev = 1.426, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.2587719188192769;  // std dev = 2.686, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( cityhascompanyoffice(J, A), bankchiefexecutiveceo(A, K) )
%   | | | then return 0.5165028167673293;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11155524289345436;  // std dev = 11.153, 592.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=180 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E), acquired(C, F) )
%   | then if ( countryhascompanyoffice(G, E) )
%   | | then return -0.018442428772787088;  // std dev = 0.331, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.4089649935899513;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.14932937970533747;  // std dev = 0.233, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   else if ( acquired(H, A), cityhascompanyoffice(I, H) )
%   | then if ( acquired(J, H) )
%   | | then return -0.1725950191221734;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( companyalsoknownas(H, K), countryhascompanyoffice(L, K) )
%   | | | then return 0.18014664763902072;  // std dev = 1.419, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.004950672150277825;  // std dev = 1.689, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | then return 0.4818861461623012;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(A, N), economicsectorcompany(B, N) )
%   | | | then return 0.6050566102649433;  // std dev = 0.337, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.09964812835050978;  // std dev = 12.154, 708.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=221 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), cityhascompanyoffice(E, A) )
%   | then return 0.3541692161968256;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5228364746901959;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( bankchiefexecutiveceo(A, F) )
%   | then if ( companyceo(G, F), economicsectorcompany(B, G) )
%   | | then return 0.6754558862326946;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(H, F), countryhascompanyoffice(I, H) )
%   | | | then return -0.23628040572010034;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.24892464818627125;  // std dev = 1.817, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( acquired(A, J), countryhascompanyoffice(K, J) )
%   | | then if ( acquired(J, L) )
%   | | | then return -0.15143712860593606;  // std dev = 0.829, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.034118871233335894;  // std dev = 1.449, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.39992186994600326;  // std dev = 0.267, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.08922310626023726;  // std dev = 11.974, 681.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=216 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.5320970462219017;  // std dev = 0.161, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyalsoknownas(A, D), cityhascompanyoffice(E, D) )
%   | then if ( acquired(A, F), companyalsoknownas(F, G) )
%   | | then if ( acquired(F, H) )
%   | | | then return -0.1474306637976954;  // std dev = 0.511, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.18620627903865136;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(I, A), countryhascompanyoffice(J, D) )
%   | | | then return 0.3414399277878661;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.017674294133306345;  // std dev = 2.282, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( acquired(A, K), acquired(K, L) )
%   | | then if ( acquired(L, M), economicsectorcompany(B, M) )
%   | | | then return 0.5420834623959684;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1771529344788024;  // std dev = 0.867, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.13250292716613202;  // std dev = 4.683, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | | else return 0.08344165405989167;  // std dev = 10.899, 562.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=191 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), companyceo(A, E) )
%   | then return 0.25085341737567013;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.36882220533062066;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then if ( acquired(A, G), companyceo(F, H) )
%   | | then return 0.40758702061655944;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(I, F) )
%   | | | then return 0.3147203549557547;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23746936231962615;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, J), companyceo(J, K) )
%   | | then if ( companyalsoknownas(A, L), companyceo(L, M) )
%   | | | then return 0.20613572469524977;  // std dev = 0.962, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.1298085661154749;  // std dev = 1.424, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( acquired(N, A), companyceo(N, P) )
%   | | | then return -0.05194669311756423;  // std dev = 2.232, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | | else return 0.06867969624240373;  // std dev = 11.821, 651.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=218 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.25004044885668236;  // std dev = 0.282, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4759765857254344;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | then if ( companyceo(A, H) )
%   | | then return 0.00999120961689598;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( acquired(A, I), acquired(I, A) )
%   | | | then return -0.2699951049853691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1308732619131312;  // std dev = 0.817, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( acquired(J, A), companyceo(J, K) )
%   | | then if ( companyalsoknownas(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.5154015781059323;  // std dev = 0.484, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0513641599449483;  // std dev = 2.137, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( companyalsoknownas(A, M), acquired(M, N) )
%   | | | then return 0.2093734653589555;  // std dev = 1.641, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.03959269537244089;  // std dev = 11.847, 681.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=220 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.28430605297949796;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09651919185855157;  // std dev = 0.221, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   else if ( acquired(E, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.22003964517545943;  // std dev = 0.044, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(F, E) )
%   | | | then return -0.19069995877137408;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.029609706263064535;  // std dev = 3.263, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | else if ( acquired(A, G), cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.5144024481948812;  // std dev = 0.753, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2591517998899795;  // std dev = 0.122, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( acquired(A, J), companyceo(J, K) )
%   | | | then return -0.10999577627590966;  // std dev = 0.869, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.060196932840261286;  // std dev = 11.260, 575.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=203 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.04553559974169694;  // std dev = 0.233, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then if ( companyceo(A, F) )
%   | | | then return 0.05610023318787183;  // std dev = 0.943, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.3203520526562884;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyceo(A, G), bankboughtbank(H, A) )
%   | | | then return -0.22799228808145547;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.010476266241891704;  // std dev = 2.866, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   else if ( companyalsoknownas(A, I), acquired(A, J) )
%   | then return 0.04995545717056514;  // std dev = 0.330, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | else if ( acquired(A, K), companyceo(A, L) )
%   | | then return -0.07275174925694546;  // std dev = 0.317, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( bankboughtbank(M, A) )
%   | | | then return 0.3723984047347846;  // std dev = 1.212, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.012413630565197672;  // std dev = 11.347, 618.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=194 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.492', 'seconds']
Refined model CLL: -0.329519


******************************************
Best model found
******************************************
Results 

CLL : -0.32957 

AUC ROC : 0.618386 

AUC PR : 0.068108 

Precision : 0.094364 

Recall : 0.138462 

F1 : 0.112237 

Total Learning Time : 12.23 

Total Inference Time : 24.326024770736694 

Total revision time: 110.65255233001709
Best scored revision CLL: -0.329519


Results 

CLL : -0.32957 

AUC ROC : 0.618386 

AUC PR : 0.068108 

Precision : 0.094364 

Recall : 0.138462 

F1 : 0.112237 

Total Learning Time : 110.78505250167846 

Total Inference Time : 24.326024770736694 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.604
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1405018762759822;  // std dev = 0.450, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.21604367194161622;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | else return 0.2202502484203334;  // std dev = 0.481, 533.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.14138930773753045;  // std dev = 4.794, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.19932931834465584;  // std dev = 4.630, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return 0.15299457713480358;  // std dev = 11.424, 596.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.8126205281810734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.07586005203433743;  // std dev = 2.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return 0.15389975699385047;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14745722999983962;  // std dev = 4.012, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | else return 0.14204740473932162;  // std dev = 0.472, 575.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1792968882631827;  // std dev = 0.480, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.06106126775861943;  // std dev = 0.439, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12682086119913638;  // std dev = 12.194, 658.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1084222037384121;  // std dev = 3.077, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | else return 0.036047779224613274;  // std dev = 4.518, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10766896313970896;  // std dev = 4.022, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09199485527881225;  // std dev = 0.471, 583.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07598385377156865;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.0714636518613263;  // std dev = 4.718, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.15874121876445071;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else return 0.057262574062722976;  // std dev = 12.150, 686.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04667752321978302;  // std dev = 3.109, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else return 0.03260938463539682;  // std dev = 4.464, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07175576003527027;  // std dev = 11.989, 644.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.17968685229087383;  // std dev = 2.158, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.06073081592285382;  // std dev = 2.072, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.0033119720422944026;  // std dev = 0.439, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06480218609056486;  // std dev = 0.476, 654.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.021440822057115436;  // std dev = 0.463, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.21799130571303407;  // std dev = 1.736, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.045062645031344155;  // std dev = 3.498, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.049819415178758875;  // std dev = 11.247, 560.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.5485880503793037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.01607691907576302;  // std dev = 2.275, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032347897261196856;  // std dev = 4.102, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.011952813998091996;  // std dev = 4.805, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.010073670109143078;  // std dev = 11.495, 612.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '5.034', 'seconds']
Parameter learned model CLL:-0.364132 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.449, 18, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.45, 61, 24], 'false,true': [4.672, 61, 34], 'false,false': [0.481, 340, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.794, 76, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.63, 58, 34], 'false,false,false,false': [11.424, 403, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.438, 23, 8], 'true,false,false': [4.686, 62, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.012, 49, 24], 'false,false,false': [0.472, 382, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.48, 14, 9], 'true,false': [0.439, 68, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.194, 431, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.077, 27, 15], 'true,false': [4.518, 73, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.022, 49, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 390, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.816, 2, 1], 'false,true': [4.718, 73, 32], 'false,false,true': [2.619, 16, 12], 'false,false,false': [12.15, 471, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.109, 29, 15], 'true,false': [4.464, 69, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.989, 427, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.158, 10, 9], 'true,false,true': [2.072, 15, 6], 'true,false,false': [0.439, 51, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 427, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.463, 94, 43], 'false,true,true,true': [1.736, 6, 6], 'false,true,true,false': [3.498, 39, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.247, 367, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.275, 14, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.102, 57, 24], 'false,true': [4.805, 75, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.495, 419, 193]}]
{'': [0.20782844387755237, 0.23080804495111618], 'false': [0.22980609418282694, 0.2309839522121619], 'true': [0.2222222222222223, 0.20262975778546816], 'true,false': [nan, 0.20262975778546816]}
{'': [0.210880073029407, 0.22108657566162904], 'false': [nan, 0.2210865756616291], 'false,false': [nan, 0.22108657566162904], 'false,false,false': [0.2329867674858232, 0.21896254673212937]}
{'': [0.22266858646465248, 0.22270831121471613], 'false': [nan, 0.22270831121471613], 'false,false': [0.22046519832208153, 0.2229897920604911], 'true': [0.0, 0.220833039088548], 'true,false': [0.19176614990311552, 0.22873263888888826], 'false,false,true': [nan, 0.22046519832208153], 'true,true': [0.0, nan]}
{'': [0.20266032072199183, 0.22599554265192554], 'false': [nan, 0.22599554265192554], 'false,false': [nan, 0.22599554265192554], 'true': [0.23050139466575792, 0.19290411984483044]}
{'': [0.21000443780826353, 0.22149463196210142], 'false': [0.2215955904800919, 0.2214546513714756], 'false,true': [nan, 0.22159559048009195], 'false,false': [nan, 0.2214546513714756], 'true': [0.22539045496186752, 0.20206784165845446]}
{'': [0.22222222222222224, 0.21614583451323546], 'true': [nan, 0.22222222222222224], 'true,false': [nan, 0.22222222222222224], 'false': [0.21202210320458187, 0.21673887077591258], 'false,false': [0.24489795918367321, 0.21518568041176878]}
{'': [0.20994824278348495, 0.22321028735234846], 'false': [nan, 0.22321028735234885], 'false,false': [nan, 0.22321028735234846], 'false,false,false': [nan, 0.22321028735234846], 'true': [0.2197210420529823, 0.20545346049810723]}
{'': [0.20848254197758953, 0.22663352192919797], 'false': [nan, 0.22663352192919797], 'false,false': [nan, 0.22663352192919797], 'true': [0.24503852598829698, 0.19613517237275196], 'true,false': [0.2045112960464842, 0.19281663516068073]}
{'': [0.21473368572307147, 0.22586789933592077], 'false': [0.22532758778955117, 0.225864158163267], 'false,false': [nan, 0.225864158163267], 'false,true': [0.22532758778955117, nan], 'false,true,true': [0.2511345248809655, 0.21469379680446538]}
{'': [0.21418164347436283, 0.2152893846453531], 'false': [0.2118137495783855, 0.21590787731214134], 'false,false': [nan, 0.21590787731214134], 'true': [0.23681316271000838, 0.20774493632063976], 'true,true': [0.0, 0.2352483493368115], 'true,false': [nan, 0.20774493632063976], 'true,false,false': [nan, 0.20774493632063976]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 17.797
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( acquired(D, A), cityhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( acquired(G, D) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09639651944594235;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(A, I), countryhascompanyoffice(J, A) )
%   | | | then return -0.0418510649004878;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.18680062049276658;  // std dev = 12.534, 712.000 (wgt'ed) examples reached here.  /* #neg=478 #pos=234 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( bankboughtbank(D, A) )
%   | then if ( bankboughtbank(A, E) )
%   | | then return 0.13081866948975268;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.16614489550782727;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.7575686283779266;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.11070987513731141;  // std dev = 2.055, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.30580567327759967;  // std dev = 3.053, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( bankboughtbank(I, A), cityhascompanyoffice(J, I) )
%   | | then return -0.16614489550782727;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( cityhascompanyoffice(K, A), acquired(L, A) )
%   | | | then return -0.002885860635234636;  // std dev = 1.715, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.16001254567906267;  // std dev = 12.096, 669.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=219 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.8104884063400468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, E), cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.7671399867872716;  // std dev = 0.381, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.16363503754930714;  // std dev = 0.130, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.30502488844644204;  // std dev = 1.619, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07928230540837136;  // std dev = 3.212, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then if ( companyceo(A, K) )
%   | | | then return 0.3760492491009489;  // std dev = 1.469, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.7391317772820603;  // std dev = 1.382, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return -0.188739019045942;  // std dev = 0.128, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0.13989507318215977;  // std dev = 0.469, 543.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=180 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.5157536487853903;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, F), acquired(G, D) )
%   | | | then return 0.547043780567506;  // std dev = 0.274, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6725079356659873;  // std dev = 0.373, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | else return -0.15847956548375716;  // std dev = 0.216, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else return 0.13454614528730177;  // std dev = 0.472, 578.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=203 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.6999750794803009;  // std dev = 0.091, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyceo(A, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.45442981138929023;  // std dev = 0.945, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.13123237957435835;  // std dev = 0.117, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( acquired(A, G), countryhascompanyoffice(H, A) )
%   | | | then return -0.1904771512582977;  // std dev = 0.060, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.012549957363895727;  // std dev = 2.943, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.4670354636437145;  // std dev = 0.905, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.1454504454632723;  // std dev = 0.160, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.49218135423329745;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08410157495172291;  // std dev = 10.927, 553.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=178 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), countryhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.6197480631616037;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(D, A) )
%   | | then return 0.33544045043126286;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( acquired(E, C) )
%   | | | then return 0.08258854888932177;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.23929755628504845;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | then return 0.12573631783933306;  // std dev = 0.308, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( companyceo(A, H) )
%   | | then if ( cityhascompanyoffice(I, A), bankchiefexecutiveceo(A, J) )
%   | | | then return 0.09083486929170825;  // std dev = 1.078, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.002305801821642329;  // std dev = 2.990, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.039695266534594306;  // std dev = 2.421, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.07725888121955508;  // std dev = 10.827, 540.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=179 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, D), companyceo(A, E) )
%   | | then if ( companyalsoknownas(A, F), companyalsoknownas(D, F) )
%   | | | then return 0.2010220092790771;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07802654952064059;  // std dev = 0.869, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.34120148218406005;  // std dev = 0.199, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | else return -0.127987923647582;  // std dev = 0.233, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.37297765579955183;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( companyceo(H, I) )
%   | | | then return -0.11216220249632114;  // std dev = 1.309, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.07252842059566518;  // std dev = 2.691, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( acquired(J, A), acquired(A, K) )
%   | | | then return 0.14805708181093083;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.050879713693184114;  // std dev = 10.945, 566.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=180 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.24741286402474572;  // std dev = 0.191, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else if ( countryhascompanyoffice(F, D), countryhascompanyoffice(F, A) )
%   | | | then return 0.31560928692257423;  // std dev = 0.194, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.03597299794813855;  // std dev = 1.783, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else return -0.11564961293333276;  // std dev = 0.202, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.5121851569516911;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(H, A), companyceo(H, I) )
%   | | then if ( acquired(H, J), economicsectorcompany(B, J) )
%   | | | then return 0.6923709692719984;  // std dev = 0.172, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2877722072201336;  // std dev = 0.251, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.587300680898483;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03063083564770109;  // std dev = 10.965, 579.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=178 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( countryhascompanyoffice(D, C), companyceo(C, E) )
%   | then if ( countryhascompanyoffice(D, A) )
%   | | then return 0.37722769255151034;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.027114214123339777;  // std dev = 0.170, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.023285055964869038;  // std dev = 0.263, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else return -0.04566448729590277;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   else if ( companyalsoknownas(A, G) )
%   | then if ( companyalsoknownas(G, H), economicsectorcompany(B, H) )
%   | | then return 0.49595664453365756;  // std dev = 0.302, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.2716672462090889;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return 0.04631643440511595;  // std dev = 0.187, 86.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | | else if ( acquired(J, A), countryhascompanyoffice(K, J) )
%   | | | then return 0.25693137535278565;  // std dev = 0.814, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.043343076841741664;  // std dev = 10.272, 494.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=161 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.5599156219494079;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.11303566120056507;  // std dev = 0.255, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0038676888727858694;  // std dev = 1.499, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then return -0.05697591941617771;  // std dev = 0.261, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.0619154683168242;  // std dev = 1.295, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.029391988371733423;  // std dev = 2.471, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return 0.011206232754123876;  // std dev = 0.183, 147.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=51 */
%   | else if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | then return -0.03429939497854203;  // std dev = 0.315, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.022648375516537308;  // std dev = 0.455, 542.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=172 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '17.602', 'seconds']
Refined model CLL: -0.291839


******************************************
Best model found
******************************************
Results 

CLL : -0.291762 

AUC ROC : 0.76145 

AUC PR : 0.060285 

Precision : 0.061644 

Recall : 0.277992 

F1 : 0.100911 

Total Learning Time : 17.797 

Total Inference Time : 71.53315281867981 

Total revision time: 156.84088418579103
Best scored revision CLL: -0.291839


Results 

CLL : -0.291762 

AUC ROC : 0.76145 

AUC PR : 0.060285 

Precision : 0.061644 

Recall : 0.277992 

F1 : 0.100911 

Total Learning Time : 156.94253394699098 

Total Inference Time : 71.53315281867981 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 11.82
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.26936388837054054;  // std dev = 0.492, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.18467954734440892;  // std dev = 4.642, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else return 0.18613467484995347;  // std dev = 0.469, 561.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.17982294310892966;  // std dev = 5.316, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.19778511518334693;  // std dev = 4.513, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
%   | | | else return 0.14794051866411165;  // std dev = 11.235, 586.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.1275958728371411;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.12818406751613615;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15426253950380844;  // std dev = 4.800, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | | else return 0.14820360968023402;  // std dev = 0.472, 548.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.17850288799546143;  // std dev = 0.492, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.190450105772448;  // std dev = 0.494, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1047772709992274;  // std dev = 12.149, 682.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.12210209752641486;  // std dev = 2.757, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else return 0.042397991487345486;  // std dev = 4.497, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11184296949898892;  // std dev = 4.727, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09706056300828875;  // std dev = 0.469, 564.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.13716620912240216;  // std dev = 5.024, 104.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.12411502637336927;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.08393016116007024;  // std dev = 11.804, 630.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.028542491092342824;  // std dev = 2.845, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else return 0.006054626870864441;  // std dev = 4.542, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05686281764735342;  // std dev = 12.155, 671.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.033713235110564066;  // std dev = 2.411, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.06506328226141718;  // std dev = 1.938, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.10302104628861955;  // std dev = 0.496, 69.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.056575475179177576;  // std dev = 0.470, 656.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.024531176632959752;  // std dev = 0.462, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -3.882635183332844E-4;  // std dev = 2.136, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.039392607785489225;  // std dev = 4.200, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06588444969097733;  // std dev = 10.927, 524.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.20187182582487173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.04594045131057366;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07191301659586755;  // std dev = 4.458, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.01404754694676633;  // std dev = 4.749, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.024492990969825004;  // std dev = 11.158, 569.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.537', 'seconds']
Parameter learned model CLL:-0.370843 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.492, 63, 44], 'false,true': [4.642, 66, 32], 'false,false': [0.469, 377, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.316, 79, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.513, 56, 32], 'false,false,false,false': [11.235, 402, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.309, 16, 8], 'true,false,false': [4.654, 67, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.8, 64, 36], 'false,false,false': [0.472, 364, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.492, 13, 9], 'true,false': [0.494, 48, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.149, 466, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.757, 21, 12], 'true,false': [4.497, 71, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.727, 59, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 380, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.024, 60, 44], 'false,false,true': [2.225, 13, 8], 'false,false,false': [11.804, 422, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.845, 26, 12], 'true,false': [4.542, 74, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.155, 451, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.411, 16, 9], 'true,false,true': [1.938, 16, 5], 'true,false,false': [0.496, 39, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 440, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.462, 90, 40], 'false,true,true,true': [2.136, 13, 7], 'false,true,true,false': [4.2, 45, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.927, 340, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.527, 22, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.458, 49, 35], 'false,true': [4.749, 76, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.158, 385, 184]}]
{'': [0.24142661179698302, 0.2203366023381199], 'true': [0.0, 0.24211721547733508], 'false': [0.21990837151187143, 0.2204110942708015]}
{'': [0.2297574195254154, 0.21777296906593693], 'false': [nan, 0.21777296906593652], 'false,false': [nan, 0.21777296906593693], 'false,false,false': [0.231404958677685, 0.21540146070425775]}
{'': [0.21943012742344975, 0.22416988062218787], 'false': [nan, 0.22416988062218787], 'false,false': [0.23039999999999997, 0.22302733230327107], 'false,false,true': [nan, 0.23039999999999997], 'true': [nan, 0.21943012742344967], 'true,false': [0.2222222222222223, 0.21875318845015754]}
{'': [0.24334083296711512, 0.21643175225804195], 'true': [0.24179886316423407, 0.24371964126150744], 'false': [nan, 0.21643175225804195], 'false,false': [nan, 0.21643175225804195]}
{'': [0.2119368379809494, 0.22204764423699866], 'false': [0.23515789066858983, 0.21980785674764824], 'false,true': [nan, 0.23515789066858991], 'false,false': [nan, 0.21980785674764824], 'true': [0.23027396538478556, 0.20423627604979883]}
{'': [nan, 0.22489676368781847], 'false': [0.2426542990039478, 0.22168831334481381], 'false,false': [0.23582766439909322, 0.22116491056582985]}
{'': [0.20526892121804477, 0.2201879115256064], 'false': [nan, 0.22018791152560563], 'false,false': [nan, 0.2201879115256064], 'false,false,false': [nan, 0.2201879115256064], 'true': [0.21303561173383753, 0.2022381857563937]}
{'': [0.2347491863040714, 0.22088878744544532], 'true': [0.2325036789128621, 0.23517613491399453], 'true,false': [0.1787841764244155, 0.24574669187145562], 'false': [nan, 0.22088878744544532], 'false,false': [nan, 0.22088878744544532]}
{'': [0.21373866400228855, 0.22930924061709138], 'false': [0.23645115504517272, 0.22784220033797317], 'false,true': [0.23645115504517272, nan], 'false,true,true': [0.22802278775892854, 0.2383923862513309], 'false,false': [nan, 0.22784220033797317]}
{'': [0.22957546636168602, 0.2172269263434747], 'true': [0.20027814370876712, 0.236581385541717], 'true,false': [nan, 0.236581385541717], 'true,false,false': [nan, 0.236581385541717], 'false': [0.20882966745401446, 0.2188033765648083], 'false,false': [nan, 0.2188033765648083], 'true,true': [0.0, 0.20597889794101018]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 13.085
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, D), cityhascompanyoffice(E, D) )
%   | | then return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1798880655342935;  // std dev = 5.010, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   else if ( companyalsoknownas(A, G) )
%   | then if ( acquired(A, H) )
%   | | then return 0.00966408661466381;  // std dev = 0.359, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else return 0.14386322081379807;  // std dev = 0.452, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.1927283743518443;  // std dev = 10.914, 535.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=179 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8333683682611676;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.8332690536758585;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(A, E), cityhascompanyoffice(F, E) )
%   | | then if ( cityhascompanyoffice(G, A), acquired(E, H) )
%   | | | then return 0.07689820829916233;  // std dev = 1.955, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.10646998381422865;  // std dev = 0.949, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.09699991307392358;  // std dev = 4.973, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
%   | | | else return 0.16279766896666;  // std dev = 11.481, 598.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=197 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.6849309580053112;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(D, A), companyceo(D, E) )
%   | then if ( cityhascompanyoffice(F, D) )
%   | | then if ( companyalsoknownas(D, G), companyceo(G, H) )
%   | | | then return 0.013568696223856064;  // std dev = 1.160, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2241379983986765;  // std dev = 2.316, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( bankchiefexecutiveceo(D, I) )
%   | | | then return 0.14445488829614858;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15041690657564627;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.7363138659402999;  // std dev = 1.657, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return -0.17456240103289694;  // std dev = 0.125, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.6871445763528792;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13357282567877973;  // std dev = 11.283, 585.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=189 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.6219819362291319;  // std dev = 0.175, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return 0.47938076727984696;  // std dev = 0.402, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return -0.1582492177242832;  // std dev = 0.234, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | then if ( companyalsoknownas(F, H), acquired(H, I) )
%   | | then return 0.5601589459926869;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( acquired(F, J), economicsectorcompany(B, J) )
%   | | | then return 0.7787824401460509;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2208784499778835;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.5250982550056753;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03136016437612316;  // std dev = 2.613, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else return 0.14455005173477234;  // std dev = 0.475, 515.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=185 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), acquired(A, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0.0427775291166427;  // std dev = 0.299, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( economicsectorcompany(B, D) )
%   | | then return 0.49853217423211893;  // std dev = 0.248, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( countryhascompanyoffice(F, A), countryhascompanyoffice(F, D) )
%   | | | then return 0.4345829723811922;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1616920492717665;  // std dev = 2.196, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   else if ( acquired(G, A), bankboughtbank(G, H) )
%   | then if ( countryhascompanyoffice(I, H) )
%   | | then return 0.24267015533449304;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6627230582792771;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, J), companyceo(J, K) )
%   | | then if ( cityhascompanyoffice(L, J) )
%   | | | then return 0.1589757080064659;  // std dev = 1.225, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.40642550303262903;  // std dev = 1.053, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.06899219639010853;  // std dev = 0.433, 722.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=224 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.39989962459262646;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(C, E) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return -0.005051964773021768;  // std dev = 0.645, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0975868426979069;  // std dev = 0.964, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.18395947238168864;  // std dev = 0.232, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   else if ( companyalsoknownas(A, G), acquired(A, H) )
%   | then return -0.004365574564468021;  // std dev = 0.284, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.3891440758138675;  // std dev = 2.044, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return -0.14670147511668108;  // std dev = 0.077, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( acquired(A, K), acquired(L, A) )
%   | | | then return -0.2503299217774568;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09576066203286168;  // std dev = 11.272, 581.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=205 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(A, E) )
%   | | then if ( companyalsoknownas(D, D) )
%   | | | then return 0.3828881922469204;  // std dev = 0.452, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5123505773678002;  // std dev = 0.221, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( acquired(F, A), cityhascompanyoffice(C, F) )
%   | | | then return 0.1290557039072444;  // std dev = 0.642, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.37796722597046;  // std dev = 1.010, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return -0.13253713165166417;  // std dev = 0.183, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( acquired(A, G) )
%   | then if ( companyalsoknownas(G, H), cityhascompanyoffice(I, H) )
%   | | then return -0.18328085390878712;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( acquired(J, A) )
%   | | | then return -0.12390039797767725;  // std dev = 0.665, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.11372416606926902;  // std dev = 3.431, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else return 0.0905682378711452;  // std dev = 0.469, 512.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=188 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), acquired(D, A) )
%   then if ( bankchiefexecutiveceo(D, E) )
%   | then return 0.2198085061826404;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( acquired(A, F), cityhascompanyoffice(G, D) )
%   | | then return 0.14609745482495243;  // std dev = 0.802, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyalsoknownas(D, H) )
%   | | | then return -0.23409984947524315;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07866196141695231;  // std dev = 0.995, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return 0.009982046719503637;  // std dev = 0.215, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
%   | else if ( companyalsoknownas(A, J), acquired(J, K) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.34418572937941966;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10852415073167523;  // std dev = 0.912, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( companyalsoknownas(A, L), acquired(A, M) )
%   | | | then return -0.2078515036088051;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.06037062087888909;  // std dev = 11.188, 577.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=204 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return -0.046953096572226294;  // std dev = 0.255, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( bankboughtbank(E, A) )
%   | | then if ( bankchiefexecutiveceo(A, C) )
%   | | | then return -0.025640257537890832;  // std dev = 0.904, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.12992259785919114;  // std dev = 0.856, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, F) )
%   | | | then return -0.04968237676828371;  // std dev = 0.478, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06935779416589509;  // std dev = 3.061, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.2534988264590186;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( countryhascompanyoffice(H, A), bankboughtbank(I, A) )
%   | | then return 0.30483751777026546;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.020931659847492713;  // std dev = 2.027, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.04412733106408291;  // std dev = 10.741, 539.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=185 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.012958299473490077;  // std dev = 0.332, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | then return 0.25538690269800135;  // std dev = 0.821, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( acquired(A, G) )
%   | | | then return -0.06723239008196218;  // std dev = 0.728, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.023877259267568608;  // std dev = 3.218, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   else if ( countryhascompanyoffice(H, A) )
%   | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.5885704382148536;  // std dev = 0.135, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.21601461767636154;  // std dev = 0.097, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( companyalsoknownas(A, J), acquired(J, K) )
%   | | then return -0.0428544362346877;  // std dev = 0.187, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( acquired(A, L) )
%   | | | then return 0.06669297359013815;  // std dev = 3.058, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.03395269483361721;  // std dev = 10.098, 498.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=171 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '45.704', 'seconds']
Refined model CLL: -0.31925


******************************************
Best model found
******************************************
Results 

CLL : -0.318786 

AUC ROC : 0.749823 

AUC PR : 0.070665 

Precision : 0.08286 

Recall : 0.281853 

F1 : 0.12807 

Total Learning Time : 13.085 

Total Inference Time : 49.5383505821228 

Total revision time: 132.7008836555481
Best scored revision CLL: -0.31925


Results 

CLL : -0.318786 

AUC ROC : 0.749823 

AUC PR : 0.070665 

Precision : 0.08286 

Recall : 0.281853 

F1 : 0.12807 

Total Learning Time : 132.80253341674805 

Total Inference Time : 49.5383505821228 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.609
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1727556766725448;  // std dev = 0.464, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.23048936063142586;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | else return 0.17587468760786898;  // std dev = 0.466, 598.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.15882088472765932;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17771383484858386;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.18019086151974603;  // std dev = 11.157, 551.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.29989892403476825;  // std dev = 2.598, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.154414291370039;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10177181071357373;  // std dev = 3.768, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else return 0.14475223032867776;  // std dev = 0.472, 566.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.18221947945196096;  // std dev = 0.482, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0.06902773751929978;  // std dev = 0.447, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11003474889390995;  // std dev = 12.316, 690.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.01909083305362271;  // std dev = 2.571, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else return 0.14018339880864458;  // std dev = 4.894, 101.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04208939848211026;  // std dev = 3.856, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10648122101333152;  // std dev = 0.474, 559.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.19836658087697961;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.0846860916982757;  // std dev = 4.710, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.01010075516352255;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.0790709648075308;  // std dev = 12.098, 658.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.17437706486524768;  // std dev = 2.262, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0.07606201310951759;  // std dev = 4.975, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0642305879126371;  // std dev = 11.862, 639.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.060662783944274705;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.06547646335924223;  // std dev = 2.371, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return 0.057949642451065354;  // std dev = 0.461, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03378516885165687;  // std dev = 0.465, 709.000 (wgt'ed) examples reached here.  /* #neg=484 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.0929604611314854;  // std dev = 0.489, 120.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.12280635362538025;  // std dev = 1.312, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.07756489568668876;  // std dev = 3.453, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04426257880845959;  // std dev = 11.264, 572.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.011050706883799593;  // std dev = 1.864, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04574908288151106;  // std dev = 4.288, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return -0.01596276553400703;  // std dev = 4.906, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0316554527236771;  // std dev = 11.294, 578.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.693', 'seconds']
Parameter learned model CLL:-0.363659 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.018, 22, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.464, 61, 28], 'false,true': [4.687, 59, 35], 'false,false': [0.466, 408, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.736, 70, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.77, 65, 35], 'false,false,false,false': [11.157, 361, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.598, 14, 13], 'true,false,false': [4.757, 64, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.768, 50, 20], 'false,false,false': [0.472, 376, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.482, 8, 5], 'true,false': [0.447, 72, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.316, 465, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.571, 25, 9], 'true,false': [4.894, 62, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.856, 58, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 369, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [4.71, 70, 33], 'false,false,true': [1.952, 16, 5], 'false,false,false': [12.098, 438, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.262, 12, 9], 'true,false': [4.975, 68, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.862, 429, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.96, 17, 5], 'true,false,true': [2.371, 15, 9], 'true,false,false': [0.461, 43, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.465, 484, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.489, 72, 48], 'false,true,true,true': [1.312, 13, 2], 'false,true,true,false': [3.453, 36, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.264, 382, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.864, 14, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.288, 56, 28], 'false,true': [4.906, 78, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.294, 388, 190]}]
{'': [0.2035523186682534, 0.21942555715192855], 'false': [0.23370303304662896, 0.21677609870135953], 'true': [0.1508916323731138, 0.21562933972983336], 'true,false': [nan, 0.21562933972983336]}
{'': [0.21773591137965762, 0.22616478945778676], 'false': [nan, 0.22616478945778723], 'false,false': [nan, 0.22616478945778676], 'false,false,false': [0.2275000000000006, 0.22592152199762874]}
{'': [0.2366954830156364, 0.22096168221371126], 'true': [nan, 0.2366954830156369], 'true,false': [0.24993893942977266, 0.22854810733598616], 'false': [nan, 0.22096168221371126], 'false,false': [0.20282098475105287, 0.2230019103747115], 'false,false,true': [nan, 0.20282098475105287]}
{'': [0.20509531612850312, 0.2198364435645227], 'false': [nan, 0.2198364435645227], 'false,false': [nan, 0.2198364435645227], 'true': [0.23244800101242122, 0.20006547757374654]}
{'': [0.22918804778518845, 0.22067773637203794], 'true': [0.19446464193141028, 0.23718410827001624], 'false': [0.19060915434504175, 0.22436564143099852], 'false,false': [nan, 0.22436564143099852], 'false,true': [nan, 0.19060915434504178]}
{'': [0.0, 0.22061782646029582], 'false': [0.21539144137460497, 0.22140140188734347], 'false,false': [0.18140589569160998, 0.22243192857430805], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.23466120124917622, 0.2202097368568822], 'true': [0.2437220865137774, 0.23129709324706318], 'false': [nan, 0.2202097368568778], 'false,false': [nan, 0.2202097368568822], 'false,false,false': [nan, 0.2202097368568822]}
{'': [0.21198944677956164, 0.21643311250166927], 'false': [nan, 0.21643311250166927], 'false,false': [nan, 0.21643311250166927], 'true': [0.174589221758773, 0.2185886547542307], 'true,false': [0.2341760302001383, 0.21253902185223728]}
{'': [0.23880398324437146, 0.21998081838764227], 'false': [0.20453790342059283, 0.22183236344075188], 'false,false': [nan, 0.22183236344075188], 'false,true': [0.20453790342059283, nan], 'false,true,true': [0.11473712262281581, 0.22075460006833492]}
{'': [0.2127041678963777, 0.2197170741795427], 'false': [0.21298159142935874, 0.22066306677362993], 'false,false': [nan, 0.22066306677362993], 'true': [0.182774158735588, 0.21887892367588768], 'true,false': [nan, 0.21887892367588768], 'true,false,false': [nan, 0.21887892367588768], 'true,true': [nan, 0.18277415873558803]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 61.021
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( companyceo(D, E) )
%   | then if ( economicsectorcompany(B, C) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08037115732173453;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( economicsectorcompany(B, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(C, F), acquired(F, G) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.1739384087837228;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   else if ( acquired(A, H), acquired(H, I) )
%   | then return 0.0010060779566550774;  // std dev = 0.350, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(K, A), acquired(A, L) )
%   | | | then return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.16446761641818955;  // std dev = 12.437, 728.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=223 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.743158007317678;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( bankboughtbank(D, A), cityhascompanyoffice(E, D) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.8385196698470171;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.16307388897174668;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.7860783209508795;  // std dev = 0.973, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.16655364801271005;  // std dev = 0.114, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | | then return 0.8373560532591127;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.16892309022164784;  // std dev = 11.772, 627.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=209 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then return 0.7311078355779701;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, F), companyalsoknownas(F, G) )
%   | | then return -0.09016026804687813;  // std dev = 0.205, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( acquired(C, H), acquired(A, I) )
%   | | | then return 0.11692557465323096;  // std dev = 2.312, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.02719518112992212;  // std dev = 1.296, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( acquired(A, J), acquired(J, K) )
%   | then return 0.00666070782912764;  // std dev = 0.344, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | else if ( cityhascompanyoffice(L, A) )
%   | | then if ( cityhascompanyoffice(L, M), economicsectorcompany(B, M) )
%   | | | then return 0.7612750605843182;  // std dev = 0.998, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.1801512949855351;  // std dev = 0.158, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( companyceo(A, N) )
%   | | | then return 0.20636195985037767;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | | else return 0.12859947967188975;  // std dev = 10.538, 529.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=169 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.6267570724453917;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then if ( bankchiefexecutiveceo(A, E) )
%   | | | then return 0.2640277422619934;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.007267565055368582;  // std dev = 1.585, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return -0.05209664143675311;  // std dev = 0.352, 75.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
%   else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.6625710228790362;  // std dev = 0.189, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.035822488177634025;  // std dev = 0.311, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then return 0.04281889444483705;  // std dev = 0.342, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.16707068293567895;  // std dev = 3.697, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | | | else return 0.11371230089617182;  // std dev = 10.536, 539.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=175 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( acquired(E, D), economicsectorcompany(B, E) )
%   | then return 0.6033339850916878;  // std dev = 0.389, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(D, F), companyceo(C, G) )
%   | | then return -0.021867244529898397;  // std dev = 0.615, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.19531758986800443;  // std dev = 0.154, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then if ( companyceo(A, I) )
%   | | then return 0.5301549160530279;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7297917001824965;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, J), acquired(J, K) )
%   | | then if ( companyalsoknownas(A, L), acquired(L, M) )
%   | | | then return 0.21304461999526492;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11850675295453285;  // std dev = 0.729, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, N), companyalsoknownas(A, P) )
%   | | | then return 0.37035396706718204;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.080434786741036;  // std dev = 11.963, 747.000 (wgt'ed) examples reached here.  /* #neg=511 #pos=236 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.1547407793789234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(A, D), companyceo(A, E) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then if ( economicsectorcompany(B, D) )
%   | | | then return 0.3857007159598327;  // std dev = 0.245, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08301244928626213;  // std dev = 2.447, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( companyceo(D, G) )
%   | | | then return -0.14584438100375327;  // std dev = 0.685, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.02081847628250724;  // std dev = 1.744, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | then if ( cityhascompanyoffice(J, H) )
%   | | | then return 0.053496511036919055;  // std dev = 1.353, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.2142226838358633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | | then return 0.03656782680755752;  // std dev = 2.571, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.10725554133924091;  // std dev = 11.065, 588.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=211 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.4933764466922147;  // std dev = 0.250, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | else return -0.19890323185880074;  // std dev = 0.378, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( bankboughtbank(E, A) )
%   | then if ( countryhascompanyoffice(F, A), countryhascompanyoffice(F, E) )
%   | | then return -0.005479345769679804;  // std dev = 0.270, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.1407074281423435;  // std dev = 1.070, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3241239279612981;  // std dev = 1.164, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( companyalsoknownas(A, H), countryhascompanyoffice(I, H) )
%   | | then if ( acquired(H, J) )
%   | | | then return 0.1129970356961663;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1207864124827288;  // std dev = 0.741, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.4771839820290284;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.043109107781365806;  // std dev = 10.878, 593.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=182 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.379632742330147;  // std dev = 0.114, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then if ( acquired(A, E), companyceo(E, F) )
%   | | | then return 0.22436524305810082;  // std dev = 0.188, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4115995786567824;  // std dev = 0.220, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.31433595191961433;  // std dev = 0.285, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.01134370413373803;  // std dev = 3.201, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | else if ( acquired(A, H), companyceo(A, I) )
%   | | then if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.02990205217891809;  // std dev = 0.783, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.08779723238797114;  // std dev = 1.374, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.09919125287770442;  // std dev = 2.703, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.03350692108729638;  // std dev = 10.692, 612.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=188 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.3662235706584885;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.011979895313329615;  // std dev = 0.282, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return -0.1449562100027636;  // std dev = 0.180, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.3767092107869135;  // std dev = 0.226, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | else return -0.17526001386143505;  // std dev = 0.282, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( companyceo(A, H) )
%   | | then if ( companyalsoknownas(A, I), acquired(A, J) )
%   | | | then return 0.5035107585717631;  // std dev = 0.267, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05767391164980736;  // std dev = 3.110, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.2111870490137105;  // std dev = 2.160, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.022487387317322;  // std dev = 10.193, 530.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=160 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.27861972522352535;  // std dev = 0.103, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(A, D), countryhascompanyoffice(E, A) )
%   | then if ( companyceo(A, F), companyceo(D, G) )
%   | | then if ( countryhascompanyoffice(E, H), economicsectorcompany(B, H) )
%   | | | then return 0.35773599475431767;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14024566061565066;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return -0.03574647525984276;  // std dev = 1.220, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.1728954822308539;  // std dev = 0.162, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( bankboughtbank(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.4989377792397901;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2553914378404329;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(M, A) )
%   | | | then return -0.05949664100149358;  // std dev = 3.171, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | | else return 0.024716824105136058;  // std dev = 10.837, 662.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=212 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.907', 'seconds']
Refined model CLL: -0.291718


******************************************
Best model found
******************************************
Results 

CLL : -0.29208 

AUC ROC : 0.746434 

AUC PR : 0.095206 

Precision : 0.068441 

Recall : 0.242308 

F1 : 0.106734 

Total Learning Time : 61.021 

Total Inference Time : 37.72392392158508 

Total revision time: 166.7662268924713
Best scored revision CLL: -0.291718


Results 

CLL : -0.29208 

AUC ROC : 0.746434 

AUC PR : 0.095206 

Precision : 0.068441 

Recall : 0.242308 

F1 : 0.106734 

Total Learning Time : 166.86787665367126 

Total Inference Time : 37.72392392158508 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.453
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12481560176617831;  // std dev = 0.442, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.24451257146314734;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | else return 0.18251868299866744;  // std dev = 0.468, 595.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.11959281926434899;  // std dev = 4.868, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.20772734635825432;  // std dev = 4.584, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | | else return 0.18471971197810955;  // std dev = 11.198, 551.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.3070499005841547;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.10543308929047868;  // std dev = 2.395, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.09464814353265519;  // std dev = 4.875, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12573607305447815;  // std dev = 4.083, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | | else return 0.14892416151705107;  // std dev = 0.474, 565.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.04419840947205159;  // std dev = 0.435, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else return 0.07127150913749224;  // std dev = 0.441, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12259553199172743;  // std dev = 12.238, 667.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.22743326813347145;  // std dev = 2.824, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else return 0.02708310852641776;  // std dev = 4.549, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14004263952671642;  // std dev = 3.952, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09721047730692678;  // std dev = 0.472, 575.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7010435960217902;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.07598439523976364;  // std dev = 4.716, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.04491600956277549;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else return 0.09119473849229204;  // std dev = 11.847, 620.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.16786033613562915;  // std dev = 2.810, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else return 0.009588782230889709;  // std dev = 4.541, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06986513642075273;  // std dev = 11.956, 637.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1562571620152836;  // std dev = 2.183, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.06995889447189083;  // std dev = 2.082, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return -0.004891510512809508;  // std dev = 0.433, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0555448342551029;  // std dev = 0.475, 660.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.048119768391721676;  // std dev = 0.465, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.13215906176431158;  // std dev = 1.888, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.0028986818666666163;  // std dev = 3.643, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02937859671565543;  // std dev = 11.377, 586.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.44497166933968424;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05722117337388745;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.001908800219492859;  // std dev = 4.245, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.09069780131689481;  // std dev = 4.495, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03662824923325251;  // std dev = 11.262, 563.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.954', 'seconds']
Parameter learned model CLL:-0.373117 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.341, 14, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.442, 66, 24], 'false,true': [4.568, 54, 34], 'false,false': [0.468, 402, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.868, 84, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.584, 55, 34], 'false,false,false,false': [11.198, 358, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.395, 20, 8], 'true,false,false': [4.875, 79, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.083, 55, 24], 'false,false,false': [0.474, 372, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.435, 26, 9], 'true,false': [0.441, 67, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.238, 440, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.824, 17, 15], 'true,false': [4.549, 79, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.952, 45, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 382, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.716, 73, 32], 'false,false,true': [2.828, 24, 12], 'false,false,false': [11.847, 405, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.81, 17, 15], 'true,false': [4.541, 77, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.956, 420, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.183, 11, 9], 'true,false,true': [2.082, 14, 6], 'true,false,false': [0.433, 54, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 433, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.465, 85, 43], 'false,true,true,true': [1.888, 9, 6], 'false,true,true,false': [3.643, 51, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.377, 393, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.225, 13, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.245, 70, 24], 'false,true': [4.495, 51, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.262, 370, 193]}]
{'': [0.20675072441068348, 0.22189590751336277], 'false': [0.23708677685950563, 0.219154014546998], 'true': [0.23818525519848777, 0.19555555555555656], 'true,false': [nan, 0.19555555555555656]}
{'': [0.20256521155229984, 0.2288269622372537], 'false': [nan, 0.2288269622372531], 'false,false': [nan, 0.2288269622372537], 'false,false,false': [0.2360813028658002, 0.22758159558103383]}
{'': [0.2104717140811528, 0.22326180450907823], 'false': [nan, 0.22326180450907823], 'false,false': [0.21102239429861233, 0.22490719711802276], 'false,false,true': [nan, 0.21102239429861233], 'true': [0.24999999999999994, 0.20929271735315705], 'true,true': [0.24999999999999994, nan], 'true,false': [0.20491969876905136, 0.21035319915420087]}
{'': [0.19305927919470425, 0.22454189519221204], 'false': [nan, 0.22454189519221204], 'false,false': [nan, 0.22454189519221204], 'true': [0.18943555843414606, 0.19424941996946113]}
{'': [0.21335636710889969, 0.22352544761853196], 'false': [0.226351213470945, 0.22298979206048944], 'false,true': [nan, 0.22635121347094514], 'false,false': [nan, 0.22298979206048944], 'true': [0.24928271588241352, 0.1933711322695908]}
{'': [0.0, 0.22429876882216007], 'false': [0.2118287934506596, 0.22627257375793278], 'false,false': [0.222222222222222, 0.2263902220041328], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.21261086880049743, 0.22440853942652542], 'false': [nan, 0.22440853942653005], 'false,false': [nan, 0.22440853942652542], 'false,false,false': [nan, 0.22440853942652542], 'true': [0.24669352286039106, 0.19637270625312275]}
{'': [0.20562912092178356, 0.22543392973527687], 'false': [nan, 0.22543392973527687], 'false,false': [nan, 0.22543392973527687], 'true': [0.23823207298231405, 0.19479343330476537], 'true,false': [0.2166651629291078, 0.1874999999999996]}
{'': [0.2162188970803646, 0.21865772437466435], 'false': [0.20310273813583563, 0.22087910167852767], 'false,false': [nan, 0.22087910167852767], 'false,true': [0.20310273813583563, nan], 'false,true,true': [0.23775413127613007, 0.192312577634546]}
{'': [0.2001360937143652, 0.22725869498769033], 'false': [0.23775724543486335, 0.2252901703321174], 'false,false': [nan, 0.2252901703321174], 'true': [0.23151338506140942, 0.19167515123609047], 'true,true': [0.0, 0.23570372073629003], 'true,false': [nan, 0.19167515123609047], 'true,false,false': [nan, 0.19167515123609047]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 9.339
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), cityhascompanyoffice(D, A) )
%   then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( companyalsoknownas(A, F), acquired(G, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(G, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( bankboughtbank(I, A) )
%   | | then if ( acquired(I, J), companyceo(A, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.054894543161357355;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( acquired(A, L), companyceo(A, M) )
%   | | | then return 0.2411276585037677;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.18847926542983848;  // std dev = 12.138, 666.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=220 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8303104849796813;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.8004642498960233;  // std dev = 0.165, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, E) )
%   | | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.057235829976645856;  // std dev = 4.341, 111.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=25 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.05960572780405829;  // std dev = 3.457, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return 0.16368047805696198;  // std dev = 11.310, 585.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C), acquired(A, D) )
%   then if ( cityhascompanyoffice(E, D) )
%   | then return 0.15372286743379018;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( bankboughtbank(A, D) )
%   | | then return 0.11446602557310515;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.16978091031153858;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( countryhascompanyoffice(F, A), companyceo(A, G) )
%   | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | then if ( acquired(A, I), companyalsoknownas(I, J) )
%   | | | then return 0.5403075633028256;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7045822202000757;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.14298732121907595;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.6871062527823891;  // std dev = 0.255, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.6838588392167773;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1299081923540083;  // std dev = 12.379, 717.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=228 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5108167953311087;  // std dev = 0.123, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( countryhascompanyoffice(D, A) )
%   | | then return -0.03219987892690889;  // std dev = 0.232, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | | | then return -0.19955262598501303;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14369614736410483;  // std dev = 3.644, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.7783051840192563;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.18821929268837242;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.69633088262947;  // std dev = 1.389, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.1960539102779995;  // std dev = 0.238, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0.13737508158200465;  // std dev = 0.470, 511.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=179 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.46115767781063144;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( countryhascompanyoffice(D, A), countryhascompanyoffice(D, C) )
%   | | then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | | then return 0.6489406973218367;  // std dev = 0.335, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21676283167654178;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.04439110820167559;  // std dev = 0.360, 100.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
%   else if ( acquired(A, F), acquired(F, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.6794962775344094;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1294335871138895;  // std dev = 0.367, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( companyalsoknownas(A, H), acquired(I, H) )
%   | | then return -0.03612764215567145;  // std dev = 0.234, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( acquired(A, J) )
%   | | | then return 0.025797371519422053;  // std dev = 3.434, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.11417868931581895;  // std dev = 10.765, 545.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=192 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.2900242632283583;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(D, A), acquired(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.38165552110934103;  // std dev = 0.333, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.020099629848253864;  // std dev = 2.717, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.1643615606057896;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( economicsectorcompany(B, G) )
%   | | | then return 0.42816808641171683;  // std dev = 0.277, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06697926049885429;  // std dev = 2.936, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | | then return 0.03530285540602324;  // std dev = 2.296, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.0810758877827463;  // std dev = 11.117, 609.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then if ( cityhascompanyoffice(D, A) )
%   | | then return 0.30255428107603516;  // std dev = 0.304, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4985756060793224;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( cityhascompanyoffice(E, C), bankchiefexecutiveceo(A, F) )
%   | | then return 0.14937275833282332;  // std dev = 0.996, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( countryhascompanyoffice(G, A), cityhascompanyoffice(H, C) )
%   | | | then return 0.09767740143580611;  // std dev = 1.201, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.05141422528411973;  // std dev = 3.783, 129.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=24 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.289340484820867;  // std dev = 0.550, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5906629875984968;  // std dev = 0.416, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.19431104360178075;  // std dev = 0.277, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0.06261241284632725;  // std dev = 0.463, 538.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=180 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( cityhascompanyoffice(E, C), acquired(F, C) )
%   | then return 0.04340965440747487;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then return 0.04619040053053216;  // std dev = 0.331, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1164977221014695;  // std dev = 0.153, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   else if ( acquired(A, H) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.3332806589730067;  // std dev = 0.120, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( acquired(H, I), companyalsoknownas(I, J) )
%   | | | then return 0.461659647143113;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.012356432009649278;  // std dev = 3.690, 100.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=25 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.35174220937758016;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankchiefexecutiveceo(A, L), bankboughtbank(M, A) )
%   | | | then return 0.2624327925002261;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03394094759283202;  // std dev = 11.155, 646.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=208 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return -0.05224995173172627;  // std dev = 0.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.33659189007083623;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( acquired(C, F) )
%   | | | then return 0.22417969601580856;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 9.563971506180852E-4;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, G) )
%   | then if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then return 0.308775066922976;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.2085687599647554;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.028000779658659398;  // std dev = 3.749, 115.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=26 */
%   | else return 0.03708927559550056;  // std dev = 0.437, 648.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=216 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.6428401637856545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0952823894647745;  // std dev = 0.370, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.10565891577975146;  // std dev = 0.345, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.07354587120761252;  // std dev = 1.103, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.029697409975135987;  // std dev = 2.647, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   else if ( countryhascompanyoffice(H, A), companyceo(A, I) )
%   | then return -0.017448012599780963;  // std dev = 0.199, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( countryhascompanyoffice(J, A), cityhascompanyoffice(K, A) )
%   | | then return 0.22881149102783283;  // std dev = 0.432, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( bankchiefexecutiveceo(A, L) )
%   | | | then return 0.11353046885904049;  // std dev = 1.503, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.03807294485403239;  // std dev = 10.984, 609.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=208 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.895', 'seconds']
Refined model CLL: -0.31622


******************************************
Best model found
******************************************
Results 

CLL : -0.316379 

AUC ROC : 0.711357 

AUC PR : 0.089787 

Precision : 0.07487 

Recall : 0.222008 

F1 : 0.111977 

Total Learning Time : 9.339 

Total Inference Time : 30.973604440689087 

Total revision time: 108.67795533370972
Best scored revision CLL: -0.31622


Results 

CLL : -0.316379 

AUC ROC : 0.711357 

AUC PR : 0.089787 

Precision : 0.07487 

Recall : 0.222008 

F1 : 0.111977 

Total Learning Time : 108.72594899368286 

Total Inference Time : 30.973604440689087 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.352
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20460562801289803;  // std dev = 0.476, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.17814893509951094;  // std dev = 4.665, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | else return 0.1939153584571721;  // std dev = 0.472, 548.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.22423084327364662;  // std dev = 5.169, 112.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1518819392678169;  // std dev = 4.676, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | | else return 0.15624142149373427;  // std dev = 11.158, 569.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.17139550742846663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.09386437038961032;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.12373230488536487;  // std dev = 4.697, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20206245611578513;  // std dev = 4.630, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | | else return 0.14635456016682447;  // std dev = 0.472, 547.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.09956528296512893;  // std dev = 0.461, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0.10850892799761033;  // std dev = 0.472, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09203627136927468;  // std dev = 12.257, 709.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.12760427636181926;  // std dev = 2.781, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return 0.0659682794669447;  // std dev = 4.464, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14758541962861432;  // std dev = 4.630, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11003922640185043;  // std dev = 0.474, 542.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.08743842590574893;  // std dev = 5.272, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.06290251416704645;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.07056430231018462;  // std dev = 11.912, 653.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.11514386728872006;  // std dev = 2.724, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else return 0.05787996558683764;  // std dev = 4.407, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06557283106820468;  // std dev = 12.090, 658.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07121067421429045;  // std dev = 2.358, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.05106490145386611;  // std dev = 1.813, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.07608959194668496;  // std dev = 0.489, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05730613690817117;  // std dev = 0.470, 653.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.04208490866034992;  // std dev = 0.463, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.04308301493947475;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.05687565368495148;  // std dev = 4.200, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04652285426854215;  // std dev = 11.070, 551.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.21558961652495556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.04554357116424926;  // std dev = 2.369, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07000247400739386;  // std dev = 4.543, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.02650692654817894;  // std dev = 4.699, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03094863302494841;  // std dev = 11.120, 561.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '3.444', 'seconds']
Parameter learned model CLL:-0.369117 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.476, 83, 44], 'false,true': [4.665, 68, 32], 'false,false': [0.472, 364, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.169, 68, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.676, 69, 32], 'false,false,false,false': [11.158, 385, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.373, 19, 8], 'true,false,false': [4.697, 71, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.63, 53, 36], 'false,false,false': [0.472, 363, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.461, 19, 9], 'true,false': [0.472, 68, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.257, 493, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.781, 22, 12], 'true,false': [4.464, 68, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.63, 53, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 358, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.272, 76, 44], 'false,false,true': [2.353, 18, 8], 'false,false,false': [11.912, 445, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.724, 20, 12], 'true,false': [4.407, 63, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.09, 438, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.358, 15, 9], 'true,false,true': [1.813, 10, 5], 'true,false,false': [0.489, 46, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 437, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.463, 86, 40], 'false,true,true,true': [2.227, 17, 7], 'false,true,true,false': [4.2, 45, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.07, 367, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.369, 15, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.543, 51, 35], 'false,true': [4.699, 72, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.12, 377, 184]}]
{'': [0.22642445284890672, 0.22222222222222468], 'true': [nan, 0.22642445284890672], 'false': [0.21760000000000138, 0.22302733230326902]}
{'': [0.23852040816326464, 0.21845095157924116], 'false': [nan, 0.21845095157924158], 'false,false': [nan, 0.21845095157924116], 'false,false,false': [0.21644936770904863, 0.21880337656481488]}
{'': [0.2121359245387112, 0.2260719881126409], 'false': [nan, 0.2260719881126409], 'false,false': [0.24087867693473025, 0.2232285793542301], 'false,false,true': [nan, 0.24087867693473025], 'true': [0.0, 0.21313050765917335], 'true,false': [0.20850480109739367, 0.21415779055518808], 'true,true': [0.0, nan]}
{'': [0.22036943268831347, 0.21190108213351627], 'true': [0.21294216725494883, 0.22237139829636288], 'false': [nan, 0.21190108213351627], 'false,false': [nan, 0.21190108213351627]}
{'': [0.21350809577039526, 0.22675250784724452], 'false': [0.24087650136520147, 0.22423441946596423], 'false,true': [nan, 0.2408765013652014], 'false,false': [nan, 0.22423441946596423], 'true': [0.22742148126876455, 0.20758685480754624]}
{'': [nan, 0.21934477147741027], 'false': [0.2315943924557159, 0.21713562619059928], 'false,false': [0.21301775147929, 0.2172973366166241]}
{'': [0.21890725811333006, 0.2221573552392396], 'false': [nan, 0.22215735523923463], 'false,false': [nan, 0.2221573552392396], 'false,false,false': [nan, 0.2221573552392396], 'true': [0.23194561629017416, 0.2134692276024867]}
{'': [0.23486836446243445, 0.2211275077591899], 'true': [0.23159351660098468, 0.23573194196473485], 'true,false': [0.2190577892339028, 0.23891966759002817], 'false': [nan, 0.2211275077591899], 'false,false': [nan, 0.2211275077591899]}
{'': [0.21436000168284267, 0.2239643324934231], 'false': [0.23245809603100373, 0.2224235098039882], 'false,true': [0.23245809603100373, nan], 'false,true,true': [0.2067375402282913, 0.23835294229667836], 'false,false': [nan, 0.2224235098039882]}
{'': [0.2373163946091278, 0.21914343214922216], 'true': [0.22715626070938988, 0.23999552882079395], 'true,false': [nan, 0.23999552882079395], 'true,false,false': [nan, 0.23999552882079395], 'true,true': [0.0, 0.2338934832371056], 'false': [0.21228872677108118, 0.22041109427079755], 'false,false': [nan, 0.22041109427079755]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 12.068
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyalsoknownas(C, E), companyceo(A, F) )
%   | | then return -0.07042249347191636;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( cityhascompanyoffice(D, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.767239844190421;  // std dev = 0.287, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, J), acquired(A, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.1875004709356856;  // std dev = 11.377, 586.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7207575013083501;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8125719798351395;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankchiefexecutiveceo(C, E), companyceo(A, F) )
%   | | | then return 0.5867384268764912;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1314499615165366;  // std dev = 3.957, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( acquired(A, G), companyceo(G, H) )
%   | then if ( bankboughtbank(I, G) )
%   | | then return 0.8337581240180848;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20926468663064557;  // std dev = 0.444, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return 0.11969784764491216;  // std dev = 0.391, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.14089764057245147;  // std dev = 2.870, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.178225764936669;  // std dev = 10.400, 479.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=165 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.14058965575005034;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return 0.013525844474619223;  // std dev = 0.335, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( acquired(F, A) )
%   | | | then return -0.0011385422128623545;  // std dev = 1.794, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.17118365500500665;  // std dev = 3.986, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.5550493282716019;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( acquired(I, A), cityhascompanyoffice(H, I) )
%   | | | then return -0.06326914458138244;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10473185672857209;  // std dev = 3.661, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.7886323910774349;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14322641829837543;  // std dev = 10.800, 524.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=176 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.35634976728966844;  // std dev = 0.245, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( cityhascompanyoffice(E, C), acquired(F, C) )
%   | | then if ( countryhascompanyoffice(G, C) )
%   | | | then return 0.26263394715218896;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14706022206365174;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.07269221126327352;  // std dev = 0.333, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   else if ( acquired(A, H), companyalsoknownas(A, I) )
%   | then return -0.01826114211999647;  // std dev = 0.308, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else if ( acquired(A, J) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.7235132382718367;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17714007070592916;  // std dev = 3.756, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.057215564778503716;  // std dev = 2.785, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.12930639685953493;  // std dev = 10.824, 542.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=188 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.3673082652991974;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return -0.0186552477148372;  // std dev = 0.370, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( companyalsoknownas(C, E), companyceo(C, F) )
%   | | | then return 0.06030502234626505;  // std dev = 1.852, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.2790964627868572;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return -0.04060062780075581;  // std dev = 0.320, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else if ( acquired(A, H) )
%   | | then if ( companyalsoknownas(A, I) )
%   | | | then return 0.013333551611758565;  // std dev = 1.882, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.16883659549479366;  // std dev = 3.656, 62.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | | else if ( companyalsoknownas(A, J), acquired(K, J) )
%   | | | then return -0.07216043406517612;  // std dev = 1.013, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09776336198244828;  // std dev = 11.118, 590.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=199 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(A, D) )
%   then if ( acquired(E, A), companyceo(E, F) )
%   | then if ( bankchiefexecutiveceo(E, F) )
%   | | then return 0.09500827639962457;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.30687155236219765;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.020807341202784883;  // std dev = 0.387, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   else if ( acquired(A, G) )
%   | then if ( acquired(H, A), companyceo(H, I) )
%   | | then return -0.2148562931403527;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( bankboughtbank(J, G) )
%   | | | then return 0.3403248325660695;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06300672896239395;  // std dev = 2.806, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.29280105286938535;  // std dev = 0.087, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(L, A), countryhascompanyoffice(M, L) )
%   | | | then return 0.26409524327870865;  // std dev = 1.603, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.07791581502704953;  // std dev = 11.315, 609.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=202 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.24076309674680446;  // std dev = 0.100, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( cityhascompanyoffice(E, C), companyceo(A, F) )
%   | | then if ( companyalsoknownas(C, G) )
%   | | | then return -0.020521950998332227;  // std dev = 0.783, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10058064094550391;  // std dev = 1.352, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.09045218167986706;  // std dev = 0.357, 54.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return 0.024930276776074328;  // std dev = 0.362, 152.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=42 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(J, A), companyalsoknownas(J, K) )
%   | | | then return -0.24735297728890934;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.24886099730509156;  // std dev = 2.713, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.5681821873732203;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08181012643963478;  // std dev = 10.490, 483.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=172 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5331722568359292;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(D, A), cityhascompanyoffice(E, A) )
%   | | then if ( companyceo(D, F) )
%   | | | then return 0.007515118601205728;  // std dev = 1.151, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.4430204431828919;  // std dev = 0.732, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( countryhascompanyoffice(G, C), companyceo(A, H) )
%   | | | then return 0.06020205199774655;  // std dev = 1.676, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.07656251818462913;  // std dev = 3.949, 115.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=23 */
%   else if ( bankchiefexecutiveceo(A, I) )
%   | then return -0.11794810338617072;  // std dev = 0.244, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.20181267562119232;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.08972086555207977;  // std dev = 3.312, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.03917404892375156;  // std dev = 10.919, 551.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=181 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C), companyceo(C, F) )
%   | then return 0.5057710660656288;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return -0.002726082496763413;  // std dev = 0.303, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.18089015708290246;  // std dev = 0.461, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( companyalsoknownas(A, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.4654847106794123;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.044712632918387535;  // std dev = 0.383, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | else if ( bankboughtbank(H, A), countryhascompanyoffice(I, H) )
%   | | then if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.04253790589834179;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.21149903887272278;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, K) )
%   | | | then return -0.09106010239172029;  // std dev = 1.246, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.047513998664288966;  // std dev = 11.091, 591.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=206 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.142392637551532;  // std dev = 0.376, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.5992195372416491;  // std dev = 0.303, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2381919840495134;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.012874960426092381;  // std dev = 0.382, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.38237461315233606;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, H) )
%   | | then if ( cityhascompanyoffice(I, A), companyceo(A, J) )
%   | | | then return -0.06127201146857482;  // std dev = 1.746, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | | else return 0.04238327048549948;  // std dev = 3.702, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return -0.027850809959878747;  // std dev = 2.598, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.03605787366218465;  // std dev = 10.354, 499.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.853', 'seconds']
Refined model CLL: -0.343062


******************************************
Best model found
******************************************
Results 

CLL : -0.342947 

AUC ROC : 0.678336 

AUC PR : 0.049976 

Precision : 0.016771 

Recall : 0.098456 

F1 : 0.02866 

Total Learning Time : 12.068 

Total Inference Time : 24.81561279296875 

Total revision time: 103.27032081604004
Best scored revision CLL: -0.343062


Results 

CLL : -0.342947 

AUC ROC : 0.678336 

AUC PR : 0.049976 

Precision : 0.016771 

Recall : 0.098456 

F1 : 0.02866 

Total Learning Time : 103.31831447601319 

Total Inference Time : 24.81561279296875 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.367
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1727556766725448;  // std dev = 0.464, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.21529179224236808;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | else return 0.18349140085293245;  // std dev = 0.469, 584.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.11492677921230096;  // std dev = 4.876, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.2368470260539973;  // std dev = 4.556, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   | | | else return 0.1928036259972141;  // std dev = 11.040, 530.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.17958626740626635;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return 0.1960785881783305;  // std dev = 4.574, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08566220662017811;  // std dev = 3.831, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else return 0.13520801039978475;  // std dev = 0.470, 577.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.15171538912390897;  // std dev = 0.477, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else return 0.17142584225842766;  // std dev = 0.481, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0989469207158116;  // std dev = 12.386, 705.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09452400366162486;  // std dev = 2.434, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.14320805535223494;  // std dev = 4.852, 98.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04489083807687391;  // std dev = 3.830, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08869447825077793;  // std dev = 0.467, 590.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.06010054993821868;  // std dev = 4.791, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.03528364585463911;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.10978029030454677;  // std dev = 11.820, 605.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04188948554611465;  // std dev = 2.481, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0.15144347225771237;  // std dev = 4.615, 86.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07833043635355978;  // std dev = 11.714, 608.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08037680979511673;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.14955094373014405;  // std dev = 2.207, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.04183453276629116;  // std dev = 0.457, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05240327867476564;  // std dev = 0.476, 650.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.02135446468185525;  // std dev = 0.479, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.08258733125865887;  // std dev = 1.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.013886117739191588;  // std dev = 3.676, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.036065344087167196;  // std dev = 11.255, 570.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06946104275267317;  // std dev = 1.942, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023185850426337484;  // std dev = 4.387, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return -0.03935386499756855;  // std dev = 4.903, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.019929631808517794;  // std dev = 11.327, 585.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.083', 'seconds']
Parameter learned model CLL:-0.370722 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.826, 10, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.464, 61, 28], 'false,true': [4.743, 63, 35], 'false,false': [0.469, 394, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.876, 85, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.556, 51, 35], 'false,false,false,false': [11.04, 340, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.882, 23, 13], 'true,false,false': [4.574, 52, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.831, 55, 20], 'false,false,false': [0.47, 387, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.477, 9, 5], 'true,false': [0.481, 48, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.386, 480, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.434, 17, 9], 'true,false': [4.852, 59, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.83, 55, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.467, 400, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.791, 77, 33], 'false,false,true': [1.854, 11, 5], 'false,false,false': [11.82, 385, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.481, 19, 9], 'true,false': [4.615, 47, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.714, 398, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.791, 9, 5], 'true,false,true': [2.207, 11, 9], 'true,false,false': [0.457, 45, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 425, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.479, 85, 48], 'false,true,true,true': [1.281, 9, 2], 'false,true,true,false': [3.676, 54, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.255, 380, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.942, 19, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.387, 65, 28], 'false,true': [4.903, 77, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.327, 395, 190]}]
{'': [0.21662352071006058, 0.2210700802366704], 'false': [0.22959183673469535, 0.21949474573090916], 'true': [0.22222222222222202, 0.21562933972983336], 'true,false': [nan, 0.21562933972983336]}
{'': [0.20152685682999052, 0.23179568274453533], 'false': [nan, 0.23179568274453358], 'false,false': [nan, 0.23179568274453533], 'false,false,false': [0.24134667387777228, 0.2299750800996821]}
{'': [0.2376743287407921, 0.2182138933677623], 'true': [nan, 0.237674328740793], 'true,false': [0.23076322894154958, 0.24045448540097777], 'false': [nan, 0.2182138933677623], 'false,false': [0.1957002532323004, 0.22085790063346614], 'false,false,true': [nan, 0.1957002532323004]}
{'': [0.23101432768941332, 0.21759969220654463], 'true': [0.22729046331837388, 0.2316398690664783], 'false': [nan, 0.21759969220654463], 'false,false': [nan, 0.21759969220654463]}
{'': [0.23803345122855418, 0.21595101905687952], 'true': [0.22781596919946942, 0.24024724758047683], 'false': [0.19554922049697127, 0.2183280666475125], 'false,false': [nan, 0.2183280666475125], 'false,true': [nan, 0.19554922049697132]}
{'': [nan, 0.22764134916648843], 'false': [0.20864416558759266, 0.23066314003597496], 'false,false': [0.21484375, 0.23093851534123605]}
{'': [0.24304477931947907, 0.225673743104208], 'true': [0.21989875433642816, 0.2476328161133689], 'false': [nan, 0.22567374310420762], 'false,false': [nan, 0.225673743104208], 'false,false,false': [nan, 0.225673743104208]}
{'': [0.22057575276797672, 0.22639178521206185], 'false': [nan, 0.22639178521206185], 'false,false': [nan, 0.22639178521206185], 'true': [0.229000066463623, 0.2191479441649418], 'true,false': [0.24361236772823172, 0.20874023437499994]}
{'': [0.22943311023567878, 0.21764357705061746], 'false': [0.18315550768337546, 0.22222222222222238], 'false,false': [nan, 0.22222222222222238], 'false,true': [0.18315550768337546, nan], 'false,true,true': [0.14925402602519353, 0.1877093775322033]}
{'': [0.1981425403407784, 0.2190232917836366], 'false': [0.214627320504077, 0.21930016801811567], 'false,false': [nan, 0.21930016801811567], 'true': [0.15712100783313462, 0.20696803523911225], 'true,false': [nan, 0.20696803523911225], 'true,false,false': [nan, 0.20696803523911225], 'true,true': [nan, 0.15712100783313468]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(D, C).;true;true
0;true,false;acquired(A, C).;true;true
0;false;acquired(E, F), acquired(A, F).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,false;acquired(E, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(F, A).;true;true
2;false,false,true;acquired(A, G).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 17.023
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07554023944733843;  // std dev = 0.412, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, E), acquired(F, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.22656998773109027;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   else if ( acquired(G, H), acquired(A, H) )
%   | then if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.10814893509951169;  // std dev = 0.433, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | else if ( companyceo(A, J) )
%   | | then if ( bankchiefexecutiveceo(K, J) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2823913593419366;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else return 0.16974313799805857;  // std dev = 0.463, 552.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=172 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, D) )
%   | then if ( companyceo(D, E) )
%   | | then return 0.0709246124466732;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.1934861062391827;  // std dev = 1.771, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3811557999102652;  // std dev = 1.650, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then return -0.1542991580093201;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08933894026371791;  // std dev = 0.438, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   else if ( acquired(A, H), acquired(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, K) )
%   | | | then return 0.22227716500572495;  // std dev = 4.441, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | | else return 0.16419668767798062;  // std dev = 11.276, 575.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.2069672484927269;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(E, A) )
%   | | then if ( acquired(A, F), companyceo(F, G) )
%   | | | then return 0.506034930240102;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22680768665715623;  // std dev = 2.481, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.6725131800194869;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.10214923878191931;  // std dev = 4.130, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A) )
%   | | then return 0.11332624765279509;  // std dev = 0.454, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.08656926659662988;  // std dev = 2.815, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.14463602806974526;  // std dev = 10.906, 535.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=179 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7777316156540947;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06983291037317184;  // std dev = 0.339, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( companyceo(A, F) )
%   | | then if ( companyalsoknownas(A, G) )
%   | | | then return 0.06008329390865792;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.24184358513482634;  // std dev = 1.638, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.07926403652011105;  // std dev = 0.446, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   else if ( acquired(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.264228494843473;  // std dev = 2.826, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.10272166648248816;  // std dev = 11.802, 648.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=206 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.007570983410638829;  // std dev = 0.400, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.49347774931388205;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.04731133990059652;  // std dev = 0.448, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   else if ( acquired(F, A) )
%   | then if ( acquired(G, F), acquired(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return -0.06049929596176917;  // std dev = 1.299, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.08215719497775235;  // std dev = 3.511, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(J, A), companyalsoknownas(A, K) )
%   | | | then return 0.4485659946526754;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09984173505882943;  // std dev = 11.220, 568.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=188 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.16623721791401114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(A, E), cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.5719346817905374;  // std dev = 0.940, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.2566987650113605;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return -0.13753839886096714;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05007299112853104;  // std dev = 4.229, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | else if ( acquired(A, J), acquired(J, K) )
%   | | then if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.45743282824527437;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11465081115009923;  // std dev = 1.307, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( bankboughtbank(M, A) )
%   | | | then return 0.40960832258719265;  // std dev = 1.612, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.07598543820149198;  // std dev = 11.796, 643.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=212 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( acquired(E, A), companyalsoknownas(E, F) )
%   | | then return 0.30484605416895166;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.02087408786263635;  // std dev = 0.385, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( acquired(A, G), bankboughtbank(H, G) )
%   | | then return -0.2420622715112465;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(I, A), companyceo(A, J) )
%   | | | then return 0.06445006230631832;  // std dev = 2.540, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.1133851671973749;  // std dev = 3.609, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   else if ( acquired(K, A), acquired(K, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, M) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05700725146798482;  // std dev = 11.911, 660.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.004589217415556878;  // std dev = 0.347, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then if ( companyceo(A, F) )
%   | | | then return -0.021902597395732575;  // std dev = 1.583, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.340189767267525;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( bankchiefexecutiveceo(A, G) )
%   | | | then return 0.417350615670023;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06683147304294891;  // std dev = 3.401, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), acquired(I, J) )
%   | | | then return -0.10055240083972967;  // std dev = 1.569, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.05292078709955299;  // std dev = 11.958, 656.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=220 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return -0.04289948631503511;  // std dev = 0.368, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.1938841287785634;  // std dev = 0.460, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else return 0.057521725425712114;  // std dev = 0.438, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   else if ( acquired(G, A) )
%   | then if ( acquired(G, H) )
%   | | then if ( acquired(H, I) )
%   | | | then return 0.14344112737938577;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.030176294379335236;  // std dev = 3.505, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, K), companyceo(A, K) )
%   | | | then return -0.2396429933900368;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04706485840675639;  // std dev = 11.206, 566.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=189 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.005174281367807124;  // std dev = 0.346, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(E, C), acquired(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.009112129825476375;  // std dev = 4.329, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(A, F) )
%   | then if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.5345012494031606;  // std dev = 0.418, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.014518274910568042;  // std dev = 0.402, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0.40122716943762043;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04983575707947751;  // std dev = 10.946, 531.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=183 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '45.141', 'seconds']
Refined model CLL: -0.356209


******************************************
Best model found
******************************************
Results 

CLL : -0.356173 

AUC ROC : 0.524594 

AUC PR : 0.022562 

Precision : 0.032882 

Recall : 0.032692 

F1 : 0.032787 

Total Learning Time : 17.023 

Total Inference Time : 118.91335797309875 

Total revision time: 203.36864627838133
Best scored revision CLL: -0.356209


Results 

CLL : -0.356173 

AUC ROC : 0.524594 

AUC PR : 0.022562 

Precision : 0.032882 

Recall : 0.032692 

F1 : 0.032787 

Total Learning Time : 203.41663993835448 

Total Inference Time : 118.91335797309875 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.736
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.1985744670144046;  // std dev = 0.474, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.15639454913459863;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | else return 0.19033482150226166;  // std dev = 0.471, 581.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13712096226952528;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.22004740678638812;  // std dev = 4.584, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | | else return 0.17495781602722413;  // std dev = 11.273, 565.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7866299752350621;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.040761593505625776;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else return 0.1528343750633535;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10848646123049349;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | else return 0.14504630532403043;  // std dev = 0.473, 572.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.15965255898136987;  // std dev = 0.482, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0.07038708912398194;  // std dev = 0.445, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11838939578492834;  // std dev = 12.289, 678.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.18855822700215308;  // std dev = 2.888, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else return 0.077218458763122;  // std dev = 4.402, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08007252515874537;  // std dev = 4.096, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09844424201692581;  // std dev = 0.472, 576.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5423704749168715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.0719587421845301;  // std dev = 4.718, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.24561632559590427;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else return 0.07293177410709009;  // std dev = 12.022, 656.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05318912042577289;  // std dev = 2.981, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else return 0.05190895540341716;  // std dev = 4.397, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05415052016975829;  // std dev = 12.136, 678.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.048627592582410104;  // std dev = 2.466, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.018919634610210588;  // std dev = 2.111, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.03206616704786312;  // std dev = 0.452, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05552723862403604;  // std dev = 0.473, 671.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.05319737044832508;  // std dev = 0.470, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.05053358066520405;  // std dev = 2.022, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.03745225870694244;  // std dev = 3.541, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06306357499975447;  // std dev = 11.165, 545.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.3711012781378167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.01472979127928348;  // std dev = 2.358, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013901460411394147;  // std dev = 4.166, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.0343196226754479;  // std dev = 4.653, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0385592822651469;  // std dev = 11.262, 563.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.192', 'seconds']
Parameter learned model CLL:-0.371416 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.707, 1, 1], 'true,false': [0.474, 62, 32], 'false,true': [4.885, 80, 34], 'false,false': [0.471, 388, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.787, 75, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.584, 55, 34], 'false,false,false,false': [11.273, 372, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.484, 27, 8], 'true,false,false': [4.712, 64, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.11, 57, 24], 'false,false,false': [0.473, 379, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.482, 15, 9], 'true,false': [0.445, 64, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.289, 451, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.888, 20, 15], 'true,false': [4.402, 62, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.096, 56, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 383, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.718, 73, 32], 'false,false,true': [2.396, 11, 12], 'false,false,false': [12.022, 441, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.981, 26, 15], 'true,false': [4.397, 61, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.136, 461, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.466, 16, 9], 'true,false,true': [2.111, 17, 6], 'true,false,false': [0.452, 45, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 444, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.47, 80, 43], 'false,true,true,true': [2.022, 13, 6], 'false,true,true,false': [3.541, 42, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.165, 352, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.358, 18, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.166, 62, 24], 'false,true': [4.653, 63, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.262, 370, 193]}]
{'': [0.22558593750000142, 0.21993892655659872], 'true': [0.25, 0.22453598913535677], 'false': [0.20929516774392257, 0.2218384232775734]}
{'': [0.21217001323302956, 0.22666685302097161], 'false': [nan, 0.2266668530209703], 'false,false': [nan, 0.22666685302097161], 'false,false,false': [0.23608130286579912, 0.22490719711801754]}
{'': [0.21743359908091753, 0.22184241384492429], 'false': [nan, 0.22184241384492429], 'false,false': [0.20850480109739447, 0.22356533326812916], 'true': [0.0, 0.2157852176402583], 'true,false': [0.17632653061224457, 0.22657226155768415], 'false,false,true': [nan, 0.20850480109739447], 'true,true': [0.0, nan]}
{'': [0.20702486461162597, 0.22273041690926207], 'false': [nan, 0.22273041690926207], 'false,false': [nan, 0.22273041690926207], 'true': [0.23225880046228856, 0.19843538408357198]}
{'': [0.22422226060223444, 0.22123563952514155], 'true': [0.23827697714055718, 0.21528550518637127], 'false': [0.2096909198212808, 0.22279791184413422], 'false,false': [nan, 0.22279791184413422], 'false,true': [nan, 0.2096909198212809]}
{'': [0.0, 0.220916077960962], 'false': [0.21201039145297906, 0.22228701218937177], 'false,false': [0.24952741020793953, 0.22032183571328862], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.21706647214066463, 0.21723407425575372], 'false': [nan, 0.21723407425574875], 'false,false': [nan, 0.21723407425575372], 'false,false,false': [nan, 0.21723407425575372], 'true': [0.21670216581795174, 0.2172337817894815]}
{'': [0.21088433630568373, 0.22400110698305], 'false': [nan, 0.22400110698305], 'false,false': [nan, 0.22400110698305], 'true': [0.24330541307918657, 0.20136881632298162], 'true,false': [0.1938114495626193, 0.20408163265306065]}
{'': [0.22078693507327043, 0.22646805670758574], 'false': [0.21048144280158548, 0.2287214880902327], 'false,false': [nan, 0.2287214880902327], 'false,true': [0.21048144280158548, nan], 'false,true,true': [0.21522631198332895, 0.208937745214295]}
{'': [0.20390885354673388, 0.2249917942960889], 'false': [0.22324464989525228, 0.2252901703321142], 'false,false': [nan, 0.2252901703321142], 'true': [0.21037905043188612, 0.2018304981522039], 'true,true': [0.0, 0.2137668250883977], 'true,false': [nan, 0.2018304981522039], 'true,false,false': [nan, 0.2018304981522039]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 30.006
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, E), countryhascompanyoffice(C, E) )
%   | | then if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.2899671169176941;  // std dev = 3.286, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return 0.14291714702004157;  // std dev = 0.451, 151.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=43 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.17326733218511853;  // std dev = 10.885, 549.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=173 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( acquired(C, D), economicsectorcompany(B, D) )
%   | then return 0.8246179051315963;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06427098375729251;  // std dev = 0.315, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   else if ( companyceo(A, E) )
%   | then if ( acquired(A, F), companyalsoknownas(F, G) )
%   | | then if ( acquired(H, G) )
%   | | | then return 0.3019266131877515;  // std dev = 1.267, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.195183186116871;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.8087217528707958;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09764042769624964;  // std dev = 4.368, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.7495665646598358;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.047350999209739085;  // std dev = 3.484, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.17696145808910047;  // std dev = 11.264, 569.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=195 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.3291169293473595;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.665807580652511;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.7362892747283258;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.027550561719082937;  // std dev = 4.344, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   else if ( acquired(G, A), companyceo(G, H) )
%   | then if ( acquired(I, G) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.6416546819022674;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09817046083516491;  // std dev = 1.129, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( acquired(G, J), economicsectorcompany(B, J) )
%   | | | then return 0.7475897428125738;  // std dev = 0.340, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.172899405823786;  // std dev = 0.026, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.14834230270559456;  // std dev = 0.470, 599.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=203 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.5060178520208057;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6871225075333334;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | then if ( acquired(G, E) )
%   | | then return -0.17443626236927134;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( acquired(E, H), cityhascompanyoffice(I, H) )
%   | | | then return 0.3222829478245179;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.02478497429372752;  // std dev = 2.286, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( bankboughtbank(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( bankboughtbank(A, L) )
%   | | | then return 0.086217724456784;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.18318071529822094;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(M, A) )
%   | | | then return 0.0882195200104233;  // std dev = 3.942, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | | | else return 0.12990083810532307;  // std dev = 11.539, 602.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=206 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.38190300606982974;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5274946675325697;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.45347634350940486;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.6278168569835543;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.561609009358367;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, H) )
%   | | then if ( cityhascompanyoffice(I, H), cityhascompanyoffice(I, A) )
%   | | | then return -0.1964409728299089;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.06348202934579979;  // std dev = 4.222, 100.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   | | else return 0.10828694308267138;  // std dev = 0.466, 617.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=212 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.08332412720160465;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyceo(A, D), cityhascompanyoffice(E, A) )
%   | then if ( bankchiefexecutiveceo(F, D), economicsectorcompany(B, F) )
%   | | then return 0.713414575723817;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankchiefexecutiveceo(A, D) )
%   | | | then return -0.2057548556208122;  // std dev = 0.083, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.12759874837788215;  // std dev = 3.171, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | else if ( countryhascompanyoffice(G, A), cityhascompanyoffice(H, A) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.6365595478099745;  // std dev = 0.290, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1856270761576685;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(A, J), countryhascompanyoffice(K, J) )
%   | | | then return 0.16835702939962977;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.055150796734888485;  // std dev = 12.011, 723.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=226 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, C) )
%   | then return 0.28215620891961796;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.406033146841231;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then if ( acquired(A, G), companyceo(A, H) )
%   | | then return 0.14381212005142455;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.22731888888685398;  // std dev = 0.127, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( companyceo(A, K) )
%   | | | then return -0.023220916321885488;  // std dev = 2.120, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.14737121249614696;  // std dev = 2.792, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return -0.07072944910233075;  // std dev = 0.862, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.04783253391973709;  // std dev = 11.985, 708.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=222 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyceo(A, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.2258963706972495;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankchiefexecutiveceo(F, D), cityhascompanyoffice(G, A) )
%   | | | then return 0.1282051244621965;  // std dev = 1.146, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06352923237232348;  // std dev = 1.718, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else if ( countryhascompanyoffice(C, H), economicsectorcompany(B, H) )
%   | | then return 0.5239773930601915;  // std dev = 0.257, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.23980304967357116;  // std dev = 0.075, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | then return 0.38926346403037687;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( cityhascompanyoffice(J, A), acquired(K, A) )
%   | | then return -0.13192546114504253;  // std dev = 0.258, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.08592476879296095;  // std dev = 4.892, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | | | else return 0.034666157302673785;  // std dev = 10.804, 573.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=178 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D), acquired(D, A) )
%   | then return -0.20455151081728012;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.2937359105804243;  // std dev = 0.110, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( cityhascompanyoffice(E, C), bankchiefexecutiveceo(A, F) )
%   | | | then return 0.39095753956408896;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0018731091946499097;  // std dev = 4.003, 108.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=28 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.4156933173538587;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( countryhascompanyoffice(H, A), bankbankincountry(I, H) )
%   | | then if ( bankboughtbank(J, A), acquired(J, K) )
%   | | | then return -0.1140391636453637;  // std dev = 0.544, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09229115418925678;  // std dev = 2.446, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | else if ( bankboughtbank(L, A), cityhascompanyoffice(M, L) )
%   | | | then return -0.18544167327502914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.050062410105703364;  // std dev = 11.111, 572.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.7180103226305105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.02071326572215732;  // std dev = 0.358, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else return -0.0073855874636080746;  // std dev = 0.344, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   else if ( acquired(A, F) )
%   | then if ( countryhascompanyoffice(G, A) )
%   | | then return 0.08743398411800281;  // std dev = 0.298, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( cityhascompanyoffice(H, A), cityhascompanyoffice(I, F) )
%   | | | then return -0.17045264393239903;  // std dev = 0.727, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.0172939976613311;  // std dev = 3.499, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | else if ( bankchiefexecutiveceo(A, J), companyceo(K, J) )
%   | | then return 0.19528908159673938;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( bankboughtbank(L, A) )
%   | | | then return -0.09748523648667021;  // std dev = 0.749, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.03537228053191579;  // std dev = 11.036, 566.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.895', 'seconds']
Refined model CLL: -0.327031


******************************************
Best model found
******************************************
Results 

CLL : -0.327432 

AUC ROC : 0.640078 

AUC PR : 0.06981 

Precision : 0.253333 

Recall : 0.110039 

F1 : 0.153432 

Total Learning Time : 30.006 

Total Inference Time : 24.96052837371826 

Total revision time: 122.16869081687928
Best scored revision CLL: -0.327031


Results 

CLL : -0.327432 

AUC ROC : 0.640078 

AUC PR : 0.06981 

Precision : 0.253333 

Recall : 0.110039 

F1 : 0.153432 

Total Learning Time : 122.30118955802918 

Total Inference Time : 24.96052837371826 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.458
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.2158725123352846;  // std dev = 0.479, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1658412427918186;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | else return 0.1815232760485412;  // std dev = 0.468, 569.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.26587507966614876;  // std dev = 4.979, 101.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.16326916287722743;  // std dev = 4.642, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | | | else return 0.14125161094200606;  // std dev = 11.295, 600.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.15762905031027966;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.07460509152974633;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.1648409139809114;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23889080581545952;  // std dev = 4.450, 80.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=36 */
%   | | else return 0.1480913785230354;  // std dev = 0.472, 551.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1848862789978282;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0.13688800660804926;  // std dev = 0.485, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11886146569945322;  // std dev = 12.042, 657.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07570990514854366;  // std dev = 2.866, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else return 0.05384804898833198;  // std dev = 4.464, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10522262661225144;  // std dev = 4.696, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10128237212455639;  // std dev = 0.471, 556.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.061195717134449844;  // std dev = 5.318, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.0724044249992435;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.08908734207881752;  // std dev = 11.746, 618.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.17254455582533063;  // std dev = 2.571, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0.01773007128358222;  // std dev = 4.491, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.073949605056757;  // std dev = 11.975, 636.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.009344403774635081;  // std dev = 2.429, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.011439152768934277;  // std dev = 1.864, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.05826484532880021;  // std dev = 0.488, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.049888651477485835;  // std dev = 0.470, 658.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.044002658043635755;  // std dev = 0.469, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.04460257525963834;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.05843074516923284;  // std dev = 4.162, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04713638066508438;  // std dev = 11.045, 546.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.20634206843043132;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.015838891716645598;  // std dev = 2.449, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034612612230863114;  // std dev = 4.612, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.04151515362825697;  // std dev = 4.628, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02774433556371735;  // std dev = 11.125, 562.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '57.315', 'seconds']
Parameter learned model CLL:-0.37325 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.479, 79, 44], 'false,true': [4.707, 72, 32], 'false,false': [0.468, 385, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.979, 57, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.642, 66, 32], 'false,false,false,false': [11.295, 416, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.39, 20, 8], 'true,false,false': [4.555, 59, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.45, 44, 36], 'false,false,false': [0.472, 367, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.495, 12, 9], 'true,false': [0.485, 56, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.042, 441, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.866, 26, 12], 'true,false': [4.464, 68, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.696, 57, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 372, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.318, 79, 44], 'false,false,true': [2.332, 17, 8], 'false,false,false': [11.746, 410, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.571, 16, 12], 'true,false': [4.491, 72, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.975, 416, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.429, 18, 9], 'true,false,true': [1.864, 12, 5], 'true,false,false': [0.488, 47, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 442, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.469, 82, 40], 'false,true,true,true': [2.068, 11, 7], 'false,true,true,false': [4.162, 43, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.045, 362, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.449, 19, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.612, 59, 35], 'false,true': [4.628, 64, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.125, 378, 184]}]
{'': [0.228096000000001, 0.21794144336088236], 'true': [0.0, 0.22975741952541576], 'false': [0.2130177514792913, 0.21880337656481455]}
{'': [0.2454917072580833, 0.21370371249013395], 'false': [nan, 0.21370371249013562], 'false,false': [nan, 0.21370371249013395], 'false,false,false': [0.2199083715118697, 0.21262222222221766]}
{'': [0.22160638589844106, 0.22651552376774803], 'false': [nan, 0.22651552376774803], 'false,false': [0.24750000000000122, 0.2224235098039844], 'false,false,true': [nan, 0.24750000000000122], 'true': [0.0, 0.22383095658724922], 'true,false': [0.204081632653061, 0.22799178843134885], 'true,true': [0.0, nan]}
{'': [0.2377045682256181, 0.22070306973505743], 'true': [0.24509563386050853, 0.23556696879091363], 'false': [nan, 0.22070306973505743], 'false,false': [nan, 0.22070306973505743]}
{'': [0.21010698722874271, 0.2236724824497773], 'false': [0.2371429082144999, 0.22141711091558544], 'false,true': [nan, 0.2371429082144999], 'false,false': [nan, 0.22141711091558544], 'true': [0.21609674225656406, 0.20760050709231048]}
{'': [nan, 0.22425539836577157], 'false': [0.2299573933605283, 0.2230454838537953], 'false,false': [0.21760000000000004, 0.22325494927740275]}
{'': [0.21329662558340773, 0.2254866138847959], 'false': [nan, 0.225486613884801], 'false,false': [nan, 0.2254866138847959], 'false,false,false': [nan, 0.2254866138847959], 'true': [0.23601297939365934, 0.2016931505050533]}
{'': [0.22934980744508765, 0.22044556485327985], 'true': [0.21857159815942317, 0.23208053755499625], 'true,false': [0.20431461551881175, 0.23781413391803047], 'false': [nan, 0.22044556485327985], 'false,false': [nan, 0.22044556485327985]}
{'': [0.2198167087679972, 0.2257824349123903], 'false': [0.23999260528504343, 0.22342980584738387], 'false,true': [0.23999260528504343, nan], 'false,true,true': [0.2376286305332974, 0.24054535531636992], 'false,false': [nan, 0.22342980584738387]}
{'': [0.2225310250765074, 0.22066219772084114], 'true': [0.20800909603037787, 0.2262446170622094], 'true,false': [nan, 0.2262446170622094], 'true,false,false': [nan, 0.2262446170622094], 'false': [0.22314760448333648, 0.22020997707729276], 'false,false': [nan, 0.22020997707729276], 'true,true': [0.0, 0.21418656265034786]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 12.459
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, D) )
%   | | then return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21269438964496556;  // std dev = 5.017, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   else if ( companyalsoknownas(A, G), acquired(A, H) )
%   | then return 0.0010060779566551492;  // std dev = 0.350, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.8236661764788221;  // std dev = 0.983, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.22481560176617835;  // std dev = 3.733, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | | else return 0.1744554184000973;  // std dev = 10.492, 509.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=161 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8302366835635399;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( companyceo(E, F) )
%   | | | then return 0.7690550515551043;  // std dev = 0.330, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.6256894864949929;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.1411389046750217;  // std dev = 0.383, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( acquired(G, A), companyceo(G, H) )
%   | | then if ( cityhascompanyoffice(I, G), acquired(J, G) )
%   | | | then return 0.4969033502302067;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.024662363686137487;  // std dev = 2.220, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( acquired(K, A), acquired(A, L) )
%   | | | then return -0.16418086612926555;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.17582695829028375;  // std dev = 11.298, 568.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=194 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.12301529378296236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | | then return 0.005698456747446512;  // std dev = 0.311, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else return 0.15385090003372104;  // std dev = 0.450, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.6807170280796179;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(I, G) )
%   | | | then return 0.5123428619649478;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16108069315072643;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.7178187272488331;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.012698780839108217;  // std dev = 1.524, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.13783755189149716;  // std dev = 0.453, 599.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=199 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5501583224826169;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.4522953825389279;  // std dev = 0.720, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( cityhascompanyoffice(G, C), companyceo(A, H) )
%   | | | then return 0.21615114942252464;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03404322932085164;  // std dev = 1.375, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return 0.04604140432472879;  // std dev = 0.317, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | else if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.7878275897980821;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1869062833365379;  // std dev = 1.800, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( acquired(L, A) )
%   | | | then return 0.06924636201563102;  // std dev = 3.960, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | | else return 0.13130131990961239;  // std dev = 10.734, 511.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=176 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( countryhascompanyoffice(E, D), bankchiefexecutiveceo(D, F) )
%   | | then return 0.08097351464289722;  // std dev = 1.062, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.48837556664379606;  // std dev = 0.214, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | else return -0.1459522133509168;  // std dev = 0.409, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( companyceo(A, G), bankchiefexecutiveceo(H, G) )
%   | then if ( acquired(H, I), companyceo(I, J) )
%   | | then return 0.002912262938818966;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.19861400606817614;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(A, K), companyceo(K, L) )
%   | | then if ( acquired(M, K) )
%   | | | then return -0.21905048061967092;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.39001150196972767;  // std dev = 1.630, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( acquired(A, N), bankboughtbank(P, N) )
%   | | | then return 0.25291226293881897;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09266762243605223;  // std dev = 11.385, 598.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=197 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(F, D), countryhascompanyoffice(F, C) )
%   | | then return 0.2522105212608262;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.01141368042030063;  // std dev = 0.264, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else return -0.16888393527002307;  // std dev = 0.248, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   else if ( companyceo(A, G), acquired(A, H) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.5586452938586923;  // std dev = 0.353, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(I, A), acquired(J, A) )
%   | | | then return 0.2832872493542841;  // std dev = 0.583, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.059622843676136204;  // std dev = 2.277, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.4434431794915534;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.003907173961735045;  // std dev = 2.764, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.06638829675180175;  // std dev = 11.368, 598.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=193 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5438319352072482;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(D, C) )
%   | | then return -0.23194978602620098;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( acquired(C, E), acquired(E, F) )
%   | | | then return -0.1009914777210507;  // std dev = 1.503, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.022809187159099683;  // std dev = 2.542, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.327351153133592;  // std dev = 0.221, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | else return -0.12640136003537186;  // std dev = 0.293, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.7187374951693525;  // std dev = 0.131, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.26359071149530217;  // std dev = 0.144, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.06693202932754491;  // std dev = 0.467, 535.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=180 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, A) )
%   then if ( acquired(E, A), companyceo(C, F) )
%   | then return 0.16886800612975114;  // std dev = 0.434, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( companyceo(C, G) )
%   | | then if ( companyalsoknownas(A, A) )
%   | | | then return -0.10463528251543258;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03191376545201198;  // std dev = 1.134, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return -0.05092352301067492;  // std dev = 0.223, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( acquired(H, A), bankboughtbank(H, I) )
%   | then if ( countryhascompanyoffice(J, I) )
%   | | then return 0.21714022773111974;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.45043904201926804;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.3230482091556124;  // std dev = 0.156, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.04776722207074823;  // std dev = 3.204, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.03857094154385933;  // std dev = 11.024, 639.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=204 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.16523620112155518;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.37223734151552257;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(E, A), companyceo(E, F) )
%   | then if ( countryhascompanyoffice(G, E), cityhascompanyoffice(H, E) )
%   | | then if ( companyalsoknownas(E, E) )
%   | | | then return 0.33239694431624106;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07690237737745051;  // std dev = 0.951, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( bankchiefexecutiveceo(E, I) )
%   | | | then return 0.06406180972174937;  // std dev = 0.951, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.14350229634183517;  // std dev = 2.112, 52.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | then return 0.3729765213776461;  // std dev = 0.332, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return -0.028138948359800086;  // std dev = 3.255, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | | else return 0.046331871896829066;  // std dev = 10.823, 623.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=206 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.028465174857732922;  // std dev = 0.358, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( bankboughtbank(E, A), countryhascompanyoffice(F, E) )
%   | | then return 0.5464819293039873;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.009018259189459171;  // std dev = 1.231, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.07618423048475287;  // std dev = 2.772, 59.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   else if ( countryhascompanyoffice(H, A) )
%   | then return -0.03747818002212252;  // std dev = 0.308, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else if ( acquired(A, I), acquired(I, J) )
%   | | then if ( companyalsoknownas(I, K) )
%   | | | then return 0.42528567820024393;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05061587133231533;  // std dev = 1.276, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( companyceo(A, L) )
%   | | | then return -0.01477456949466567;  // std dev = 2.850, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.04094601759220157;  // std dev = 10.154, 526.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=177 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.691', 'seconds']
Refined model CLL: -0.310754


******************************************
Best model found
******************************************
Results 

CLL : -0.31031 

AUC ROC : 0.739202 

AUC PR : 0.04556 

Precision : 0.072412 

Recall : 0.233591 

F1 : 0.110553 

Total Learning Time : 12.459 

Total Inference Time : 55.21186566352844 

Total revision time: 133.04476589393616
Best scored revision CLL: -0.310754


Results 

CLL : -0.31031 

AUC ROC : 0.739202 

AUC PR : 0.04556 

Precision : 0.072412 

Recall : 0.233591 

F1 : 0.110553 

Total Learning Time : 133.17726463508606 

Total Inference Time : 55.21186566352844 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.527
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14981560176617784;  // std dev = 0.455, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.2558762078267837;  // std dev = 4.591, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
%   | else return 0.18573514199605953;  // std dev = 0.469, 580.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1451427606451928;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17059805728478025;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.193170906165426;  // std dev = 11.034, 529.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.17747481225394587;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.22601895560390756;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.11905010929659526;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059946897442893825;  // std dev = 3.894, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | else return 0.14601164837643618;  // std dev = 0.474, 558.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.0645685759889264;  // std dev = 0.435, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.1200717273110384;  // std dev = 0.465, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11295854781691304;  // std dev = 12.260, 678.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.02086998087598081;  // std dev = 2.589, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else return 0.17381306894447016;  // std dev = 4.778, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.014051412224830398;  // std dev = 3.939, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09505173144450033;  // std dev = 0.471, 570.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.0694260034448284;  // std dev = 4.799, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.048226373609595995;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.08173445772473281;  // std dev = 12.045, 647.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.003305891200401952;  // std dev = 2.589, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else return 0.09211851075301421;  // std dev = 4.909, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03820591743549325;  // std dev = 12.075, 690.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.02598082153178223;  // std dev = 1.965, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.06668966509017253;  // std dev = 2.379, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.12760892712994001;  // std dev = 0.480, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07065170875148925;  // std dev = 0.478, 636.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.041907129304172445;  // std dev = 0.476, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.04159927033802059;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.05895315173952237;  // std dev = 3.521, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05091983375809114;  // std dev = 11.157, 551.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.16709536340641273;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.050522708915589284;  // std dev = 1.999, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08211215103772215;  // std dev = 4.205, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.009597548081440825;  // std dev = 4.808, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.028164882264919148;  // std dev = 11.260, 571.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.363', 'seconds']
Parameter learned model CLL:-0.369251 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.919, 14, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.455, 68, 28], 'false,true': [4.591, 53, 35], 'false,false': [0.469, 390, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.787, 75, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.782, 66, 35], 'false,false,false,false': [11.034, 339, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.778, 19, 13], 'true,false,false': [4.875, 74, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.894, 63, 20], 'false,false,false': [0.474, 368, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.435, 14, 5], 'true,false': [0.465, 60, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.26, 453, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.589, 26, 9], 'true,false': [4.778, 55, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.939, 70, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 380, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.799, 79, 33], 'false,false,true': [1.879, 12, 5], 'false,false,false': [12.045, 427, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.589, 27, 9], 'true,false': [4.909, 63, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.075, 480, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.965, 19, 5], 'true,false,true': [2.379, 16, 9], 'true,false,false': [0.48, 34, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.478, 411, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.476, 89, 48], 'false,true,true,true': [1.246, 8, 2], 'false,true,true,false': [3.521, 40, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.157, 361, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [1.999, 21, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.205, 50, 28], 'false,true': [4.808, 70, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.26, 381, 190]}]
{'': [0.20461247637051175, 0.22337435906630093], 'false': [0.23954028925619986, 0.22027348394768412], 'true': [0.19390581717451505, 0.20659722222222343], 'true,false': [nan, 0.20659722222222343]}
{'': [0.2121365509949872, 0.2296389422864296], 'false': [nan, 0.22963894228642967], 'false,false': [nan, 0.2296389422864296], 'false,false,false': [0.22644838741299803, 0.2301664159290406]}
{'': [0.22351337103775878, 0.2199732431167057], 'true': [0.0, 0.22524442202994732], 'true,false': [0.24109187070659865, 0.21799511825603893], 'false': [nan, 0.2199732431167057], 'false,false': [0.1826867849941977, 0.22456032168138168], 'false,false,true': [nan, 0.1826867849941977], 'true,true': [0.0, nan]}
{'': [0.2119404892901491, 0.22170409285918433], 'false': [nan, 0.22170409285918433], 'false,false': [nan, 0.22170409285918433], 'true': [0.18944337238009157, 0.2162507989546955]}
{'': [0.2335887674136124, 0.21619514057473335], 'true': [0.19155101433267122, 0.24289456734946707], 'false': [0.1723572606303074, 0.22222222222222604], 'false,false': [nan, 0.22222222222222604], 'false,true': [nan, 0.17235726063030732]}
{'': [nan, 0.22123326522906542], 'false': [0.20564515805781144, 0.22384366062795968], 'false,false': [0.20761245674740472, 0.2242413912183736]}
{'': [0.2247503534049333, 0.2113093285665979], 'true': [0.1862626132414907, 0.23627660568266193], 'false': [nan, 0.21130932856659754], 'false,false': [nan, 0.2113093285665979], 'false,false,false': [nan, 0.2113093285665979]}
{'': [0.21668999820926224, 0.2287205857154898], 'false': [nan, 0.2287205857154898], 'false,false': [nan, 0.2287205857154898], 'true': [0.1609579051750852, 0.2296093349096981], 'true,false': [0.22631227185263092, 0.22997508009967998]}
{'': [0.22626890524490695, 0.22378786920544355], 'false': [0.20645840317748076, 0.22592152199762525], 'false,false': [nan, 0.22592152199762525], 'false,true': [0.20645840317748076, nan], 'false,true,true': [0.15529105856514033, 0.213793478323705]}
{'': [0.208659984691549, 0.2217873637585563], 'false': [0.22019141822907015, 0.2220272910462201], 'false,false': [nan, 0.2220272910462201], 'true': [0.14366802579920543, 0.22674171569158275], 'true,false': [nan, 0.22674171569158275], 'true,false,false': [nan, 0.22674171569158275], 'true,true': [0.0, 0.1537487564152132]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 17.046
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return 0.18000323973526985;  // std dev = 0.467, 755.000 (wgt'ed) examples reached here.  /* #neg=512 #pos=243 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8259238160252866;  // std dev = 0.111, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(D, A), companyceo(D, E) )
%   | then if ( acquired(D, F), economicsectorcompany(B, F) )
%   | | then if ( economicsectorcompany(B, D) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.8203795241599567;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.16520531699018573;  // std dev = 5.16e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( acquired(A, G) )
%   | | then if ( countryhascompanyoffice(H, G), countryhascompanyoffice(I, A) )
%   | | | then return -0.022348174133043068;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.1302307130010358;  // std dev = 4.341, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.33175991272563393;  // std dev = 3.066, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.16344067470707924;  // std dev = 10.977, 547.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=180 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.18395684504116927;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.5696389986580991;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.7442399831319941;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10862625047978053;  // std dev = 4.882, 124.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=37 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then if ( companyceo(A, H), bankchiefexecutiveceo(I, H) )
%   | | then return 0.283848607820616;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.605574019031492;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.5945372273805992;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(K, A) )
%   | | | then return -0.0170729691584283;  // std dev = 2.504, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | | else return 0.14523555489183476;  // std dev = 11.050, 548.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.45267257257522675;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, D) )
%   | | then return 0.11734996921711487;  // std dev = 1.070, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.1462506859234286;  // std dev = 0.044, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( bankboughtbank(A, E), acquired(A, E) )
%   | then return -0.18680055189617467;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then if ( companyceo(A, G) )
%   | | | then return 0.6003454993402368;  // std dev = 0.292, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6649532568294771;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, H), companyceo(H, I) )
%   | | | then return -0.04703763562549927;  // std dev = 2.013, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.10999631461286345;  // std dev = 12.334, 721.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=236 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7278500154836502;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.5212624678762022;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(C, F), economicsectorcompany(B, F) )
%   | | | then return 0.786136835547791;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.21203327074301564;  // std dev = 0.122, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | then return -0.06612613552732605;  // std dev = 0.281, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( companyceo(A, I), acquired(A, J) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.406492540710136;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.045233707760134266;  // std dev = 2.239, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( acquired(K, A), countryhascompanyoffice(L, K) )
%   | | | then return -0.0561375245424911;  // std dev = 1.231, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.11321919465764406;  // std dev = 11.724, 633.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=222 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then if ( cityhascompanyoffice(E, C) )
%   | | then return 0.3763564795893705;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3071312082444948;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4229021965277141;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.06910924158730616;  // std dev = 0.453, 750.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=243 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), countryhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | then if ( countryhascompanyoffice(F, A), bankboughtbank(E, G) )
%   | | then return 0.4771770633101664;  // std dev = 0.441, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.726781057842003;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.2316132347406455;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then if ( acquired(A, I) )
%   | | then return 0.4009541768271051;  // std dev = 0.257, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6447496045886525;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( companyalsoknownas(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.4610083542950834;  // std dev = 0.374, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09619821043063298;  // std dev = 1.480, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return -0.004759888174264029;  // std dev = 3.610, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | | | else return 0.052825634521236946;  // std dev = 11.502, 634.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=205 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.3653376309813966;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( countryhascompanyoffice(D, A), bankbankincountry(E, D) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then if ( countryhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.616109164283395;  // std dev = 0.395, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20912586108621573;  // std dev = 0.177, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( countryhascompanyoffice(D, H), economicsectorcompany(B, H) )
%   | | | then return 0.5846661692528802;  // std dev = 1.167, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.2511704755511347;  // std dev = 0.531, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.27949805280932843;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0766606686602837;  // std dev = 1.431, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.02399886275948152;  // std dev = 3.787, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | | else return 0.06970444994509893;  // std dev = 10.798, 538.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=189 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(A, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, C) )
%   | | then return -0.058744078431188895;  // std dev = 0.398, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( acquired(C, F) )
%   | | | then return 0.19426056188298857;  // std dev = 1.536, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.033962885607681695;  // std dev = 0.812, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( companyalsoknownas(C, G), economicsectorcompany(B, G) )
%   | | then if ( countryhascompanyoffice(H, G), acquired(A, I) )
%   | | | then return 0.5560263227946367;  // std dev = 0.278, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5223494704196965;  // std dev = 0.263, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.21896177548042908;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.023894296151851013;  // std dev = 0.435, 746.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=236 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.020766368487074294;  // std dev = 0.267, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( companyceo(A, F) )
%   | | then return -0.008331646874434034;  // std dev = 0.256, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.057001194408995634;  // std dev = 1.314, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.080433421813587;  // std dev = 2.303, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   else if ( acquired(A, H), acquired(H, I) )
%   | then return -0.12348079461928689;  // std dev = 0.206, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( acquired(A, J), countryhascompanyoffice(K, J) )
%   | | then if ( countryhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.2950846207326342;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14240459485950394;  // std dev = 0.727, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return 0.03882398900143842;  // std dev = 0.453, 637.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=217 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '28.296', 'seconds']
Refined model CLL: -0.323434


******************************************
Best model found
******************************************
Results 

CLL : -0.323429 

AUC ROC : 0.695232 

AUC PR : 0.087902 

Precision : 0.268482 

Recall : 0.132692 

F1 : 0.177606 

Total Learning Time : 17.046 

Total Inference Time : 46.63502311706543 

Total revision time: 130.93994049835206
Best scored revision CLL: -0.323434


Results 

CLL : -0.323429 

AUC ROC : 0.695232 

AUC PR : 0.087902 

Precision : 0.268482 

Recall : 0.132692 

F1 : 0.177606 

Total Learning Time : 131.07243923950196 

Total Inference Time : 46.63502311706543 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.417
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16584124279181922;  // std dev = 0.462, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.19814893509951095;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | else return 0.22930278125335404;  // std dev = 0.483, 520.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.14665338891130975;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17571128144066347;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | | else return 0.15667343956265986;  // std dev = 11.382, 587.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.8098512348477073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.08119975102972021;  // std dev = 2.421, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.13639622404081972;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10037277676078597;  // std dev = 4.138, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else return 0.1412235583326708;  // std dev = 0.473, 573.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.05516209936851707;  // std dev = 0.435, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else return 0.07048206187343387;  // std dev = 0.444, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11747672300972505;  // std dev = 12.279, 676.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.14119913657698865;  // std dev = 3.028, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else return 0.08090023278387151;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11205609903244995;  // std dev = 4.026, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08704707563913025;  // std dev = 0.469, 591.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.057733186920617165;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.11395942103222383;  // std dev = 4.581, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.10075920298560923;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else return 0.0801732724546893;  // std dev = 11.953, 641.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.026644830656388053;  // std dev = 3.218, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else return 0.0833832530690547;  // std dev = 4.286, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06776279123413703;  // std dev = 11.996, 644.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1942531541150184;  // std dev = 2.178, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.002978924232249687;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return -0.014468304928528738;  // std dev = 0.433, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06654908108345145;  // std dev = 0.477, 646.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.014354287648359306;  // std dev = 0.462, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.03425586532002459;  // std dev = 2.041, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.027229439371902295;  // std dev = 3.542, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05355162521134988;  // std dev = 11.182, 548.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.5659417149981452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.002805884923161515;  // std dev = 2.346, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0010176566643981028;  // std dev = 4.195, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.021931680546174455;  // std dev = 4.795, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.042859380752535876;  // std dev = 11.176, 547.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.800', 'seconds']
Parameter learned model CLL:-0.374868 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.426, 17, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.462, 54, 24], 'false,true': [4.737, 66, 34], 'false,false': [0.483, 327, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.767, 73, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 65, 34], 'false,false,false,false': [11.382, 394, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.421, 22, 8], 'true,false,false': [4.772, 69, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.138, 60, 24], 'false,false,false': [0.473, 380, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.435, 25, 9], 'true,false': [0.444, 65, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.279, 449, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.028, 25, 15], 'true,false': [4.392, 62, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.026, 50, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 398, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.816, 2, 1], 'false,true': [4.581, 61, 32], 'false,false,true': [2.763, 21, 12], 'false,false,false': [11.953, 426, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.218, 33, 15], 'true,false': [4.286, 53, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.996, 427, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.178, 10, 9], 'true,false,true': [2.106, 17, 6], 'true,false,false': [0.433, 54, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 419, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.462, 96, 43], 'false,true,true,true': [2.041, 13, 6], 'false,true,true,false': [3.542, 43, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.182, 355, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.346, 18, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.195, 66, 24], 'false,true': [4.795, 71, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.176, 354, 193]}]
{'': [0.21662352071006058, 0.2320785639958402], 'false': [0.22440000000000143, 0.23339866863905637], 'true': [0.22633136094674564, 0.213017751479291], 'true,false': [nan, 0.213017751479291]}
{'': [0.21437722715382415, 0.22142474754859748], 'false': [nan, 0.22142474754859579], 'false,false': [nan, 0.22142474754859748], 'false,false,false': [0.22548719518416627, 0.22068729340132187]}
{'': [0.2177357203625042, 0.22106314919288686], 'false': [nan, 0.22106314919288686], 'false,false': [0.20384778663029973, 0.22337350645237383], 'true': [0.0, 0.21586188970128578], 'true,false': [0.19540497383376493, 0.2211330002827775], 'false,false,true': [nan, 0.20384778663029973], 'true,true': [0.0, nan]}
{'': [0.19488159430850927, 0.223022617245391], 'false': [nan, 0.223022617245391], 'false,false': [nan, 0.223022617245391], 'true': [0.18919790501026418, 0.19698801457518264]}
{'': [0.21970848047981892, 0.21988976777571653], 'false': [0.21908966579350334, 0.21992035066321958], 'false,false': [nan, 0.21992035066321958], 'true': [0.22926080361301954, 0.21434424728599066], 'false,true': [nan, 0.21908966579350347]}
{'': [0.2222222222222222, 0.22372269616927726], 'false': [0.22569131510376927, 0.22332078753935733], 'false,false': [0.23140495867768612, 0.22288384886292004], 'true': [nan, 0.2222222222222222], 'true,false': [nan, 0.2222222222222222]}
{'': [0.22345805297622345, 0.22343513931046483], 'true': [0.21572880507501582, 0.22684048809283608], 'false': [nan, 0.22343513931046002], 'false,false': [nan, 0.22343513931046483], 'false,false,false': [nan, 0.22343513931046483]}
{'': [0.2048045585235961, 0.22786230894384], 'false': [nan, 0.22786230894384], 'false,false': [nan, 0.22786230894384], 'true': [0.24968785751884914, 0.18885803476477878], 'true,false': [0.19287856647066623, 0.18750000000000044]}
{'': [0.2132304569137045, 0.22577236918594634], 'false': [0.20894057977154032, 0.22815213916564503], 'false,false': [nan, 0.22815213916564503], 'false,true': [0.20894057977154032, nan], 'false,true,true': [0.21922385512864603, 0.2057258668330976]}
{'': [0.20015624807476898, 0.22689048012243043], 'false': [0.2189609933968892, 0.22834206190321935], 'false,false': [nan, 0.22834206190321935], 'true': [0.21537101549398532, 0.19552321974809156], 'true,true': [0.0, 0.21167400377819504], 'true,false': [nan, 0.19552321974809156], 'true,false,false': [nan, 0.19552321974809156]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 25.656
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(C, E) )
%   | | then if ( countryhascompanyoffice(F, A), countryhascompanyoffice(G, C) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3966104735610507;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( acquired(H, A) )
%   | then return 0.13248521828535173;  // std dev = 0.446, 113.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=31 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995115;  // std dev = 2.60e-07, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | | then return 0.3097618383253188;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.17271204189562442;  // std dev = 10.538, 515.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=162 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | then if ( companyalsoknownas(C, E), economicsectorcompany(B, E) )
%   | | then return 0.7680550138609211;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16596912053606985;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(C, F) )
%   | | then return 0.12471172945206487;  // std dev = 0.455, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( economicsectorcompany(B, C) )
%   | | | then return 0.8017957459298399;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22600309443942035;  // std dev = 2.926, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   else if ( cityhascompanyoffice(G, A), acquired(H, A) )
%   | then return 0.04124419570230735;  // std dev = 0.400, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8329503089276658;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.8412441957023074;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16429367522878172;  // std dev = 11.494, 627.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=208 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.3086886357236731;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7593701338822557;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.6203098760516139;  // std dev = 1.017, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.0364853199751207;  // std dev = 4.317, 117.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=27 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.6570015386871093;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then return 0.7130773276126487;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.04161078282845071;  // std dev = 3.412, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.14652672495671748;  // std dev = 10.900, 556.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=189 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), companyalsoknownas(A, D) )
%   then if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return 0.4426120827101973;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.4382179192745786;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.013242979268487687;  // std dev = 1.382, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return -0.022178522807690497;  // std dev = 0.352, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then return 0.6073705835504063;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( countryhascompanyoffice(H, A), bankboughtbank(I, A) )
%   | | then if ( countryhascompanyoffice(H, I), bankboughtbank(A, J) )
%   | | | then return 0.3136083606928899;  // std dev = 0.969, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12395993177512213;  // std dev = 0.689, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.05399405821018055;  // std dev = 3.753, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.10870348058253625;  // std dev = 11.522, 647.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=211 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then if ( acquired(D, E), economicsectorcompany(B, E) )
%   | | then return 0.5072867521412715;  // std dev = 0.442, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(F, D), cityhascompanyoffice(G, A) )
%   | | | then return 0.0523665728084747;  // std dev = 2.086, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.2950991487829549;  // std dev = 1.375, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.002921240905903969;  // std dev = 0.375, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.533036694270614;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.5899684940742743;  // std dev = 0.375, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07539140724801902;  // std dev = 2.731, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( acquired(A, J), companyceo(J, K) )
%   | | | then return -0.03189344916521739;  // std dev = 1.629, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.10164596072561778;  // std dev = 10.941, 575.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=191 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.38051285113227706;  // std dev = 0.386, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return -0.14367140028033842;  // std dev = 0.297, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( acquired(A, F), companyceo(A, G) )
%   | | | then return -0.2198203082965226;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05493694042902974;  // std dev = 3.804, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.47016724198533905;  // std dev = 0.102, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, I) )
%   | | then if ( acquired(J, A), cityhascompanyoffice(K, A) )
%   | | | then return -0.1596305649220245;  // std dev = 0.795, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.06056539204892448;  // std dev = 3.561, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.41744586232265535;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06185615662337833;  // std dev = 11.066, 604.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=189 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then return -0.03017997943638656;  // std dev = 0.796, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.26032848337701614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( bankchiefexecutiveceo(A, F), companyceo(G, F) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.6259698996927632;  // std dev = 0.328, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.13304606000150812;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.22575493252016662;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, A) )
%   | | then if ( companyceo(I, K), acquired(L, I) )
%   | | | then return 0.14435669464037953;  // std dev = 0.658, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12643621009491837;  // std dev = 1.052, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( countryhascompanyoffice(M, A) )
%   | | | then return 0.1177078416056728;  // std dev = 3.675, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | | | else return 0.05991088497361966;  // std dev = 11.512, 667.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=219 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( cityhascompanyoffice(D, A), acquired(A, E) )
%   | then if ( cityhascompanyoffice(D, E) )
%   | | then return -0.15946939407633878;  // std dev = 0.218, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( cityhascompanyoffice(F, E) )
%   | | | then return 0.6226070058205498;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0988011391701898;  // std dev = 2.361, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else return -0.02090616151822349;  // std dev = 0.371, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then return 0.313082952782266;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, H) )
%   | | then if ( acquired(H, I), companyalsoknownas(I, J) )
%   | | | then return 0.1478638761610164;  // std dev = 1.294, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.05535190886283701;  // std dev = 2.487, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( acquired(K, A), bankboughtbank(L, K) )
%   | | | then return 0.2597577431272044;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04558066902347098;  // std dev = 11.150, 621.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=201 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.2849157941007961;  // std dev = 0.364, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, E), companyalsoknownas(C, E) )
%   | | then return 0.07591314487731697;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2076023008743964;  // std dev = 0.237, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( companyceo(A, H), acquired(G, I) )
%   | | | then return 0.5925850801355886;  // std dev = 0.404, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.41717330536020303;  // std dev = 2.194, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | else return -0.20893912702020742;  // std dev = 0.358, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( bankboughtbank(A, J) )
%   | | then if ( companyceo(A, K) )
%   | | | then return 0.044899298956562333;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21007099928498602;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.05019912038088274;  // std dev = 0.460, 584.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=197 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.0525715090737274;  // std dev = 0.357, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.5901911077869316;  // std dev = 0.420, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19524092645442412;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.04807383519153926;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.0678408369845469;  // std dev = 2.662, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   else if ( companyceo(A, H), acquired(A, I) )
%   | then return -0.024573950191146245;  // std dev = 0.334, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return 0.05703857620062354;  // std dev = 0.337, 84.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=34 */
%   | | else if ( countryhascompanyoffice(K, A), acquired(A, L) )
%   | | | then return 0.10662200898902521;  // std dev = 1.450, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.01870508727432512;  // std dev = 10.514, 530.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=167 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '3.882', 'seconds']
Refined model CLL: -0.310981


******************************************
Best model found
******************************************
Results 

CLL : -0.311 

AUC ROC : 0.706833 

AUC PR : 0.073702 

Precision : 0.103711 

Recall : 0.210425 

F1 : 0.138942 

Total Learning Time : 25.656 

Total Inference Time : 34.144253730773926 

Total revision time: 127.48330597686768
Best scored revision CLL: -0.310981


Results 

CLL : -0.311 

AUC ROC : 0.706833 

AUC PR : 0.073702 

Precision : 0.103711 

Recall : 0.210425 

F1 : 0.138942 

Total Learning Time : 127.58075814056397 

Total Inference Time : 34.144253730773926 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.728
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.12696613940058682;  // std dev = 4.275, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19971870254136814;  // std dev = 0.474, 688.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=235 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.1326775688972606;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1593557468008927;  // std dev = 12.573, 718.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=235 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.09525564401499981;  // std dev = 4.267, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18280175899851028;  // std dev = 0.484, 628.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=235 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.14257660681933013;  // std dev = 0.471, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12277323806997989;  // std dev = 12.415, 683.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=235 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.07695714293172509;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08827772299051803;  // std dev = 0.471, 709.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=235 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.22695826397989496;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0816837113287466;  // std dev = 4.157, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0679669390507091;  // std dev = 12.569, 717.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=235 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.044846195500900604;  // std dev = 4.218, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0680047899796866;  // std dev = 12.444, 689.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=235 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.0582088899792122;  // std dev = 4.151, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07036828647820983;  // std dev = 0.479, 658.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=235 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.038594276965293106;  // std dev = 0.456, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.01834742403639716;  // std dev = 12.644, 735.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=235 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.008074321666763655;  // std dev = 4.248, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03045674339528781;  // std dev = 12.494, 700.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=235 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '5.077', 'seconds']
Parameter learned model CLL:-0.367068 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.275, 68, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.474, 453, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.211, 61, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.573, 483, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.267, 67, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.484, 393, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.471, 50, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.415, 448, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.211, 61, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 474, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [5.27e-09, 3, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.157, 56, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.569, 482, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.218, 63, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.444, 454, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.151, 57, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.479, 423, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.456, 59, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.644, 500, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.248, 66, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.494, 465, 235]}]
{'': [0.19655451497283027, 0.2248998614115761], 'false': [nan, 0.2248998614115761], 'true': [0.19655451497283027, nan]}
{'': [0.2061925365062198, 0.2201740365142939], 'false': [nan, 0.2201740365142939], 'false,false': [nan, 0.2201740365142939], 'false,false,false': [nan, 0.2201740365142939]}
{'': [0.1978969754253308, 0.23417532151405526], 'false': [nan, 0.23417532151405526], 'false,false': [nan, 0.23417532151405526], 'true': [0.1978969754253308, nan], 'true,true': [0.1978969754253308, nan]}
{'': [0.22222222222222243, 0.22568592185453065], 'false': [nan, 0.22568592185453065], 'false,false': [nan, 0.22568592185453065], 'true': [0.22222222222222243, nan]}
{'': [0.20619253650622033, 0.22159182463630167], 'false': [nan, 0.22159182463630167], 'false,false': [nan, 0.22159182463630167], 'true': [0.20619253650622033, nan]}
{'': [0.20904195011337873, 0.22033149902059015], 'false': [nan, 0.22033149902059015], 'false,false': [nan, 0.22033149902059015], 'true': [9.25185853854297e-18, 0.21338210638622168], 'true,false': [nan, 0.21338210638622168]}
{'': [0.20215772088020206, 0.2247425329825223], 'false': [nan, 0.2247425329825223], 'false,false': [nan, 0.2247425329825223], 'false,false,false': [nan, 0.2247425329825223], 'true': [0.20215772088020206, nan]}
{'': [0.21010775862405856, 0.2295918367346923], 'false': [nan, 0.2295918367346923], 'false,false': [nan, 0.2295918367346923], 'true': [0.21010775862405856, nan]}
{'': [0.20797632937220717, 0.2175019667731085], 'false': [nan, 0.2175019667731085], 'false,false': [nan, 0.2175019667731085]}
{'': [0.19833454728596545, 0.2230102040816281], 'false': [nan, 0.2230102040816281], 'false,false': [nan, 0.2230102040816281], 'true': [0.19833454728596545, nan], 'true,true': [0.19833454728596545, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true


Refining candidate
***************************
Model training time 8.39
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( companyalsoknownas(A, F), acquired(A, G) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( countryhascompanyoffice(H, G), countryhascompanyoffice(H, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.036587907005750944;  // std dev = 1.892, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18683974289895083;  // std dev = 12.587, 718.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=236 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( cityhascompanyoffice(D, A), acquired(E, A) )
%   | then if ( acquired(A, F), cityhascompanyoffice(D, E) )
%   | | then return 0.05374291302765264;  // std dev = 0.397, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( acquired(A, G), companyceo(G, H) )
%   | | | then return 0.16718301770646757;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.423132327525529;  // std dev = 1.365, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( countryhascompanyoffice(I, A), bankchiefexecutiveceo(J, C) )
%   | | then return -0.07002395547180239;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.11045774546418062;  // std dev = 0.436, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | then return 0.8338496843731343;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.09227665066526965;  // std dev = 4.130, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | | else return 0.15261340552269936;  // std dev = 11.094, 568.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=181 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( companyceo(A, E) )
%   | then if ( acquired(F, A), companyceo(C, G) )
%   | | then return 0.45693710848782704;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(D, H), cityhascompanyoffice(I, A) )
%   | | | then return 0.07301473706668712;  // std dev = 1.477, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.04958196404479869;  // std dev = 1.573, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else return -0.15656989636049765;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | then return 0.681017400476147;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( acquired(K, A), companyceo(K, L) )
%   | | then if ( cityhascompanyoffice(M, K) )
%   | | | then return 0.20876684018204006;  // std dev = 2.420, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.1402611861074529;  // std dev = 1.327, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.10490801231002955;  // std dev = 4.727, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | | else return 0.16760421125794647;  // std dev = 11.082, 541.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=194 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.6833986173845299;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(D, A), companyceo(A, E) )
%   | then if ( countryhascompanyoffice(F, D) )
%   | | then if ( bankchiefexecutiveceo(A, E) )
%   | | | then return 0.02584100114925561;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1788959471054274;  // std dev = 0.973, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( companyalsoknownas(D, G), cityhascompanyoffice(H, D) )
%   | | | then return 0.019664549648016207;  // std dev = 0.949, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5820825774418794;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( bankchiefexecutiveceo(A, I) )
%   | | then if ( companyceo(J, I), countryhascompanyoffice(K, J) )
%   | | | then return 0.12972546038730867;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.13136610201331372;  // std dev = 0.966, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.055703850097139684;  // std dev = 3.524, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | | else return 0.11653120688071161;  // std dev = 11.953, 661.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=220 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.5224837885490309;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( countryhascompanyoffice(E, A), cityhascompanyoffice(F, A) )
%   | | then if ( countryhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.7802027134147639;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17736995736576786;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( acquired(H, A), bankchiefexecutiveceo(H, I) )
%   | | | then return -0.16236952699148186;  // std dev = 1.689, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.012429996215428897;  // std dev = 4.072, 101.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=23 */
%   else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | then return 0.5042442957024582;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then return -0.028373383870160376;  // std dev = 0.382, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( acquired(A, L), companyceo(L, M) )
%   | | | then return 0.20055863511600722;  // std dev = 2.048, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.08321835025625925;  // std dev = 11.466, 622.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=199 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.22000930073035901;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(A, D) )
%   | | then return 0.05336771845115273;  // std dev = 0.378, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | | then return 0.3805611334283264;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05662276439225701;  // std dev = 2.642, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.46347860440822075;  // std dev = 0.113, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( acquired(G, A) )
%   | | then if ( companyceo(A, H), companyalsoknownas(G, I) )
%   | | | then return -0.24490455889849716;  // std dev = 0.893, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.010804156451987826;  // std dev = 4.087, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.024666241251836373;  // std dev = 4.224, 101.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=26 */
%   | | | else return 0.09603381829708038;  // std dev = 10.531, 492.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=171 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(E, A), companyceo(A, F) )
%   | then return 0.26609656290038125;  // std dev = 1.037, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.0775465848522315;  // std dev = 0.270, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   else if ( acquired(A, G), companyceo(G, H) )
%   | then if ( cityhascompanyoffice(I, G) )
%   | | then if ( cityhascompanyoffice(I, J), bankboughtbank(K, J) )
%   | | | then return 0.2633852202784996;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.015528293411146064;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( acquired(L, A), acquired(G, L) )
%   | | | then return 0.14495364467353578;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.44852779006666793;  // std dev = 1.118, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | then return 0.3538801736592512;  // std dev = 0.098, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.023955505346107023;  // std dev = 4.536, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | | | else return 0.08351207764716484;  // std dev = 11.145, 559.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=197 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then return 0.2812887190569978;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3753465751831399;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( acquired(A, G), acquired(G, H) )
%   | | | then return 0.17769589043562864;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6840073695126746;  // std dev = 0.249, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.16287858134148694;  // std dev = 0.212, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.26647521546401826;  // std dev = 0.486, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( acquired(J, A), companyceo(J, K) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.3254012786781532;  // std dev = 0.520, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.0057780815441228536;  // std dev = 2.843, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | else return 0.03595171107499562;  // std dev = 0.459, 655.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=206 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then return -0.008412464400011373;  // std dev = 0.307, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   else if ( acquired(E, A), companyceo(E, F) )
%   | then if ( acquired(G, E) )
%   | | then if ( acquired(A, H), acquired(H, I) )
%   | | | then return -0.2492540589070972;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.21113439597467654;  // std dev = 1.577, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( economicsectorcompany(B, E) )
%   | | | then return 0.2164583702996846;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09517629567684856;  // std dev = 2.333, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( acquired(K, J), companyalsoknownas(K, L) )
%   | | | then return -0.16314386319589086;  // std dev = 0.439, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.07353393836962197;  // std dev = 2.539, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else if ( companyceo(A, M) )
%   | | | then return 0.06573989713329954;  // std dev = 3.326, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.05325427168102427;  // std dev = 10.952, 550.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=189 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankboughtbank(C, D) )
%   then if ( countryhascompanyoffice(E, D) )
%   | then return 0.16906788956850702;  // std dev = 0.601, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4380023951404215;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( companyceo(A, F) )
%   | then if ( companyalsoknownas(A, G) )
%   | | then if ( cityhascompanyoffice(H, A) )
%   | | | then return -0.024694415198555118;  // std dev = 2.160, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return -0.14694720484008952;  // std dev = 0.666, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( cityhascompanyoffice(I, A), bankchiefexecutiveceo(J, F) )
%   | | | then return -0.11637999154429289;  // std dev = 0.459, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.0679244411526591;  // std dev = 3.458, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | else return 0.03982655185291538;  // std dev = 0.452, 639.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=220 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.080', 'seconds']
Refined model CLL: -0.339635


******************************************
Best model found
******************************************
Results 

CLL : -0.339381 

AUC ROC : 0.634341 

AUC PR : 0.05036 

Precision : 0.049257 

Recall : 0.102317 

F1 : 0.066499 

Total Learning Time : 8.39 

Total Inference Time : 25.30844473838806 

Total revision time: 102.43926355171203
Best scored revision CLL: -0.339635


Results 

CLL : -0.339381 

AUC ROC : 0.634341 

AUC PR : 0.05036 

Precision : 0.049257 

Recall : 0.102317 

F1 : 0.066499 

Total Learning Time : 102.53671571540832 

Total Inference Time : 25.30844473838806 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.703
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, C) )
%   | then return 0.2317753087258846;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(D, E), companyalsoknownas(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795262665198807;  // std dev = 0.467, 697.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=224 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.21389401304174138;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14990967952571252;  // std dev = 12.387, 711.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=224 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.1604281371302234;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15935639643290095;  // std dev = 0.476, 647.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=224 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.19243830391171396;  // std dev = 0.494, 80.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12055320914556429;  // std dev = 12.225, 673.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=224 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.0855130343838713;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10319442770300202;  // std dev = 0.472, 666.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=224 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.21421641759816756;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10446032003719163;  // std dev = 4.417, 82.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=32 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06428730604744984;  // std dev = 12.375, 708.000 (wgt'ed) examples reached here.  /* #neg=484 #pos=224 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.044357387968123746;  // std dev = 4.693, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06842818354854739;  // std dev = 12.225, 673.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=224 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.018814461172349754;  // std dev = 4.744, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04859895205543156;  // std dev = 0.469, 686.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=224 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.021015154317055872;  // std dev = 0.475, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.038741394146862056;  // std dev = 12.282, 686.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=224 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return -0.03416483279403105;  // std dev = 4.903, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03265102374512652;  // std dev = 12.265, 682.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=224 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '7.080', 'seconds']
Parameter learned model CLL:-0.364643 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, E), companyalsoknownas(A, E)'}, {'true,true': [4.615, 57, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.467, 473, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.568, 54, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.387, 487, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.644, 59, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 423, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.494, 46, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.225, 449, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.686, 62, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 442, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [1.0, 2, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.417, 50, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.375, 484, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.693, 62, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.225, 449, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.744, 67, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 462, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.475, 65, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.282, 462, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.903, 82, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.265, 458, 224]}]
{'': [0.23402970655718056, 0.21809394226949505], 'true': [0.23402970655718056, nan], 'false': [nan, 0.21809394226949505]}
{'': [0.23708677685950297, 0.2157932113601597], 'false': [nan, 0.2157932113601597], 'false,false': [nan, 0.2157932113601597], 'false,false,false': [nan, 0.2157932113601597]}
{'': [0.23193432766793906, 0.2263496484786473], 'true': [0.23193432766793906, nan], 'true,true': [0.23193432766793906, nan], 'false': [nan, 0.2263496484786473], 'false,false': [nan, 0.2263496484786473]}
{'': [0.24437500000000018, 0.22205687867192633], 'true': [0.24437500000000018, nan], 'false': [nan, 0.22205687867192633], 'false,false': [nan, 0.22205687867192633]}
{'': [0.22873263888888803, 0.22321420519618543], 'true': [0.22873263888888803, nan], 'false': [nan, 0.22321420519618543], 'false,false': [nan, 0.22321420519618543]}
{'': [0.23904813412655487, 0.2162852309362008], 'true': [0.25000000000000006, 0.23795359904818555], 'true,false': [nan, 0.23795359904818555], 'false': [nan, 0.2162852309362008], 'false,false': [nan, 0.2162852309362008]}
{'': [0.22937114463380867, 0.22205687867193352], 'true': [0.22937114463380867, nan], 'false': [nan, 0.22205687867193352], 'false,false': [nan, 0.22205687867193352], 'false,false,false': [nan, 0.22205687867193352]}
{'': [0.22285331860060587, 0.21990837151187156], 'true': [0.22285331860060587, nan], 'false': [nan, 0.21990837151187156], 'false,false': [nan, 0.21990837151187156]}
{'': [0.2253763856477607, 0.21990837151187337], 'false': [nan, 0.21990837151187337], 'false,false': [nan, 0.21990837151187337]}
{'': [0.2072498957167364, 0.22056913855229943], 'false': [nan, 0.22056913855229943], 'false,false': [nan, 0.22056913855229943], 'true': [0.2072498957167364, nan], 'true,true': [0.2072498957167364, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
0;true;companyalsoknownas(A, C).;true;true
0;false;companyalsoknownas(D, E), companyalsoknownas(A, E).;true;true
1;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
1;false;companyalsoknownas(A, D), companyalsoknownas(D, A).;true;true
1;false,false;companyalsoknownas(E, A), companyalsoknownas(F, E).;true;true
1;false,false,false;companyalsoknownas(A, G).;true;true
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
2;true;companyalsoknownas(D, A), companyalsoknownas(A, D).;true;true
2;true,true;companyalsoknownas(C, E).;true;true
2;false;companyalsoknownas(A, A).;true;true
2;false,false;companyalsoknownas(F, A).;true;true
3;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
3;true;companyalsoknownas(D, C).;true;true
3;false;companyalsoknownas(E, A).;true;true
3;false,false;companyalsoknownas(A, A).;true;true
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
4;false;companyalsoknownas(E, A).;true;true
4;false,false;companyalsoknownas(A, F).;true;true
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true
5;true,false;companyalsoknownas(C, C).;true;true
5;false;companyalsoknownas(D, A).;true;true
5;false,false;companyalsoknownas(A, E), companyalsoknownas(E, F).;true;true
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
6;true;companyalsoknownas(C, D).;true;true
6;false;companyalsoknownas(E, A), companyalsoknownas(E, E).;true;true
6;false,false;companyalsoknownas(A, F).;true;true
6;false,false,false;companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
7;true;companyalsoknownas(D, C).;true;true
7;false;companyalsoknownas(A, A).;true;true
7;false,false;companyalsoknownas(E, A), companyalsoknownas(A, E).;true;true
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false;companyalsoknownas(D, A).;true;true
8;false,false;companyalsoknownas(E, A).;true;true
9;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
9;true;companyalsoknownas(D, C).;true;true
9;true,true;companyalsoknownas(A, E), companyalsoknownas(D, E).;true;true
9;false;companyalsoknownas(A, F).;true;true
9;false,false;companyalsoknownas(G, A), companyalsoknownas(G, G).;true;true


Refining candidate
***************************
Model training time 13.902
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, C) )
%   | then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13592671287729013;  // std dev = 3.801, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, G), companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, H), cityhascompanyoffice(I, H) )
%   | | then if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( bankboughtbank(A, K) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.21907608741738857;  // std dev = 11.803, 604.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=218 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyceo(A, E) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.09402375324702196;  // std dev = 2.761, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.323453946793698;  // std dev = 1.812, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( companyalsoknownas(A, G), acquired(H, G) )
%   | | | then return -0.15921596410917827;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.05372158660217681;  // std dev = 2.469, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   else if ( companyalsoknownas(A, I), companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1579164046892564;  // std dev = 12.262, 683.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=224 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.6524097781282178;  // std dev = 0.170, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.09339248730695018;  // std dev = 4.063, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), cityhascompanyoffice(I, A) )
%   | | | then return 0.21138360353726787;  // std dev = 2.551, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.12296621066965019;  // std dev = 12.057, 674.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=213 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then if ( acquired(A, F), companyceo(F, G) )
%   | | | then return 0.4401463263376506;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5322016583405327;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, H), countryhascompanyoffice(I, H) )
%   | | | then return -0.04731604616593855;  // std dev = 1.611, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.09221134081430857;  // std dev = 3.732, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.7820742425116437;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.10829209023693002;  // std dev = 11.921, 652.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=210 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | | | then return 0.5257786704073613;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41264432930001743;  // std dev = 0.221, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, H), acquired(H, I) )
%   | | | then return -0.0970489485949031;  // std dev = 1.120, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.12817889035739038;  // std dev = 3.659, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.6215231952430269;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.0901618822411539;  // std dev = 11.917, 650.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=210 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.05808752269360524;  // std dev = 0.383, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | | | then return 0.34898315271405594;  // std dev = 0.222, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0370255625353559;  // std dev = 3.841, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.46873398369298097;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.08211350408528896;  // std dev = 11.840, 634.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=210 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E), companyceo(E, F) )
%   | | then if ( countryhascompanyoffice(G, E), cityhascompanyoffice(H, A) )
%   | | | then return -0.1271669414782696;  // std dev = 0.585, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.06134454006117394;  // std dev = 1.487, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.15001281824362328;  // std dev = 2.665, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.03642217091473805;  // std dev = 2.469, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A), companyalsoknownas(J, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04436748264275514;  // std dev = 12.148, 707.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=224 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.36508938820547704;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.31859878024037613;  // std dev = 0.262, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0250691556666575;  // std dev = 3.727, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H), acquired(A, I) )
%   | | | then return -0.08463386811511221;  // std dev = 2.130, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.05695911302514943;  // std dev = 11.799, 643.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=217 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then if ( cityhascompanyoffice(E, D) )
%   | | then return 0.3097239945804372;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2021708513774627;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.2958933335940654;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(G, A), acquired(H, A) )
%   | | | then return 0.1567190742160455;  // std dev = 1.067, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03813005495779376;  // std dev = 3.715, 90.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=18 */
%   else if ( companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.656347097770902;  // std dev = 0.325, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.030281698364013093;  // std dev = 11.972, 680.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=219 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.20623996510827958;  // std dev = 0.168, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.007238846317733229;  // std dev = 3.978, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, I) )
%   | | | then return 0.1924568765754534;  // std dev = 2.157, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.027200702637499158;  // std dev = 11.765, 656.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=214 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '20.914', 'seconds']
Refined model CLL: -0.342364


******************************************
Best model found
******************************************
Results 

CLL : -0.34235 

AUC ROC : 0.559419 

AUC PR : 0.039861 

Precision : 0.373016 

Recall : 0.090385 

F1 : 0.145511 

Total Learning Time : 13.902 

Total Inference Time : 110.78023910522461 

Total revision time: 199.13196919441225
Best scored revision CLL: -0.342364


Results 

CLL : -0.34235 

AUC ROC : 0.559419 

AUC PR : 0.039861 

Precision : 0.373016 

Recall : 0.090385 

F1 : 0.145511 

Total Learning Time : 199.22942135810854 

Total Inference Time : 110.78023910522461 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.596
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16584124279181922;  // std dev = 0.462, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.23592671287728875;  // std dev = 4.600, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
%   | else return 0.19974185545349013;  // std dev = 0.474, 565.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.12461749000607646;  // std dev = 4.840, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1538601433296378;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.18042991256590166;  // std dev = 11.214, 554.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.8111091925792635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.11236950155749569;  // std dev = 2.376, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.17742593345546842;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1331228926912882;  // std dev = 4.051, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | else return 0.1380701078793629;  // std dev = 0.471, 580.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.3045508631159776;  // std dev = 0.502, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0.0630269082356423;  // std dev = 0.441, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11179460321672262;  // std dev = 12.331, 687.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.17514131898203397;  // std dev = 2.909, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else return 0.05728355531326035;  // std dev = 4.453, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.030949778009919503;  // std dev = 4.228, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11404751280105609;  // std dev = 0.477, 550.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5415122712199597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.05297738910623517;  // std dev = 4.782, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.083916437310997;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else return 0.06251083580483276;  // std dev = 12.087, 671.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07245981831611;  // std dev = 3.001, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else return 0.058102913904336244;  // std dev = 4.374, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06269948427044421;  // std dev = 12.059, 660.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.11348491786303663;  // std dev = 2.205, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.0611428227238799;  // std dev = 2.053, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.04380974306482921;  // std dev = 0.450, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05045620244629832;  // std dev = 0.472, 679.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.074649717464969;  // std dev = 0.481, 115.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.1674001883849394;  // std dev = 1.827, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.05477057704603771;  // std dev = 3.497, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.024831084355878594;  // std dev = 11.473, 607.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.3462249724279177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07945304223748605;  // std dev = 2.137, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04684381408488517;  // std dev = 4.075, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.01706245851503902;  // std dev = 4.739, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05197477141329394;  // std dev = 11.198, 551.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '53.089', 'seconds']
Parameter learned model CLL:-0.370303 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.4, 16, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.462, 54, 24], 'false,true': [4.6, 56, 34], 'false,false': [0.474, 372, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.84, 81, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.784, 70, 34], 'false,false,false,false': [11.214, 361, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.376, 19, 8], 'true,false,false': [4.615, 57, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.051, 52, 24], 'false,false,false': [0.471, 387, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.502, 8, 9], 'true,false': [0.441, 67, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.331, 460, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.909, 20, 15], 'true,false': [4.453, 66, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.228, 70, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 357, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.782, 81, 32], 'false,false,true': [2.763, 21, 12], 'false,false,false': [12.087, 456, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.001, 25, 15], 'true,false': [4.374, 60, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.059, 443, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.205, 12, 9], 'true,false,true': [2.053, 14, 6], 'true,false,false': [0.45, 46, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 452, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.481, 72, 43], 'false,true,true,true': [1.827, 8, 6], 'false,true,true,false': [3.497, 40, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.473, 414, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.137, 11, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.075, 54, 24], 'false,true': [4.739, 69, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.198, 358, 193]}]
{'': [0.21773965500989864, 0.22645766563720304], 'false': [0.23506172839506323, 0.22490719711802307], 'true': [0.23040000000000005, 0.213017751479291], 'true,false': [nan, 0.213017751479291]}
{'': [0.205462781235682, 0.22600299108578156], 'false': [nan, 0.22600299108578317], 'false,false': [nan, 0.22600299108578156], 'false,false,false': [0.2200443786982237, 0.2270099962204671]}
{'': [0.23064824582405233, 0.22132032079622352], 'true': [0.0, 0.22906808679584476], 'true,false': [0.20908166785856036, 0.23402970655717786], 'false': [nan, 0.22132032079622352], 'false,false': [0.21588025840758665, 0.2220303210463698], 'false,false,true': [nan, 0.21588025840758665], 'true,true': [0.0, nan]}
{'': [0.21095044703546867, 0.22132698653024033], 'false': [nan, 0.22132698653024033], 'false,false': [nan, 0.22132698653024033], 'true': [0.2516902726971717, 0.19415753488008078]}
{'': [0.22207481170630022, 0.22314933432156503], 'false': [0.19020507587379135, 0.2277719008264413], 'false,false': [nan, 0.2277719008264413], 'true': [0.24175762095812117, 0.21097737872299832], 'false,true': [nan, 0.19020507587379135]}
{'': [0.0, 0.2161896549956166], 'false': [0.20237702696594326, 0.21839138280620202], 'false,false': [0.23140495867768573, 0.21772989276359803], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.21985215806073796, 0.22032348592668216], 'false': [nan, 0.22032348592668238], 'false,false': [nan, 0.22032348592668216], 'false,false,false': [nan, 0.22032348592668216], 'true': [0.2250920560054032, 0.21740597354761795]}
{'': [0.21038068545963, 0.2224278544805071], 'false': [nan, 0.2224278544805071], 'false,false': [nan, 0.2224278544805071], 'true': [0.2314411173914753, 0.20425626283300508], 'true,false': [0.21077240054588592, 0.20214843749999944]}
{'': [0.23165808578831493, 0.2172536619706137], 'false': [0.21816663056396968, 0.216860406732004], 'false,true': [0.21816663056396968, nan], 'false,true,true': [0.23832279244762652, 0.21083473884672557], 'false,false': [nan, 0.216860406732004]}
{'': [0.21705300532590913, 0.22623627461498344], 'false': [0.21801255356526658, 0.22758159558104404], 'false,false': [nan, 0.22758159558104404], 'true': [0.23176955379036318, 0.2128486736889947], 'true,true': [0.0, 0.2404095882214006], 'true,false': [nan, 0.2128486736889947], 'true,false,false': [nan, 0.2128486736889947]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 8.599
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C), acquired(A, D) )
%   then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(A, F), cityhascompanyoffice(G, F) )
%   | | then if ( companyceo(F, H), cityhascompanyoffice(I, A) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.16510664314862158;  // std dev = 12.487, 733.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=225 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(A, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.7796961739810002;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.10132459400818924;  // std dev = 0.436, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return -0.1631611226272498;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( cityhascompanyoffice(F, A), bankchiefexecutiveceo(A, G) )
%   | then if ( cityhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | then return 0.8368388773727503;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1631611226272498;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(A, I) )
%   | | then if ( countryhascompanyoffice(J, A) )
%   | | | then return -0.03753535429730331;  // std dev = 1.166, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.128981466129493;  // std dev = 2.977, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.27186680859411844;  // std dev = 2.996, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.17877148638623802;  // std dev = 11.476, 591.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=203 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.7962511508168835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6204951217703238;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | | then return -0.03635577598321441;  // std dev = 1.233, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.12496619635335447;  // std dev = 4.735, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else if ( bankboughtbank(A, H) )
%   | then return 0.5096055574253731;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.6835503543374457;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.18949344677918745;  // std dev = 4.523, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   | | | else return 0.11881969241638814;  // std dev = 10.887, 559.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=172 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return 0.2406485580004819;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.1401990931147151;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.2134642102095525;  // std dev = 0.069, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | then if ( acquired(A, G) )
%   | | then return 0.4708571557062798;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6586782179263266;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(H, A), acquired(I, A) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.5669321821923874;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1497192315442608;  // std dev = 0.854, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.15230417468173427;  // std dev = 5.340, 129.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=47 */
%   | | | else return 0.11451983632643514;  // std dev = 11.325, 594.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=194 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(C, D), companyceo(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.6591376912476343;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.13740215383440063;  // std dev = 0.237, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( countryhascompanyoffice(F, C), countryhascompanyoffice(F, A) )
%   | | then return 0.3689712263695917;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.03776040785013602;  // std dev = 0.350, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   else if ( bankchiefexecutiveceo(A, G), companyceo(H, G) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.6954979792186567;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.015590585766149315;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.6330656279228615;  // std dev = 0.191, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(A, J) )
%   | | | then return 0.0316877158043238;  // std dev = 3.839, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | | else return 0.12076059340469102;  // std dev = 11.026, 541.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=191 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.046556472450943444;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then if ( countryhascompanyoffice(E, A), companyceo(D, F) )
%   | | then return 0.2934477380606281;  // std dev = 0.294, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.4709936775643652;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5948490163509916;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06462998289661415;  // std dev = 0.450, 777.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=246 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), countryhascompanyoffice(D, A) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.297151809768889;  // std dev = 0.330, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( countryhascompanyoffice(D, F), economicsectorcompany(B, F) )
%   | | then if ( acquired(F, G) )
%   | | | then return 0.5425395124827571;  // std dev = 0.434, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04774310628375041;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.22586619500526783;  // std dev = 0.102, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.42949267029225846;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6890217796808799;  // std dev = 0.424, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.24975920966544662;  // std dev = 0.287, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.03459607732726948;  // std dev = 5.059, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.07462660468722757;  // std dev = 10.651, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.35107628805549396;  // std dev = 0.287, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.3011988713902755;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( companyceo(A, E), cityhascompanyoffice(F, A) )
%   | | | then return 0.04696334943159426;  // std dev = 2.818, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.07221847685390938;  // std dev = 3.029, 78.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   else if ( companyceo(A, G) )
%   | then if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | then return 0.1471328200924181;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.040067761435465005;  // std dev = 0.345, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( companyalsoknownas(A, J), cityhascompanyoffice(K, J) )
%   | | then return -0.05147592664032287;  // std dev = 0.326, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.06721500161923377;  // std dev = 4.162, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | | else return 0.062084455228106;  // std dev = 10.350, 499.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=170 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(A, D) )
%   then if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(G, C) )
%   | | then return 0.051873966774788526;  // std dev = 0.307, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.45938584746635197;  // std dev = 0.768, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( cityhascompanyoffice(H, A), cityhascompanyoffice(H, C) )
%   | | then return 0.4192898066819854;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.08757013334621884;  // std dev = 1.063, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.1269798689173065;  // std dev = 1.376, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( bankboughtbank(J, A) )
%   | then return -0.05747112868302179;  // std dev = 0.275, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.3762112696880061;  // std dev = 0.116, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( acquired(L, A), companyceo(L, M) )
%   | | | then return -0.07452868533961117;  // std dev = 2.431, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | | else return 0.04894234435426907;  // std dev = 11.531, 639.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=218 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.6189802062287942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05982730584122629;  // std dev = 0.359, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.09100119175426995;  // std dev = 0.176, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return 0.0760444828144291;  // std dev = 0.404, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.3044906537328716;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.5774672363722543;  // std dev = 1.773, 50.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=47 */
%   | | | else return -0.27184082907550816;  // std dev = 0.496, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( acquired(A, J), companyalsoknownas(A, K) )
%   | | | then return -0.1257790517578732;  // std dev = 0.664, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.012110022736446336;  // std dev = 10.552, 542.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '47.643', 'seconds']
Refined model CLL: -0.318618


******************************************
Best model found
******************************************
Results 

CLL : -0.318672 

AUC ROC : 0.752269 

AUC PR : 0.093413 

Precision : 0.091743 

Recall : 0.135135 

F1 : 0.10929 

Total Learning Time : 8.599 

Total Inference Time : 25.573611736297607 

Total revision time: 101.74309379577637
Best scored revision CLL: -0.318618


Results 

CLL : -0.318672 

AUC ROC : 0.752269 

AUC PR : 0.093413 

Precision : 0.091743 

Recall : 0.135135 

F1 : 0.10929 

Total Learning Time : 101.79201085090638 

Total Inference Time : 25.573611736297607 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.523
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.2655563425069199;  // std dev = 0.491, 108.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1658412427918186;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | else return 0.1908794956781697;  // std dev = 0.471, 553.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.2057155427017196;  // std dev = 5.208, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1599708738646527;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | | | else return 0.1740299849496548;  // std dev = 11.014, 540.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.05729683890196841;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.1274185794962807;  // std dev = 4.686, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24632637476694863;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=36 */
%   | | else return 0.14530791762325232;  // std dev = 0.473, 545.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.16651936666714662;  // std dev = 0.475, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.17519678777645947;  // std dev = 0.493, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11981262016129056;  // std dev = 11.992, 646.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06365267629399199;  // std dev = 2.893, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0.07968639417292768;  // std dev = 4.402, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14652626061891108;  // std dev = 4.514, 83.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10137488383250058;  // std dev = 0.473, 544.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.07107286062668688;  // std dev = 5.231, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.08193255173504889;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.073980120184442;  // std dev = 11.825, 634.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07091451306286709;  // std dev = 2.820, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else return 0.04910388213171457;  // std dev = 4.406, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058326233876102654;  // std dev = 12.062, 652.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.09053250192974432;  // std dev = 2.285, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.012283515184835923;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.04751639241837741;  // std dev = 0.489, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06893186876344876;  // std dev = 0.476, 621.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.03293719183972338;  // std dev = 0.465, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.008684270778400154;  // std dev = 2.101, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.0802453265580727;  // std dev = 4.032, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03874087572384074;  // std dev = 11.065, 550.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.21222269469785957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11283347270323477;  // std dev = 2.612, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05961610341117033;  // std dev = 4.486, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.07434023591074798;  // std dev = 4.527, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.014953025190705939;  // std dev = 11.195, 577.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.558', 'seconds']
Parameter learned model CLL:-0.378103 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.491, 64, 44], 'false,true': [4.707, 72, 32], 'false,false': [0.471, 369, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.208, 71, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.654, 67, 32], 'false,false,false,false': [11.014, 356, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.422, 22, 8], 'true,false,false': [4.686, 70, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.427, 43, 36], 'false,false,false': [0.473, 361, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.475, 14, 9], 'true,false': [0.493, 48, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.992, 430, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.893, 29, 12], 'true,false': [4.402, 62, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.514, 47, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 360, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.231, 72, 44], 'false,false,true': [2.332, 17, 8], 'false,false,false': [11.825, 426, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.82, 25, 12], 'true,false': [4.406, 63, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.062, 432, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.285, 13, 9], 'true,false,true': [1.9, 13, 5], 'true,false,false': [0.489, 46, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 405, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.465, 87, 40], 'false,true,true,true': [2.101, 12, 7], 'false,true,true,false': [4.032, 37, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.065, 366, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.612, 28, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.486, 49, 35], 'false,true': [4.527, 57, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.195, 393, 184]}]
{'': [0.24000000000000088, 0.22067930193282284], 'true': [0.0, 0.24142661179698302], 'false': [0.2130177514792913, 0.22202093463567424]}
{'': [0.23589715580074258, 0.22375086990433815], 'false': [nan, 0.22375086990433865], 'false,false': [nan, 0.22375086990433815], 'false,false,false': [0.2187531884501578, 0.22463648834019428]}
{'': [0.21167755558046034, 0.22784927198216992], 'false': [nan, 0.22784927198216992], 'false,false': [0.24803717352988228, 0.2236310074909533], 'false,false,true': [nan, 0.24803717352988228], 'true': [nan, 0.21167755558046042], 'true,false': [0.19555555555555545, 0.2153018069973096]}
{'': [0.23903053624369117, 0.22262226665438062], 'true': [0.22603846671448688, 0.24261441011536203], 'false': [nan, 0.22262226665438062], 'false,false': [nan, 0.22262226665438062]}
{'': [0.21184467535871576, 0.22694134716426276], 'false': [0.24555072538246545, 0.22383217993079807], 'false,true': [nan, 0.24555072538246545], 'false,false': [nan, 0.22383217993079807], 'true': [0.20415515544382964, 0.2152672186887043]}
{'': [nan, 0.22274433173061567], 'false': [0.23587353584821968, 0.22043173176159803], 'false,false': [0.21760000000000027, 0.22054099397483437]}
{'': [0.21385767831887245, 0.2231591154997067], 'false': [nan, 0.2231591154997115], 'false,false': [nan, 0.2231591154997067], 'false,false,false': [nan, 0.2231591154997067], 'true': [0.2149363123886831, 0.21328160473983762]}
{'': [0.23357846893597878, 0.22669263506610005], 'true': [0.23742169162951932, 0.23211634677587814], 'true,false': [0.2004999570010565, 0.23891966759002772], 'false': [nan, 0.22669263506610005], 'false,false': [nan, 0.22669263506610005]}
{'': [0.2159859809688197, 0.22557060965421682], 'false': [0.24406819173415692, 0.22262479338843197], 'false,true': [0.24406819173415692, nan], 'false,true,true': [0.23225805525749804, 0.24632338880913193], 'false,false': [nan, 0.22262479338843197]}
{'': [0.22748232523442277, 0.21935744827178513], 'true': [0.1797303824978326, 0.23953836382194654], 'true,false': [nan, 0.23953836382194654], 'true,false,false': [nan, 0.23953836382194654], 'false': [0.23029244608749494, 0.21719946294855344], 'false,false': [nan, 0.21719946294855344], 'true,true': [0.0, 0.18432800731242435]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 11.791
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(A, D) )
%   | | then if ( cityhascompanyoffice(E, A) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.3140312880406876;  // std dev = 4.107, 68.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=31 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0.17403026145203834;  // std dev = 0.465, 573.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=181 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8175161592878855;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( bankboughtbank(D, A), countryhascompanyoffice(E, A) )
%   | | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.8270284535918428;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16911953759926365;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(A, G), companyalsoknownas(A, H) )
%   | | | then return -0.027237687803121413;  // std dev = 1.320, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.13229264808973107;  // std dev = 4.050, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return 0.10871107200675176;  // std dev = 0.385, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | else if ( bankchiefexecutiveceo(A, J) )
%   | | then return 0.03561678507890691;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | | then return 0.26004023604790844;  // std dev = 2.596, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.19494413960472393;  // std dev = 10.397, 470.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=169 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.6647338629186798;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(E, C), cityhascompanyoffice(F, C) )
%   | | then if ( companyceo(E, G) )
%   | | | then return -0.028181353670147447;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3661585412928944;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( countryhascompanyoffice(H, C), companyalsoknownas(C, I) )
%   | | | then return 0.44007287349215984;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09068099655852273;  // std dev = 2.108, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   else return 0.15125248605530336;  // std dev = 0.463, 682.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=236 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.449, 812.000 (wgt'ed) examples reached here.  /* #neg=552 #pos=260 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( bankboughtbank(D, A), cityhascompanyoffice(E, D) )
%   | then return 0.4501887362441775;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(F, A) )
%   | | then if ( countryhascompanyoffice(C, F) )
%   | | | then return -0.05648709732208326;  // std dev = 0.768, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.36831112012737727;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | | then return 0.7396530773212187;  // std dev = 0.213, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.20648221628182722;  // std dev = 0.266, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then if ( acquired(I, J) )
%   | | | then return 0.6418687065183823;  // std dev = 1.077, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.2681128413163272;  // std dev = 1.754, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.1672833092621342;  // std dev = 0.214, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.12056098195397909;  // std dev = 0.469, 565.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), companyceo(C, E) )
%   | then return 0.35606750974840795;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.47069580007920847;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( acquired(A, F), companyalsoknownas(A, G) )
%   | then if ( acquired(H, A), companyceo(G, I) )
%   | | then return 0.24565601082047633;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return -0.04265232313530323;  // std dev = 1.339, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return -0.20000538538164592;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.08291658354971541;  // std dev = 0.443, 741.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=239 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), companyceo(C, E) )
%   | then return 0.27925133164497806;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3570836719552385;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(G, H) )
%   | | | then return 0.5288219339691661;  // std dev = 0.306, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.24781225235115936;  // std dev = 1.983, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else return -0.15018160549817308;  // std dev = 0.027, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( bankboughtbank(I, A), acquired(I, J) )
%   | | then if ( bankchiefexecutiveceo(I, K) )
%   | | | then return 0.12769333622355955;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3456841219180011;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( bankboughtbank(A, L) )
%   | | | then return -0.11301231765345102;  // std dev = 0.832, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.07150600239357974;  // std dev = 11.396, 610.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=199 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( countryhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.4718673169409815;  // std dev = 0.243, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(F, A), bankboughtbank(G, A) )
%   | | | then return 0.47752555051732476;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5933412752107272;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.21491325105405476;  // std dev = 0.068, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.2646687379585831;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), acquired(J, A) )
%   | | | then return -0.06789907932937093;  // std dev = 1.072, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.02334496640748225;  // std dev = 2.818, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.7289105001494797;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06060571201331419;  // std dev = 10.968, 553.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=181 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.41850410957940437;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5597215255423938;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.3882767897630923;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return -0.08004916609482664;  // std dev = 1.208, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | | else return 0.028788548929883986;  // std dev = 3.643, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | then if ( cityhascompanyoffice(H, A), companyceo(G, I) )
%   | | | then return 0.18506817149509172;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22951941624486683;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.0026065852998319585;  // std dev = 3.606, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return 0.049492108033766254;  // std dev = 10.311, 543.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=179 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | | | then return 0.08556022756815992;  // std dev = 1.636, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.12208865219866957;  // std dev = 0.994, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else return 0.019736934575708114;  // std dev = 0.357, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   else if ( acquired(A, H), companyalsoknownas(A, I) )
%   | then return -0.04322495372542842;  // std dev = 0.193, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( companyceo(A, J) )
%   | | then if ( acquired(A, K) )
%   | | | then return 0.07698476649073371;  // std dev = 2.126, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return -0.019377452136148297;  // std dev = 2.062, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( acquired(A, L) )
%   | | | then return 0.166850110204479;  // std dev = 2.352, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.055294973266510755;  // std dev = 10.049, 502.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=175 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '21.853', 'seconds']
Refined model CLL: -0.305278


******************************************
Best model found
******************************************
Results 

CLL : -0.305017 

AUC ROC : 0.758673 

AUC PR : 0.112902 

Precision : 0.109272 

Recall : 0.318533 

F1 : 0.162722 

Total Learning Time : 11.791 

Total Inference Time : 42.37921667098999 

Total revision time: 120.68176733398437
Best scored revision CLL: -0.305278


Results 

CLL : -0.305017 

AUC ROC : 0.758673 

AUC PR : 0.112902 

Precision : 0.109272 

Recall : 0.318533 

F1 : 0.162722 

Total Learning Time : 120.73068438911437 

Total Inference Time : 42.37921667098999 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.485
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17633075328132924;  // std dev = 0.466, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.295648935099511;  // std dev = 4.437, 80.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=35 */
%   | else return 0.18238101701077059;  // std dev = 0.468, 586.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1432026794500132;  // std dev = 4.779, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.145325329335862;  // std dev = 4.853, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.17619311535447654;  // std dev = 11.184, 556.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.22017467066346869;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.1679417341231662;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08830074256926619;  // std dev = 3.812, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | else return 0.1522558282642963;  // std dev = 0.475, 553.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.0032634878075078547;  // std dev = 0.402, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.15690844788997957;  // std dev = 0.482, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1347860590138988;  // std dev = 12.060, 637.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06109272041587152;  // std dev = 2.507, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else return 0.13083821988830277;  // std dev = 4.893, 101.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07385763070300894;  // std dev = 3.738, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09132121057465527;  // std dev = 0.471, 574.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.19663091150834275;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( acquired(D, A) )
%   | then return 0.023637075743896327;  // std dev = 4.896, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.007892602084673775;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.07240603162703922;  // std dev = 12.113, 662.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04155811059405135;  // std dev = 2.509, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else return 0.1597018258414922;  // std dev = 4.620, 86.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06463679495039881;  // std dev = 11.834, 633.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.01909164941171675;  // std dev = 1.907, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.003367183442444278;  // std dev = 2.489, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0.001947673009099686;  // std dev = 0.437, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04619240861752903;  // std dev = 0.472, 670.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.06027601401856192;  // std dev = 0.481, 127.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.12922532667311493;  // std dev = 1.317, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.06391363626472849;  // std dev = 3.500, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04247552668433607;  // std dev = 11.235, 566.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.18494592781681046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.08732187984575591;  // std dev = 1.777, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0506717607751261;  // std dev = 4.317, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return -0.024999141888630144;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03478665796815263;  // std dev = 11.225, 564.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.023', 'seconds']
Parameter learned model CLL:-0.371262 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.826, 10, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.466, 60, 28], 'false,true': [4.437, 45, 35], 'false,false': [0.468, 396, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.779, 74, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.853, 72, 35], 'false,false,false,false': [11.184, 366, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.778, 19, 13], 'true,false,false': [4.687, 59, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.812, 53, 20], 'false,false,false': [0.475, 363, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.402, 19, 5], 'true,false': [0.482, 49, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.06, 412, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.507, 20, 9], 'true,false': [4.893, 62, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.738, 48, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 384, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 3, 0], 'false,true': [4.896, 91, 33], 'false,false,true': [1.9, 13, 5], 'false,false,false': [12.113, 442, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.509, 21, 9], 'true,false': [4.62, 47, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.834, 423, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.907, 14, 5], 'true,false,true': [2.489, 20, 9], 'true,false,false': [0.437, 55, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 445, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.481, 79, 48], 'false,true,true,true': [1.317, 15, 2], 'false,true,true,false': [3.5, 39, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.235, 376, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.777, 10, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.317, 57, 28], 'false,true': [4.847, 75, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.225, 374, 190]}]
{'': [0.21773965500989864, 0.223703433162895], 'false': [0.2460937500000016, 0.21910563897075377], 'true': [0.22222222222222202, 0.21694214876033185], 'true,false': [nan, 0.21694214876033185]}
{'': [0.21341275628879344, 0.22429689641701367], 'false': [nan, 0.22429689641701284], 'false,false': [nan, 0.22429689641701367], 'false,false,false': [0.22010655952484817, 0.2249495367734539]}
{'': [0.23612929404186145, 0.22286273449825025], 'true': [nan, 0.2361292940418603], 'true,false': [0.24122105247722803, 0.23370303304662648], 'false': [nan, 0.22286273449825025], 'false,false': [0.19902180932621868, 0.2255329306854977], 'false,false,true': [nan, 0.19902180932621868]}
{'': [0.219976504889451, 0.2283376489088182], 'false': [nan, 0.2283376489088182], 'false,false': [nan, 0.2283376489088182], 'true': [0.16191173270824133, 0.23197836643539713]}
{'': [0.23337687430577989, 0.2197807792608301], 'true': [0.21667699806606508, 0.23708674515095948], 'false': [0.20548094896508853, 0.2214425329917821], 'false,false': [nan, 0.2214425329917821], 'false,true': [nan, 0.2054809489650886]}
{'': [-1.3877787807814457e-17, 0.21717151879749108], 'false': [0.19332247072650802, 0.2211788828009269], 'false,false': [0.2006172839506172, 0.22162778937940947], 'true': [nan, -1.3877787807814457e-17], 'true,false': [nan, -1.3877787807814457e-17]}
{'': [0.24092704958566552, 0.2212366378349309], 'true': [0.20979179835300737, 0.24817837232647205], 'false': [nan, 0.2212366378349271], 'false,false': [nan, 0.2212366378349309], 'false,false,false': [nan, 0.2212366378349309]}
{'': [0.19636352074276306, 0.22288930878364668], 'false': [nan, 0.22288930878364668], 'false,false': [nan, 0.22288930878364668], 'true': [0.19141299888575702, 0.19723305933308724], 'true,false': [0.21356350024322698, 0.1908327246165088]}
{'': [0.23110621958768968, 0.2198802213009202], 'false': [0.19553846035383435, 0.2230019103747116], 'false,false': [nan, 0.2230019103747116], 'false,true': [0.19553846035383435, nan], 'false,true,true': [0.1019782126900185, 0.21487286409625267]}
{'': [0.2165127138124095, 0.222277492267741], 'false': [0.2135737530346699, 0.22339168049896765], 'false,false': [nan, 0.22339168049896765], 'true': [0.2015987533373389, 0.219258983049394], 'true,false': [nan, 0.219258983049394], 'true,false,false': [nan, 0.219258983049394], 'true,true': [0.0, 0.21040556028340854]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 36.804
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( countryhascompanyoffice(D, A), bankbankincountry(E, D) )
%   | then if ( acquired(A, F), countryhascompanyoffice(D, F) )
%   | | then if ( companyceo(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( acquired(A, H), companyalsoknownas(A, I) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.12044401706672547;  // std dev = 3.436, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( companyalsoknownas(J, L), companyceo(L, M) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.1018510649004878;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( companyceo(A, N) )
%   | | | then return 0.2660436719416163;  // std dev = 4.284, 76.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=31 */
%   | | | else return 0.21042166237223514;  // std dev = 10.976, 528.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=186 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8227171118273898;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( economicsectorcompany(B, D) )
%   | | then return 0.8169645900805645;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(C, E), acquired(C, F) )
%   | | | then return -0.17801407630646587;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.14428668777817644;  // std dev = 2.830, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.8305567698543846;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.8001473499694584;  // std dev = 1.004, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return -0.16604959799103883;  // std dev = 0.094, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0.23041766799276267;  // std dev = 2.413, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.15263516080240688;  // std dev = 10.873, 549.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=177 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, D), acquired(E, A) )
%   | | then return 0.3966525362619914;  // std dev = 0.804, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( bankchiefexecutiveceo(D, F), countryhascompanyoffice(G, D) )
%   | | | then return 0.5337028200662354;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6979974947166986;  // std dev = 0.341, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.15447910668663697;  // std dev = 0.235, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then if ( companyalsoknownas(A, I) )
%   | | then return 0.6712689410088276;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7714706473415167;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( bankchiefexecutiveceo(A, J), companyceo(A, K) )
%   | | then return 0.5950507214190288;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return 0.06972612442758001;  // std dev = 2.920, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.13184221948192018;  // std dev = 10.764, 537.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=175 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(C, D), companyceo(A, E) )
%   | then return 0.10357456275067153;  // std dev = 0.331, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.20720560352010345;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( acquired(A, F), acquired(F, G) )
%   | then if ( companyalsoknownas(A, H), companyceo(A, I) )
%   | | then if ( countryhascompanyoffice(J, F) )
%   | | | then return 0.1098813489230996;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2726147015848528;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09199329218787244;  // std dev = 0.225, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.4884572011721258;  // std dev = 1.691, 56.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | | else return -0.13270735100404368;  // std dev = 0.190, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( companyalsoknownas(A, M), economicsectorcompany(B, M) )
%   | | | then return 0.6503364529211421;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1257682889168657;  // std dev = 11.068, 557.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=191 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.5378699960189769;  // std dev = 0.125, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyceo(A, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | | then return -0.002966657371816956;  // std dev = 1.190, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.11377859018260897;  // std dev = 2.410, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( acquired(A, H) )
%   | | | then return -0.07621374835021037;  // std dev = 1.640, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.04211634186701972;  // std dev = 3.160, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then if ( acquired(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.7281912876305511;  // std dev = 0.201, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21860569927435694;  // std dev = 0.143, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.0032252099032328467;  // std dev = 2.369, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.08665415962064128;  // std dev = 10.376, 551.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=183 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankchiefexecutiveceo(A, D) )
%   | then if ( companyceo(E, D), economicsectorcompany(B, E) )
%   | | then return 0.5175765638226599;  // std dev = 0.298, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(F, D), countryhascompanyoffice(G, F) )
%   | | | then return -0.2588465963104313;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.21799851683282007;  // std dev = 1.318, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.3126411224998933;  // std dev = 2.214, 59.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return -0.13122559687496194;  // std dev = 0.245, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.12869638007079257;  // std dev = 3.310, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.06335429299506753;  // std dev = 10.564, 541.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=172 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), acquired(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.3369169995523522;  // std dev = 0.072, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.08696972959831796;  // std dev = 0.173, 144.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=15 */
%   | else return 0.08370686170683449;  // std dev = 0.198, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( bankchiefexecutiveceo(A, F), bankboughtbank(G, A) )
%   | then if ( companyceo(H, F), economicsectorcompany(B, H) )
%   | | then return 0.4337418049853745;  // std dev = 0.261, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.26404235324453834;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | then if ( companyalsoknownas(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.5394865977104496;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09876383875452076;  // std dev = 1.503, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.47592503372812067;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06186660772030822;  // std dev = 10.872, 560.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=183 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.33742917636474495;  // std dev = 0.148, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(D, A) )
%   | then if ( companyceo(A, E) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return -0.06017599244489914;  // std dev = 0.561, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.1892451374563115;  // std dev = 0.947, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( companyalsoknownas(D, G), cityhascompanyoffice(H, A) )
%   | | | then return -0.12787950840776763;  // std dev = 0.713, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.00551195726183901;  // std dev = 2.544, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.2411047571026994;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5164163292116474;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, K), companyceo(K, L) )
%   | | | then return -0.08355935515486929;  // std dev = 1.122, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.05484827972335637;  // std dev = 10.726, 613.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=209 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.5061065844847082;  // std dev = 0.300, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.22718804477290339;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3585851694535154;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then if ( cityhascompanyoffice(H, G), companyceo(A, I) )
%   | | then return -0.04537761713309144;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.29088543365900343;  // std dev = 0.122, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, J), acquired(J, K) )
%   | | then if ( cityhascompanyoffice(L, A), companyalsoknownas(K, M) )
%   | | | then return 0.0310722849045535;  // std dev = 0.671, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.12647474253584032;  // std dev = 0.644, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( companyalsoknownas(A, N) )
%   | | | then return -0.009030804191303582;  // std dev = 3.059, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | | | else return 0.04047519755617794;  // std dev = 10.611, 628.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=210 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.055292961684053496;  // std dev = 0.214, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( companyceo(A, E), bankchiefexecutiveceo(F, E) )
%   | | then return 0.14223269432013746;  // std dev = 0.721, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.10449475089157007;  // std dev = 1.384, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.054936570825594014;  // std dev = 2.513, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | then if ( acquired(I, J) )
%   | | then return -0.12028981257023792;  // std dev = 0.159, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return -0.022162127730822438;  // std dev = 0.337, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return 0.02218383750161872;  // std dev = 0.192, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
%   | | else if ( bankboughtbank(L, A), cityhascompanyoffice(M, L) )
%   | | | then return 0.22216913869710672;  // std dev = 1.370, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.037614100844377316;  // std dev = 10.358, 501.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=168 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '37.082', 'seconds']
Refined model CLL: -0.298333


******************************************
Best model found
******************************************
Results 

CLL : -0.298937 

AUC ROC : 0.7429 

AUC PR : 0.062189 

Precision : 0.082536 

Recall : 0.265385 

F1 : 0.125912 

Total Learning Time : 36.804 

Total Inference Time : 83.49015164375305 

Total revision time: 187.0618359699249
Best scored revision CLL: -0.298333


Results 

CLL : -0.298937 

AUC ROC : 0.7429 

AUC PR : 0.062189 

Precision : 0.082536 

Recall : 0.265385 

F1 : 0.125912 

Total Learning Time : 187.11075302505492 

Total Inference Time : 83.49015164375305 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.344
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15083186192877987;  // std dev = 0.455, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20508771060971503;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | else return 0.2003475166597915;  // std dev = 0.474, 564.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.11106430581163941;  // std dev = 4.871, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.15511562956088998;  // std dev = 4.795, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return 0.19612075267972698;  // std dev = 11.078, 530.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7952883823769493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.07962538266363736;  // std dev = 2.434, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.15536193658357864;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1707961613808467;  // std dev = 3.932, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | else return 0.14015631023400563;  // std dev = 0.473, 572.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.23203593337571843;  // std dev = 0.498, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0.07031746677032905;  // std dev = 0.444, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13201306414990516;  // std dev = 12.130, 645.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.21749241924346768;  // std dev = 2.811, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else return 0.06169843359972198;  // std dev = 4.457, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04869604235092706;  // std dev = 4.146, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0923271632791853;  // std dev = 0.472, 574.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.028041996547055997;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.05108555495737816;  // std dev = 4.759, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.1796127120023474;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else return 0.07398410333181484;  // std dev = 11.964, 643.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.10936086632913507;  // std dev = 2.880, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else return -0.014636564777670781;  // std dev = 4.617, 116.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04536310836699264;  // std dev = 12.156, 685.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10640866500485036;  // std dev = 2.218, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.12807550825120287;  // std dev = 1.999, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0.028504559734056856;  // std dev = 0.443, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.042563541874725073;  // std dev = 0.470, 691.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.017020124051213077;  // std dev = 0.467, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.12600190316769727;  // std dev = 1.904, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.01762618001248633;  // std dev = 3.694, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05210411630220965;  // std dev = 11.236, 558.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.03706832259232096;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.038206633662209194;  // std dev = 2.218, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07366635322668924;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.08021424681120654;  // std dev = 4.567, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04557320727589087;  // std dev = 11.198, 551.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.780', 'seconds']
Parameter learned model CLL:-0.372107 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.176, 10, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.455, 58, 24], 'false,true': [4.712, 64, 34], 'false,false': [0.474, 371, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.871, 86, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.795, 71, 34], 'false,false,false,false': [11.078, 337, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.434, 22, 8], 'true,false,false': [4.712, 64, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.932, 44, 24], 'false,false,false': [0.473, 379, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.498, 10, 9], 'true,false': [0.444, 65, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.13, 418, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.811, 17, 15], 'true,false': [4.457, 67, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.146, 64, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 381, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [4.759, 81, 32], 'false,false,true': [2.542, 14, 12], 'false,false,false': [11.964, 428, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.88, 20, 15], 'true,false': [4.617, 88, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.156, 468, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.218, 12, 9], 'true,false,true': [1.999, 11, 6], 'true,false,false': [0.443, 49, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 464, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.467, 93, 43], 'false,true,true,true': [1.904, 9, 6], 'false,true,true,false': [3.694, 55, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.236, 365, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [2.218, 13, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.04, 51, 24], 'false,true': [4.567, 56, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.198, 358, 193]}]
{'': [0.21997843348691443, 0.22531968492438242], 'false': [0.22657226155768576, 0.22509871233841644], 'true': [0.2493074792243767, 0.2070196311719225], 'true,false': [nan, 0.2070196311719225]}
{'': [0.19936929676327872, 0.2296955906573633], 'false': [nan, 0.22969559065736375], 'false,false': [nan, 0.2296955906573633], 'false,false,false': [0.2189569160997727, 0.23154503381986136]}
{'': [0.22239680644010182, 0.2240550704632514], 'false': [nan, 0.2240550704632514], 'false,false': [0.22733557158891327, 0.22356533326812572], 'false,false,true': [nan, 0.22733557158891327], 'true': [0.0, 0.22078126365930523], 'true,false': [0.19747235925818934, 0.22657226155768376], 'true,true': [0.0, nan]}
{'': [0.2097278756419533, 0.22812859692283777], 'false': [nan, 0.22812859692283777], 'false,false': [nan, 0.22812859692283777], 'true': [0.24817507762392516, 0.19691907946477125]}
{'': [0.2231744603120273, 0.21969717301340755], 'true': [0.24686636569496587, 0.20907830846759604], 'false': [0.19531820853789236, 0.2231816581480944], 'false,false': [nan, 0.2231816581480944], 'false,true': [nan, 0.19531820853789175]}
{'': [0.24999999999999997, 0.2207188101968138], 'true': [nan, 0.24999999999999997], 'true,false': [nan, 0.24999999999999997], 'false': [0.20044592575972386, 0.22403770889241514], 'false,false': [0.24852071005917178, 0.22261410646558621]}
{'': [0.19880741004483032, 0.21572867151352595], 'false': [nan, 0.21572867151352673], 'false,false': [nan, 0.21572867151352595], 'false,false,false': [nan, 0.21572867151352595], 'true': [0.23697842305512892, 0.1837264682077077]}
{'': [0.21208828099512284, 0.22080830705442808], 'false': [nan, 0.22080830705442808], 'false,false': [nan, 0.22080830705442808], 'true': [0.23417329629834174, 0.20589994902026523], 'true,false': [0.2351166132812675, 0.19648028514145724]}
{'': [0.21834301348028215, 0.2227966490455615], 'false': [0.19915326810461487, 0.2262464510990303], 'false,false': [nan, 0.2262464510990303], 'false,true': [0.19915326810461487, nan], 'false,true,true': [0.24163660614175672, 0.1869075037858956]}
{'': [0.222239191840298, 0.2283090973825741], 'false': [0.2317315104254463, 0.2275815955810457], 'false,false': [nan, 0.2275815955810457], 'true': [0.23600098607027614, 0.21760480244468236], 'true,true': [0.25, 0.23417502325369158], 'true,false': [nan, 0.21760480244468236], 'true,false,false': [nan, 0.21760480244468236]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 10.854
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(E, A), countryhascompanyoffice(F, C) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   else if ( acquired(A, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.05582335370416354;  // std dev = 0.398, 86.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=17 */
%   | else if ( acquired(H, A), cityhascompanyoffice(I, H) )
%   | | then return 0.10139217834275562;  // std dev = 0.429, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.23314893509951096;  // std dev = 4.743, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   | | | else return 0.18024631337666142;  // std dev = 10.798, 534.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=172 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.831790390117155;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then return 0.819436113824314;  // std dev = 0.156, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.024679850928828302;  // std dev = 3.933, 103.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=19 */
%   | | | else return 0.1668634117405332;  // std dev = 11.839, 633.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=210 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.1630807022673004;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( cityhascompanyoffice(E, A), companyceo(A, F) )
%   | | then return 0.17550533492752676;  // std dev = 0.446, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else return 0.06577739486936066;  // std dev = 0.393, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   else if ( companyceo(A, G) )
%   | then if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | then return 0.40854712920251346;  // std dev = 1.049, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.025517987623966863;  // std dev = 0.405, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.7913048792681386;  // std dev = 0.193, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.19391684052149566;  // std dev = 0.081, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( bankboughtbank(L, A), cityhascompanyoffice(M, L) )
%   | | | then return -0.07844603729246652;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.14828259976793082;  // std dev = 10.563, 504.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=170 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.5616214528518145;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.6047484683413872;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6678866499519068;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then return 0.5266364711438478;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( cityhascompanyoffice(G, A), acquired(H, A) )
%   | | then if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.2515916910669148;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.16916622244964177;  // std dev = 0.157, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( acquired(J, A), companyceo(J, K) )
%   | | | then return 0.024823955155684484;  // std dev = 2.803, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.12623882542437231;  // std dev = 11.845, 661.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.4746529088781737;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( acquired(D, A), companyceo(D, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.8157705157067926;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1589148657151142;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyalsoknownas(D, H) )
%   | | | then return 0.02854138977226705;  // std dev = 2.181, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.13114227596558906;  // std dev = 0.979, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | else if ( companyalsoknownas(A, I), cityhascompanyoffice(J, I) )
%   | | then if ( acquired(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.3796533471857459;  // std dev = 0.766, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0031443781033937005;  // std dev = 2.664, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( bankboughtbank(L, A), companyceo(A, M) )
%   | | | then return -0.03580783615363734;  // std dev = 1.247, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12231558782193164;  // std dev = 11.410, 602.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=217 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C), acquired(A, D) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then if ( companyceo(A, F) )
%   | | then return -0.20151518021930098;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10050092657375558;  // std dev = 0.536, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.10315513055020871;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | then return 0.6474300234737734;  // std dev = 0.149, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.22098636270036287;  // std dev = 0.040, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( companyalsoknownas(A, J), cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, J) )
%   | | | then return 0.2381663753318573;  // std dev = 0.964, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04299296817256515;  // std dev = 1.913, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.3516189173808265;  // std dev = 0.175, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.056361406462509034;  // std dev = 11.510, 665.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=207 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyceo(A, D), cityhascompanyoffice(E, A) )
%   | then if ( companyceo(C, F) )
%   | | then return 0.03014699049883546;  // std dev = 0.352, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( cityhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.6268313967514865;  // std dev = 0.614, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.20266974317823733;  // std dev = 0.146, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.02946196252342307;  // std dev = 0.372, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   else if ( countryhascompanyoffice(H, A) )
%   | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.5422703431913706;  // std dev = 0.118, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.19772178639364615;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.2876067662305846;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( acquired(K, A) )
%   | | | then return -0.01304367632866168;  // std dev = 3.051, 64.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
%   | | | else return 0.0618683271891134;  // std dev = 10.533, 530.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=177 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(D, A) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then return 0.05086218509490474;  // std dev = 0.607, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.09781813671013181;  // std dev = 0.123, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then if ( acquired(A, G), cityhascompanyoffice(H, G) )
%   | | then return 0.5540737605238315;  // std dev = 0.177, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankboughtbank(I, A), bankchiefexecutiveceo(I, J) )
%   | | | then return -0.1656266269670293;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0833540069020249;  // std dev = 2.332, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | else if ( acquired(K, A), companyalsoknownas(K, L) )
%   | | then if ( acquired(L, M), economicsectorcompany(B, M) )
%   | | | then return 0.590364560078537;  // std dev = 0.452, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06581111772897663;  // std dev = 1.959, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( bankboughtbank(N, A) )
%   | | | then return -0.12838119366519818;  // std dev = 0.907, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.03555700245352896;  // std dev = 11.404, 662.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=211 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then return -0.012396373827665246;  // std dev = 0.354, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
%   else if ( acquired(D, A) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then if ( companyceo(D, F) )
%   | | | then return 0.07789456672032087;  // std dev = 1.678, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.2062013895612278;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.498752393386347;  // std dev = 1.077, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.190466461132556;  // std dev = 0.211, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( bankchiefexecutiveceo(A, H) )
%   | | then if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.12270738360244261;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4015251442247749;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(A, J) )
%   | | | then return -0.01928986744937543;  // std dev = 2.075, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.045475650488842466;  // std dev = 10.418, 535.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=182 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(D, C) )
%   then if ( acquired(D, C), bankboughtbank(A, E) )
%   | then return 0.0776103784404624;  // std dev = 0.919, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.20789253255487655;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | then if ( cityhascompanyoffice(H, F) )
%   | | then if ( acquired(I, A) )
%   | | | then return -0.09438725395183531;  // std dev = 0.236, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.04452858022476138;  // std dev = 2.083, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else return -0.1551531166861502;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( acquired(J, A), bankchiefexecutiveceo(J, K) )
%   | | then if ( companyceo(L, K), countryhascompanyoffice(M, L) )
%   | | | then return -0.027968458648133587;  // std dev = 0.355, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.17181660969153054;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( bankboughtbank(N, A), cityhascompanyoffice(P, N) )
%   | | | then return -0.10558851369024035;  // std dev = 0.619, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.05090295267461478;  // std dev = 11.295, 671.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=238 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '31.431', 'seconds']
Refined model CLL: -0.316251


******************************************
Best model found
******************************************
Results 

CLL : -0.316568 

AUC ROC : 0.734147 

AUC PR : 0.096868 

Precision : 0.214099 

Recall : 0.158301 

F1 : 0.18202 

Total Learning Time : 10.854 

Total Inference Time : 46.19777989387512 

Total revision time: 124.20648507881164
Best scored revision CLL: -0.316251


Results 

CLL : -0.316568 

AUC ROC : 0.734147 

AUC PR : 0.096868 

Precision : 0.214099 

Recall : 0.158301 

F1 : 0.18202 

Total Learning Time : 124.33966402816772 

Total Inference Time : 46.19777989387512 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.762
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26936388837054054;  // std dev = 0.492, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.2022349566048873;  // std dev = 4.581, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else return 0.17107410516753502;  // std dev = 0.464, 588.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.18275510357807534;  // std dev = 5.304, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.21265816824432926;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | | else return 0.1693557773358712;  // std dev = 11.075, 552.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.07949726874257608;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.13314326789059672;  // std dev = 4.619, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16112992180380034;  // std dev = 4.772, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   | | else return 0.11163004870972894;  // std dev = 0.458, 613.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.16243999948133042;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.105861883102365;  // std dev = 0.472, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12361525603437726;  // std dev = 12.012, 650.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06253370352564931;  // std dev = 2.887, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else return 0.08563284661711387;  // std dev = 4.332, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1633743029021276;  // std dev = 4.576, 86.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10736919503972688;  // std dev = 0.472, 550.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1990454212815269;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.11667979788754473;  // std dev = 5.139, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.0638001630581237;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.07424869998437868;  // std dev = 11.872, 645.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04448027485847074;  // std dev = 2.864, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else return 0.035194264347663415;  // std dev = 4.393, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04227034129007356;  // std dev = 12.314, 708.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.003952395270593778;  // std dev = 2.481, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.005381600075866111;  // std dev = 1.901, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.09200095091775742;  // std dev = 0.492, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07258260622392954;  // std dev = 0.475, 629.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.04297815317326195;  // std dev = 0.469, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.12915395972582092;  // std dev = 1.935, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08203996782759121;  // std dev = 4.102, 69.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0475749516226154;  // std dev = 11.095, 556.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.18126349148275236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.04107706968371016;  // std dev = 2.516, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03687039554378946;  // std dev = 4.604, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.02174680708429955;  // std dev = 4.641, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03961059784282918;  // std dev = 11.081, 553.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '57.291', 'seconds']
Parameter learned model CLL:-0.370507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.492, 63, 44], 'false,true': [4.581, 61, 32], 'false,false': [0.464, 404, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.304, 78, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.451, 52, 32], 'false,false,false,false': [11.075, 368, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.39, 20, 8], 'true,false,false': [4.619, 64, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.772, 62, 36], 'false,false,false': [0.458, 429, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.488, 14, 9], 'true,false': [0.472, 69, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.012, 434, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.887, 27, 12], 'true,false': [4.332, 57, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.576, 50, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 366, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [5.139, 67, 44], 'false,false,true': [2.332, 17, 8], 'false,false,false': [11.872, 437, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.864, 26, 12], 'true,false': [4.393, 62, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.314, 488, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.481, 20, 9], 'true,false,true': [1.901, 13, 5], 'true,false,false': [0.492, 43, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 413, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.469, 80, 40], 'false,true,true,true': [1.935, 8, 7], 'false,true,true,false': [4.102, 40, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.095, 372, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.516, 22, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.604, 58, 35], 'false,true': [4.641, 66, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.081, 369, 184]}]
{'': [0.24211721547733508, 0.2165770731044678], 'true': [nan, 0.24211721547733508], 'false': [0.22569083130997944, 0.21500300800592625]}
{'': [0.23058317656544006, 0.22423411268161048], 'false': [nan, 0.22423411268161064], 'false,false': [nan, 0.22423411268161048], 'false,false,false': [0.23582766439909375, 0.22222222222222282]}
{'': [0.21862906730570117, 0.21343533052069621], 'true': [nan, 0.21862906730570103], 'true,false': [0.20408163265306137, 0.2222222222222222], 'false': [nan, 0.21343533052069621], 'false,false': [0.23240316534777258, 0.21006522624271387], 'false,false,true': [nan, 0.23240316534777258]}
{'': [0.22584486465925255, 0.22197442742247378], 'true': [0.23806941822523825, 0.2225616338818905], 'false': [nan, 0.22197442742247378], 'false,false': [nan, 0.22197442742247378]}
{'': [0.21866793606891985, 0.22580920345625294], 'false': [0.2434621722488378, 0.2226247933884267], 'false,true': [nan, 0.24346217224883784], 'false,false': [nan, 0.2226247933884267], 'true': [0.21366622032083968, 0.2207950244411587]}
{'': [0.0, 0.22147798326688917], 'false': [0.2378875308040693, 0.21849878027952666], 'false,false': [0.21760000000000027, 0.21852954314521894], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.21484004383634958, 0.21418033760006067], 'true': [0.2158695533511029, 0.2143797625125916], 'false': [nan, 0.21418033760006663], 'false,false': [nan, 0.21418033760006067], 'false,false,false': [nan, 0.21418033760006067]}
{'': [0.23088741435979065, 0.22560707758646154], 'true': [0.2122212361040926, 0.23541461692674848], 'true,false': [0.20080898310306108, 0.24207168324263476], 'false': [nan, 0.22560707758646154], 'false,false': [nan, 0.22560707758646154]}
{'': [0.22020961848255344, 0.22474499421342684], 'false': [0.24517517841304337, 0.22141711091558203], 'false,true': [0.24517517841304337, nan], 'false,true,true': [0.24960278697175015, 0.24381627477179102], 'false,false': [nan, 0.22141711091558203]}
{'': [0.22163563371055414, 0.22172651729441037], 'false': [0.21979408609728385, 0.22202093463566722], 'false,false': [nan, 0.22202093463566722], 'true': [0.19844039464887378, 0.22788163668126224], 'true,false': [nan, 0.22788163668126224], 'true,false,false': [nan, 0.22788163668126224], 'true,true': [0.0, 0.20422756542528772]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 11.847
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( companyceo(E, F) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( acquired(G, A), companyceo(G, H) )
%   | | then if ( acquired(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( bankboughtbank(J, A), cityhascompanyoffice(K, J) )
%   | | | then return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.19441654073331072;  // std dev = 11.259, 568.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=191 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.7260512789278066;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8139099891851882;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(A, F), companyalsoknownas(A, G) )
%   | | then if ( countryhascompanyoffice(H, F), countryhascompanyoffice(H, G) )
%   | | | then return 0.21252258176734698;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06954677743414334;  // std dev = 1.426, 39.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else if ( acquired(A, I), companyceo(I, J) )
%   | | | then return 0.3429090956021918;  // std dev = 2.069, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.13713327184581897;  // std dev = 12.101, 732.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=222 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( acquired(A, D), countryhascompanyoffice(C, D) )
%   | then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | | then return 0.8017098522485786;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2071796322377947;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.08318847302349133;  // std dev = 0.412, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   else if ( acquired(A, F), acquired(F, G) )
%   | then if ( companyalsoknownas(A, H) )
%   | | then return -0.00774782435300599;  // std dev = 0.303, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.3582690911966001;  // std dev = 0.438, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( companyalsoknownas(A, I), companyceo(I, J) )
%   | | then if ( companyceo(A, K) )
%   | | | then return 0.10522035545906876;  // std dev = 1.237, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.44176969919970605;  // std dev = 1.523, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.10055998321786964;  // std dev = 2.070, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.15052165115904864;  // std dev = 11.187, 603.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=207 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( companyceo(D, C), economicsectorcompany(B, D) )
%   | then return 0.675065049616982;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.06612512026564353;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyceo(G, C) )
%   | | | then return -0.20248521074327516;  // std dev = 0.154, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08932583403970458;  // std dev = 0.797, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.5151408168225501;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.6590858208861246;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04081204537294805;  // std dev = 4.026, 114.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=27 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.03208748502742124;  // std dev = 3.523, 87.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return 0.12783830254298323;  // std dev = 10.855, 553.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=189 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.38836978896538493;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( acquired(A, F), cityhascompanyoffice(D, F) )
%   | | | then return 0.3019776193606633;  // std dev = 0.751, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6325695998890675;  // std dev = 0.288, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.16825412203788012;  // std dev = 0.284, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( acquired(G, A), companyceo(G, H) )
%   | | then if ( companyceo(A, I) )
%   | | | then return -0.08251338522037319;  // std dev = 0.614, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.09803278916959088;  // std dev = 2.013, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( acquired(J, A), companyalsoknownas(J, K) )
%   | | | then return -0.02845880360925952;  // std dev = 1.189, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.12806001660164176;  // std dev = 10.921, 530.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=192 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then if ( cityhascompanyoffice(E, A) )
%   | | | then return 0.3460089412418353;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5468239158154389;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(F, D) )
%   | | | then return -0.21779801630604104;  // std dev = 0.254, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.01675924100081646;  // std dev = 3.000, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | else if ( countryhascompanyoffice(G, A), acquired(A, H) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.5804927250895628;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2031094072350869;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(A, J), cityhascompanyoffice(K, J) )
%   | | | then return -0.011241442864363155;  // std dev = 1.767, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.073084978638034;  // std dev = 11.263, 657.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=221 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(E, A) )
%   | | then return 0.32478344366635314;  // std dev = 0.208, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.45881243969435753;  // std dev = 0.067, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1516115729848632;  // std dev = 0.278, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.4127948096027851;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.7278498795257952;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.24245647786448687;  // std dev = 0.361, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( acquired(A, H), bankboughtbank(I, H) )
%   | | then return 0.3564773033461318;  // std dev = 0.638, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( acquired(J, A), acquired(A, K) )
%   | | | then return -0.20931851657609882;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07112996658830617;  // std dev = 10.898, 557.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=192 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(D, A) )
%   then if ( companyceo(A, E), companyalsoknownas(A, F) )
%   | then return 0.02758109403247785;  // std dev = 0.200, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return -0.07877631994793807;  // std dev = 0.228, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   else if ( bankboughtbank(A, G) )
%   | then if ( acquired(H, A) )
%   | | then if ( bankboughtbank(H, A) )
%   | | | then return 0.022432063263608137;  // std dev = 0.306, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05498973503143292;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.20370146322897464;  // std dev = 0.171, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( acquired(I, A), companyalsoknownas(I, J) )
%   | | then if ( acquired(K, I) )
%   | | | then return 0.24359994781594851;  // std dev = 0.822, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.013858212946143965;  // std dev = 1.755, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.011963986176282576;  // std dev = 2.588, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.06121461640009079;  // std dev = 10.884, 563.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=198 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.410, 796.000 (wgt'ed) examples reached here.  /* #neg=536 #pos=260 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, F), companyceo(F, G) )
%   | | | then return 0.11647618366717116;  // std dev = 0.369, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.008217870570089747;  // std dev = 1.584, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( bankboughtbank(H, A) )
%   | | then return 0.11197813858333067;  // std dev = 0.439, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.05651966744359303;  // std dev = 0.316, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return -0.01105226433577631;  // std dev = 0.211, 131.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | else if ( bankchiefexecutiveceo(A, J) )
%   | | then return -0.13144495556995386;  // std dev = 0.204, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( companyalsoknownas(A, K), companyceo(A, L) )
%   | | | then return -0.17983925687269825;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05440698072705198;  // std dev = 10.514, 506.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=181 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '25.061', 'seconds']
Refined model CLL: -0.30358


******************************************
Best model found
******************************************
Results 

CLL : -0.30318 

AUC ROC : 0.790513 

AUC PR : 0.094205 

Precision : 0.077476 

Recall : 0.291506 

F1 : 0.122416 

Total Learning Time : 11.847 

Total Inference Time : 43.37693786621094 

Total revision time: 121.32436469459533
Best scored revision CLL: -0.30358


Results 

CLL : -0.30318 

AUC ROC : 0.790513 

AUC PR : 0.094205 

Precision : 0.077476 

Recall : 0.291506 

F1 : 0.122416 

Total Learning Time : 121.45754364395141 

Total Inference Time : 43.37693786621094 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.758
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.21298764477693033;  // std dev = 0.478, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.17924985253070358;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | else return 0.18801004621061893;  // std dev = 0.470, 576.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.14750303939538437;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.15599947576370785;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.17789038061267934;  // std dev = 11.163, 552.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.14254046971859946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.20231804862232736;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else return 0.19687358711385378;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07504532134959993;  // std dev = 3.830, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else return 0.1492658919067479;  // std dev = 0.474, 556.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.03965577852125499;  // std dev = 0.428, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else return 0.13272583629053844;  // std dev = 0.473, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11916198624286335;  // std dev = 12.220, 669.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05049192179185818;  // std dev = 2.531, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else return 0.20596079821261892;  // std dev = 4.640, 87.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07859457886095511;  // std dev = 3.730, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09569509671067919;  // std dev = 0.471, 570.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.06358357555247095;  // std dev = 4.735, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -7.296561786138412E-5;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.07586924380971964;  // std dev = 12.097, 658.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 2.5050887124615045E-4;  // std dev = 2.589, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else return 0.025344892815079866;  // std dev = 5.141, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07969823440527109;  // std dev = 11.700, 604.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.022806618451115243;  // std dev = 1.876, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.08977505497594362;  // std dev = 2.333, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.016575185962679737;  // std dev = 0.451, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05546676038993062;  // std dev = 0.474, 658.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.07579343471423579;  // std dev = 0.483, 127.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.16522908025324565;  // std dev = 1.335, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.09275718989968926;  // std dev = 3.383, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.028340150204107774;  // std dev = 11.317, 583.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.013867099132198349;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035839118970543336;  // std dev = 4.301, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.0767836330589117;  // std dev = 4.588, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03456054061350716;  // std dev = 11.215, 562.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '3.752', 'seconds']
Parameter learned model CLL:-0.37428 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.478, 60, 33], 'false,true': [4.875, 74, 35], 'false,false': [0.47, 386, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.746, 71, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.875, 74, 35], 'false,false,false,false': [11.163, 362, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.807, 20, 13], 'true,false,false': [4.641, 56, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.83, 55, 20], 'false,false,false': [0.474, 366, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.428, 15, 5], 'true,false': [0.473, 54, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.22, 444, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.531, 22, 9], 'true,false': [4.64, 48, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.73, 46, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 380, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.735, 73, 33], 'false,false,true': [1.936, 15, 5], 'false,false,false': [12.097, 438, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.589, 27, 9], 'true,false': [5.141, 82, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.7, 394, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.876, 14, 5], 'true,false,true': [2.333, 14, 9], 'true,false,false': [0.451, 48, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 433, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.483, 79, 48], 'false,true,true,true': [1.335, 18, 2], 'false,true,true,false': [3.383, 32, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.317, 393, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.915, 14, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.301, 56, 28], 'false,true': [4.588, 53, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.215, 372, 190]}]
{'': [0.22670360110803467, 0.22057648249773795], 'true': [0.0, 0.2289281997918849], 'false': [0.21799511825604045, 0.22105275848765715]}
{'': [0.21662352071006052, 0.22451821143116482], 'false': [nan, 0.22451821143116285], 'false,false': [nan, 0.22451821143116482], 'false,false,false': [0.2179951182560394, 0.22572726317999509]}
{'': [0.2362658028652151, 0.2220327326185474], 'true': [0.0, 0.23724167164078805], 'true,false': [0.23875114784205698, 0.23668639053254384], 'false': [nan, 0.2220327326185474], 'false,false': [0.1955555555555555, 0.2249495367734613], 'false,false,true': [nan, 0.1955555555555555], 'true,true': [0.0, nan]}
{'': [0.21714655929263932, 0.22319903440709762], 'false': [nan, 0.22319903440709762], 'false,false': [nan, 0.22319903440709762], 'true': [0.18283349751966144, 0.2238171603860948]}
{'': [0.2414373660021653, 0.2210672646995359], 'true': [0.20671017450640147, 0.24746152683015774], 'false': [0.2108305501102377, 0.22222222222222393], 'false,false': [nan, 0.22222222222222393], 'false,true': [nan, 0.21083055011023769]}
{'': [nan, 0.22019938138367437], 'false': [0.21153502471039423, 0.22154034213604207], 'false,false': [0.18749999999999997, 0.22240487853186752]}
{'': [0.211148726590573, 0.2266435009476842], 'false': [nan, 0.2266435009476803], 'false,false': [nan, 0.2266435009476842], 'false,false,false': [nan, 0.2266435009476842], 'true': [0.186134608652936, 0.21844654724414342]}
{'': [0.20795924179433814, 0.22453709947438916], 'false': [nan, 0.22453709947438916], 'false,false': [nan, 0.22453709947438916], 'true': [0.18529251027423624, 0.2127173123953967], 'true,false': [0.23655970301832827, 0.20316328803742534]}
{'': [0.23310320906045676, 0.21786073090587116], 'false': [0.2025536788046629, 0.2196893691764073], 'false,false': [nan, 0.2196893691764073], 'false,true': [0.2025536788046629, nan], 'false,true,true': [0.0890522720666315, 0.22893797990346879]}
{'': [0.21557805808432773, 0.22608197432689212], 'false': [0.23923310407312418, 0.22378136041843916], 'false,false': [nan, 0.22378136041843916], 'true': [0.19309494958772178, 0.22020776140973294], 'true,false': [nan, 0.22020776140973294], 'true,false,false': [nan, 0.22020776140973294], 'true,true': [nan, 0.19309494958772178]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 17.858
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(A, D), countryhascompanyoffice(E, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.13983907594458259;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | then return 0.06648226843284567;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( countryhascompanyoffice(I, A), cityhascompanyoffice(J, A) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.254974331924908;  // std dev = 3.883, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | | else return 0.17903178739152817;  // std dev = 11.329, 589.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=189 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), bankchiefexecutiveceo(A, D) )
%   then if ( bankchiefexecutiveceo(E, C), economicsectorcompany(B, E) )
%   | then return 0.7927398953869014;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.18497367193283265;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.26489012952045443;  // std dev = 0.455, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( acquired(A, G), acquired(H, A) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.8191429317114821;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.04280714403124307;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.2885146881752696;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.8389553624279276;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.8278609367185649;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1477451053165518;  // std dev = 12.300, 706.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=221 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( countryhascompanyoffice(E, A), bankbankincountry(F, E) )
%   | | then return 0.06102433455967743;  // std dev = 0.402, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.7221062004230561;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17685022685526383;  // std dev = 4.663, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   else if ( companyalsoknownas(A, H) )
%   | then if ( countryhascompanyoffice(I, H) )
%   | | then return -0.1958729926751849;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06276914539439113;  // std dev = 0.427, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.6924564666599363;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.24479974419230977;  // std dev = 2.902, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.13609582379777826;  // std dev = 10.814, 537.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=173 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E), economicsectorcompany(B, E) )
%   | then return 0.48573642983186255;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.5865120872258327;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1274670435537241;  // std dev = 0.262, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   else if ( countryhascompanyoffice(F, A), bankbankincountry(G, F) )
%   | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | then return 0.6807403705065234;  // std dev = 0.202, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return -0.19264355506513892;  // std dev = 0.176, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(J, A), companyalsoknownas(J, K) )
%   | | | then return -0.22284977817786594;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19830863457549955;  // std dev = 4.128, 74.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.15884483754812112;  // std dev = 4.720, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   | | | else return 0.09764211733220007;  // std dev = 10.294, 506.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=156 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( acquired(E, D), economicsectorcompany(B, E) )
%   | then return 0.6811981910953828;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyceo(D, F) )
%   | | then return -0.21612325026998377;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( companyalsoknownas(D, G) )
%   | | | then return 0.02407513105896415;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.19161843243893575;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.6682355081885714;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.467367830392757;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.01853600597064803;  // std dev = 4.601, 131.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=35 */
%   | | else if ( bankboughtbank(K, A), countryhascompanyoffice(L, K) )
%   | | | then return 0.3788328778609111;  // std dev = 1.290, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.09977244912527226;  // std dev = 11.256, 595.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=197 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( acquired(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0.2816977810859043;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | then if ( bankchiefexecutiveceo(G, H), acquired(I, A) )
%   | | | then return -0.027476346209870422;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5502765316241591;  // std dev = 0.477, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.18026324090278728;  // std dev = 0.210, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return 0.0687044425085281;  // std dev = 0.453, 725.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=234 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | | then return 0.5708161386592656;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.39318981586235485;  // std dev = 0.349, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6029144115771552;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then if ( cityhascompanyoffice(H, G) )
%   | | then return 0.348929783585763;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4167588875021765;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( acquired(I, A) )
%   | | then if ( acquired(J, I) )
%   | | | then return -0.14535318343194464;  // std dev = 0.782, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.020095777472832557;  // std dev = 3.244, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.024238708009133983;  // std dev = 5.135, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | | | else return 0.07178843815454358;  // std dev = 10.437, 513.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( companyalsoknownas(E, F), acquired(A, G) )
%   | | | then return 0.5040248575217382;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25478375495948347;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return -0.1447387889363279;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.20000493680758522;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.48632031021290584;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return 0.034603361104644;  // std dev = 0.438, 780.000 (wgt'ed) examples reached here.  /* #neg=534 #pos=246 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.26774696886630034;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(C, E), companyalsoknownas(E, E) )
%   | | then return 0.39785506255855974;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.12377585083661805;  // std dev = 0.255, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | then if ( acquired(H, F) )
%   | | then return 0.5300348785282291;  // std dev = 0.281, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(G, I), companyceo(F, J) )
%   | | | then return -0.07249333601156219;  // std dev = 0.903, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.21618032782701901;  // std dev = 2.020, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | then return -0.01988731691548296;  // std dev = 0.251, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else if ( acquired(A, M), acquired(M, N) )
%   | | | then return -0.1379523158612536;  // std dev = 1.259, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.050912673411666644;  // std dev = 11.488, 615.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=208 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.2621307560552718;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( companyalsoknownas(A, D), acquired(A, E) )
%   | | then if ( acquired(D, F) )
%   | | | then return -0.06220136602387945;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.07110528040269475;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.08301736693793015;  // std dev = 0.342, 90.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
%   else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | then if ( cityhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | then return 0.3807827176617171;  // std dev = 0.322, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.27516352191855076;  // std dev = 0.117, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | then return 0.4172378045952951;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.14679573957288714;  // std dev = 4.044, 68.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=30 */
%   | | | else return 0.035316541048486104;  // std dev = 10.436, 520.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=171 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '45.865', 'seconds']
Refined model CLL: -0.32515


******************************************
Best model found
******************************************
Results 

CLL : -0.324971 

AUC ROC : 0.659366 

AUC PR : 0.076234 

Precision : 0.195181 

Recall : 0.155769 

F1 : 0.173262 

Total Learning Time : 17.858 

Total Inference Time : 85.18229627609253 

Total revision time: 171.96541220283507
Best scored revision CLL: -0.32515


Results 

CLL : -0.324971 

AUC ROC : 0.659366 

AUC PR : 0.076234 

Precision : 0.195181 

Recall : 0.155769 

F1 : 0.173262 

Total Learning Time : 172.09859115219115 

Total Inference Time : 85.18229627609253 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.701
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.19468739663797247;  // std dev = 4.819, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20218563234721415;  // std dev = 0.475, 654.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=225 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.18275958559141384;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14772392711306462;  // std dev = 12.406, 712.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.182082423103247;  // std dev = 4.672, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12251235248132335;  // std dev = 0.464, 720.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=225 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.08266346131935175;  // std dev = 0.461, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12180940123056164;  // std dev = 12.265, 679.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.09747249276817158;  // std dev = 4.819, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08869834696036914;  // std dev = 0.466, 705.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=225 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.5427544903584287;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12080327084623395;  // std dev = 4.391, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08432724324513453;  // std dev = 12.270, 680.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=225 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.08347960478541078;  // std dev = 4.674, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08360120276316789;  // std dev = 12.129, 650.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.05122426429895194;  // std dev = 4.727, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.040999472210893166;  // std dev = 0.466, 703.000 (wgt'ed) examples reached here.  /* #neg=478 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.06608358999147484;  // std dev = 0.486, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03965477813697733;  // std dev = 12.305, 688.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=225 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.058948233727648465;  // std dev = 4.616, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.043286332344410657;  // std dev = 12.197, 664.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '10.036', 'seconds']
Parameter learned model CLL:-0.37135 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.819, 69, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.475, 429, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.77, 65, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.406, 487, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.672, 58, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.464, 495, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.461, 79, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.265, 454, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.819, 69, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 480, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [0.894, 1, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.391, 51, 31], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.27, 455, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.674, 59, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.129, 425, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.727, 63, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 478, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.486, 56, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.305, 463, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.616, 54, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.197, 439, 225]}]
{'': [0.22328032544378842, 0.22567544819459884], 'false': [nan, 0.22567544819459884], 'true': [0.22328032544378842, nan]}
{'': [0.22750000000000045, 0.21614813470521718], 'false': [nan, 0.21614813470521718], 'false,false': [nan, 0.21614813470521718], 'false,false,false': [nan, 0.21614813470521718]}
{'': [0.23470921493814337, 0.2148437500000069], 'true': [0.23470921493814337, nan], 'true,true': [0.23470921493814337, nan], 'false': [nan, 0.2148437500000069], 'false,false': [nan, 0.2148437500000069]}
{'': [0.21275777162203743, 0.2215638088586566], 'false': [nan, 0.2215638088586566], 'false,false': [nan, 0.2215638088586566], 'true': [0.21275777162203743, nan]}
{'': [0.22328032544378712, 0.21729289271163177], 'true': [0.22328032544378712, nan], 'false': [nan, 0.21729289271163177], 'false,false': [nan, 0.21729289271163177]}
{'': [0.24045448540097833, 0.22139922145329424], 'true': [0.16000000000000006, 0.2351279000594892], 'true,false': [nan, 0.2351279000594892], 'false': [nan, 0.22139922145329424], 'false,false': [nan, 0.22139922145329424]}
{'': [0.23235985425804992, 0.22633136094673703], 'true': [0.23235985425804992, nan], 'false': [nan, 0.22633136094673703], 'false,false': [nan, 0.22633136094673703], 'false,false,false': [nan, 0.22633136094673703]}
{'': [0.22805284365321457, 0.21762048040404447], 'true': [0.22805284365321457, nan], 'false': [nan, 0.21762048040404447], 'false,false': [nan, 0.21762048040404447]}
{'': [0.2363739592859888, 0.2200830685505735], 'false': [nan, 0.2200830685505735], 'false,false': [nan, 0.2200830685505735]}
{'': [0.23941885025444776, 0.22403242488024028], 'true': [0.23941885025444776, nan], 'true,true': [0.23941885025444776, nan], 'false': [nan, 0.22403242488024028], 'false,false': [nan, 0.22403242488024028]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
0;true;companyalsoknownas(D, C).;true;true
0;false;companyalsoknownas(E, F), companyalsoknownas(A, F).;true;true
1;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
1;false;companyalsoknownas(A, D), companyalsoknownas(D, A).;true;true
1;false,false;companyalsoknownas(E, A), companyalsoknownas(F, E).;true;true
1;false,false,false;companyalsoknownas(A, G).;true;true
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
2;true;companyalsoknownas(D, A), companyalsoknownas(A, D).;true;true
2;true,true;companyalsoknownas(C, E).;true;true
2;false;companyalsoknownas(A, A).;true;true
2;false,false;companyalsoknownas(F, A).;true;true
3;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
3;true;companyalsoknownas(D, C).;true;true
3;false;companyalsoknownas(E, A).;true;true
3;false,false;companyalsoknownas(A, A).;true;true
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
4;false;companyalsoknownas(E, A).;true;true
4;false,false;companyalsoknownas(A, F).;true;true
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true
5;true,false;companyalsoknownas(C, C).;true;true
5;false;companyalsoknownas(D, A).;true;true
5;false,false;companyalsoknownas(A, E), companyalsoknownas(E, F).;true;true
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
6;true;companyalsoknownas(C, D).;true;true
6;false;companyalsoknownas(E, A), companyalsoknownas(E, E).;true;true
6;false,false;companyalsoknownas(A, F).;true;true
6;false,false,false;companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
7;true;companyalsoknownas(D, C).;true;true
7;false;companyalsoknownas(A, A).;true;true
7;false,false;companyalsoknownas(E, A), companyalsoknownas(A, E).;true;true
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false;companyalsoknownas(D, A).;true;true
8;false,false;companyalsoknownas(E, A).;true;true
9;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
9;true;companyalsoknownas(D, C).;true;true
9;true,true;companyalsoknownas(A, E), companyalsoknownas(D, E).;true;true
9;false;companyalsoknownas(A, F).;true;true
9;false,false;companyalsoknownas(G, A), companyalsoknownas(G, G).;true;true


Refining candidate
***************************
Model training time 12.605
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( acquired(A, F), companyceo(F, G) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1914822684328457;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, I), companyalsoknownas(A, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( bankboughtbank(K, A) )
%   | | | then return 0.0052077586289240585;  // std dev = 2.065, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.17796875491932754;  // std dev = 12.037, 666.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=213 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.7894508061417859;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyalsoknownas(A, F), acquired(G, F) )
%   | | | then return -0.09536593733988019;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.08579467589529517;  // std dev = 3.863, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14713679605366325;  // std dev = 12.393, 720.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5518984480763944;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.08290500421318105;  // std dev = 4.186, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(I, A) )
%   | | | then return 0.023055780232010232;  // std dev = 2.029, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.18046106623078167;  // std dev = 11.750, 597.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=219 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.41497236272378696;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( countryhascompanyoffice(F, A) )
%   | | | then return -0.044482673751045636;  // std dev = 1.525, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.11975026333098125;  // std dev = 3.798, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(H, A), acquired(I, A) )
%   | | | then return 0.03366893417181772;  // std dev = 1.639, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.14126178478511645;  // std dev = 11.893, 620.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=221 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.3190056504011092;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.644470526344593;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07500218930751648;  // std dev = 3.874, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, A), acquired(J, I) )
%   | | | then return 0.26621092861672563;  // std dev = 1.960, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.06524191779989322;  // std dev = 12.234, 713.000 (wgt'ed) examples reached here.  /* #neg=496 #pos=217 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.2500807732625317;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2116789779213118;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, E) )
%   | | | then return 0.17179401193216778;  // std dev = 2.659, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.04644818104169968;  // std dev = 2.892, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   else if ( companyalsoknownas(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G), companyalsoknownas(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | | then return 0.11986587001008633;  // std dev = 3.783, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.08210915920542926;  // std dev = 11.533, 603.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=202 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.22666895049906452;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( companyalsoknownas(A, F), cityhascompanyoffice(G, F) )
%   | | | then return -0.05971018859845036;  // std dev = 2.668, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.062160854960985217;  // std dev = 3.099, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(H, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07900113420671416;  // std dev = 12.048, 647.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( countryhascompanyoffice(E, A) )
%   | | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.35451881246131556;  // std dev = 0.753, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2033313515959664;  // std dev = 0.112, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.4250828474307536;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08721842097247587;  // std dev = 3.586, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | | then return 0.09157753618266336;  // std dev = 3.755, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.045175882909052716;  // std dev = 11.576, 613.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=202 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(A, D), cityhascompanyoffice(E, D) )
%   | then return 0.24319455549651686;  // std dev = 0.956, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyalsoknownas(F, A), companyceo(F, G) )
%   | | then if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.24971782515907653;  // std dev = 0.260, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.029514504232088123;  // std dev = 2.355, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( companyceo(A, I) )
%   | | | then return -0.02296579214571133;  // std dev = 1.736, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.15822574209596468;  // std dev = 2.205, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   else if ( companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(K, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.15849590066746236;  // std dev = 3.556, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.015000145503084284;  // std dev = 11.732, 650.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=201 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.23558029861851368;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.040618058976786484;  // std dev = 3.801, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.5553659311287747;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.02729009719840723;  // std dev = 12.091, 668.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=218 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '25.460', 'seconds']
Refined model CLL: -0.356732


******************************************
Best model found
******************************************
Results 

CLL : -0.356743 

AUC ROC : 0.541026 

AUC PR : 0.031486 

Precision : 0.376471 

Recall : 0.061776 

F1 : 0.106136 

Total Learning Time : 12.605 

Total Inference Time : 135.43072938919067 

Total revision time: 220.0130927619934
Best scored revision CLL: -0.356732


Results 

CLL : -0.356743 

AUC ROC : 0.541026 

AUC PR : 0.031486 

Precision : 0.376471 

Recall : 0.061776 

F1 : 0.106136 

Total Learning Time : 220.1077325401306 

Total Inference Time : 135.43072938919067 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.779
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.13904781150400589;  // std dev = 4.240, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1910101249012074;  // std dev = 0.471, 706.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=235 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.1528657816259224;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17043035057738476;  // std dev = 12.481, 697.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=235 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.14772480770120264;  // std dev = 4.096, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14298932119906502;  // std dev = 0.472, 702.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=235 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.04334321324529067;  // std dev = 0.432, 101.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12915878974543027;  // std dev = 12.415, 683.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=235 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.05464266272707738;  // std dev = 4.284, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12740258174268276;  // std dev = 0.481, 644.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=235 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.2205651958143858;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07355245124443739;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06687100474995263;  // std dev = 12.565, 716.000 (wgt'ed) examples reached here.  /* #neg=481 #pos=235 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.06761286298552378;  // std dev = 4.171, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06563223761682907;  // std dev = 12.453, 691.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=235 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.01777931953105624;  // std dev = 4.283, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04095589504682833;  // std dev = 0.470, 715.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=235 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.06331420307303226;  // std dev = 0.460, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03668002877231059;  // std dev = 12.521, 706.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=235 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return -0.004878213120126647;  // std dev = 4.303, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04791228072231269;  // std dev = 12.342, 668.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=235 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '8.763', 'seconds']
Parameter learned model CLL:-0.368489 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.24, 64, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 471, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.146, 55, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.481, 462, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.096, 51, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 467, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.432, 76, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.415, 448, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.284, 69, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.481, 409, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [0.0, 5, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.201, 60, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.565, 481, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.171, 59, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.453, 456, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.283, 71, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 480, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.46, 56, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.521, 471, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.303, 74, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.342, 433, 235]}]
{'': [0.20199469763918804, 0.2220646181254988], 'false': [nan, 0.2220646181254988], 'true': [0.20199469763918804, nan]}
{'': [0.21484374999999867, 0.22348289142440345], 'false': [nan, 0.22348289142440345], 'false,false': [nan, 0.22348289142440345], 'false,false,false': [nan, 0.22348289142440345]}
{'': [0.2207409972299169, 0.2226950268260809], 'false': [nan, 0.2226950268260809], 'false,false': [nan, 0.2226950268260809], 'true': [0.2207409972299169, nan], 'true,true': [0.2207409972299169, nan]}
{'': [0.18625624938731414, 0.22568592185452496], 'false': [nan, 0.22568592185452496], 'false,false': [nan, 0.22568592185452496], 'true': [0.18625624938731414, nan]}
{'': [0.1952240832956087, 0.2317498360402824], 'false': [nan, 0.2317498360402824], 'false,false': [nan, 0.2317498360402824], 'true': [0.1952240832956087, nan]}
{'': [0.20061728395061687, 0.22048898286569413], 'false': [nan, 0.22048898286569413], 'false,false': [nan, 0.22048898286569413], 'true': [-5.551115123125783e-18, 0.20761245674740444], 'true,false': [nan, 0.20761245674740444]}
{'': [0.20713640292816338, 0.22442777827809277], 'false': [nan, 0.22442777827809277], 'false,false': [nan, 0.22442777827809277], 'false,false,false': [nan, 0.22442777827809277], 'true': [0.20713640292816338, nan]}
{'': [0.1911082575972902, 0.22064648638075085], 'false': [nan, 0.22064648638075085], 'false,false': [nan, 0.22064648638075085], 'true': [0.1911082575972902, nan]}
{'': [0.21123271617883876, 0.2220646181254948], 'false': [nan, 0.2220646181254948], 'false,false': [nan, 0.2220646181254948]}
{'': [0.1870577186732744, 0.22803569507691668], 'false': [nan, 0.22803569507691668], 'false,false': [nan, 0.22803569507691668], 'true': [0.1870577186732744, nan], 'true,true': [0.1870577186732744, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true


Refining candidate
***************************
Model training time 15.062
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(E, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( bankboughtbank(E, F) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15544623239680913;  // std dev = 3.932, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.8268989350995116;  // std dev = 0.984, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | | then return 0.20814893509951235;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.1908102254220886;  // std dev = 10.493, 496.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=165 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return -0.02817724175494818;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( bankboughtbank(E, A), countryhascompanyoffice(F, E) )
%   | | | then return 0.5757795451659758;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.114339891018316;  // std dev = 4.260, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   else if ( acquired(A, G), companyalsoknownas(A, H) )
%   | then return 0.001412138924637719;  // std dev = 0.317, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( acquired(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.7789123976657755;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19787993065472395;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.16723136825191234;  // std dev = 2.874, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.17481089297621186;  // std dev = 10.390, 496.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=170 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyalsoknownas(C, D), cityhascompanyoffice(E, C) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return -0.177962395244647;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06951462673795133;  // std dev = 2.101, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | | | then return 0.3648810614620046;  // std dev = 1.644, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1280378291580998;  // std dev = 3.416, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | then return 0.7006641175898393;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then return 0.0017614133905308486;  // std dev = 0.358, 74.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.07168588399892738;  // std dev = 3.637, 96.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return 0.15349064457829853;  // std dev = 10.553, 493.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=171 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then if ( companyceo(A, C) )
%   | | then return 0.23094074967391884;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.02375179516644661;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( cityhascompanyoffice(F, A), countryhascompanyoffice(G, A) )
%   | | then return 0.029397497020275387;  // std dev = 0.391, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.20621240896965665;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | then if ( countryhascompanyoffice(K, I) )
%   | | | then return 0.7627912615372237;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14754401738868297;  // std dev = 2.528, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( acquired(L, A), companyceo(L, M) )
%   | | | then return -0.09220787473224452;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.10760779050338573;  // std dev = 11.945, 694.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then if ( acquired(E, A) )
%   | | then return 0.6229966365527883;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5120428172496744;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then if ( bankchiefexecutiveceo(F, H) )
%   | | | then return 0.2756385120402;  // std dev = 1.195, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.05069401907255541;  // std dev = 2.594, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | else if ( companyalsoknownas(A, I), cityhascompanyoffice(J, I) )
%   | | | then return -0.03342507688423275;  // std dev = 2.023, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.09709826673264849;  // std dev = 11.809, 657.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=219 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.13418000623436963;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then if ( cityhascompanyoffice(E, D) )
%   | | | then return 0.3788735811260949;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4599164925127822;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, F), cityhascompanyoffice(G, A) )
%   | | | then return 0.07755448415987973;  // std dev = 1.809, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.036770680061927886;  // std dev = 2.691, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | then return 0.3413722596724922;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(K, A), acquired(L, K) )
%   | | | then return 0.19056558230337525;  // std dev = 1.712, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.06824748989967826;  // std dev = 11.696, 666.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=213 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then return -0.03933837215283029;  // std dev = 0.285, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   else if ( acquired(E, A), companyalsoknownas(E, F) )
%   | then if ( acquired(F, G), countryhascompanyoffice(H, G) )
%   | | then if ( countryhascompanyoffice(I, E) )
%   | | | then return -0.0028488492269750365;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.307971648157478;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( cityhascompanyoffice(J, E), companyceo(F, K) )
%   | | | then return -0.09483972199440256;  // std dev = 0.986, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.04641205849969613;  // std dev = 2.309, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else if ( acquired(A, L), cityhascompanyoffice(M, L) )
%   | | then if ( countryhascompanyoffice(N, A) )
%   | | | then return -0.2753737093549345;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03653556874530678;  // std dev = 1.926, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( bankboughtbank(P, A), countryhascompanyoffice(Q, P) )
%   | | | then return 0.32747714941979894;  // std dev = 1.549, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.0665189405771919;  // std dev = 11.587, 657.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=224 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.440, 793.000 (wgt'ed) examples reached here.  /* #neg=533 #pos=260 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.20506365420202896;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), acquired(E, F) )
%   | | then if ( economicsectorcompany(B, E) )
%   | | | then return 0.5704086641249124;  // std dev = 1.142, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.13623717457326565;  // std dev = 2.638, 135.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=11 */
%   | | else if ( cityhascompanyoffice(D, G), countryhascompanyoffice(H, G) )
%   | | | then return -0.06504266859978808;  // std dev = 0.496, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.23811398628010938;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(I, A) )
%   | | then if ( bankboughtbank(I, J) )
%   | | | then return 0.5579124071221095;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.014053538769448906;  // std dev = 3.398, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | else if ( acquired(A, K), acquired(K, L) )
%   | | | then return 0.16175774365108828;  // std dev = 1.735, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.047360766050531466;  // std dev = 10.787, 538.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=177 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.3670501611168571;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2442522067098687;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( cityhascompanyoffice(E, A), countryhascompanyoffice(F, A) )
%   | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.6325261179215887;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, H), companyceo(A, I) )
%   | | | then return -0.12437487879979842;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.2422867177163599;  // std dev = 0.501, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.028480028172465546;  // std dev = 0.439, 757.000 (wgt'ed) examples reached here.  /* #neg=511 #pos=246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.963', 'seconds']
Refined model CLL: -0.316837


******************************************
Best model found
******************************************
Results 

CLL : -0.316667 

AUC ROC : 0.70272 

AUC PR : 0.052362 

Precision : 0.035451 

Recall : 0.194981 

F1 : 0.059994 

Total Learning Time : 15.062 

Total Inference Time : 31.64292597770691 

Total revision time: 115.7390655670166
Best scored revision CLL: -0.316837


Results 

CLL : -0.316667 

AUC ROC : 0.70272 

AUC PR : 0.052362 

Precision : 0.035451 

Recall : 0.194981 

F1 : 0.059994 

Total Learning Time : 115.8337053451538 

Total Inference Time : 31.64292597770691 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.852
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17633075328132924;  // std dev = 0.466, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.1979547603422294;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | else return 0.17534426064207873;  // std dev = 0.465, 599.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.2002942738320067;  // std dev = 4.584, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.22556246847361622;  // std dev = 4.608, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | | else return 0.16935536915360308;  // std dev = 11.250, 569.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.20397474273640936;  // std dev = 2.810, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else return 0.13823134904942883;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12075509963299025;  // std dev = 3.700, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.10955496443066899;  // std dev = 0.458, 636.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.03333320573410424;  // std dev = 0.424, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else return 0.10268384392696422;  // std dev = 0.468, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11403628901736963;  // std dev = 12.342, 695.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.01375284755765371;  // std dev = 2.602, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else return 0.13005703085167422;  // std dev = 4.939, 104.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06645330001662247;  // std dev = 3.746, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09779729710386188;  // std dev = 0.468, 587.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1858689589592437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06134059158814161;  // std dev = 4.770, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.030393409940122938;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else return 0.09063150759411119;  // std dev = 12.070, 652.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04071396819434708;  // std dev = 2.546, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return 0.12836451876706803;  // std dev = 4.778, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05728603754561135;  // std dev = 11.972, 663.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.012108143222069701;  // std dev = 1.923, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.1218858897473111;  // std dev = 2.271, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return 0.026277112138811693;  // std dev = 0.455, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05299606755250504;  // std dev = 0.470, 682.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.05011020025286743;  // std dev = 0.474, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.07986747706910928;  // std dev = 1.265, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.04039116343585786;  // std dev = 3.515, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05636408751882489;  // std dev = 11.209, 561.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.022181948886285056;  // std dev = 1.953, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0684726836490194;  // std dev = 4.210, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.026350851756278253;  // std dev = 4.744, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.026528964468817796;  // std dev = 11.363, 593.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '53.802', 'seconds']
Parameter learned model CLL:-0.360927 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.978, 18, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.466, 60, 28], 'false,true': [4.807, 68, 35], 'false,false': [0.465, 409, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.584, 58, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.608, 54, 35], 'false,false,false,false': [11.25, 379, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.81, 20, 13], 'true,false,false': [4.807, 68, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.7, 44, 20], 'false,false,false': [0.458, 446, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.424, 16, 5], 'true,false': [0.468, 59, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.342, 470, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.602, 27, 9], 'true,false': [4.939, 65, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.746, 48, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 397, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [4.77, 75, 33], 'false,false,true': [1.978, 18, 5], 'false,false,false': [12.07, 432, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.546, 23, 9], 'true,false': [4.778, 55, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.972, 453, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.923, 15, 5], 'true,false,true': [2.271, 12, 9], 'true,false,false': [0.455, 46, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 457, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.474, 87, 48], 'false,true,true,true': [1.265, 9, 2], 'false,true,true,false': [3.515, 41, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.209, 371, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.953, 17, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.21, 49, 28], 'false,true': [4.744, 65, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.363, 403, 190]}]
{'': [0.20891161431702107, 0.21778435239973928], 'false': [0.22433782637383498, 0.21658245099651613], 'true': [0.1701323251417768, 0.21694214876033185], 'true,false': [nan, 0.21694214876033185]}
{'': [0.23092124883955475, 0.22497637786110763], 'false': [nan, 0.22497637786110686], 'false,false': [nan, 0.22497637786110763], 'false,false,false': [0.23860623658628882, 0.22241715339401122]}
{'': [0.22874287299981236, 0.20990471669759078], 'true': [nan, 0.2287428729998112], 'true,false': [0.23921853172634433, 0.2243378263738329], 'false': [nan, 0.20990471669759078], 'false,false': [0.2138595881986778, 0.20949527313001945], 'false,false,true': [nan, 0.2138595881986778]}
{'': [0.21202139384353452, 0.2191812405169062], 'false': [nan, 0.2191812405169062], 'false,false': [nan, 0.2191812405169062], 'true': [0.17989696788743656, 0.21884038292814365]}
{'': [0.2251466453089897, 0.2176942758019136], 'true': [0.18802951746941085, 0.23451659708412348], 'false': [0.2063092373960723, 0.21891116147999362], 'false,false': [nan, 0.21891116147999362], 'false,true': [nan, 0.20630923739607232]}
{'': [0.0, 0.22061366390098294], 'false': [0.2106440418103409, 0.22212144024599567], 'false,false': [0.17013232514177706, 0.22345632809002217], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.2340676962363903, 0.2161906659647494], 'true': [0.20251600990505816, 0.24285755450122498], 'false': [nan, 0.21619066596475386], 'false,false': [nan, 0.2161906659647494], 'false,false,false': [nan, 0.2161906659647494]}
{'': [0.21199503777458067, 0.22123955464475867], 'false': [nan, 0.22123955464475867], 'false,false': [nan, 0.22123955464475867], 'true': [0.1849691961738925, 0.21801457049792225], 'true,false': [0.24561960978834088, 0.20686390532544346]}
{'': [0.22441858368848175, 0.22157918447267627], 'false': [0.20128809133872894, 0.22397615665939397], 'false,false': [nan, 0.22397615665939397], 'false,true': [0.20128809133872894, nan], 'false,true,true': [0.14554420274479085, 0.20940839762383343]}
{'': [0.21901825249978574, 0.2188008238603432], 'true': [0.17342223722829375, 0.2302194049011396], 'true,false': [nan, 0.2302194049011396], 'true,false,false': [nan, 0.2302194049011396], 'false': [0.2250586535380668, 0.21774553603166394], 'false,false': [nan, 0.21774553603166394], 'true,true': [nan, 0.17342223722829378]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 14.637
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(A, D), companyceo(D, E) )
%   | then if ( bankboughtbank(F, D) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( companyceo(A, G) )
%   | | | then return -0.003920030417729115;  // std dev = 1.857, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( acquired(H, A), bankchiefexecutiveceo(H, I) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, J), companyceo(A, K) )
%   | | | then return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.185156234369581;  // std dev = 12.278, 685.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=224 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( bankchiefexecutiveceo(E, C), economicsectorcompany(B, E) )
%   | | then return 0.8271049939249864;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, F), companyceo(F, G) )
%   | | | then return -0.005010915433217011;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.21781024880644764;  // std dev = 4.419, 81.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.8348204110586959;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, I), acquired(I, J) )
%   | | then if ( acquired(J, A) )
%   | | | then return 0.04848808775262453;  // std dev = 1.177, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.1497834361520385;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( acquired(K, A), companyceo(K, L) )
%   | | | then return 0.006496587064200072;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.17883909617041213;  // std dev = 11.222, 559.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D), cityhascompanyoffice(E, A) )
%   | then return 0.7744525753373231;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(F, C) )
%   | | then return 0.642245577156323;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6998636499440728;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then if ( companyceo(A, H) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.688901401765543;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(I, A) )
%   | | then if ( bankchiefexecutiveceo(A, J) )
%   | | | then return 0.30783518903113816;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.017845476939877106;  // std dev = 3.497, 88.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=15 */
%   | | else if ( companyalsoknownas(A, K), acquired(K, L) )
%   | | | then return 0.2505547084199696;  // std dev = 2.680, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.13931996129503368;  // std dev = 11.552, 606.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=201 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.415184114260972;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5266238907116229;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, E), companyceo(A, F) )
%   | then if ( countryhascompanyoffice(G, A), bankchiefexecutiveceo(A, H) )
%   | | then return 0.27306218282737654;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyalsoknownas(A, I), companyceo(I, J) )
%   | | | then return 0.0326029876440661;  // std dev = 2.578, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.058898063599738995;  // std dev = 2.091, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then if ( bankboughtbank(A, L) )
%   | | | then return -0.2517692685539294;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1744960459086946;  // std dev = 4.885, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | else if ( companyceo(A, M) )
%   | | | then return 0.20737723407887645;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.11316181871970281;  // std dev = 10.554, 518.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=170 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), countryhascompanyoffice(D, A) )
%   then if ( acquired(E, A), bankboughtbank(A, F) )
%   | then return -0.24269197104831308;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( bankchiefexecutiveceo(G, C), economicsectorcompany(B, G) )
%   | | then return 0.46939671416520046;  // std dev = 0.316, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.07640487169296273;  // std dev = 1.954, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.08990315567448946;  // std dev = 1.583, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else if ( companyalsoknownas(A, I) )
%   | then if ( economicsectorcompany(B, I) )
%   | | then return 0.6336401535505986;  // std dev = 0.198, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.010814870361171335;  // std dev = 0.392, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | else if ( acquired(J, A), companyceo(J, K) )
%   | | then return 0.017776197328395908;  // std dev = 0.365, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.1497951514208634;  // std dev = 4.623, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
%   | | | else return 0.10141993256298121;  // std dev = 10.364, 490.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=166 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, D), acquired(E, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.6166606790870017;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(F, E), companyceo(A, G) )
%   | | | then return 0.22593683833173922;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.24148576269948305;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( acquired(H, A), acquired(I, H) )
%   | | then if ( acquired(J, I), economicsectorcompany(B, J) )
%   | | | then return 0.5339199231818017;  // std dev = 0.296, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17301922673012396;  // std dev = 0.680, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.49774068889550493;  // std dev = 0.562, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07290714559373564;  // std dev = 12.352, 730.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=243 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5294753690923497;  // std dev = 0.223, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyceo(A, E), companyceo(C, F) )
%   | | then if ( companyalsoknownas(C, G), economicsectorcompany(B, G) )
%   | | | then return 0.6197829088194413;  // std dev = 0.649, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.23096198649333893;  // std dev = 0.136, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.056305918509022;  // std dev = 1.177, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.22441565713092088;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | then return 0.4672915208834128;  // std dev = 0.106, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( acquired(A, J), acquired(J, K) )
%   | | then return -0.1363827210150518;  // std dev = 0.229, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.07280662572993539;  // std dev = 4.886, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
%   | | | else return 0.06257888509205059;  // std dev = 10.875, 553.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=182 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), cityhascompanyoffice(D, A) )
%   then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0.5433747676301822;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7262227497502738;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.24915754724830447;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then if ( companyceo(A, H) )
%   | | then return 0.19947478922535303;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.329855567914248;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | then if ( companyceo(I, K), cityhascompanyoffice(L, A) )
%   | | | then return 0.08395825885302925;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16308317695241378;  // std dev = 1.133, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( acquired(A, M), countryhascompanyoffice(N, M) )
%   | | | then return -0.10294917118363656;  // std dev = 1.294, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.02910719126769518;  // std dev = 12.186, 740.000 (wgt'ed) examples reached here.  /* #neg=509 #pos=231 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(A, F) )
%   | then if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | then return 0.4940232615848339;  // std dev = 0.172, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2372372545342487;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.027720351408041778;  // std dev = 0.370, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   else if ( cityhascompanyoffice(H, A), acquired(A, I) )
%   | then if ( companyceo(A, J), companyceo(I, K) )
%   | | then return -0.009010635362096892;  // std dev = 0.269, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( companyceo(I, L) )
%   | | | then return 0.5418742118878345;  // std dev = 0.385, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07308528398656561;  // std dev = 2.429, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | else if ( acquired(M, A) )
%   | | then return -0.02875088463983339;  // std dev = 0.361, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | else if ( companyceo(A, N) )
%   | | | then return 0.07136018435688392;  // std dev = 2.985, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.04206834151306494;  // std dev = 10.594, 512.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=171 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E), companyceo(E, F) )
%   | then return -0.11661443231629483;  // std dev = 0.400, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6394564636497401;  // std dev = 0.306, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.6075904492787572;  // std dev = 0.386, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( economicsectorcompany(B, G) )
%   | | | then return 0.2843866358632851;  // std dev = 0.346, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.029299969279033278;  // std dev = 1.851, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then if ( cityhascompanyoffice(J, I) )
%   | | | then return 0.36547354488208117;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22712888526961472;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankchiefexecutiveceo(A, K), companyceo(L, K) )
%   | | | then return 0.2858945370198661;  // std dev = 1.091, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.022074371669057038;  // std dev = 11.771, 699.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=224 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.880', 'seconds']
Refined model CLL: -0.334973


******************************************
Best model found
******************************************
Results 

CLL : -0.334946 

AUC ROC : 0.616794 

AUC PR : 0.063642 

Precision : 0.326633 

Recall : 0.125 

F1 : 0.180807 

Total Learning Time : 14.637 

Total Inference Time : 32.19694781303406 

Total revision time: 114.7692791595459
Best scored revision CLL: -0.334973


Results 

CLL : -0.334946 

AUC ROC : 0.616794 

AUC PR : 0.063642 

Precision : 0.326633 

Recall : 0.125 

F1 : 0.180807 

Total Learning Time : 114.86391893768311 

Total Inference Time : 32.19694781303406 

Starting experiment 25_yeast_nell_finances 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.718
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13401100406502886;  // std dev = 0.447, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20508771060971503;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | else return 0.19913833439279405;  // std dev = 0.474, 566.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.12794008203490423;  // std dev = 4.830, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.2563061057513661;  // std dev = 4.422, 80.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=34 */
%   | | | else return 0.1862672207023647;  // std dev = 11.165, 545.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7998471871474653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.1659344529673693;  // std dev = 2.282, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.10418724090855659;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07353544153604442;  // std dev = 4.224, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | | else return 0.13667548337994515;  // std dev = 0.471, 581.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1265436300114831;  // std dev = 0.468, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.08475065656091232;  // std dev = 0.447, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12390739862696173;  // std dev = 12.213, 662.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07841368495656986;  // std dev = 3.137, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else return 0.08752228631281384;  // std dev = 4.340, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11189998295913153;  // std dev = 4.034, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11307652033115616;  // std dev = 0.478, 547.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07266452213743109;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.08900316353749803;  // std dev = 4.665, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.13732240739490062;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.06592625683811174;  // std dev = 12.027, 657.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1542664207803517;  // std dev = 2.852, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else return -0.0394225511403017;  // std dev = 4.645, 120.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0625027576063197;  // std dev = 12.022, 654.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.01380471885190736;  // std dev = 2.483, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.004677535080619759;  // std dev = 2.148, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else return 0.04839430308086058;  // std dev = 0.456, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06348101487161156;  // std dev = 0.477, 649.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.09037012435642552;  // std dev = 0.485, 112.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.13578037948105462;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.07227454573775498;  // std dev = 3.456, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.029714112602287956;  // std dev = 11.377, 586.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.5485362562322198;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.009410433854695558;  // std dev = 2.362, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02989118001307871;  // std dev = 4.108, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.038493248031335046;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04436227617142325;  // std dev = 11.198, 551.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.804', 'seconds']
Parameter learned model CLL:-0.375881 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.268, 12, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.447, 63, 24], 'false,true': [4.712, 64, 34], 'false,false': [0.474, 373, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.83, 80, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.422, 46, 34], 'false,false,false,false': [11.165, 352, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.282, 15, 8], 'true,false,false': [4.837, 75, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.224, 70, 24], 'false,false,false': [0.471, 388, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.468, 17, 9], 'true,false': [0.447, 63, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.213, 435, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.137, 31, 15], 'true,false': [4.34, 57, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.034, 51, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.478, 354, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.816, 2, 1], 'false,true': [4.665, 68, 32], 'false,false,true': [2.683, 18, 12], 'false,false,false': [12.027, 442, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.852, 19, 15], 'true,false': [4.645, 92, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.022, 437, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.483, 19, 9], 'true,false,true': [2.148, 19, 6], 'true,false,false': [0.456, 43, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 422, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.485, 69, 43], 'false,true,true,true': [1.891, 9, 6], 'false,true,true,false': [3.456, 36, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.377, 393, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.362, 18, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.108, 56, 24], 'false,true': [4.654, 62, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.198, 358, 193]}]
{'': [0.21219135802469272, 0.22499410291769728], 'false': [0.22657226155768576, 0.2247156288628929], 'true': [0.2448979591836735, 0.19976218787158245], 'true,false': [nan, 0.19976218787158245]}
{'': [0.20641055069987319, 0.23127266381055261], 'false': [nan, 0.23127266381055198], 'false,false': [nan, 0.23127266381055261], 'false,false,false': [0.24437499999999943, 0.22872148809022394]}
{'': [0.21909637749754585, 0.21785169405842203], 'true': [0.0, 0.21722921110922194], 'false': [nan, 0.21785169405842203], 'false,false': [0.1897788296376352, 0.22183842327757405], 'true,false': [0.226406421393842, 0.2146283982829726], 'false,false,true': [nan, 0.1897788296376352], 'true,true': [0.0, nan]}
{'': [0.2043174582934076, 0.2253021462127594], 'false': [nan, 0.2253021462127594], 'false,false': [nan, 0.2253021462127594], 'true': [0.21862924554559798, 0.19963848777203239]}
{'': [0.21891524632169249, 0.22697551414756903], 'false': [0.21700760851944603, 0.22834206190321885], 'false,false': [nan, 0.22834206190321885], 'true': [0.21386819913136512, 0.22161745619056775], 'false,true': [nan, 0.2170076085194459]}
{'': [0.2222222222222223, 0.22081833783430174], 'true': [nan, 0.2222222222222223], 'true,false': [nan, 0.2222222222222223], 'false': [0.21762774987293498, 0.221232142503133], 'false,false': [0.23999999999999977, 0.22015256837188502]}
{'': [0.19934630035802506, 0.22098468499946514], 'false': [nan, 0.22098468499946494], 'false,false': [nan, 0.22098468499946514], 'false,false,false': [nan, 0.22098468499946514], 'true': [0.23915794714854974, 0.17978370904864208]}
{'': [0.2063615044507867, 0.22717147132208007], 'false': [nan, 0.22717147132208007], 'false,false': [nan, 0.22717147132208007], 'true': [0.22017365184581825, 0.20177434371172448], 'true,false': [0.18456492364135413, 0.2080085998387532]}
{'': [0.23548278129587122, 0.22168022339062476], 'false': [0.22564151140339092, 0.22087910167852953], 'false,true': [0.22564151140339092, nan], 'false,true,true': [0.2385095993519177, 0.22119030537240203], 'false,false': [nan, 0.22087910167852953]}
{'': [0.21276160649796375, 0.2272990440137456], 'false': [0.22564798117893206, 0.2275815955810445], 'false,false': [nan, 0.2275815955810445], 'true': [0.21774621084790347, 0.21099165728776473], 'true,true': [0.0, 0.21459126848243473], 'true,false': [nan, 0.21099165728776473], 'true,false,false': [nan, 0.21099165728776473]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 32.824
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( companyceo(A, D) )
%   | then if ( cityhascompanyoffice(E, A), acquired(F, A) )
%   | | then if ( bankboughtbank(F, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07518439823382113;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( acquired(A, G), countryhascompanyoffice(H, A) )
%   | | | then return 0.0010060779566550774;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.16496711691769417;  // std dev = 4.326, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | else if ( acquired(A, I), cityhascompanyoffice(J, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( acquired(K, A), cityhascompanyoffice(L, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.19864480286810318;  // std dev = 11.656, 605.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=206 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( bankboughtbank(D, A), bankchiefexecutiveceo(D, E) )
%   | then return -0.16779229259070652;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.8188202577267347;  // std dev = 0.157, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( countryhascompanyoffice(F, A), countryhascompanyoffice(F, C) )
%   | | | then return 0.2769847464611562;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.006638208942644239;  // std dev = 3.747, 111.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
%   else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | then return 0.8185584705606591;  // std dev = 0.219, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.15992305313721125;  // std dev = 0.070, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return 4.2444738255667064E-4;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( companyceo(A, K), acquired(A, L) )
%   | | | then return 0.21545359322046104;  // std dev = 2.995, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return 0.1645262508981216;  // std dev = 11.081, 556.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=185 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.8331326108366558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6566017220678759;  // std dev = 0.246, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.6250900766985632;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08138000002639995;  // std dev = 4.513, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.7901018800382774;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.757096385008134;  // std dev = 1.002, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.1827235018085819;  // std dev = 0.145, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.6898136615910646;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11948450213459538;  // std dev = 10.756, 549.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=170 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( countryhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.6096480922036269;  // std dev = 0.108, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.15672706338891057;  // std dev = 0.124, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( cityhascompanyoffice(E, A), acquired(A, F) )
%   | then if ( companyalsoknownas(A, G), cityhascompanyoffice(E, G) )
%   | | then return 0.2921936593439392;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( companyceo(F, H) )
%   | | | then return -0.09804410524168498;  // std dev = 1.238, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.05381547796660309;  // std dev = 2.495, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6586887894100105;  // std dev = 0.143, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.15862925448856288;  // std dev = 0.103, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( acquired(A, K), companyalsoknownas(K, L) )
%   | | | then return -0.01001158841136102;  // std dev = 1.187, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.10916148926878157;  // std dev = 10.934, 564.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=182 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( bankchiefexecutiveceo(A, E) )
%   | then return 0.09403620804791157;  // std dev = 0.514, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.17488893226684743;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( bankboughtbank(F, A), bankchiefexecutiveceo(A, G) )
%   | then return 0.3855568781642437;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | then if ( acquired(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7051261764983962;  // std dev = 0.246, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.021950653069988054;  // std dev = 2.393, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( acquired(K, A), acquired(L, K) )
%   | | | then return 0.31202269301474544;  // std dev = 1.296, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.10246934534781536;  // std dev = 11.437, 688.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=237 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return 0.2809719003348411;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(E, A) )
%   | | then return 0.45867437358542035;  // std dev = 0.281, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6227722593609079;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, F) )
%   | then if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.47572402158207927;  // std dev = 0.235, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(H, A), cityhascompanyoffice(H, F) )
%   | | | then return -0.18862268946703878;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.027960625037171803;  // std dev = 4.039, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then return 0.5094004994302695;  // std dev = 0.226, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.03848341794330073;  // std dev = 2.960, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.09780455551718736;  // std dev = 10.426, 506.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=177 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(D, A) )
%   then if ( cityhascompanyoffice(E, D), companyalsoknownas(D, F) )
%   | then return 0.1397774049883831;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.06016390973468891;  // std dev = 0.188, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.5604853379446131;  // std dev = 0.366, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return -0.18206944781267337;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1390096799591265;  // std dev = 1.812, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( acquired(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.6991766413646507;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2327755863799721;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( acquired(A, M) )
%   | | | then return 0.04082727678104548;  // std dev = 4.154, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
%   | | | else return 0.06481144996819722;  // std dev = 10.581, 589.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=201 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return 0.2215643358437937;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(E, A) )
%   | | then return 0.34400554069805955;  // std dev = 0.251, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4596901978492678;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( cityhascompanyoffice(F, A), acquired(G, A) )
%   | then if ( countryhascompanyoffice(H, A) )
%   | | then return 0.20117627459385104;  // std dev = 0.507, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(F, G), companyceo(G, I) )
%   | | | then return -0.05942118521882874;  // std dev = 0.764, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.14074524719496065;  // std dev = 0.057, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.34665047815675754;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(K, A), companyalsoknownas(K, L) )
%   | | | then return -0.042380959314243266;  // std dev = 2.204, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.053365876380510324;  // std dev = 11.286, 674.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=228 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.4069602374154638;  // std dev = 0.212, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(E, A) )
%   | | then return 0.30518277992438475;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.2693359946420321;  // std dev = 0.164, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( bankboughtbank(A, F) )
%   | then if ( countryhascompanyoffice(G, F) )
%   | | then return 0.011609115838565253;  // std dev = 0.528, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4740792007480765;  // std dev = 0.346, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | then if ( acquired(H, J), companyalsoknownas(J, K) )
%   | | | then return 0.39054805317867763;  // std dev = 0.566, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05003343998132972;  // std dev = 1.942, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.025612229830941965;  // std dev = 3.607, 132.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
%   | | | else return 0.02989177332792128;  // std dev = 10.819, 589.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.050237679145259895;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.03062154091452948;  // std dev = 0.341, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.048388973607454325;  // std dev = 0.243, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( bankboughtbank(G, A) )
%   | | | then return 0.0204338357984341;  // std dev = 0.641, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0861045195136101;  // std dev = 2.685, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.2702943941819293;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( bankboughtbank(I, A) )
%   | | then return -0.1365759810905714;  // std dev = 0.220, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.05766411499948386;  // std dev = 3.790, 122.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=47 */
%   | | | else return 0.026392224651817026;  // std dev = 10.330, 515.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=168 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.972', 'seconds']
Refined model CLL: -0.313466


******************************************
Best model found
******************************************
Results 

CLL : -0.313584 

AUC ROC : 0.732572 

AUC PR : 0.079224 

Precision : 0.100395 

Recall : 0.245174 

F1 : 0.142457 

Total Learning Time : 32.824 

Total Inference Time : 45.67013096809387 

Total revision time: 148.86377257537842
Best scored revision CLL: -0.313466


Results 

CLL : -0.313584 

AUC ROC : 0.732572 

AUC PR : 0.079224 

Precision : 0.100395 

Recall : 0.245174 

F1 : 0.142457 

Total Learning Time : 148.95590681266785 

Total Inference Time : 45.67013096809387 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.272
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2158725123352846;  // std dev = 0.479, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1985744670144046;  // std dev = 4.594, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   | else return 0.189084186898069;  // std dev = 0.471, 556.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.20909862167568052;  // std dev = 5.226, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.18386588038884516;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | | | else return 0.14434930701833376;  // std dev = 11.261, 592.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.21924405914615833;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.1605111173934137;  // std dev = 4.541, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18949577539329798;  // std dev = 4.681, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
%   | | else return 0.13877608558284835;  // std dev = 0.469, 564.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.21405986813319428;  // std dev = 0.498, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.16743686005095323;  // std dev = 0.490, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12069253218985201;  // std dev = 12.011, 651.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07911617702754076;  // std dev = 2.831, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.06899034607280302;  // std dev = 4.383, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15128306710864248;  // std dev = 4.578, 86.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1013165825921685;  // std dev = 0.471, 555.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.11535510755613165;  // std dev = 5.088, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.12311510017613957;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.06290336351626036;  // std dev = 11.959, 666.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04924179173336892;  // std dev = 2.812, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else return 0.056101362972283485;  // std dev = 4.342, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06650017096634543;  // std dev = 12.071, 656.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.02733533302596556;  // std dev = 2.482, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.1130048602556984;  // std dev = 1.989, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else return 0.017785522591100836;  // std dev = 0.478, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05809228229978974;  // std dev = 0.471, 649.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.007259630526970686;  // std dev = 0.459, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.07255518670239522;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.03743623851750141;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03469263349200424;  // std dev = 11.186, 575.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0677923347518432;  // std dev = 2.300, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03787413239971767;  // std dev = 4.651, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.08538747863308986;  // std dev = 4.449, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041504489390430985;  // std dev = 11.070, 551.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '3.201', 'seconds']
Parameter learned model CLL:-0.371396 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.479, 79, 44], 'false,true': [4.594, 62, 32], 'false,false': [0.471, 372, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.226, 72, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.555, 59, 32], 'false,false,false,false': [11.261, 408, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.152, 11, 8], 'true,false,false': [4.541, 58, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.681, 56, 36], 'false,false,false': [0.469, 380, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.498, 11, 9], 'true,false': [0.49, 52, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.011, 435, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.831, 24, 12], 'true,false': [4.383, 60, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.578, 50, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 371, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.088, 63, 44], 'false,false,true': [2.225, 13, 8], 'false,false,false': [11.959, 458, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.812, 23, 12], 'true,false': [4.342, 56, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.071, 436, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.482, 20, 9], 'true,false,true': [1.989, 19, 5], 'true,false,false': [0.478, 55, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 433, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.459, 92, 40], 'false,true,true,true': [2.029, 10, 7], 'false,true,true,false': [4.252, 48, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.186, 391, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.3, 13, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.651, 58, 35], 'false,true': [4.449, 52, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.07, 367, 184]}]
{'': [0.22975741952541576, 0.22187928994083086], 'true': [nan, 0.22975741952541576], 'false': [0.22453598913535677, 0.22141711091558702]}
{'': [0.23543400713436446, 0.21622435201550577], 'false': [nan, 0.2162243520155056], 'false,false': [nan, 0.21622435201550577], 'false,false,false': [0.22799178843134907, 0.21420745069393152]}
{'': [0.23218273482279472, 0.22269535385075523], 'true': [nan, 0.23218273482279478], 'true,false': [0.24376731301939078, 0.22913580246913495], 'false': [nan, 0.22269535385075523], 'false,false': [0.23818525519848735, 0.2198078567476515], 'false,false,true': [nan, 0.23818525519848735]}
{'': [0.24214414246384425, 0.2215969191232095], 'true': [0.2475872021629082, 0.24048656439404248], 'false': [nan, 0.2215969191232095], 'false,false': [nan, 0.2215969191232095]}
{'': [0.2195577653242383, 0.22487323573747306], 'false': [0.24371675513902788, 0.221618375131892], 'false,true': [nan, 0.24371675513902796], 'false,false': [nan, 0.221618375131892], 'true': [0.22265381941061138, 0.2182614302572328]}
{'': [nan, 0.21933970649046175], 'false': [0.2419216831435353, 0.21547738302021752], 'false,false': [0.23582766439909295, 0.21472488576673465]}
{'': [0.22490484486742682, 0.22212384989635398], 'true': [0.2258655055370571, 0.22449073025971383], 'false': [nan, 0.22212384989635472], 'false,false': [nan, 0.22212384989635398], 'false,false,false': [nan, 0.22212384989635398]}
{'': [0.21633590503255068, 0.22193324219890498], 'false': [nan, 0.22193324219890498], 'false,false': [nan, 0.22193324219890498], 'true': [0.21242270106227396, 0.21732104179490133], 'true,false': [0.164836563900541, 0.2283737024221449]}
{'': [0.21055666984070665, 0.22023885554544287], 'false': [0.23630969623915177, 0.2175999999999965], 'false,true': [0.23630969623915177, nan], 'false,true,true': [0.2422005707790482, 0.23478606260312773], 'false,false': [nan, 0.2175999999999965]}
{'': [0.2342847815288314, 0.22438986459837726], 'true': [0.24052571117058388, 0.23263719628302798], 'true,true': [nan, 0.24052571117058397], 'true,false': [nan, 0.23263719628302798], 'true,false,false': [nan, 0.23263719628302798], 'false': [0.2356172394280843, 0.22242350980398856], 'false,false': [nan, 0.22242350980398856]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
0;false;acquired(D, E), acquired(A, E).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,false;acquired(E, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(F, A).;true;true
2;false,false,true;acquired(A, G).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 20.017
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, D), companyceo(D, E) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.2537533307039066;  // std dev = 4.665, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   else if ( acquired(G, H), acquired(A, H) )
%   | then if ( companyalsoknownas(A, I) )
%   | | then return -0.006715929765352576;  // std dev = 0.342, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.23519811542738034;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return 0.1352573688344515;  // std dev = 0.448, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | else return 0.208148935099508;  // std dev = 0.477, 460.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=161 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.5801355230483387;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then if ( bankboughtbank(F, A), bankchiefexecutiveceo(F, G) )
%   | | | then return 0.49103763968284725;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.037684053624759614;  // std dev = 1.310, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.1254370924195387;  // std dev = 2.199, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.30824194075811534;  // std dev = 3.935, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   else if ( acquired(A, I), acquired(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A), acquired(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0.1392068092720592;  // std dev = 4.646, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | | | else return 0.17060022968289693;  // std dev = 11.031, 544.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.15781677256316254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(E, A) )
%   | | then return 0.062448356182675066;  // std dev = 0.426, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return -0.03970894132122685;  // std dev = 2.099, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return 0.28302577117641575;  // std dev = 3.700, 56.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=27 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16091204568181286;  // std dev = 4.683, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | | else if ( companyceo(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.21669921046965;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.14575801469406036;  // std dev = 10.907, 531.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=180 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.04334805084046997;  // std dev = 0.416, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.43780291393142656;  // std dev = 0.849, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24045761767336157;  // std dev = 1.565, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | then return 0.7508817190721706;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10174592109072175;  // std dev = 0.466, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   else if ( acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.06532411055496473;  // std dev = 4.877, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | | else return 0.12856075986154364;  // std dev = 10.887, 525.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=183 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | then return -0.1622075170377126;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.1793624019258992;  // std dev = 0.486, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0.06377355676444031;  // std dev = 0.447, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(G, A) )
%   | then if ( acquired(H, G), acquired(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.14378564551615028;  // std dev = 2.229, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.07789465738127883;  // std dev = 4.131, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K), companyceo(K, L) )
%   | | | then return 0.39749738592889866;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.06867924403672535;  // std dev = 11.077, 577.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=177 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.12441830474315087;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7067429625843346;  // std dev = 0.126, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5536644259931168;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.054957254086515396;  // std dev = 4.520, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
%   | else if ( acquired(A, G), acquired(G, H) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.0643707883416683;  // std dev = 1.234, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.287752223070052;  // std dev = 1.527, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( acquired(A, J) )
%   | | | then return 0.19467928758826744;  // std dev = 3.536, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.08445185564795538;  // std dev = 11.033, 546.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=184 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | then return -0.12482531601550902;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.3174745878933326;  // std dev = 1.453, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06597645079307966;  // std dev = 1.817, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | | then return 0.11681278506236706;  // std dev = 0.471, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return -0.013546834887697328;  // std dev = 0.422, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   else if ( acquired(J, A), acquired(J, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053511826883582934;  // std dev = 12.004, 669.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.23587376718623515;  // std dev = 0.442, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.024778373597319683;  // std dev = 0.432, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( acquired(A, F) )
%   | | then return 0.05199238087795375;  // std dev = 0.416, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.20573234208017535;  // std dev = 1.623, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.021087260303958143;  // std dev = 3.626, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), companyalsoknownas(A, J) )
%   | | | then return -0.08951917451371463;  // std dev = 2.096, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | | else return 0.049979879329578494;  // std dev = 11.794, 627.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=211 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then if ( countryhascompanyoffice(F, A), cityhascompanyoffice(G, D) )
%   | | then return -0.3939024661766622;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.17142890379594927;  // std dev = 0.469, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else return 0.016934844925912983;  // std dev = 0.425, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   else if ( acquired(H, A) )
%   | then if ( acquired(H, I) )
%   | | then if ( acquired(I, J) )
%   | | | then return 0.08432140188509388;  // std dev = 1.906, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.07053063371635954;  // std dev = 3.861, 69.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, L) )
%   | | | then return -0.15443897011893667;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.042757934125818006;  // std dev = 11.043, 550.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=183 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.008409773023320409;  // std dev = 0.453, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0.010234426772910957;  // std dev = 0.435, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   else if ( acquired(A, F) )
%   | then if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.5755741960164188;  // std dev = 0.266, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( bankboughtbank(H, A) )
%   | | | then return -0.24214855285080325;  // std dev = 0.947, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.01742897455029735;  // std dev = 4.042, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | else if ( acquired(I, A), acquired(I, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return -0.0688996836590536;  // std dev = 1.234, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.032755686018907375;  // std dev = 11.022, 550.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=182 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '4.285', 'seconds']
Refined model CLL: -0.363389


******************************************
Best model found
******************************************
Results 

CLL : -0.363441 

AUC ROC : 0.500228 

AUC PR : 0.027277 

Precision : 0.517241 

Recall : 0.028958 

F1 : 0.054845 

Total Learning Time : 20.017 

Total Inference Time : 175.037034034729 

Total revision time: 262.6164178504944
Best scored revision CLL: -0.363389


Results 

CLL : -0.363441 

AUC ROC : 0.500228 

AUC PR : 0.027277 

Precision : 0.517241 

Recall : 0.028958 

F1 : 0.054845 

Total Learning Time : 262.7085520877838 

Total Inference Time : 175.037034034729 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.397
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15922420391671543;  // std dev = 0.459, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.2116842886348645;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | else return 0.1891593880611803;  // std dev = 0.471, 574.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.14170038713299604;  // std dev = 4.797, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1701848287270572;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.16686139496196659;  // std dev = 11.255, 570.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.17335190262720745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.13765511808097433;  // std dev = 2.978, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.14485105577697308;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10822611489302733;  // std dev = 3.766, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else return 0.14835581404781004;  // std dev = 0.473, 560.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.046945261777043445;  // std dev = 0.425, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else return 0.19937426256378096;  // std dev = 0.490, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10548844747161494;  // std dev = 12.360, 701.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06343867112484437;  // std dev = 2.534, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else return 0.12207296587256719;  // std dev = 4.999, 109.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.059488047237810426;  // std dev = 3.765, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11411437736678358;  // std dev = 0.476, 547.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1645132452814946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06682416494994702;  // std dev = 4.767, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.048925216703813945;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return 0.09405531004263998;  // std dev = 11.968, 630.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09647193979245153;  // std dev = 2.450, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0.059136703143316253;  // std dev = 5.093, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04478119897262754;  // std dev = 11.984, 667.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10494707189964621;  // std dev = 1.801, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.14259815111806315;  // std dev = 2.269, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return 0.002652561618080974;  // std dev = 0.443, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0450760227114342;  // std dev = 0.469, 689.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.05128305684205478;  // std dev = 0.472, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.14720403272415658;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.052578909921278366;  // std dev = 3.504, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0444220094572875;  // std dev = 11.240, 567.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.1769959040539514;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.006360798963718628;  // std dev = 1.909, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05969245399569858;  // std dev = 4.250, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.027375083886730676;  // std dev = 4.821, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.012581510739949129;  // std dev = 11.429, 608.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.199', 'seconds']
Parameter learned model CLL:-0.359363 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.952, 16, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.459, 65, 28], 'false,true': [4.757, 64, 35], 'false,false': [0.471, 384, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.797, 76, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.807, 68, 35], 'false,false,false,false': [11.255, 380, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.978, 28, 13], 'true,false,false': [4.807, 68, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.766, 49, 20], 'false,false,false': [0.473, 370, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.425, 16, 5], 'true,false': [0.49, 42, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.36, 476, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.534, 22, 9], 'true,false': [4.999, 70, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.765, 49, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 357, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [4.767, 74, 33], 'false,false,true': [2.0, 20, 5], 'false,false,false': [11.968, 410, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.45, 18, 9], 'true,false': [5.093, 77, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.984, 457, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.801, 10, 5], 'true,false,true': [2.269, 12, 9], 'true,false,false': [0.443, 52, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 464, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.472, 92, 48], 'false,true,true,true': [1.323, 16, 2], 'false,true,true,false': [3.504, 39, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.24, 377, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [1.909, 15, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.25, 54, 28], 'false,true': [4.821, 71, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.429, 418, 190]}]
{'': [0.20567867036011217, 0.22255143742176164], 'false': [0.2285481073359876, 0.22144253299178374], 'true': [0.1814058956916098, 0.2104289513238537], 'true,false': [nan, 0.2104289513238537]}
{'': [0.21108001404940835, 0.22254743882036804], 'false': [nan, 0.22254743882036956], 'false,false': [nan, 0.22254743882036804], 'false,false,false': [0.22433782637383307, 0.22222222222222426]}
{'': [0.22122980451303906, 0.22228794468459687], 'false': [nan, 0.22228794468459687], 'false,false': [0.20557210343580137, 0.224170918367351], 'true': [0.0, 0.22207678863819738], 'true,false': [0.21635958249811138, 0.22433782637383376], 'false,false,true': [nan, 0.20557210343580137], 'true,true': [0.0, nan]}
{'': [0.23029333299025193, 0.21794303326045805], 'true': [0.1805009167719733, 0.23986922702169455], 'false': [nan, 0.21794303326045805], 'false,false': [nan, 0.21794303326045805]}
{'': [0.2249453535986968, 0.22461509895025225], 'true': [0.20714801513812522, 0.22924571485294948], 'false': [0.20545520970879758, 0.2266977263384457], 'false,false': [nan, 0.2266977263384457], 'false,true': [nan, 0.20545520970879755]}
{'': [0.0, 0.22372523916878445], 'false': [0.21234821413025265, 0.22551720276886927], 'false,false': [0.15999999999999992, 0.22733680814057855], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.22356505230702994, 0.21532905054108392], 'true': [0.2223640576418798, 0.2235814064961413], 'false': [nan, 0.21532905054108448], 'false,false': [nan, 0.21532905054108392], 'false,false,false': [nan, 0.21532905054108392]}
{'': [0.2120323208283889, 0.2195084288573043], 'false': [nan, 0.2195084288573043], 'false,false': [nan, 0.2195084288573043], 'true': [0.2161939346680622, 0.21065998655910792], 'true,false': [0.2451345160481638, 0.1959928585598094]}
{'': [0.22256539417799623, 0.2196469053452438], 'false': [0.19435822452308296, 0.22280700117266808], 'false,false': [nan, 0.22280700117266808], 'false,true': [0.19435822452308296, nan], 'false,true,true': [0.0972778502520885, 0.21543601101788998]}
{'': [0.2103181334569371, 0.21553027363996127], 'false': [0.21928171011350284, 0.21484374999999756], 'false,false': [nan, 0.21484374999999756], 'true': [0.16803654412070287, 0.2202546225381831], 'true,false': [nan, 0.2202546225381831], 'true,false,false': [nan, 0.2202546225381831], 'true,true': [0.0, 0.18219325861557736]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 14.313
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.030739953789376617;  // std dev = 0.314, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   else if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | then if ( companyceo(A, G) )
%   | | then if ( companyalsoknownas(E, H) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.05851773156715445;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( acquired(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.17140194714770407;  // std dev = 4.226, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.19737154994049722;  // std dev = 11.264, 566.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=192 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankboughtbank(C, D) )
%   then if ( acquired(C, D) )
%   | then return -0.15779309790221793;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.13047613443649764;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(A, E), companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.731687656213431;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( economicsectorcompany(B, F) )
%   | | | then return 0.8474315953895207;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16333637278766372;  // std dev = 2.802, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( acquired(A, G), acquired(G, H) )
%   | | then if ( companyalsoknownas(H, I) )
%   | | | then return 0.5123596917088881;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09824995767121583;  // std dev = 0.847, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.21421555868675018;  // std dev = 5.078, 110.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=42 */
%   | | | else return 0.16244650030661206;  // std dev = 11.201, 572.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=189 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7532332171458055;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5504735773182676;  // std dev = 0.736, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.061558859273237995;  // std dev = 4.660, 120.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=30 */
%   else if ( acquired(G, A) )
%   | then return 0.07335056491203604;  // std dev = 0.424, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.8041974228889724;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.01907088637854427;  // std dev = 2.502, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.25066502681861463;  // std dev = 2.983, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.15999221617880624;  // std dev = 10.273, 462.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=163 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(D, A), acquired(C, E) )
%   | then return -0.16455094622838293;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( countryhascompanyoffice(F, A), acquired(C, G) )
%   | | then return 0.3508317018002629;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0687541330326349;  // std dev = 0.441, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( bankboughtbank(H, A) )
%   | then if ( bankboughtbank(A, I), acquired(H, J) )
%   | | then return -0.156161422829106;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.7241982021401967;  // std dev = 0.243, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.44035572910125603;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( acquired(A, L), companyceo(L, M) )
%   | | then return 0.045692086295292166;  // std dev = 0.384, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( acquired(N, A), economicsectorcompany(B, N) )
%   | | | then return 0.6992510223199004;  // std dev = 0.324, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.09636452446921469;  // std dev = 12.153, 703.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=221 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D), acquired(A, E) )
%   | then return 0.35844326408278065;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(C, F) )
%   | | then return 0.5338441574103167;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6675487010624892;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then if ( companyalsoknownas(A, H) )
%   | | then return 0.4062912279393766;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5330141691884067;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(I, A) )
%   | | then if ( companyalsoknownas(I, J), countryhascompanyoffice(K, J) )
%   | | | then return 0.2461843051056166;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06293347532167973;  // std dev = 3.408, 89.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | else if ( acquired(A, L), cityhascompanyoffice(M, L) )
%   | | | then return -0.0497509065855539;  // std dev = 1.566, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.08601086303777818;  // std dev = 11.899, 652.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=211 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.1928136109736048;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then if ( companyceo(A, E), companyceo(D, F) )
%   | | then return 0.30356900675334997;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(G, D) )
%   | | | then return 0.3712072497970753;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48484916275032863;  // std dev = 0.156, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( acquired(H, A), acquired(I, H) )
%   | | then if ( acquired(A, I) )
%   | | | then return 0.06664413739683794;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.18372000650783848;  // std dev = 0.134, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return -0.015459280349030474;  // std dev = 4.101, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return 0.08031696177897761;  // std dev = 11.787, 654.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=217 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.31931349795812086;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyceo(A, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then if ( acquired(A, F), companyceo(F, G) )
%   | | | then return 0.07472994706456533;  // std dev = 1.538, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.266729397462012;  // std dev = 2.330, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( bankchiefexecutiveceo(H, D), economicsectorcompany(B, H) )
%   | | | then return 0.6981856188325872;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.007447783455287091;  // std dev = 3.464, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | else if ( bankboughtbank(I, A), countryhascompanyoffice(J, I) )
%   | | then if ( countryhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.6557455857536187;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.35213092442386856;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.08882878957574743;  // std dev = 4.708, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.0482180183394951;  // std dev = 10.382, 520.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=160 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, C) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(D, A) )
%   | | then return -0.06850162266033336;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( companyalsoknownas(A, A) )
%   | | | then return -0.13372721287423694;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.11632769450807075;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.02705221351875632;  // std dev = 0.340, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | then return -0.04534261241810316;  // std dev = 0.303, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.6096357727740669;  // std dev = 1.796, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return -0.27391649636728954;  // std dev = 0.256, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.3009588706773441;  // std dev = 0.206, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.04175962282307411;  // std dev = 10.874, 566.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=181 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.24772748582044377;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07503153158452192;  // std dev = 0.256, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( companyceo(E, F), cityhascompanyoffice(G, A) )
%   | | then if ( companyalsoknownas(E, H), economicsectorcompany(B, H) )
%   | | | then return 0.5300332321631932;  // std dev = 0.640, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.24391686239511573;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( companyceo(E, I) )
%   | | | then return -0.10676524462997922;  // std dev = 1.590, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.01756458099895292;  // std dev = 2.839, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( acquired(J, A), acquired(K, J) )
%   | | then return -0.10428116362984471;  // std dev = 0.140, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.03821617956412462;  // std dev = 3.440, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.0582606896662302;  // std dev = 10.687, 556.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=194 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.09030271228397063;  // std dev = 0.193, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.11848742738586386;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 5.759931110341617E-4;  // std dev = 0.361, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | then if ( acquired(A, H), acquired(F, I) )
%   | | then if ( countryhascompanyoffice(J, H) )
%   | | | then return -0.04139865195416265;  // std dev = 1.038, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3647770224490059;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.18126086242895242;  // std dev = 0.219, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.41907133449182404;  // std dev = 0.440, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.03843129157785328;  // std dev = 4.003, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | | | else return 0.015986053041128784;  // std dev = 10.659, 574.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=180 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.738', 'seconds']
Refined model CLL: -0.318588


******************************************
Best model found
******************************************
Results 

CLL : -0.318777 

AUC ROC : 0.69475 

AUC PR : 0.079787 

Precision : 0.251101 

Recall : 0.109615 

F1 : 0.15261 

Total Learning Time : 14.313 

Total Inference Time : 25.921366691589355 

Total revision time: 109.26672597885133
Best scored revision CLL: -0.318588


Results 

CLL : -0.318777 

AUC ROC : 0.69475 

AUC PR : 0.079787 

Precision : 0.251101 

Recall : 0.109615 

F1 : 0.15261 

Total Learning Time : 109.35886021614076 

Total Inference Time : 25.921366691589355 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 6.728
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0581489350995122;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( bankbankincountry(E, F), bankbankincountry(A, F) )
%   | then return 0.20698614440183793;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else return 0.19563164602620198;  // std dev = 0.473, 723.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=244 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then return 0.35092203251355425;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankbankincountry(A, D), bankbankincountry(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A), bankbankincountry(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0.08103970901474926;  // std dev = 3.354, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.15752817081205647;  // std dev = 12.834, 751.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=244 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(D, A), bankbankincountry(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16026268191455187;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A) )
%   | | then if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8007405164620811;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15908185926838922;  // std dev = 0.477, 698.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=244 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.15659160116781404;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( bankbankincountry(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10338831922712617;  // std dev = 13.281, 812.000 (wgt'ed) examples reached here.  /* #neg=553 #pos=259 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15200945465503993;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   else if ( bankbankincountry(E, A) )
%   | then if ( bankbankincountry(F, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07152330159251985;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( bankbankincountry(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12193701185298532;  // std dev = 0.479, 685.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=244 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A), bankbankincountry(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankbankincountry(D, A) )
%   | then return 0.027209417686775983;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( bankbankincountry(A, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06332795701508907;  // std dev = 13.273, 810.000 (wgt'ed) examples reached here.  /* #neg=551 #pos=259 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.028130666995154957;  // std dev = 3.389, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   else if ( bankbankincountry(E, A), bankbankincountry(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06353031858340462;  // std dev = 12.786, 736.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=245 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1742704119357359;  // std dev = 0.500, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A), bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05272887057886107;  // std dev = 0.471, 778.000 (wgt'ed) examples reached here.  /* #neg=519 #pos=259 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then return 0.05879142427709724;  // std dev = 0.469, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   else if ( bankbankincountry(D, A) )
%   | then if ( bankbankincountry(D, E) )
%   | | then if ( bankbankincountry(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11510068312897503;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0540025122278417;  // std dev = 12.627, 704.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=244 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(E, C), bankbankincountry(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08885655467845281;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( bankbankincountry(A, F) )
%   | then return -0.011108912737643232;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( bankbankincountry(G, A), bankbankincountry(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.012993420318283414;  // std dev = 12.910, 770.000 (wgt'ed) examples reached here.  /* #neg=526 #pos=244 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '41.363', 'seconds']
Parameter learned model CLL:-0.364864 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(E, F), bankbankincountry(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.4, 4, 1], 'false,true': [3.125, 28, 15], 'false,false': [0.473, 479, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'false': 'bankbankincountry(A, D), bankbankincountry(D, A)', 'false,false': 'bankbankincountry(E, A), bankbankincountry(F, E)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true': [0.707, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.354, 45, 15], 'false,false,false,false': [12.834, 507, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(D, A), bankbankincountry(A, D)', 'true,false': 'bankbankincountry(E, A)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A)', 'false,false,true': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.144, 29, 15], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.477, 454, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'false': 'bankbankincountry(E, A)', 'false,false': 'bankbankincountry(A, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.4, 4, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [13.281, 553, 259]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A)', 'false,true': 'bankbankincountry(F, E), bankbankincountry(E, F)', 'false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.062, 25, 15], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.866, 3, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.479, 441, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A), bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,false': 'bankbankincountry(A, E), bankbankincountry(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.816, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [13.273, 551, 259]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A), bankbankincountry(E, E)', 'false,false': 'bankbankincountry(A, F)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.389, 49, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.786, 491, 245]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, E)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A), bankbankincountry(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.5, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 519, 259]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,true': 'bankbankincountry(D, E)', 'false,true,true': 'bankbankincountry(E, F)', 'false,false': 'bankbankincountry(G, A)'}, {'true': [0.469, 31, 15], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.866, 3, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.627, 460, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, C)', 'true,false,false': 'bankbankincountry(E, C), bankbankincountry(E, A)', 'false': 'bankbankincountry(A, F)', 'false,false': 'bankbankincountry(G, A), bankbankincountry(G, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.866, 3, 1], 'false,true': [3.314, 41, 15], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.91, 526, 244]}]
{'': [0.16000000000000003, 0.22379489941304598], 'false': [0.22714981070849058, 0.22358813075226577], 'true': [nan, 0.16000000000000003], 'true,false': [nan, 0.16000000000000003]}
{'': [0.25, 0.21738523613379812], 'false': [nan, 0.21738523613379904], 'false,false': [nan, 0.21738523613379812], 'false,false,false': [0.1875000000000003, 0.21934003663115162]}
{'': [0.22469008264462795, 0.2276337737786847], 'false': [nan, 0.2276337737786847], 'false,false': [0.0, 0.22737087544436735], 'true': [nan, 0.22469008264462795], 'true,false': [nan, 0.22469008264462795], 'false,false,true': [nan, 0.0]}
{'': [0.15999999999999998, 0.2172082045107062], 'false': [nan, 0.2172082045107062], 'false,false': [nan, 0.2172082045107062], 'true': [nan, 0.15999999999999998]}
{'': [0.234375, 0.22929603748734828], 'true': [nan, 0.234375], 'false': [0.1875, 0.22932281954285716], 'false,false': [nan, 0.22932281954285716], 'false,true': [nan, 0.1875]}
{'': [nan, 0.21750501928665436], 'false': [0.2222222222222222, 0.2174827343311534], 'false,false': [nan, 0.21748273433115323]}
{'': [0.17944335937499992, 0.22211953224512498], 'false': [nan, 0.22211953224512498], 'false,false': [nan, 0.22211953224512498], 'false,false,false': [nan, 0.22211953224512498], 'true': [nan, 0.17944335937499992]}
{'': [0.25, 0.22199099107650438], 'true': [nan, 0.25], 'true,false': [nan, 0.25], 'false': [nan, 0.22199099107650438], 'false,false': [nan, 0.22199099107650438]}
{'': [0.21975425330812876, 0.22640615184988253], 'false': [0.1875, 0.22646565082644166], 'false,false': [nan, 0.22646565082644166], 'false,true': [0.1875, nan], 'false,true,true': [nan, 0.1875]}
{'': [0.1875, 0.21512468336468948], 'false': [0.19610969387755156, 0.21646820711755366], 'false,false': [nan, 0.21646820711755366], 'true': [nan, 0.1875], 'true,false': [nan, 0.1875], 'true,false,false': [nan, 0.1875]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- bankbankincountry(A, C).;true;true
2;false;bankbankincountry(F, A).;true;true


Refining candidate
***************************
Model training time 9.088
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( acquired(A, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( cityhascompanyoffice(E, D), countryhascompanyoffice(F, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04214893509951223;  // std dev = 4.332, 125.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=23 */
%   | else if ( companyceo(A, G) )
%   | | then if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0854216623722396;  // std dev = 2.780, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( countryhascompanyoffice(J, A), bankbankincountry(K, J) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.18561372383190222;  // std dev = 11.184, 568.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=186 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8157639710414945;  // std dev = 0.158, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | | then return -0.15637089178756874;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( acquired(A, E), acquired(E, C) )
%   | | | then return -0.14705968307692616;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05987607070026434;  // std dev = 3.976, 93.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.06873582002006967;  // std dev = 4.020, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | | else return 0.16125492082373563;  // std dev = 11.271, 578.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=189 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankboughtbank(D, A), cityhascompanyoffice(E, D) )
%   | then return -0.0757756460639458;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return -0.0021507640319452376;  // std dev = 0.645, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( bankboughtbank(A, G) )
%   | | | then return 0.16404875289871396;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.47924028047568007;  // std dev = 1.807, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else if ( bankbankincountry(H, A) )
%   | then return 0.8104798848673856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( countryhascompanyoffice(I, A), companyceo(A, J) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.6322838613532914;  // std dev = 0.266, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17827643583940722;  // std dev = 0.110, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( acquired(L, A), companyalsoknownas(L, M) )
%   | | | then return 0.08272876681326602;  // std dev = 2.835, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.16270932999841875;  // std dev = 11.863, 638.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=225 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | then return 0.7094306272513238;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyceo(A, G) )
%   | | then if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.4381753258935681;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.026496800136892366;  // std dev = 1.887, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( countryhascompanyoffice(C, I), economicsectorcompany(B, I) )
%   | | | then return 0.7313528647379168;  // std dev = 0.369, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.22920805295178712;  // std dev = 0.078, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | then return 0.5312191672875599;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.661761304145197;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(L, A) )
%   | | | then return -0.012825662401622062;  // std dev = 3.488, 87.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | | else return 0.10036855115938627;  // std dev = 11.486, 622.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=195 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D), countryhascompanyoffice(E, A) )
%   | then return 0.31249698798177644;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.40068350388992763;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, A) )
%   | then if ( countryhascompanyoffice(H, A) )
%   | | then return 0.2333702668231706;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, F), companyceo(F, I) )
%   | | | then return 0.04597446101168999;  // std dev = 0.797, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.1692354707902784;  // std dev = 0.079, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.6390584698715892;  // std dev = 2.099, 52.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | | else return -0.2227160633358013;  // std dev = 0.256, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.4508778605081251;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0994900586873486;  // std dev = 11.044, 577.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=191 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(D, A) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.43168660745224363;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.11141829829279246;  // std dev = 0.934, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( acquired(F, D), cityhascompanyoffice(G, D) )
%   | | | then return 0.06084204313513957;  // std dev = 0.497, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1448961889772202;  // std dev = 0.094, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.302401862359011;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(I, A), acquired(A, J) )
%   | | then if ( companyalsoknownas(I, K), acquired(K, L) )
%   | | | then return 0.0611206063035276;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.31798496254362396;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( countryhascompanyoffice(M, A), companyceo(A, N) )
%   | | | then return -0.0470550721205661;  // std dev = 1.640, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.07396007334790333;  // std dev = 11.778, 704.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=232 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.3210321023584144;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4662177704358462;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(E, A), companyceo(E, F) )
%   | then if ( acquired(E, G), economicsectorcompany(B, G) )
%   | | then if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.59681608986327;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.74098526476022;  // std dev = 0.314, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.19499849617445122;  // std dev = 0.038, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( acquired(A, J), companyceo(J, K) )
%   | | | then return 0.018139520051736694;  // std dev = 1.440, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.18666524270344076;  // std dev = 2.816, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | else if ( bankchiefexecutiveceo(A, L) )
%   | | | then return 0.194355359392669;  // std dev = 1.956, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.06504447070639041;  // std dev = 10.865, 584.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=194 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.32395816177796;  // std dev = 0.095, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return -0.08076482094011334;  // std dev = 0.210, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( companyalsoknownas(C, E), cityhascompanyoffice(F, C) )
%   | | | then return -0.08395557533255532;  // std dev = 1.373, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.07341688260317362;  // std dev = 2.800, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | then return -0.026917872113567567;  // std dev = 0.325, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | else if ( acquired(A, I), companyalsoknownas(I, J) )
%   | | then if ( companyceo(I, K) )
%   | | | then return -0.21384157421350625;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06759379713529766;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( cityhascompanyoffice(L, A), companyceo(A, M) )
%   | | | then return 0.18620633667620037;  // std dev = 2.058, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.05210903780777172;  // std dev = 10.695, 555.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=187 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return -0.07477667515272965;  // std dev = 0.194, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | else if ( companyalsoknownas(C, E), economicsectorcompany(B, E) )
%   | | then return 0.48124372767640505;  // std dev = 0.442, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(C, F), countryhascompanyoffice(G, C) )
%   | | | then return -0.1602622092864059;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03705714598942415;  // std dev = 3.069, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   else if ( companyalsoknownas(A, H), acquired(A, I) )
%   | then return -0.015025008343006121;  // std dev = 0.283, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else if ( acquired(A, J) )
%   | | then if ( companyceo(A, K), cityhascompanyoffice(L, A) )
%   | | | then return 0.4709769432003748;  // std dev = 0.747, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.057452931060444856;  // std dev = 2.452, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( companyceo(A, M) )
%   | | | then return -0.02145105288090788;  // std dev = 2.228, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.054404545375874136;  // std dev = 10.458, 522.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), companyalsoknownas(A, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.2257735542839079;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.13262038981801683;  // std dev = 0.169, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   else if ( countryhascompanyoffice(E, A), acquired(A, F) )
%   | then if ( companyceo(A, G) )
%   | | then return -0.20191563928816056;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( companyceo(F, H) )
%   | | | then return -0.08106950715392015;  // std dev = 1.160, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.051880560344818104;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( acquired(A, I), cityhascompanyoffice(J, A) )
%   | | then if ( companyalsoknownas(A, K), cityhascompanyoffice(J, K) )
%   | | | then return 0.35196420255348776;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.030490754492504067;  // std dev = 1.982, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( countryhascompanyoffice(L, A), cityhascompanyoffice(M, A) )
%   | | | then return 0.20854096846498138;  // std dev = 1.328, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.04861067263202813;  // std dev = 11.178, 628.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '9.891', 'seconds']
Refined model CLL: -0.328573


******************************************
Best model found
******************************************
Results 

CLL : -0.328908 

AUC ROC : 0.733869 

AUC PR : 0.09103 

Precision : 0.272374 

Recall : 0.135135 

F1 : 0.180645 

Total Learning Time : 9.088 

Total Inference Time : 36.39851427078247 

Total revision time: 103.1427285823822
Best scored revision CLL: -0.328573


Results 

CLL : -0.328908 

AUC ROC : 0.733869 

AUC PR : 0.09103 

Precision : 0.272374 

Recall : 0.135135 

F1 : 0.180645 

Total Learning Time : 103.31018830871582 

Total Inference Time : 36.39851427078247 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.506
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.2545453314959088;  // std dev = 0.489, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.22178529873587463;  // std dev = 4.513, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
%   | else return 0.18039061636045353;  // std dev = 0.467, 571.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.16310472944346216;  // std dev = 5.392, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.15884843473551524;  // std dev = 4.631, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | | | else return 0.15811559294330627;  // std dev = 11.158, 569.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.10706045329191874;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.08842488847661331;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24936814559961165;  // std dev = 4.450, 80.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=36 */
%   | | else return 0.13176103986268706;  // std dev = 0.466, 575.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.24070796591971136;  // std dev = 0.497, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0.1671835903252405;  // std dev = 0.491, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10524123752854782;  // std dev = 12.169, 687.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.20390760048719989;  // std dev = 2.603, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else return 0.04285599752334465;  // std dev = 4.524, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16651497496865503;  // std dev = 4.470, 81.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.097367997495208;  // std dev = 0.468, 567.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.07620586295083422;  // std dev = 5.202, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.0066138664345078675;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return 0.07753287960334676;  // std dev = 11.883, 648.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.10570703387132042;  // std dev = 2.723, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else return 0.07680996201492128;  // std dev = 4.335, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06137023820890135;  // std dev = 12.121, 666.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1253492950195065;  // std dev = 2.180, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.08829631784065277;  // std dev = 1.976, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else return 0.08217897779601928;  // std dev = 0.494, 71.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05672924995328716;  // std dev = 0.470, 659.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.0275912649303032;  // std dev = 0.463, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.08667752726424965;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.028796669461158404;  // std dev = 4.202, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03793520044492609;  // std dev = 11.181, 574.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.254361735093355;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11017114535691157;  // std dev = 2.566, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06886834678393294;  // std dev = 4.502, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.06703597119313952;  // std dev = 4.549, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04661978686539021;  // std dev = 11.045, 546.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '50.072', 'seconds']
Parameter learned model CLL:-0.369708 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.489, 67, 44], 'false,true': [4.513, 56, 32], 'false,false': [0.467, 387, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.392, 86, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.631, 65, 32], 'false,false,false,false': [11.158, 385, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.353, 18, 8], 'true,false,false': [4.789, 81, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.45, 44, 36], 'false,false,false': [0.466, 391, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.497, 10, 9], 'true,false': [0.491, 51, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.169, 471, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.603, 15, 12], 'true,false': [4.524, 73, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.47, 45, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 383, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.202, 72, 44], 'false,false,true': [2.436, 23, 8], 'false,false,false': [11.883, 440, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.723, 19, 12], 'true,false': [4.335, 57, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.121, 446, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.18, 10, 9], 'true,false,true': [1.976, 19, 5], 'true,false,false': [0.494, 41, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 443, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.463, 88, 40], 'false,true,true,true': [2.245, 18, 7], 'false,true,true,false': [4.202, 45, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.181, 390, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [2.566, 25, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.502, 49, 35], 'false,true': [4.549, 59, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.045, 362, 184]}]
{'': [0.23776333307228534, 0.2203366023381199], 'true': [0.0, 0.23926629332034827], 'false': [0.2314049586776874, 0.21840198011906764]}
{'': [0.22366272486036973, 0.21913282994240202], 'false': [nan, 0.21913282994240246], 'false,false': [nan, 0.21913282994240202], 'false,false,false': [0.2210649378254854, 0.21880337656480248]}
{'': [0.20491982069147355, 0.2227349125125848], 'false': [nan, 0.2227349125125848], 'false,false': [0.2474999999999999, 0.21760000000000088], 'false,false,true': [nan, 0.2474999999999999], 'true': [nan, 0.20491982069147344], 'true,false': [0.21301775147928975, 0.20299162033048707]}
{'': [0.24316390201964294, 0.21555356794629196], 'true': [0.24736398354720007, 0.24125777853266742], 'false': [nan, 0.21555356794629196], 'false,false': [nan, 0.21555356794629196]}
{'': [0.217148138387288, 0.22316434677375502], 'false': [0.2466960509978503, 0.21920501168002712], 'false,true': [nan, 0.24669605099785016], 'false,false': [nan, 0.21920501168002712], 'true': [0.25087679457248097, 0.20266035046258118]}
{'': [nan, 0.21939141458582337], 'false': [0.23324516901975323, 0.2170237237923089], 'false,false': [0.19146722164412075, 0.21792306336427997]}
{'': [0.22609232156594286, 0.2205955217223296], 'true': [0.23926185018730164, 0.221066159564934], 'false': [nan, 0.22059552172232894], 'false,false': [nan, 0.2205955217223296], 'false,false,false': [nan, 0.2205955217223296]}
{'': [0.23350079308668487, 0.22045936223458773], 'true': [0.25005154549776587, 0.22895115071996414], 'true,false': [0.16271409435814418, 0.24399920650664522], 'false': [nan, 0.22045936223458773], 'false,false': [nan, 0.22045936223458773]}
{'': [0.21455913865717155, 0.2200461660081373], 'false': [0.2318161320860756, 0.21780038606756966], 'false,true': [0.2318161320860756, nan], 'false,true,true': [0.20166267740408586, 0.23863586504206483], 'false,false': [nan, 0.21780038606756966]}
{'': [0.23143115031053144, 0.22405345283125613], 'true': [0.1839646549613211, 0.241277614251646], 'true,false': [nan, 0.241277614251646], 'true,false,false': [nan, 0.241277614251646], 'false': [0.2274380599494718, 0.22342980584738656], 'false,false': [nan, 0.22342980584738656], 'true,true': [0.0, 0.1936310537993556]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 11.185
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, E) )
%   | | | then return 0.04733812428870155;  // std dev = 2.382, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.2727830814409744;  // std dev = 4.461, 82.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0.1331489350995109;  // std dev = 0.447, 120.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=33 */
%   | else if ( acquired(A, G), companyceo(A, H) )
%   | | then if ( companyalsoknownas(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.16117923812981538;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.20203079163959237;  // std dev = 10.342, 474.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=163 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.7796130820046072;  // std dev = 0.233, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | else return -0.15952535081207944;  // std dev = 0.068, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( acquired(A, E), companyceo(E, F) )
%   | then if ( acquired(E, G) )
%   | | then return 0.16788772183455905;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( acquired(H, E), economicsectorcompany(B, H) )
%   | | | then return 0.8238908183527713;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1929417899230014;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(A, I), companyceo(I, J) )
%   | | then if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.8092821725112087;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19352788778952215;  // std dev = 1.594, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( acquired(A, L) )
%   | | | then return 0.1256640521011263;  // std dev = 3.300, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.19060254326847703;  // std dev = 10.723, 500.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=180 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), companyalsoknownas(A, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( companyceo(D, F) )
%   | | then return 0.02396299250163536;  // std dev = 0.334, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( cityhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.7126715878275336;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13270940130733838;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10998030953454899;  // std dev = 0.205, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.6683483827327535;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6562987257956571;  // std dev = 1.365, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return -0.14082420124426995;  // std dev = 0.062, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( acquired(A, K), acquired(K, L) )
%   | | | then return 0.23209523191969897;  // std dev = 1.838, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.15921349424599016;  // std dev = 11.257, 557.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=199 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.5617655153802881;  // std dev = 0.052, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else return -0.12619683691601716;  // std dev = 0.093, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( acquired(A, F) )
%   | | then if ( acquired(G, A), companyalsoknownas(E, G) )
%   | | | then return 0.0211787147282569;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.19240432274118072;  // std dev = 0.127, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( companyalsoknownas(E, H), economicsectorcompany(B, H) )
%   | | | then return 0.6875840419954898;  // std dev = 0.445, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.21088157699587684;  // std dev = 0.104, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( acquired(I, A) )
%   | | then if ( acquired(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7644801534834413;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.2318790745988974;  // std dev = 0.093, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0.14322934844167634;  // std dev = 0.480, 465.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=171 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.423, 769.000 (wgt'ed) examples reached here.  /* #neg=509 #pos=260 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.3981150383866491;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6017880073161167;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(E, A), companyceo(E, F) )
%   | then if ( bankchiefexecutiveceo(E, G) )
%   | | then return 0.47511534343499395;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(H, E) )
%   | | | then return 0.03388789598000172;  // std dev = 1.922, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.13338966634954685;  // std dev = 0.763, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( companyalsoknownas(A, I), countryhascompanyoffice(J, A) )
%   | | then if ( acquired(A, K) )
%   | | | then return -0.07596604342520737;  // std dev = 0.679, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.1164726928332176;  // std dev = 0.783, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( bankchiefexecutiveceo(A, L), bankboughtbank(M, A) )
%   | | | then return -0.04398221880687936;  // std dev = 0.855, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07815826858298136;  // std dev = 11.327, 684.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=227 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | | then return 0.5030859304414099;  // std dev = 0.302, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(D, G), companyceo(G, H) )
%   | | | then return 0.37723871485678323;  // std dev = 0.233, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.24734857808441957;  // std dev = 1.285, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return -0.12113621375715074;  // std dev = 0.135, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | then return 0.3764108879848022;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(J, A) )
%   | | then if ( companyceo(A, K), companyceo(J, L) )
%   | | | then return -0.19430356778672905;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.09188013031364851;  // std dev = 2.990, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | else if ( companyalsoknownas(A, M), cityhascompanyoffice(N, M) )
%   | | | then return -0.18805610118344726;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.05640538499695692;  // std dev = 10.881, 561.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=179 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.23374376892865117;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4302705480575336;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(F, A), companyceo(A, G) )
%   | | then return 0.4340707992795997;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(A, H), companyceo(E, I) )
%   | | | then return -0.11328939975896335;  // std dev = 0.589, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17466945035888595;  // std dev = 1.551, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( acquired(A, K), acquired(K, L) )
%   | | | then return -0.16063591906913277;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.011467198743034855;  // std dev = 2.455, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.012921107858913101;  // std dev = 2.330, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.05299748265139499;  // std dev = 10.776, 555.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=182 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( companyceo(A, E) )
%   | then if ( acquired(C, F), acquired(G, A) )
%   | | then return 0.25222309916789626;  // std dev = 0.483, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(D, H), cityhascompanyoffice(I, A) )
%   | | | then return 0.06361317883695462;  // std dev = 0.637, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.05282712547209852;  // std dev = 0.764, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else return -0.1715243440126789;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.050421957616221307;  // std dev = 0.422, 722.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=252 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.14224508357982077;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(A, F), acquired(F, G) )
%   | | | then return 0.057382086031633694;  // std dev = 0.428, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.27382771912837967;  // std dev = 0.909, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | then if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.02000209104183358;  // std dev = 0.486, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.269443747427958;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.06776556965545162;  // std dev = 0.769, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.01724049086835625;  // std dev = 2.670, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   else return 0.03533052120066088;  // std dev = 0.429, 655.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=216 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.371', 'seconds']
Refined model CLL: -0.299549


******************************************
Best model found
******************************************
Results 

CLL : -0.299101 

AUC ROC : 0.782103 

AUC PR : 0.044558 

Precision : 0.077778 

Recall : 0.283784 

F1 : 0.122093 

Total Learning Time : 11.185 

Total Inference Time : 42.435566663742065 

Total revision time: 116.77214051818848
Best scored revision CLL: -0.299549


Results 

CLL : -0.299101 

AUC ROC : 0.782103 

AUC PR : 0.044558 

Precision : 0.077778 

Recall : 0.283784 

F1 : 0.122093 

Total Learning Time : 116.9396002445221 

Total Inference Time : 42.435566663742065 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 6.659
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( bankbankincountry(E, F), bankbankincountry(A, F) )
%   | then return 0.25814893509951237;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | else return 0.18195845890903145;  // std dev = 0.468, 735.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=238 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then return 0.5147476894262668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( bankbankincountry(A, D), bankbankincountry(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A), bankbankincountry(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0.1570669878174385;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.15745565780753765;  // std dev = 12.694, 737.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=238 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(D, A), bankbankincountry(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1827369684687277;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A) )
%   | | then if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16939197516738028;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.1722283283575483;  // std dev = 0.480, 660.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=238 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023692988393530987;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( bankbankincountry(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12694833907741307;  // std dev = 12.958, 744.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=256 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1641700020935022;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   else if ( bankbankincountry(E, A) )
%   | then if ( bankbankincountry(F, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.733371519293517;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankbankincountry(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06632619840413755;  // std dev = 0.460, 781.000 (wgt'ed) examples reached here.  /* #neg=543 #pos=238 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A), bankbankincountry(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankbankincountry(D, A) )
%   | then return -0.14512574562378397;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( bankbankincountry(A, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10282373857859256;  // std dev = 12.842, 719.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=256 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08300989833035169;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   else if ( bankbankincountry(E, A), bankbankincountry(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04869926505122057;  // std dev = 12.774, 750.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=240 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.59263066538233;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A), bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04335060067595868;  // std dev = 0.469, 784.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=256 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then return 0.03912794710690072;  // std dev = 0.484, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   else if ( bankbankincountry(D, A) )
%   | then if ( bankbankincountry(D, E) )
%   | | then if ( bankbankincountry(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0542307103695554;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04432586852152451;  // std dev = 12.596, 714.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=238 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(E, C), bankbankincountry(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04079630584022187;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( bankbankincountry(A, F) )
%   | then return 0.09436909321031897;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( bankbankincountry(G, A), bankbankincountry(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.037958084061420386;  // std dev = 12.570, 708.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=238 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '34.190', 'seconds']
Parameter learned model CLL:-0.373847 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(E, F), bankbankincountry(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.416, 7, 2], 'false,true': [3.286, 27, 18], 'false,false': [0.468, 497, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'false': 'bankbankincountry(A, D), bankbankincountry(D, A)', 'false,false': 'bankbankincountry(E, A), bankbankincountry(F, E)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true': [0.816, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.464, 36, 18], 'false,false,false,false': [12.694, 499, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(D, A), bankbankincountry(A, D)', 'true,false': 'bankbankincountry(E, A)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A)', 'false,false,true': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.333, 29, 18], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false': [0.48, 422, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'false': 'bankbankincountry(E, A)', 'false,false': 'bankbankincountry(A, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.452, 5, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.958, 488, 256]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A)', 'false,true': 'bankbankincountry(F, E), bankbankincountry(E, F)', 'false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.235, 25, 18], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.46, 543, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A), bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,false': 'bankbankincountry(A, E), bankbankincountry(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [1.195, 5, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.842, 463, 256]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A), bankbankincountry(E, E)', 'false,false': 'bankbankincountry(A, F)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.31, 28, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.774, 510, 240]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, E)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A), bankbankincountry(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 528, 256]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,true': 'bankbankincountry(D, E)', 'false,true,true': 'bankbankincountry(E, F)', 'false,false': 'bankbankincountry(G, A)'}, {'true': [0.484, 30, 18], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.596, 476, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, C)', 'true,false,false': 'bankbankincountry(E, C), bankbankincountry(E, A)', 'false': 'bankbankincountry(A, F)', 'false,false': 'bankbankincountry(G, A), bankbankincountry(G, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.0, 2, 2], 'false,true': [3.178, 23, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.57, 470, 238]}]
{'': [0.17283950617283952, 0.2204865220249856], 'false': [0.2399999999999995, 0.2189569160997754], 'true': [nan, 0.17283950617283952], 'true,false': [nan, 0.17283950617283952]}
{'': [0.2222222222222223, 0.21889061576663862], 'false': [nan, 0.2188906157666381], 'false,false': [nan, 0.21889061576663862], 'false,false,false': [0.22222222222222268, 0.21864649860356833]}
{'': [0.23630602082390195, 0.23064029698919236], 'true': [nan, 0.23630602082390195], 'true,false': [nan, 0.23630602082390195], 'false': [nan, 0.23064029698919236], 'false,false': [0.24, 0.23056932966023594], 'false,false,true': [nan, 0.24]}
{'': [0.20408163265306115, 0.2256728565616322], 'false': [nan, 0.2256728565616322], 'false,false': [nan, 0.2256728565616322], 'true': [nan, 0.20408163265306115]}
{'': [0.2433747971876689, 0.2124650026327253], 'true': [nan, 0.2433747971876689], 'false': [0.0, 0.2118725623441585], 'false,false': [nan, 0.2118725623441585], 'false,true': [nan, 0.0]}
{'': [nan, 0.22972359695721756], 'false': [0.2040816326530612, 0.2293804683461051], 'false,false': [nan, 0.22938046834610515]}
{'': [0.23818525519848777, 0.21757025777207104], 'true': [nan, 0.23818525519848777], 'false': [nan, 0.21757025777207104], 'false,false': [nan, 0.21757025777207104], 'false,false,false': [nan, 0.21757025777207104]}
{'': [0.0, 0.21987920143465114], 'false': [nan, 0.21987920143465114], 'false,false': [nan, 0.21987920143465114], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.23437500000000053, 0.22243078524938628], 'false': [0.25, 0.22222222222222376], 'false,true': [0.25, nan], 'false,true,true': [nan, 0.25], 'false,false': [nan, 0.22222222222222376]}
{'': [0.25, 0.22458643476681012], 'true': [nan, 0.25], 'true,false': [nan, 0.25], 'true,false,false': [nan, 0.25], 'false': [0.24628197501487184, 0.22315586198091836], 'false,false': [nan, 0.22315586198091836]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;companyeconomicsector(A, B) :- bankbankincountry(A, C).;true;true
4;false;bankbankincountry(E, A).;true;true
7;;companyeconomicsector(A, B) :- bankbankincountry(C, A).;true;true


Refining candidate
***************************
Model training time 44.793
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(A, D) )
%   then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(F, A), acquired(G, C) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.30259337954395676;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.16185263880321524;  // std dev = 5.343, 135.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=41 */
%   | | | else return 0.17535323617477666;  // std dev = 10.993, 558.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=177 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( countryhascompanyoffice(D, A), countryhascompanyoffice(D, C) )
%   | then return 0.07117074695395013;  // std dev = 0.409, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( cityhascompanyoffice(E, C) )
%   | | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.835434978756022;  // std dev = 2.98e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1645650212439779;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.6122426654470086;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( companyalsoknownas(A, G), countryhascompanyoffice(H, G) )
%   | then return -0.007073877019669311;  // std dev = 0.353, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.8166919764804215;  // std dev = 0.321, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.16605222714405174;  // std dev = 0.079, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13321562047297245;  // std dev = 11.078, 589.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=176 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5579237442155859;  // std dev = 0.121, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return -0.24191633624433323;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( acquired(E, C), cityhascompanyoffice(F, C) )
%   | | | then return -0.15949764778841868;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.022423084077496328;  // std dev = 3.596, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   else return 0.12276488925468762;  // std dev = 0.445, 721.000 (wgt'ed) examples reached here.  /* #neg=496 #pos=225 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0.17355582872980108;  // std dev = 0.429, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return -0.07801207071608024;  // std dev = 0.247, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   else if ( acquired(F, A) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.42406044929114906;  // std dev = 0.119, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( companyalsoknownas(F, G), acquired(H, G) )
%   | | | then return 0.41290656910748547;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.026468536716347735;  // std dev = 3.087, 82.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=13 */
%   | else if ( companyceo(A, I), companyalsoknownas(A, J) )
%   | | then if ( cityhascompanyoffice(K, J), cityhascompanyoffice(K, A) )
%   | | | then return -0.17303813868360027;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2767599135878446;  // std dev = 2.238, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.10392953918431481;  // std dev = 4.149, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | | else return 0.12531501129259953;  // std dev = 10.561, 511.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=169 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankboughtbank(D, A), cityhascompanyoffice(E, D) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.6552698111713743;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.18761182290355213;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( bankboughtbank(A, G) )
%   | | then return -0.18320946126339283;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.13621350300972473;  // std dev = 1.863, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.021637949577756544;  // std dev = 1.462, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( bankbankincountry(I, A) )
%   | then return 0.15509325170950666;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( acquired(J, A) )
%   | | then return 0.044319515395074116;  // std dev = 0.356, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.14509818028307456;  // std dev = 3.751, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | | else return 0.10521942444312188;  // std dev = 10.582, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.32602015383930555;  // std dev = 0.157, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(D, A) )
%   | then if ( countryhascompanyoffice(E, A) )
%   | | then if ( countryhascompanyoffice(E, D), companyceo(D, F) )
%   | | | then return -0.048759456129362465;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.13503275022681874;  // std dev = 0.929, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( acquired(G, D) )
%   | | | then return -0.0915565181820892;  // std dev = 1.262, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.08008683589205595;  // std dev = 2.970, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( acquired(A, H), acquired(H, I) )
%   | | then if ( companyalsoknownas(A, J), acquired(J, K) )
%   | | | then return 0.18778841632828897;  // std dev = 1.224, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.16041601230814953;  // std dev = 0.606, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.0527310964505533;  // std dev = 3.587, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.10303014587712069;  // std dev = 10.801, 556.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=195 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.26570723017300707;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.0824552298086181;  // std dev = 0.268, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | then if ( cityhascompanyoffice(G, E) )
%   | | then if ( cityhascompanyoffice(G, A) )
%   | | | then return -0.12013702404909306;  // std dev = 0.910, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.009538059041240651;  // std dev = 2.646, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return -0.248227222554713;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( acquired(A, H), companyceo(A, I) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.4680327917593489;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.03517450877384995;  // std dev = 2.158, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( bankboughtbank(J, A), acquired(J, K) )
%   | | | then return -0.10738003008847508;  // std dev = 0.940, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.07177142526769532;  // std dev = 11.410, 653.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=221 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then return 0.5658321167011262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then if ( cityhascompanyoffice(E, D) )
%   | | then return 0.6477555650053742;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4640873490147302;  // std dev = 0.306, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | | then if ( economicsectorcompany(B, F) )
%   | | | then return 0.2674639153696288;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09521183926645736;  // std dev = 1.767, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( acquired(A, H), companyceo(H, I) )
%   | | | then return -0.03751093830519409;  // std dev = 1.997, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.0861010389330165;  // std dev = 11.319, 618.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=229 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(A, E), cityhascompanyoffice(C, E) )
%   | | then return 0.2517451447715487;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( acquired(F, A), countryhascompanyoffice(G, D) )
%   | | | then return 0.20722161570455283;  // std dev = 0.698, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.507369106976406;  // std dev = 1.520, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | else return -0.20450566313908153;  // std dev = 0.448, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0.019864279234429946;  // std dev = 0.446, 627.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=198 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.2326858664296525;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.37440799504940864;  // std dev = 0.322, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6781701595028425;  // std dev = 0.222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | then return 0.45127499677155836;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( companyceo(A, H), countryhascompanyoffice(I, A) )
%   | | | then return 0.08111128758426382;  // std dev = 1.358, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.07756204433332323;  // std dev = 2.891, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | else if ( bankboughtbank(J, A), acquired(J, K) )
%   | | | then return -0.09331617734933696;  // std dev = 0.921, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.05034476646524924;  // std dev = 10.794, 611.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=218 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.417', 'seconds']
Refined model CLL: -0.318422


******************************************
Best model found
******************************************
Results 

CLL : -0.318907 

AUC ROC : 0.70667 

AUC PR : 0.073919 

Precision : 0.075269 

Recall : 0.215385 

F1 : 0.111554 

Total Learning Time : 44.793 

Total Inference Time : 40.42590665817261 

Total revision time: 146.3269907016754
Best scored revision CLL: -0.318422


Results 

CLL : -0.318907 

AUC ROC : 0.70667 

AUC PR : 0.073919 

Precision : 0.075269 

Recall : 0.215385 

F1 : 0.111554 

Total Learning Time : 146.49445042800903 

Total Inference Time : 40.42590665817261 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.453
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1781489350995115;  // std dev = 0.466, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.17296374991432573;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else return 0.21033871612140567;  // std dev = 0.478, 548.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1509620129264712;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1723968935026911;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | | | else return 0.15169989033185557;  // std dev = 11.446, 601.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.8070398025662596;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.10721000684042516;  // std dev = 2.375, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.1507114087928941;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09424250120429845;  // std dev = 4.149, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | else return 0.15339815479630392;  // std dev = 0.475, 559.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.11436172278026122;  // std dev = 0.469, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0.12673115300954219;  // std dev = 0.470, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1276157650691325;  // std dev = 12.204, 660.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09699616738692195;  // std dev = 3.128, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | else return 0.06411130805628164;  // std dev = 4.436, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07626100210947621;  // std dev = 4.098, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07925946069741914;  // std dev = 0.466, 606.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06498155732759155;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.10594435545090534;  // std dev = 4.583, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.1334612979615773;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.06203742850674436;  // std dev = 12.132, 682.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09464151720714822;  // std dev = 3.041, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else return 0.010755142976625413;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0982115616057914;  // std dev = 11.754, 598.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.0982686493828493;  // std dev = 2.336, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.16888163835112063;  // std dev = 1.857, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.006323760931932667;  // std dev = 0.443, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0648655450196175;  // std dev = 0.476, 652.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.0070387096587685456;  // std dev = 0.455, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.0911325644483344;  // std dev = 1.941, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.01299443335565469;  // std dev = 3.629, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.043913103701804075;  // std dev = 11.262, 563.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.56893910520514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19671576683502381;  // std dev = 1.988, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023200525481713127;  // std dev = 4.092, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.0548490808985922;  // std dev = 4.711, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.018942608778972043;  // std dev = 11.396, 590.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '4.560', 'seconds']
Parameter learned model CLL:-0.370155 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.4, 16, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.466, 51, 24], 'false,true': [4.827, 74, 34], 'false,false': [0.478, 355, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.746, 71, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.749, 67, 34], 'false,false,false,false': [11.446, 408, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.375, 19, 8], 'true,false,false': [4.737, 66, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.149, 61, 24], 'false,false,false': [0.475, 366, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.469, 18, 9], 'true,false': [0.47, 49, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.204, 433, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.128, 30, 15], 'true,false': [4.436, 66, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.098, 56, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 413, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.816, 2, 1], 'false,true': [4.583, 61, 32], 'false,false,true': [2.712, 19, 12], 'false,false,false': [12.132, 467, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.041, 25, 15], 'true,false': [4.523, 76, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.754, 381, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.336, 14, 9], 'true,false,true': [1.857, 8, 6], 'true,false,false': [0.443, 49, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 425, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.455, 102, 43], 'false,true,true,true': [1.941, 10, 6], 'false,true,true,false': [3.629, 50, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.262, 370, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [1.988, 8, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.092, 55, 24], 'false,true': [4.711, 66, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.396, 397, 193]}]
{'': [0.2211000000000014, 0.22629526695419633], 'false': [0.21570644718793006, 0.22815213916564844], 'true': [0.23040000000000005, 0.21760000000000104], 'true,false': [nan, 0.21760000000000104]}
{'': [0.21654883187838614, 0.2188221172228581], 'false': [nan, 0.21882211722285852], 'false,false': [nan, 0.2188221172228581], 'false,false,false': [0.22331144005489775, 0.2180060409578098]}
{'': [0.22313656723729858, 0.2233476719226517], 'false': [nan, 0.2233476719226517], 'false,false': [0.20250322989461111, 0.22605534416492556], 'true': [0.0, 0.22143267015490162], 'true,false': [0.2089525029467726, 0.2243999999999987], 'false,false,true': [nan, 0.20250322989461111], 'true,true': [0.0, nan]}
{'': [0.2205353226213424, 0.2256731257670763], 'false': [nan, 0.2256731257670763], 'false,false': [nan, 0.2256731257670763], 'true': [0.22009600496095258, 0.22065649921805117]}
{'': [0.21220867916984484, 0.21621760057044073], 'false': [0.20989544136795418, 0.21705116056160167], 'false,false': [nan, 0.21705116056160167], 'true': [0.21741020551199952, 0.2093684887231287], 'false,true': [nan, 0.2098954413679536]}
{'': [0.2222222222222223, 0.2181711425468002], 'true': [nan, 0.2222222222222223], 'true,false': [nan, 0.2222222222222223], 'false': [0.2258933885292706, 0.2169718047123178], 'false,false': [0.23725286160249737, 0.21582813983230215]}
{'': [0.20771446971790866, 0.23102783464995302], 'false': [nan, 0.2310278346499526], 'false,false': [nan, 0.23102783464995302], 'false,false,false': [nan, 0.23102783464995302], 'true': [0.23119207085973473, 0.19672992207447007]}
{'': [0.2165839628142489, 0.22662032035719598], 'false': [nan, 0.22662032035719598], 'false,false': [nan, 0.22662032035719598], 'true': [0.23727818519499036, 0.2094866194859753], 'true,false': [0.24633993018255324, 0.19648028514145682]}
{'': [0.20728620032687245, 0.22258712208668474], 'false': [0.20327424185392212, 0.2252901703321145], 'false,false': [nan, 0.2252901703321145], 'false,true': [0.20327424185392212, nan], 'false,true,true': [0.2353920579458458, 0.19365188357550409]}
{'': [0.2225115373644119, 0.2205382049637804], 'true': [0.24024070897171643, 0.2119344093782702], 'true,true': [0.0, 0.24710574071613148], 'false': [0.22195017397242492, 0.2201120367710432], 'false,false': [nan, 0.2201120367710432], 'true,false': [nan, 0.2119344093782702], 'true,false,false': [nan, 0.2119344093782702]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 36.344
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( acquired(C, D), economicsectorcompany(B, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( acquired(F, A), acquired(G, F) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( countryhascompanyoffice(H, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | | then return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.18952723421974255;  // std dev = 12.293, 682.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=226 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8106762931536519;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.7275886598086525;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( cityhascompanyoffice(E, A), acquired(F, A) )
%   | | then if ( companyceo(F, G), cityhascompanyoffice(E, F) )
%   | | | then return 0.3398880308483379;  // std dev = 0.980, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13611167123997314;  // std dev = 0.878, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( companyalsoknownas(A, H), cityhascompanyoffice(I, H) )
%   | | | then return 0.007755128950483624;  // std dev = 2.570, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.15754067983580966;  // std dev = 12.368, 704.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=228 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.23489548112062003;  // std dev = 0.639, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.5592655331441174;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | | then return 0.18957292549408689;  // std dev = 2.337, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.02913300553489124;  // std dev = 3.901, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.8011722308752236;  // std dev = 0.185, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.18786157315864038;  // std dev = 0.094, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.7627001350425887;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.021548102386849077;  // std dev = 2.255, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.1108623665824552;  // std dev = 10.746, 554.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=166 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.6011875667599029;  // std dev = 0.127, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( acquired(D, A) )
%   | then if ( countryhascompanyoffice(E, D), countryhascompanyoffice(E, A) )
%   | | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.7335058062592447;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1921699621673754;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.19664173281656608;  // std dev = 1.071, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.006650748131471457;  // std dev = 3.224, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( countryhascompanyoffice(H, A), bankchiefexecutiveceo(A, I) )
%   | | then if ( countryhascompanyoffice(H, J), economicsectorcompany(B, J) )
%   | | | then return 0.6400792741849759;  // std dev = 0.286, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18330758992405155;  // std dev = 0.104, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.09632833103984462;  // std dev = 4.246, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.13268993876458315;  // std dev = 10.816, 551.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=189 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, C) )
%   | then return 0.5746738435593286;  // std dev = 0.204, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3829836388773257;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(A, E), cityhascompanyoffice(F, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.542345894057025;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( cityhascompanyoffice(G, A), companyceo(E, H) )
%   | | | then return 0.16799792947411227;  // std dev = 2.154, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.10282001476775543;  // std dev = 0.958, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( acquired(I, A) )
%   | | then if ( cityhascompanyoffice(J, A) )
%   | | | then return -0.11829480834362113;  // std dev = 0.885, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.05693541009895189;  // std dev = 3.443, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( acquired(A, K), acquired(K, L) )
%   | | | then return 0.2090688897962761;  // std dev = 1.907, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.08588340886112904;  // std dev = 11.282, 631.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=201 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( countryhascompanyoffice(D, C), countryhascompanyoffice(D, A) )
%   | then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then return 0.6513313898614542;  // std dev = 0.177, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.25080911906082454;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.2581613048416896;  // std dev = 0.276, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( cityhascompanyoffice(F, C), cityhascompanyoffice(G, A) )
%   | | | then return -0.16533111868120176;  // std dev = 0.950, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.017727134480786614;  // std dev = 3.983, 107.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=23 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.3499495819104032;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( acquired(I, A) )
%   | | then return -0.012756203858671104;  // std dev = 0.357, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.14421595401823814;  // std dev = 3.448, 79.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=34 */
%   | | | else return 0.07794029077365548;  // std dev = 10.331, 493.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=159 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.5050338887723583;  // std dev = 0.259, 60.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=57 */
%   | else return -0.20529998893566043;  // std dev = 0.389, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( companyceo(A, E) )
%   | then if ( acquired(F, A), companyalsoknownas(F, G) )
%   | | then if ( countryhascompanyoffice(H, A) )
%   | | | then return -0.16948515534571593;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.42731563042146986;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.055090706603318065;  // std dev = 0.358, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.4139299374058235;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04322527119794976;  // std dev = 1.333, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.03193013964555936;  // std dev = 2.453, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.09413631189487844;  // std dev = 10.236, 471.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=166 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.40581436006868377;  // std dev = 0.229, 59.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | else return -0.17219955376861676;  // std dev = 0.300, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( acquired(E, F), companyceo(F, G) )
%   | | then return -0.21586825731856382;  // std dev = 9.13e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( economicsectorcompany(B, E) )
%   | | | then return 0.5448918848536402;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09085574373277673;  // std dev = 2.739, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( bankboughtbank(H, A), cityhascompanyoffice(I, H) )
%   | | then if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.013671808116652764;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.20951232109066634;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.02697263681645535;  // std dev = 2.782, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.06566299805908422;  // std dev = 10.223, 480.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=166 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( countryhascompanyoffice(E, C), companyalsoknownas(C, F) )
%   | then return -0.16113425238116236;  // std dev = 0.153, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.2620287602970896;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(C, G), cityhascompanyoffice(H, G) )
%   | | | then return 0.0635408711693326;  // std dev = 1.626, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.08328976721392138;  // std dev = 1.902, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | then return 0.1873454468889313;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( acquired(A, J) )
%   | | then if ( bankchiefexecutiveceo(A, K), cityhascompanyoffice(L, J) )
%   | | | then return 0.2603901576532277;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.012452426906002493;  // std dev = 3.401, 105.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=24 */
%   | | else if ( companyceo(A, M) )
%   | | | then return -0.009595127808559078;  // std dev = 2.194, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.04709745366963817;  // std dev = 10.448, 550.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=191 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.060912041801031575;  // std dev = 0.558, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return -0.30539461849635435;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.018682973995107405;  // std dev = 1.552, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | | then return -0.0940708029138686;  // std dev = 0.163, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( countryhascompanyoffice(I, A), companyceo(A, J) )
%   | | | then return -0.07021646174317213;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09426511473582995;  // std dev = 2.898, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   else if ( bankboughtbank(K, A) )
%   | then if ( companyceo(A, L) )
%   | | then return -0.17601986215386212;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.12994889070385438;  // std dev = 0.999, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.0265540141740613;  // std dev = 0.429, 662.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '1.826', 'seconds']
Refined model CLL: -0.306044


******************************************
Best model found
******************************************
Results 

CLL : -0.306201 

AUC ROC : 0.736251 

AUC PR : 0.09603 

Precision : 0.090119 

Recall : 0.220077 

F1 : 0.127874 

Total Learning Time : 36.344 

Total Inference Time : 32.45934271812439 

Total revision time: 135.59100634765625
Best scored revision CLL: -0.306044


Results 

CLL : -0.306201 

AUC ROC : 0.736251 

AUC PR : 0.09603 

Precision : 0.090119 

Recall : 0.220077 

F1 : 0.127874 

Total Learning Time : 135.69162852478027 

Total Inference Time : 32.45934271812439 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.629
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.23745927992709853;  // std dev = 0.485, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.16882854674999637;  // std dev = 4.697, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else return 0.1781489350995078;  // std dev = 0.466, 575.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.22311402392282154;  // std dev = 5.153, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.18041607444167015;  // std dev = 4.581, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | | else return 0.15394107065756035;  // std dev = 11.195, 577.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.15203391228663968;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return -0.002476148849211967;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else return 0.14695676555805856;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22096707459401208;  // std dev = 4.536, 84.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=36 */
%   | | else return 0.1528504133148252;  // std dev = 0.474, 541.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.27300529321420847;  // std dev = 0.495, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.13845552742085254;  // std dev = 0.483, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.138726401992702;  // std dev = 11.843, 616.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.13343206240364608;  // std dev = 2.748, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else return 0.0639505781192466;  // std dev = 4.421, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1036524447845016;  // std dev = 4.729, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09641782306941443;  // std dev = 0.471, 554.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.18780540741631177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.11649007963377073;  // std dev = 5.106, 108.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.05723374931755892;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.08844758020463661;  // std dev = 11.704, 609.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.02724146721279439;  // std dev = 2.873, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else return 0.03322397816306356;  // std dev = 4.429, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06981507262056662;  // std dev = 11.961, 633.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.06593957202912254;  // std dev = 2.278, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.02286364519935379;  // std dev = 1.928, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.08851248145021229;  // std dev = 0.494, 71.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.036849745380365145;  // std dev = 0.466, 675.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.010965453986685964;  // std dev = 0.453, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.07375528078979436;  // std dev = 1.993, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.1271734295674913;  // std dev = 3.861, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0329048615377714;  // std dev = 11.144, 566.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.04723263567655789;  // std dev = 2.444, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.012651719927903258;  // std dev = 4.773, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.04259235989228477;  // std dev = 4.640, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.024908821781671676;  // std dev = 11.153, 568.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.483', 'seconds']
Parameter learned model CLL:-0.37256 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.485, 72, 44], 'false,true': [4.697, 71, 32], 'false,false': [0.466, 391, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.153, 67, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.581, 61, 32], 'false,false,false,false': [11.195, 393, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.522, 31, 8], 'true,false,false': [4.607, 63, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.536, 48, 36], 'false,false,false': [0.474, 357, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.495, 9, 9], 'true,false': [0.483, 58, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.843, 400, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.748, 20, 12], 'true,false': [4.421, 65, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.729, 58, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 370, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [5.106, 64, 44], 'false,false,true': [2.332, 17, 8], 'false,false,false': [11.704, 401, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.873, 28, 12], 'true,false': [4.429, 65, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.961, 413, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.278, 14, 9], 'true,false,true': [1.928, 15, 5], 'true,false,false': [0.494, 41, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 459, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.453, 97, 40], 'false,true,true,true': [1.993, 9, 7], 'false,true,true,false': [3.861, 31, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.144, 382, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.444, 19, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.773, 64, 35], 'false,true': [4.64, 66, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.153, 384, 184]}]
{'': [0.23464095258967146, 0.21708826063121858], 'true': [0.0, 0.23543400713436477], 'false': [0.21415779055519035, 0.21760000000000285]}
{'': [0.23926629332034788, 0.21846190345493735], 'false': [nan, 0.21846190345493616], 'false,false': [nan, 0.21846190345493735], 'false,false,false': [0.2256908313099776, 0.21719946294855277]}
{'': [0.20934989950293248, 0.2277254230634657], 'false': [nan, 0.2277254230634657], 'false,false': [0.24489795918367352, 0.22443547753356038], 'false,false,true': [nan, 0.24489795918367352], 'true': [0.0, 0.21042865853053044], 'true,false': [0.16305062458908615, 0.223379501385041], 'true,true': [0.0, nan]}
{'': [0.23720481343856945, 0.22769642458364617], 'true': [0.24457531082636738, 0.2328425402367823], 'false': [nan, 0.22769642458364617], 'false,false': [nan, 0.22769642458364617]}
{'': [0.21765099946311964, 0.22415306390803919], 'false': [0.23786055880528076, 0.22181965097942383], 'false,true': [nan, 0.23786055880528081], 'false,false': [nan, 0.22181965097942383], 'true': [0.23593774850266822, 0.2101228995152932]}
{'': [0.0, 0.22720604488416998], 'false': [0.24139043221507955, 0.22466504897889608], 'false,false': [0.21759999999999993, 0.22491665672264802], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.20955634933357492, 0.22601451540286838], 'false': [nan, 0.2260145154028686], 'false,false': [nan, 0.22601451540286838], 'false,false,false': [nan, 0.22601451540286838], 'true': [0.20640666024705015, 0.21090029027574264]}
{'': [0.23179838160621324, 0.21762088808320676], 'true': [0.22560156840562562, 0.23336387666985434], 'true,false': [0.18593010901617474, 0.24399920650664517], 'false': [nan, 0.21762088808320676], 'false,false': [nan, 0.21762088808320676]}
{'': [0.20549444115933077, 0.22361098427289178], 'false': [0.24885092090835895, 0.21940591092409698], 'false,true': [0.24885092090835895, nan], 'false,true,true': [0.248283896431146, 0.2484013908842825], 'false,false': [nan, 0.21940591092409698]}
{'': [0.2266504573666511, 0.21914841535859905], 'true': [0.21336210650734797, 0.23014512911667015], 'true,false': [nan, 0.23014512911667015], 'true,false,false': [nan, 0.23014512911667015], 'false': [0.21971778029163835, 0.21900416584011284], 'false,false': [nan, 0.21900416584011284], 'true,true': [nan, 0.21336210650734794]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 34.251
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( cityhascompanyoffice(E, A) )
%   | | | then return 0.27481560176617903;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.1914822684328448;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0.12214893509951097;  // std dev = 0.441, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | then if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(A, J) )
%   | | | then return 0.23745927992709787;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.1769895148096529;  // std dev = 10.242, 483.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=154 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( acquired(A, D), companyceo(A, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.8426197669601545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(D, F), companyceo(D, G) )
%   | | | then return -0.1573802330398455;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.020348501040354634;  // std dev = 2.698, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | else if ( cityhascompanyoffice(C, H), economicsectorcompany(B, H) )
%   | | then return 0.8088719023875074;  // std dev = 0.159, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.16154763182249918;  // std dev = 0.094, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( companyceo(A, I), companyalsoknownas(A, J) )
%   | then return 0.0015424936685547546;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( acquired(K, A) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.8332054912315484;  // std dev = 5.16e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15519106615613923;  // std dev = 3.636, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0.1930204486400654;  // std dev = 0.477, 509.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=183 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.737397007681204;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return -0.0268666371573825;  // std dev = 2.452, 51.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | | else return 0.16369781239869574;  // std dev = 4.102, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.6793045707437821;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.6771415040234148;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12991368722441976;  // std dev = 1.581, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( acquired(J, A), bankchiefexecutiveceo(J, K) )
%   | | | then return 0.5094656075731887;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12020253964430896;  // std dev = 11.376, 626.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=196 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), countryhascompanyoffice(D, A) )
%   then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | then return 0.6606805832430749;  // std dev = 0.254, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.15543790510276304;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( acquired(F, A), companyceo(A, G) )
%   | then if ( companyalsoknownas(A, H) )
%   | | then return 0.5794752682016525;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyalsoknownas(F, I) )
%   | | | then return -0.056806852765944445;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2767627906465257;  // std dev = 1.491, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( acquired(J, A), companyceo(J, K) )
%   | | then if ( acquired(A, L) )
%   | | | then return -0.20243205750901763;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05601425292826344;  // std dev = 3.099, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.5510812851564926;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1125107581814375;  // std dev = 11.877, 681.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=223 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5202169012544687;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( countryhascompanyoffice(E, C), cityhascompanyoffice(F, C) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.44862407792356146;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27187118983438485;  // std dev = 0.980, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07919275262183188;  // std dev = 0.358, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return 0.06834636037814078;  // std dev = 0.369, 139.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7332474041163458;  // std dev = 0.224, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.22988963995850348;  // std dev = 0.162, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( acquired(K, A), companyalsoknownas(K, L) )
%   | | | then return 0.27751517923408764;  // std dev = 0.989, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1040430991427289;  // std dev = 10.650, 515.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=175 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.1933707091273793;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(A, D), companyalsoknownas(A, E) )
%   | then if ( companyceo(A, F), countryhascompanyoffice(G, E) )
%   | | then if ( companyceo(D, H) )
%   | | | then return -0.12464176405869994;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.152706713623579;  // std dev = 1.302, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.03401932065227906;  // std dev = 1.811, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.17244607247377183;  // std dev = 0.123, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.3792953424365173;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.05915489169486963;  // std dev = 3.989, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0.0777266893543519;  // std dev = 11.330, 610.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=203 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.31806098381316755;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.5590867041438686;  // std dev = 0.294, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(E, A), countryhascompanyoffice(F, C) )
%   | | | then return -0.19285927032574693;  // std dev = 0.919, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.01768614209186072;  // std dev = 4.019, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   else if ( cityhascompanyoffice(G, A), bankchiefexecutiveceo(A, H) )
%   | then return -0.09733301425767794;  // std dev = 0.231, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( bankboughtbank(A, I) )
%   | | then if ( bankchiefexecutiveceo(A, J) )
%   | | | then return 0.041050087881215114;  // std dev = 0.648, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2074449683395992;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( cityhascompanyoffice(K, A), acquired(A, L) )
%   | | | then return 0.005206923554048526;  // std dev = 2.260, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.08493163065713424;  // std dev = 10.999, 579.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=204 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), acquired(A, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then return -0.018835557881519367;  // std dev = 0.289, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.5288349433364689;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.20892444800906457;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( companyalsoknownas(A, G), acquired(A, H) )
%   | then if ( countryhascompanyoffice(I, H) )
%   | | then return 0.0956588462546281;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.08379235160603905;  // std dev = 0.290, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( bankboughtbank(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.06264235288942625;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13995086636001816;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( acquired(A, M), companyceo(M, N) )
%   | | | then return 0.2330497867243046;  // std dev = 1.629, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.04633401212689226;  // std dev = 11.712, 698.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=235 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(D, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then return 0.012397223591564107;  // std dev = 0.510, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3193154302304797;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(G, H) )
%   | | | then return 0.5525090413570507;  // std dev = 1.042, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.3339633188200803;  // std dev = 1.393, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.19752150014663544;  // std dev = 0.354, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( acquired(I, A), companyceo(A, J) )
%   | | then if ( companyalsoknownas(I, K) )
%   | | | then return -0.19619625628512544;  // std dev = 0.631, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.24698216426555872;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.22724842392485062;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05542034058719534;  // std dev = 11.006, 562.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=197 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then return -0.1008098348568643;  // std dev = 0.245, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   else if ( countryhascompanyoffice(D, A) )
%   | then if ( bankbankincountry(E, D), companyceo(A, F) )
%   | | then if ( countryhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.27495314511416813;  // std dev = 1.008, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.13959642613414333;  // std dev = 0.117, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( countryhascompanyoffice(D, H), economicsectorcompany(B, H) )
%   | | | then return 0.4751727527150953;  // std dev = 0.403, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2141174561706687;  // std dev = 0.288, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.39679769545454724;  // std dev = 1.659, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1774983720960628;  // std dev = 0.191, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( acquired(A, K) )
%   | | | then return -0.023851746710650285;  // std dev = 3.138, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.03768499018914469;  // std dev = 10.519, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '26.583', 'seconds']
Refined model CLL: -0.315663


******************************************
Best model found
******************************************
Results 

CLL : -0.315165 

AUC ROC : 0.75993 

AUC PR : 0.082331 

Precision : 0.088575 

Recall : 0.266409 

F1 : 0.132948 

Total Learning Time : 34.251 

Total Inference Time : 48.05620288848877 

Total revision time: 148.50085318565368
Best scored revision CLL: -0.315663


Results 

CLL : -0.315165 

AUC ROC : 0.75993 

AUC PR : 0.082331 

Precision : 0.088575 

Recall : 0.266409 

F1 : 0.132948 

Total Learning Time : 148.6014753627777 

Total Inference Time : 48.05620288848877 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.537
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.05045662740720463;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15288577720477434;  // std dev = 0.456, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.182223009173585;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | else return 0.17963793679155518;  // std dev = 0.467, 591.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1302067572055061;  // std dev = 4.841, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1880236749956058;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.17967264290498902;  // std dev = 11.157, 551.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.18444285611639483;  // std dev = 2.888, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return 0.187297659214785;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13441026055052047;  // std dev = 3.702, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.12788912051137794;  // std dev = 0.466, 595.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.12542400918232138;  // std dev = 0.461, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return 0.09535812043581747;  // std dev = 0.457, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11930745470375495;  // std dev = 12.251, 675.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.030172126277918786;  // std dev = 2.583, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else return 0.16069085136699823;  // std dev = 4.838, 97.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04496336735729959;  // std dev = 3.843, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0888541763776254;  // std dev = 0.467, 591.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.18789589510543336;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( acquired(D, A) )
%   | then return 0.026656475896124764;  // std dev = 4.945, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.023785551040090856;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else return 0.08150195997882939;  // std dev = 12.103, 659.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return -2.1887336447363648E-4;  // std dev = 2.623, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else return 0.15533679723367078;  // std dev = 4.686, 88.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07398216068067691;  // std dev = 11.817, 628.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.12723984542951675;  // std dev = 1.781, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.04722677634644805;  // std dev = 2.458, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else return 0.045840524956104724;  // std dev = 0.453, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04068483319844872;  // std dev = 0.468, 694.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.07852181133836304;  // std dev = 0.485, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.14945290166038147;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.017881185741881956;  // std dev = 3.629, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04778391880045958;  // std dev = 11.240, 567.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06367034533177426;  // std dev = 1.825, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11127324134905688;  // std dev = 4.131, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.036637366971662866;  // std dev = 4.646, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05794410379349803;  // std dev = 11.069, 535.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '5.513', 'seconds']
Parameter learned model CLL:-0.373478 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.01, 21, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.456, 67, 28], 'false,true': [4.864, 73, 35], 'false,false': [0.467, 401, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.841, 81, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 64, 35], 'false,false,false,false': [11.157, 361, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.888, 23, 13], 'true,false,false': [4.657, 57, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.702, 44, 20], 'false,false,false': [0.466, 405, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.461, 11, 5], 'true,false': [0.457, 66, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.251, 450, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.583, 25, 9], 'true,false': [4.838, 58, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.843, 57, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.467, 401, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'false,true': [4.945, 96, 33], 'false,false,true': [1.966, 17, 5], 'false,false,false': [12.103, 439, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.623, 29, 9], 'true,false': [4.686, 49, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.817, 418, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.781, 9, 5], 'true,false,true': [2.458, 18, 9], 'true,false,false': [0.453, 47, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 469, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.485, 76, 48], 'false,true,true,true': [1.095, 3, 2], 'false,true,true,false': [3.629, 49, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.24, 377, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.825, 10, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.131, 46, 28], 'false,true': [4.646, 60, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.069, 345, 190]}]
{'': [0.1983471074380178, 0.21827626222623595], 'false': [0.21905006858710704, 0.21813382348310092], 'true': [0.15532544378698218, 0.20786703601108156], 'true,false': [nan, 0.20786703601108156]}
{'': [0.20558609291040708, 0.2263305752507186], 'false': [nan, 0.2263305752507192], 'false,false': [nan, 0.2263305752507186], 'false,false,false': [0.2285481073359859, 0.22592152199761475]}
{'': [0.23456539265768875, 0.21705284045189352], 'true': [nan, 0.23456539265768847], 'true,false': [0.23164935480019466, 0.23570415879017076], 'false': [nan, 0.21705284045189352], 'false,false': [0.21418177286109102, 0.21735753124779433], 'false,false,true': [nan, 0.21418177286109102]}
{'': [0.2093962992494407, 0.2223369978958974], 'false': [nan, 0.2223369978958974], 'false,false': [nan, 0.2223369978958974], 'true': [0.21252460497333614, 0.20873233692798063]}
{'': [0.2328489188796105, 0.21529399111515543], 'true': [0.19618806844181996, 0.24127778045581375], 'false': [0.19179300800025598, 0.21813382348309807], 'false,false': [nan, 0.21813382348309807], 'false,true': [nan, 0.19179300800025598]}
{'': [0.0, 0.21644730456168343], 'false': [0.18954600273029085, 0.22112166656007862], 'false,false': [0.17561983471074386, 0.2222825752613035], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.23401702886653544, 0.2223438051948661], 'true': [0.18107733152123506, 0.2495796738876561], 'false': [nan, 0.22234380519486563], 'false,false': [nan, 0.2223438051948661], 'false,false,false': [nan, 0.2223438051948661]}
{'': [0.2133275034602415, 0.21866223263054205], 'false': [nan, 0.21866223263054205], 'false,false': [nan, 0.21866223263054205], 'true': [0.22667144205324138, 0.21046035645928252], 'true,false': [0.22379530734423453, 0.2050045913682283]}
{'': [0.23534566420259298, 0.22035788412097862], 'false': [0.20068845657618706, 0.2228070011726716], 'false,false': [nan, 0.2228070011726716], 'false,true': [0.20068845657618706, nan], 'false,true,true': [0.23999999999999994, 0.19655259844257697]}
{'': [0.22951527995218282, 0.22880743863752648], 'true': [0.22197024413195976, 0.23066276297416133], 'true,false': [nan, 0.23066276297416133], 'true,false,false': [nan, 0.23066276297416133], 'false': [0.22724944672204267, 0.22901563455323276], 'false,false': [nan, 0.22901563455323276], 'true,true': [nan, 0.22197024413195976]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 16.821
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, E), companyceo(C, D) )
%   | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( acquired(A, F), cityhascompanyoffice(G, A) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.14386322081379807;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( acquired(A, I), companyceo(A, J) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.030562728202960583;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.10376297018723167;  // std dev = 3.250, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.20081779836145175;  // std dev = 11.693, 607.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=208 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.7351695644486105;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.8432679966531015;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(C, E) )
%   | | | then return 0.051931941363754466;  // std dev = 2.665, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.23776019212928376;  // std dev = 2.590, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   else if ( cityhascompanyoffice(F, A), companyceo(A, G) )
%   | then if ( bankchiefexecutiveceo(A, G) )
%   | | then return -0.16549105309035905;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.046586590789595685;  // std dev = 0.408, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( acquired(H, A), bankboughtbank(H, I) )
%   | | then return -0.054339322305925836;  // std dev = 0.293, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.29544638396902856;  // std dev = 2.994, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.16249300592776864;  // std dev = 11.483, 595.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=198 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8011485333888135;  // std dev = 0.085, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(E, C), cityhascompanyoffice(F, C) )
%   | | then return -0.17894337882628614;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.01677611990145273;  // std dev = 0.378, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   else if ( companyceo(A, G), bankchiefexecutiveceo(A, H) )
%   | then if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.8252883025756568;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16584343822366826;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.8111573460538246;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.6198213613205958;  // std dev = 0.100, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( acquired(A, L) )
%   | | | then return 0.09774861878977617;  // std dev = 4.233, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | | else return 0.14543224958965514;  // std dev = 11.297, 575.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=194 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.5688890957578995;  // std dev = 0.312, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.45291292194315574;  // std dev = 0.300, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(C, E), acquired(C, F) )
%   | | | then return -0.19036707540468534;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1469822066254601;  // std dev = 2.742, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   else if ( acquired(A, G), companyceo(G, H) )
%   | then if ( countryhascompanyoffice(I, G) )
%   | | then return -0.20768433428401528;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.057184068034234814;  // std dev = 0.455, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | then return 0.005679855575223375;  // std dev = 0.377, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.09726888827472155;  // std dev = 5.178, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.09608050041606081;  // std dev = 11.018, 574.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=180 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, C) )
%   | | then return 0.4068175312338564;  // std dev = 0.271, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(E, E) )
%   | | | then return 0.25560143146225495;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11104673030162167;  // std dev = 0.425, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.09963302097174646;  // std dev = 0.322, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | then return 0.5547631267379011;  // std dev = 0.326, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, G) )
%   | | then if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.6217781453628671;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10220423585269194;  // std dev = 4.254, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | | else if ( acquired(I, A), acquired(J, I) )
%   | | | then return -0.1324615597977147;  // std dev = 0.798, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.09512997507572497;  // std dev = 11.677, 629.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=206 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, E), companyceo(E, F) )
%   | | then return 0.3384866815405836;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(D, G) )
%   | | | then return 0.5824058548784363;  // std dev = 0.291, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7132637507508005;  // std dev = 0.160, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(H, A), companyceo(A, I) )
%   | | then if ( companyalsoknownas(A, J), cityhascompanyoffice(K, A) )
%   | | | then return 0.10323446450759202;  // std dev = 0.945, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1514255075111521;  // std dev = 0.970, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( bankboughtbank(L, A), acquired(L, A) )
%   | | | then return -0.2113380487165005;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09632352880049476;  // std dev = 12.152, 680.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=240 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.2958596406753244;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4516229309711515;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(F, A), bankbankincountry(G, F) )
%   | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | then if ( acquired(I, H), acquired(A, J) )
%   | | | then return 0.3459652387281327;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6936984937317177;  // std dev = 0.274, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.24386250607264237;  // std dev = 0.051, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( acquired(A, K) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.40458646139870413;  // std dev = 0.474, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.06262333317143251;  // std dev = 4.049, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.10392472456746935;  // std dev = 2.977, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.04631774944093104;  // std dev = 10.883, 562.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=176 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( companyalsoknownas(C, D), economicsectorcompany(B, D) )
%   | then return 0.5783050198729649;  // std dev = 0.270, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.4717969201301044;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( cityhascompanyoffice(E, C) )
%   | | | then return -0.12715796553287462;  // std dev = 1.409, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return -0.03336765083594672;  // std dev = 3.021, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.5637565201678214;  // std dev = 0.294, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else return -0.259588860214939;  // std dev = 0.053, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, H), economicsectorcompany(B, H) )
%   | | | then return 0.34829771777821494;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.016504175578840565;  // std dev = 2.667, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else return 0.06906648873161576;  // std dev = 0.469, 457.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=160 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3580400863295452;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(E, D) )
%   | | then if ( companyceo(D, F) )
%   | | | then return -0.06304927793832094;  // std dev = 0.516, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.19103117813639228;  // std dev = 0.937, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( companyalsoknownas(D, G), acquired(H, G) )
%   | | | then return 0.1573323978214015;  // std dev = 1.138, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.05852094361234154;  // std dev = 3.053, 80.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | else if ( acquired(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.22585224423059838;  // std dev = 0.509, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.053872049527780186;  // std dev = 3.596, 110.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.07039726800852308;  // std dev = 2.880, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.0317342889063537;  // std dev = 10.387, 528.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=172 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D) )
%   | then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | then return 0.125189784895249;  // std dev = 0.382, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else return -0.021006291261263726;  // std dev = 0.296, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( acquired(G, A), countryhascompanyoffice(H, G) )
%   | | then return -0.024059277019905845;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0.598068652735888;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16729416663557942;  // std dev = 2.335, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   else if ( acquired(J, A), companyceo(J, K) )
%   | then return -0.015569759013285372;  // std dev = 0.317, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( companyalsoknownas(A, L) )
%   | | then return -0.07150916395853454;  // std dev = 0.336, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else if ( countryhascompanyoffice(M, A), bankbankincountry(N, M) )
%   | | | then return -0.009733984686842029;  // std dev = 1.974, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.027182053905480275;  // std dev = 10.547, 543.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=177 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '25.107', 'seconds']
Refined model CLL: -0.319937


******************************************
Best model found
******************************************
Results 

CLL : -0.320025 

AUC ROC : 0.725014 

AUC PR : 0.054464 

Precision : 0.085678 

Recall : 0.128846 

F1 : 0.102919 

Total Learning Time : 16.821 

Total Inference Time : 71.6793909072876 

Total revision time: 154.7930199699402
Best scored revision CLL: -0.319937


Results 

CLL : -0.320025 

AUC ROC : 0.725014 

AUC PR : 0.054464 

Precision : 0.085678 

Recall : 0.128846 

F1 : 0.102919 

Total Learning Time : 154.8936421470642 

Total Inference Time : 71.6793909072876 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.472
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.15814893509951236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16584124279181922;  // std dev = 0.462, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.15639454913459863;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | else return 0.21358171594665334;  // std dev = 0.479, 543.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.16365801473838565;  // std dev = 4.714, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1649480117993528;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.16576375774590424;  // std dev = 11.323, 575.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.14763282979236744;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.0801888218125843;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.1477030424949967;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10966010413769037;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | else return 0.14522973737225892;  // std dev = 0.474, 568.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.22631855666304498;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0.1216315110886295;  // std dev = 0.468, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13996694621141167;  // std dev = 12.083, 636.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.13165244090755218;  // std dev = 3.082, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else return 0.09566161072047584;  // std dev = 4.344, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15390150952964524;  // std dev = 3.843, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11097315805326144;  // std dev = 0.478, 545.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2256352838836531;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06297217455484373;  // std dev = 4.679, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.22256344423724486;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else return 0.06713636833751015;  // std dev = 12.002, 652.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.17695990446344717;  // std dev = 2.783, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else return 0.006762887547511945;  // std dev = 4.531, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07199584605096629;  // std dev = 11.889, 623.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.15322077204152046;  // std dev = 2.180, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.03080022582785264;  // std dev = 2.088, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return -0.050968430118211706;  // std dev = 0.419, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.047432714163852606;  // std dev = 0.473, 671.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.03068671571268667;  // std dev = 0.467, 132.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.31238555725291506;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.023953962330539955;  // std dev = 3.519, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.018624918443526386;  // std dev = 11.451, 602.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.09534026117923375;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.052818368385547924;  // std dev = 2.371, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -1.2476265919491612E-4;  // std dev = 4.168, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.08566332022465463;  // std dev = 4.526, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03507603251312945;  // std dev = 11.278, 566.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '57.307', 'seconds']
Parameter learned model CLL:-0.374158 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.51, 21, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.462, 54, 24], 'false,true': [4.885, 80, 34], 'false,false': [0.479, 350, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.714, 68, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.784, 70, 34], 'false,false,false,false': [11.323, 382, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.816, 2, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.422, 22, 8], 'true,false,false': [4.761, 68, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.11, 57, 24], 'false,false,false': [0.474, 375, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.495, 12, 9], 'true,false': [0.468, 50, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.083, 409, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.082, 26, 15], 'true,false': [4.344, 58, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.843, 39, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.478, 352, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [4.679, 69, 32], 'false,false,true': [2.498, 13, 12], 'false,false,false': [12.002, 437, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.783, 17, 15], 'true,false': [4.531, 77, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.889, 406, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.18, 11, 9], 'true,false,true': [2.088, 15, 6], 'true,false,false': [0.419, 61, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 444, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.467, 89, 43], 'false,true,true,true': [1.544, 4, 6], 'false,true,true,false': [3.519, 42, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.451, 409, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [2.371, 18, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.168, 61, 24], 'false,true': [4.526, 54, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.278, 373, 193]}]
{'': [0.21219135802469272, 0.22613280697974752], 'false': [0.20929516774392257, 0.2291003191464135], 'true': [0.21000000000000008, 0.213017751479291], 'true,false': [nan, 0.213017751479291]}
{'': [0.22004332387091838, 0.22253873994887913], 'false': [nan, 0.22253873994887782], 'false,false': [nan, 0.22253873994887913], 'false,false,false': [0.22004437869822427, 0.22298979206049332]}
{'': [0.21707263240830355, 0.2224997046528873], 'false': [nan, 0.2224997046528873], 'false,false': [0.20854127121004132, 0.22433234973220081], 'true': [0.2222222222222222, 0.21695041198977819], 'true,true': [0.2222222222222222, nan], 'true,false': [0.19550403493110616, 0.2222222222222217], 'false,false,true': [nan, 0.20854127121004132]}
{'': [0.22656465776235918, 0.2295517617736366], 'false': [nan, 0.2295517617736366], 'false,false': [nan, 0.2295517617736366], 'true': [0.24469427964638124, 0.2189971658262471]}
{'': [0.22369686365156988, 0.22948612440485097], 'false': [0.23444894453938886, 0.22872148809022833], 'false,true': [nan, 0.23444894453938886], 'false,false': [nan, 0.22872148809022833], 'true': [0.23172912356913083, 0.21944934985112294]}
{'': [0.25, 0.22207329610342808], 'true': [nan, 0.25], 'true,false': [nan, 0.25], 'false': [0.2167625245644323, 0.22285286402859353], 'false,false': [0.24960000000000016, 0.22093520183283522]}
{'': [0.21154258126235564, 0.22686587755980586], 'false': [nan, 0.2268658775598103], 'false,false': [nan, 0.22686587755980586], 'false,false,false': [nan, 0.22686587755980586], 'true': [0.24199796245869798, 0.19549492094187138]}
{'': [0.19753897983559188, 0.22328665213563773], 'false': [nan, 0.22328665213563773], 'false,false': [nan, 0.22328665213563773], 'true': [0.2376344648012647, 0.1836906075614532], 'true,false': [0.20759066488953964, 0.17593334401538172]}
{'': [0.2185062535515842, 0.21836519697468082], 'false': [0.22115772545961035, 0.2178149247800804], 'false,true': [0.22115772545961035, nan], 'false,true,true': [0.238312132817826, 0.20641397400236508], 'false,false': [nan, 0.2178149247800804]}
{'': [0.2086051061372904, 0.22609189813100072], 'false': [0.23272907834378342, 0.22471562886289134], 'false,false': [nan, 0.22471562886289134], 'true': [0.22000428308384473, 0.20441067557732745], 'true,true': [0.25, 0.21612899313596104], 'true,false': [nan, 0.20441067557732745], 'true,false,false': [nan, 0.20441067557732745]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(D, C).;true;true
0;true,false;acquired(A, C).;true;true
0;false;acquired(E, F), acquired(A, F).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,true;acquired(C, E).;true;true
2;true,false;acquired(F, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(A, H).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;true;acquired(C, C).;true;true
5;true,false;acquired(C, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 15.16
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15226658215833588;  // std dev = 0.456, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0.13087620782678436;  // std dev = 0.445, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( acquired(F, G), acquired(A, G) )
%   | then if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.14386322081379732;  // std dev = 0.452, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7770678540184304;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17203223489830102;  // std dev = 10.346, 497.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=156 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then return 0.6803540331441109;  // std dev = 0.346, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.15919432708745862;  // std dev = 0.006, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | | then return -0.1585410350598062;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.5071674699663036;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19296322912013103;  // std dev = 3.956, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   else if ( acquired(A, J), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, M) )
%   | | | then return 0.1710070815001561;  // std dev = 4.569, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | | else return 0.152887891208436;  // std dev = 11.184, 606.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.2577835325609126;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.09155227598672265;  // std dev = 0.413, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.2377417612448886;  // std dev = 3.010, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.09973462843716387;  // std dev = 3.304, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A) )
%   | | then return 0.0844316514821737;  // std dev = 0.430, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.23871551719607023;  // std dev = 2.782, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.1404368737549003;  // std dev = 10.663, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.049718443972437444;  // std dev = 0.370, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.23040396384768;  // std dev = 0.465, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.015746673529982956;  // std dev = 0.349, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.2530577547163059;  // std dev = 1.800, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.09241623362867955;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   else if ( acquired(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I) )
%   | | | then return 0.09471043952938553;  // std dev = 4.619, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | | else return 0.1273734953823702;  // std dev = 10.972, 568.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=193 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.658583716336226;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.05168680413438031;  // std dev = 1.847, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.20277394623705228;  // std dev = 1.742, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( acquired(A, G), companyceo(G, H) )
%   | | then return 0.1898367775897721;  // std dev = 0.484, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.06721537361646325;  // std dev = 0.437, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   else if ( acquired(I, A) )
%   | then return 0.04498042421724789;  // std dev = 0.425, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.12571906853681222;  // std dev = 3.829, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | | | else return 0.10094534853845281;  // std dev = 10.268, 477.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=159 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11054519741043542;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return -0.015548330576888439;  // std dev = 0.316, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else return 0.06169304188731992;  // std dev = 0.450, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | else if ( acquired(A, F), acquired(F, G) )
%   | | then if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.5334701076818209;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11534927367582848;  // std dev = 2.066, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( acquired(A, I) )
%   | | | then return -0.00842451086104043;  // std dev = 3.941, 90.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=22 */
%   | | | else return 0.08343118824544697;  // std dev = 10.955, 574.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=193 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.05080837042309321;  // std dev = 0.404, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.20519701690391823;  // std dev = 0.450, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( countryhascompanyoffice(F, A) )
%   | | then return 0.014757478154866808;  // std dev = 0.429, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( acquired(A, G), cityhascompanyoffice(H, G) )
%   | | | then return 0.05184868828122193;  // std dev = 1.415, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.13317759258680478;  // std dev = 3.238, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   else if ( acquired(I, A), acquired(I, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06850608801811253;  // std dev = 11.611, 650.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.031971813271123965;  // std dev = 0.385, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.11557794718217594;  // std dev = 0.455, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.07366156488294671;  // std dev = 0.454, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05227786623103802;  // std dev = 0.455, 672.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( cityhascompanyoffice(D, A), acquired(E, A) )
%   | then return -0.052926276689316834;  // std dev = 0.341, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.4861142638398997;  // std dev = 0.122, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.042784589257603964;  // std dev = 3.294, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return -0.0029593998858101316;  // std dev = 2.880, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   else if ( acquired(H, A) )
%   | then if ( acquired(H, I) )
%   | | then if ( acquired(I, J) )
%   | | | then return 0.1434918155059903;  // std dev = 1.734, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.06235663909910264;  // std dev = 3.366, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04582884635495831;  // std dev = 0.458, 568.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.580099570262061;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2166204004754733;  // std dev = 0.429, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0017713207538058808;  // std dev = 4.015, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( acquired(A, G) )
%   | then if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | then return 0.3551088920784881;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.030189947570517954;  // std dev = 0.433, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | else if ( acquired(I, A), acquired(I, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03525323133687928;  // std dev = 0.457, 570.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '41.563', 'seconds']
Refined model CLL: -0.347069


******************************************
Best model found
******************************************
Results 

CLL : -0.347209 

AUC ROC : 0.648796 

AUC PR : 0.024669 

Precision : 0.03876 

Recall : 0.03861 

F1 : 0.038685 

Total Learning Time : 15.16 

Total Inference Time : 118.29199743270874 

Total revision time: 199.9707236595154
Best scored revision CLL: -0.347069


Results 

CLL : -0.347209 

AUC ROC : 0.648796 

AUC PR : 0.024669 

Precision : 0.03876 

Recall : 0.03861 

F1 : 0.038685 

Total Learning Time : 200.0603106327057 

Total Inference Time : 118.29199743270874 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.443
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2310302910317157;  // std dev = 0.484, 118.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.22596502705353397;  // std dev = 4.498, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | else return 0.1867203636709364;  // std dev = 0.470, 560.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.21051070211582695;  // std dev = 5.210, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.16520017026918313;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | | | else return 0.1572405639851207;  // std dev = 11.158, 569.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.1694557612753854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.08122341751858299;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.10264751693757991;  // std dev = 4.736, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.186813479630385;  // std dev = 4.681, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
%   | | else return 0.1580959248715998;  // std dev = 0.476, 530.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1322179562457947;  // std dev = 0.478, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0.1210969042286525;  // std dev = 0.477, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11101731373270698;  // std dev = 12.072, 664.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.04497860618708795;  // std dev = 2.938, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else return 0.07410802206144979;  // std dev = 4.404, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09684958938930574;  // std dev = 4.814, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07082656284151022;  // std dev = 0.460, 604.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.17054799476812324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.10409620715433046;  // std dev = 5.228, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.06723817665408326;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.08091635403099463;  // std dev = 11.827, 635.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.15643922070407085;  // std dev = 2.649, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else return 0.031237240265038102;  // std dev = 4.448, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06759331940643468;  // std dev = 12.083, 657.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.06564307756989492;  // std dev = 2.373, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.17140460099680663;  // std dev = 1.639, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.03905422350086474;  // std dev = 0.478, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.050098040141950614;  // std dev = 0.468, 665.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.05540315320065873;  // std dev = 0.473, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.06422730013565478;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.10899243557961913;  // std dev = 4.058, 67.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.067697704193642;  // std dev = 10.910, 521.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.18621246070399244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.18976616219674577;  // std dev = 2.051, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056122073406850756;  // std dev = 4.576, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.03414354469761741;  // std dev = 4.641, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03567872363261684;  // std dev = 11.060, 549.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.229', 'seconds']
Parameter learned model CLL:-0.377476 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.484, 74, 44], 'false,true': [4.498, 55, 32], 'false,false': [0.47, 376, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.21, 71, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.607, 63, 32], 'false,false,false,false': [11.158, 385, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.39, 20, 8], 'true,false,false': [4.736, 75, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.681, 56, 36], 'false,false,false': [0.476, 346, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.478, 16, 9], 'true,false': [0.477, 64, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.072, 448, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.938, 31, 12], 'true,false': [4.404, 63, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.814, 65, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.46, 420, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [5.228, 73, 44], 'false,false,true': [2.353, 18, 8], 'false,false,false': [11.827, 427, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.649, 17, 12], 'true,false': [4.448, 67, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.083, 437, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.373, 15, 9], 'true,false,true': [1.639, 6, 5], 'true,false,false': [0.478, 55, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 449, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.473, 77, 40], 'false,true,true,true': [2.068, 11, 7], 'false,true,true,false': [4.058, 38, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.91, 337, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.051, 8, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.576, 53, 35], 'false,true': [4.641, 66, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.06, 365, 184]}]
{'': [0.2338408503303658, 0.22239368957667188], 'true': [nan, 0.2338408503303658], 'false': [0.23252741445369413, 0.2206122448979621]}
{'': [0.23602427640795692, 0.21946586074734523], 'false': [nan, 0.2194658607473453], 'false,false': [nan, 0.21946586074734523], 'false,false,false': [0.22337950138504098, 0.21880337656481266]}
{'': [0.2075403930136612, 0.22845409670482614], 'false': [nan, 0.22845409670482614], 'false,false': [0.23818525519848824, 0.2266429334282679], 'false,false,true': [nan, 0.23818525519848824], 'true': [0.0, 0.2085509517007267], 'true,false': [0.204081632653061, 0.2096252947855709], 'true,true': [0.0, nan]}
{'': [0.2278500167249953, 0.21946616077395767], 'true': [0.22887088522872162, 0.2275672866083835], 'false': [nan, 0.21946616077395767], 'false,false': [nan, 0.21946616077395767]}
{'': [0.2093218651219885, 0.21444240903431497], 'false': [0.22946812109137432, 0.2118328143502444], 'false,true': [nan, 0.2294681210913742], 'false,false': [nan, 0.2118328143502444], 'true': [0.20068397291831672, 0.21313121930359047]}
{'': [0.0, 0.2221117755082647], 'false': [0.23359443173750719, 0.21999469568313815], 'false,false': [0.21301775147928972, 0.22027300667772254], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.2189141898689256, 0.22222141080423444], 'false': [nan, 0.22222141080422916], 'false,false': [nan, 0.22222141080423444], 'false,false,false': [nan, 0.22222141080423444], 'true': [0.24193528017862523, 0.20822064639063068]}
{'': [0.2324957705858277, 0.21928903937753796], 'true': [0.23457509752049369, 0.23194983863744703], 'true,false': [0.2440741090456401, 0.2283737024221457], 'false': [nan, 0.21928903937753796], 'false,false': [nan, 0.21928903937753796]}
{'': [0.2239499819998569, 0.23080036403638712], 'false': [0.24439737874351813, 0.22844006616539192], 'false,true': [0.24439737874351813, nan], 'false,true,true': [0.237616929570193, 0.24579463298574858], 'false,false': [nan, 0.22844006616539192]}
{'': [0.24030065900820224, 0.22236644115232898], 'true': [0.24114402012141273, 0.23796917169700676], 'true,true': [0.0, 0.24747563332158837], 'true,false': [nan, 0.23796917169700676], 'true,false,false': [nan, 0.23796917169700676], 'false': [0.21978958781300037, 0.22282606892478377], 'false,false': [nan, 0.22282606892478377]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 9.882
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(D, A), companyceo(D, E) )
%   | then if ( bankchiefexecutiveceo(D, F) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( cityhascompanyoffice(G, D), countryhascompanyoffice(H, D) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.011995088945666131;  // std dev = 2.253, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else if ( acquired(A, I), cityhascompanyoffice(J, A) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07091489254632087;  // std dev = 2.806, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else return 0.186507144054732;  // std dev = 0.470, 670.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=220 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(D, E), companyalsoknownas(E, F) )
%   | then return -0.15583784164259665;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( companyceo(A, G) )
%   | | then if ( acquired(H, A) )
%   | | | then return 0.251202387629436;  // std dev = 1.251, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.04287051229458133;  // std dev = 1.955, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return -0.1661042410399185;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( bankchiefexecutiveceo(A, I) )
%   | then if ( companyceo(J, I), economicsectorcompany(B, J) )
%   | | then return 0.7957549767103725;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.0784781715140062;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(L, A), companyceo(A, M) )
%   | | | then return 0.0417321633992082;  // std dev = 2.176, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.1797572129329495;  // std dev = 12.204, 661.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=228 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), countryhascompanyoffice(F, A) )
%   | | then return -0.01584867914740696;  // std dev = 0.354, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( acquired(A, G), companyalsoknownas(G, H) )
%   | | | then return 0.5574827049921448;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1546134095950664;  // std dev = 4.642, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | then if ( acquired(K, I), companyceo(I, L) )
%   | | then return 0.8109791617770072;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.33329107248345236;  // std dev = 0.444, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | else if ( companyalsoknownas(A, M), economicsectorcompany(B, M) )
%   | | then return 0.8074827049921448;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( acquired(N, A), companyceo(N, P) )
%   | | | then return 0.06044123784383712;  // std dev = 1.908, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.1293845634651138;  // std dev = 11.280, 586.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=188 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), acquired(C, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.7462444057663885;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.19546874670318484;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( countryhascompanyoffice(E, A), cityhascompanyoffice(F, A) )
%   | then if ( countryhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | then return 0.7794600490089533;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.16905169331390785;  // std dev = 0.123, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | then if ( acquired(J, A), acquired(I, K) )
%   | | | then return 0.3863924494056866;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.024054246761092985;  // std dev = 1.859, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( acquired(A, L), acquired(L, M) )
%   | | | then return 0.22943536279299862;  // std dev = 2.419, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.12494705392423865;  // std dev = 12.044, 665.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=230 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyceo(C, E) )
%   | then return 0.3582530036494148;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6468978321896338;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.46679320321113454;  // std dev = 0.146, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7110359343793957;  // std dev = 1.201, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.22177191966241258;  // std dev = 0.379, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( acquired(I, J) )
%   | | | then return -0.15532864887024886;  // std dev = 0.915, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.015489129521893347;  // std dev = 2.437, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.21950060554434986;  // std dev = 3.356, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0.08743919035918798;  // std dev = 10.670, 531.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=174 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, D), companyalsoknownas(A, E) )
%   | then if ( companyceo(A, F) )
%   | | then if ( cityhascompanyoffice(G, D), companyceo(E, H) )
%   | | | then return -0.1558372623995212;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.013933050081966726;  // std dev = 1.893, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else return -0.1609151180335535;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then if ( cityhascompanyoffice(J, I) )
%   | | | then return 0.5273791050621996;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4340612150277438;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.5341567256477372;  // std dev = 0.365, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06576510190825773;  // std dev = 12.144, 739.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=241 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return -0.02056028803930067;  // std dev = 0.314, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else return -0.15771975338261862;  // std dev = 0.125, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.40373285108258783;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(E, F), companyceo(F, G) )
%   | | | then return -0.16079899813145182;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0042984177942490594;  // std dev = 3.126, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | else if ( acquired(A, H) )
%   | | then if ( countryhascompanyoffice(I, H), companyceo(A, J) )
%   | | | then return 0.6608363604494217;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10085991070430651;  // std dev = 3.598, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | else if ( bankboughtbank(K, A), countryhascompanyoffice(L, A) )
%   | | | then return 0.28400960093022903;  // std dev = 1.282, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06719757646174415;  // std dev = 10.958, 576.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=197 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( countryhascompanyoffice(D, C), companyceo(C, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return -0.21272361666825595;  // std dev = 0.226, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else return 0.0745196868715688;  // std dev = 0.483, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.3871831987665703;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( companyalsoknownas(C, G), cityhascompanyoffice(H, G) )
%   | | | then return 0.2670889234835048;  // std dev = 1.216, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.01093622753606753;  // std dev = 3.258, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   else if ( countryhascompanyoffice(I, A) )
%   | then return -0.011022574212649952;  // std dev = 0.369, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then return 0.0032344177790890744;  // std dev = 0.367, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.09702591394317578;  // std dev = 3.084, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | | else return 0.04721773123949785;  // std dev = 10.238, 498.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=162 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( companyceo(A, E), countryhascompanyoffice(F, D) )
%   | then if ( companyceo(C, G) )
%   | | then return -0.07947630875928517;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.24539494275263335;  // std dev = 0.943, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( companyceo(C, H) )
%   | | then if ( companyceo(D, I) )
%   | | | then return -0.05172976322002376;  // std dev = 0.795, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10060682655845432;  // std dev = 0.778, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( cityhascompanyoffice(J, A), acquired(D, K) )
%   | | | then return -0.04422055371937522;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1501841581885253;  // std dev = 0.579, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   else return 0.021474233681420287;  // std dev = 0.438, 779.000 (wgt'ed) examples reached here.  /* #neg=527 #pos=252 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.1088515166039307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(F, A), countryhascompanyoffice(G, F) )
%   | | | then return -0.12282479850551653;  // std dev = 1.116, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0240644393226111;  // std dev = 1.552, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.46791974409459663;  // std dev = 0.430, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2811072714286734;  // std dev = 0.245, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( acquired(A, J) )
%   | | | then return -0.0863254187524334;  // std dev = 1.436, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.09773456400342974;  // std dev = 2.987, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   else if ( cityhascompanyoffice(K, A) )
%   | then return 0.010356827193660531;  // std dev = 0.341, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | else return 0.03619831995956525;  // std dev = 0.463, 553.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=183 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.164', 'seconds']
Refined model CLL: -0.330489


******************************************
Best model found
******************************************
Results 

CLL : -0.330291 

AUC ROC : 0.703366 

AUC PR : 0.08114 

Precision : 0.396947 

Recall : 0.100386 

F1 : 0.160247 

Total Learning Time : 9.882 

Total Inference Time : 30.405123949050903 

Total revision time: 107.08675904273987
Best scored revision CLL: -0.330489


Results 

CLL : -0.330291 

AUC ROC : 0.703366 

AUC PR : 0.08114 

Precision : 0.396947 

Recall : 0.100386 

F1 : 0.160247 

Total Learning Time : 107.17634601593018 

Total Inference Time : 30.405123949050903 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.38
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15288577720477434;  // std dev = 0.456, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20128619000147172;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | else return 0.19031676726733998;  // std dev = 0.471, 572.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.22051557551580603;  // std dev = 4.513, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17497580047046615;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.16437785577254502;  // std dev = 11.274, 574.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.20355973460154855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.19669908556448165;  // std dev = 2.810, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else return 0.1330265533557703;  // std dev = 4.853, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10849832018109207;  // std dev = 3.736, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.11474111319805956;  // std dev = 0.461, 622.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.023726404982227216;  // std dev = 0.429, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else return 0.1142009699106058;  // std dev = 0.470, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13058047630803546;  // std dev = 12.182, 660.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.018037500773850773;  // std dev = 2.582, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else return 0.13465008067577997;  // std dev = 4.937, 104.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05160436304872763;  // std dev = 3.788, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1184298183333507;  // std dev = 0.477, 543.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.03547709815635939;  // std dev = 4.851, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.0695224099851561;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return 0.09356258024409136;  // std dev = 11.973, 632.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.01264166681804794;  // std dev = 2.591, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else return 0.10829518055096889;  // std dev = 4.877, 100.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05185328052184541;  // std dev = 11.939, 656.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07659906960882622;  // std dev = 1.815, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.11476320449568332;  // std dev = 2.296, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.04051314608980583;  // std dev = 0.457, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.047561896312703904;  // std dev = 0.470, 680.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.08674794058628907;  // std dev = 0.481, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.13134833619964886;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.02740128735743085;  // std dev = 3.706, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04788197963538277;  // std dev = 11.204, 560.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.016904449373443996;  // std dev = 1.897, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04033658850868936;  // std dev = 4.345, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.05386505935799492;  // std dev = 4.675, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.027331132406214136;  // std dev = 11.294, 578.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '53.658', 'seconds']
Parameter learned model CLL:-0.366674 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.793, 9, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.456, 67, 28], 'false,true': [4.795, 67, 35], 'false,false': [0.471, 382, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.513, 53, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.795, 67, 35], 'false,false,false,false': [11.274, 384, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.81, 20, 13], 'true,false,false': [4.853, 72, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.736, 46, 20], 'false,false,false': [0.461, 432, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.429, 15, 5], 'true,false': [0.47, 57, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.182, 435, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.582, 26, 9], 'true,false': [4.937, 65, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.788, 51, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 353, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.851, 84, 33], 'false,false,true': [2.034, 24, 5], 'false,false,false': [11.973, 412, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.591, 27, 9], 'true,false': [4.877, 61, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.939, 446, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.815, 10, 5], 'true,false,true': [2.296, 13, 9], 'true,false,false': [0.457, 45, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 455, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.481, 77, 48], 'false,true,true,true': [1.317, 13, 2], 'false,true,true,false': [3.706, 58, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.204, 370, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.897, 14, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.345, 60, 28], 'false,true': [4.675, 58, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.294, 388, 190]}]
{'': [0.21109334231125462, 0.2223868309133678], 'false': [0.22539407920030902, 0.22183236344075788], 'true': [0.2295918367346937, 0.20786703601108156], 'true,false': [nan, 0.20786703601108156]}
{'': [0.23679671778051956, 0.22205316225157493], 'false': [nan, 0.2220531622515754], 'false,false': [nan, 0.22205316225157493], 'false,false,false': [0.22539407920030827, 0.22144253299178931]}
{'': [0.22461263754767233, 0.21209290991005622], 'true': [0.0, 0.22534028365204106], 'true,false': [0.2392116771024043, 0.22010655952485048], 'false': [nan, 0.21209290991005622], 'false,false': [0.21145729991726345, 0.21215661541960554], 'false,false,true': [nan, 0.21145729991726345], 'true,true': [0.0, nan]}
{'': [0.21471377515162057, 0.22485070929015363], 'false': [nan, 0.22485070929015363], 'false,false': [nan, 0.22485070929015363], 'true': [0.18375142595157837, 0.22043986294902362]}
{'': [0.22584803682437585, 0.22499402344472863], 'true': [0.19040547793008356, 0.23435173989715488], 'false': [0.20209067334284928, 0.22747236721168948], 'false,false': [nan, 0.22747236721168948], 'false,true': [nan, 0.20209067334284925]}
{'': [nan, 0.22111192711091815], 'false': [0.20108925517217863, 0.2242659438189483], 'false,false': [0.14268727705112955, 0.22684239321568436]}
{'': [0.22604553501945, 0.21728858575962215], 'true': [0.1864887185886492, 0.2378640373990946], 'false': [nan, 0.21728858575961826], 'false,false': [nan, 0.21728858575962215], 'false,false,false': [nan, 0.21728858575962215]}
{'': [0.2179815807815735, 0.22127907380311093], 'false': [nan, 0.22127907380311093], 'false,false': [nan, 0.22127907380311093], 'true': [0.21953764001790138, 0.21766678990590368], 'true,false': [0.23953220080977175, 0.2087402343749995]}
{'': [0.23116343674944842, 0.217836816601238], 'false': [0.17151065348148495, 0.22417091836735123], 'false,false': [nan, 0.22417091836735123], 'false,true': [0.17151065348148495, nan], 'false,true,true': [0.11569488498886563, 0.18074588144195314]}
{'': [0.2105222572651313, 0.22273878214737597], 'false': [0.2350329961139461, 0.2206630667736291], 'false,false': [nan, 0.2206630667736291], 'true': [0.1893307159677785, 0.21451588880367378], 'true,false': [nan, 0.21451588880367378], 'true,false,false': [nan, 0.21451588880367378], 'true,true': [nan, 0.1893307159677785]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 12.905
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then if ( acquired(D, F), acquired(A, G) )
%   | | then if ( companyalsoknownas(G, H) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( acquired(D, I) )
%   | | | then return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( countryhascompanyoffice(J, A), bankbankincountry(K, J) )
%   | | then if ( countryhascompanyoffice(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.7217852987358758;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.19424165033129587;  // std dev = 11.609, 604.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=203 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.10079801338783467;  // std dev = 0.431, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | else if ( cityhascompanyoffice(F, A), bankchiefexecutiveceo(A, G) )
%   | | | then return 0.1509111451786088;  // std dev = 1.463, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.48766697801892717;  // std dev = 2.388, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   else if ( acquired(A, H), companyceo(H, I) )
%   | then return 0.0261780203326334;  // std dev = 0.378, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.8277970300368129;  // std dev = 0.142, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.16516684322736358;  // std dev = 0.062, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.8219884468848455;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13949591369144793;  // std dev = 10.573, 537.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=164 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.5862997153605947;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.7444181283910652;  // std dev = 0.235, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11454547945024214;  // std dev = 4.439, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   else if ( acquired(G, A) )
%   | then return 0.06811769234068803;  // std dev = 0.409, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( companyceo(A, H) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.11793805865777214;  // std dev = 1.439, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.23788266256173607;  // std dev = 2.649, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.8313127092110854;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1233886604851013;  // std dev = 10.466, 539.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=169 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, C) )
%   | then return 0.4873263242673718;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.7138291957426799;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.654465459228911;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then if ( companyceo(A, G) )
%   | | then return 0.410010477825736;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5183252980947098;  // std dev = 0.157, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(H, A), companyceo(H, I) )
%   | | then if ( companyalsoknownas(H, J), acquired(K, J) )
%   | | | then return 0.2924837580652337;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.11688169700643558;  // std dev = 1.900, 48.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.7335366379595288;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1039094925123644;  // std dev = 11.782, 698.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=219 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), acquired(D, A) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.500321664761807;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(A, E), cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, D) )
%   | | | then return 0.026019475042072516;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.024044927362791152;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.1768928886120952;  // std dev = 0.217, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.5001792986999797;  // std dev = 0.137, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( bankboughtbank(H, A) )
%   | | then if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.13566689090026235;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.49144553686104836;  // std dev = 1.175, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( acquired(A, J), countryhascompanyoffice(K, J) )
%   | | | then return -0.057827546171988;  // std dev = 1.609, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.10511869165677604;  // std dev = 11.559, 670.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=229 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(A, E), bankchiefexecutiveceo(D, F) )
%   | | then return 0.29675666650400856;  // std dev = 0.254, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.6116430629029609;  // std dev = 0.157, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.197681038296388;  // std dev = 0.251, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( acquired(A, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.32936128417344507;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( cityhascompanyoffice(H, G) )
%   | | | then return -0.21113400410180275;  // std dev = 0.131, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.06449013032431367;  // std dev = 2.948, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( acquired(I, A) )
%   | | then if ( acquired(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6161048713954392;  // std dev = 0.539, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.20952659349505126;  // std dev = 0.140, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0.07060041357625374;  // std dev = 0.461, 493.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=160 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then if ( companyceo(C, D), acquired(A, E) )
%   | | then return 0.27049707664783007;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(C, F) )
%   | | | then return 0.3464395422888353;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3343538611260246;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(G, C), cityhascompanyoffice(H, C) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.16728414534853764;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.213836605762287;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( companyalsoknownas(C, J), countryhascompanyoffice(K, J) )
%   | | | then return 0.20875031913473863;  // std dev = 0.948, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.023049439106099488;  // std dev = 2.804, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   else return 0.06909550186797522;  // std dev = 0.432, 654.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( countryhascompanyoffice(E, C), countryhascompanyoffice(F, A) )
%   | then return -0.03286825504229866;  // std dev = 0.313, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( companyceo(D, G), acquired(D, H) )
%   | | then return -0.014239209647122756;  // std dev = 0.499, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.46330400512872494;  // std dev = 0.737, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22599487503736168;  // std dev = 1.765, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   else if ( acquired(J, A), acquired(K, J) )
%   | then return -0.07955045007604228;  // std dev = 0.230, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( companyalsoknownas(A, L) )
%   | | then if ( countryhascompanyoffice(M, L) )
%   | | | then return -0.19239749771079392;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.056678476624752706;  // std dev = 2.402, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( acquired(N, A), companyceo(N, P) )
%   | | | then return 0.07546543571680915;  // std dev = 1.792, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.050049848139522575;  // std dev = 10.776, 619.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=206 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.16621325572627865;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2705758534861604;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(E, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.2578549617790144;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( companyceo(A, F), countryhascompanyoffice(G, A) )
%   | | | then return -0.15496867360038333;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.01805921251851514;  // std dev = 2.898, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | else if ( companyalsoknownas(A, H), acquired(I, H) )
%   | | then if ( acquired(J, I) )
%   | | | then return 0.4973782699431128;  // std dev = 0.217, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04663431842367919;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.034007188696572675;  // std dev = 3.525, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
%   | | | else return 0.05401493113548028;  // std dev = 10.305, 490.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=167 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, D) )
%   | then if ( companyalsoknownas(C, E), countryhascompanyoffice(F, E) )
%   | | then return -0.12027209065268374;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.053558659227282625;  // std dev = 1.054, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1755201055155001;  // std dev = 1.269, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return -0.04486514621730921;  // std dev = 0.251, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   else if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | then return -0.08252815777217982;  // std dev = 0.278, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( acquired(A, J), companyceo(A, K) )
%   | | then if ( companyalsoknownas(A, L), acquired(L, M) )
%   | | | then return 0.11412743080539893;  // std dev = 1.379, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.05741989398714256;  // std dev = 1.712, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.036633753361863856;  // std dev = 2.980, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.03428872408770998;  // std dev = 10.316, 499.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=168 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '40.761', 'seconds']
Refined model CLL: -0.309878


******************************************
Best model found
******************************************
Results 

CLL : -0.309925 

AUC ROC : 0.770404 

AUC PR : 0.097307 

Precision : 0.094371 

Recall : 0.219231 

F1 : 0.131944 

Total Learning Time : 12.905 

Total Inference Time : 53.72748947143555 

Total revision time: 133.01653281211853
Best scored revision CLL: -0.309878


Results 

CLL : -0.309925 

AUC ROC : 0.770404 

AUC PR : 0.097307 

Precision : 0.094371 

Recall : 0.219231 

F1 : 0.131944 

Total Learning Time : 133.10611978530883 

Total Inference Time : 53.72748947143555 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.603
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13087620782678436;  // std dev = 0.445, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20158327853385438;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else return 0.1830647600153327;  // std dev = 0.468, 594.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.22267147040957713;  // std dev = 4.472, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.13004259781795724;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | | else return 0.16713064883896464;  // std dev = 11.348, 580.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.01669953819875803;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.07499438958982148;  // std dev = 2.408, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else return 0.15281013504263188;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13664139901057873;  // std dev = 3.990, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | else return 0.12532783567470268;  // std dev = 0.465, 612.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.2210857356168308;  // std dev = 0.498, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0.09014171269511324;  // std dev = 0.458, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1295416942829226;  // std dev = 12.241, 668.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.12295231092515299;  // std dev = 3.080, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else return 0.056681419020288004;  // std dev = 4.474, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06708683307679027;  // std dev = 4.061, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11474483601417257;  // std dev = 0.476, 556.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6961498412017555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.04875548027216795;  // std dev = 4.723, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.22327678587607275;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else return 0.09154425344197337;  // std dev = 11.875, 625.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05790917454084835;  // std dev = 3.051, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else return 0.11691426177797112;  // std dev = 4.192, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07461671742451342;  // std dev = 11.921, 628.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.07838310362125142;  // std dev = 2.538, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.04242313455217293;  // std dev = 2.050, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.018012743963414665;  // std dev = 0.450, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.062016862919177636;  // std dev = 0.477, 650.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.033436936043202053;  // std dev = 0.470, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.01505787431214935;  // std dev = 2.047, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.03217084774359436;  // std dev = 3.502, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.022120564620913132;  // std dev = 11.446, 601.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.13672319156833132;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.03570720547457646;  // std dev = 2.371, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01664924989006997;  // std dev = 4.132, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.03271773637282455;  // std dev = 4.693, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.015340321139607326;  // std dev = 11.464, 605.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.892', 'seconds']
Parameter learned model CLL:-0.366154 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.058, 8, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.445, 64, 24], 'false,true': [4.725, 65, 34], 'false,false': [0.468, 401, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.472, 52, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.885, 80, 34], 'false,false,false,false': [11.348, 387, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.866, 3, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.408, 21, 8], 'true,false,false': [4.737, 66, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.99, 47, 24], 'false,false,false': [0.465, 419, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.498, 10, 9], 'true,false': [0.458, 56, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.241, 441, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.08, 26, 15], 'true,false': [4.474, 69, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.061, 53, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 363, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.723, 73, 32], 'false,false,true': [2.498, 13, 12], 'false,false,false': [11.875, 410, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.051, 26, 15], 'true,false': [4.192, 47, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.921, 411, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.538, 24, 9], 'true,false,true': [2.05, 14, 6], 'true,false,false': [0.45, 46, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 423, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.47, 85, 43], 'false,true,true,true': [2.047, 14, 6], 'false,true,true,false': [3.502, 41, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.446, 408, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.816, 2, 1], 'true,true,false': [2.371, 19, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.132, 59, 24], 'false,true': [4.693, 65, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.464, 412, 193]}]
{'': [0.21551020408163402, 0.22026490424759054], 'false': [0.22548719518416635, 0.21934553163509665], 'true': [0.24913494809688577, 0.19834710743801753], 'true,false': [nan, 0.19834710743801753]}
{'': [0.23527369272672097, 0.22012721419187184], 'false': [nan, 0.2201272141918731], 'false,false': [nan, 0.22012721419187184], 'false,false,false': [0.20929516774392054, 0.2220303210463632]}
{'': [0.21938065229947426, 0.2167831223638113], 'true': [0.18750000000000003, 0.2199460410217615], 'true,false': [0.19989353834430557, 0.2243999999999995], 'false': [nan, 0.2167831223638113], 'false,false': [0.22421279710739667, 0.21590787731214425], 'false,false,true': [nan, 0.22421279710739667], 'true,true': [0.18750000000000003, nan]}
{'': [0.21999464196530477, 0.2243305946680276], 'false': [nan, 0.2243305946680276], 'false,false': [nan, 0.2243305946680276], 'true': [0.24845802903138106, 0.2099438763690354]}
{'': [0.21465802048590696, 0.2253521927412991], 'false': [0.21414191390875506, 0.22662840950261656], 'false,false': [nan, 0.22662840950261656], 'true': [0.2313077799149123, 0.2063156739156717], 'false,true': [nan, 0.21414191390875514]}
{'': [0.0, 0.22540520851651788], 'false': [0.212414061712597, 0.2271852820692983], 'false,false': [0.24959999999999977, 0.22562125257893625], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.23254548247118728, 0.22627422272444422], 'true': [0.22701745181410043, 0.23433690693343218], 'false': [nan, 0.22627422272443962], 'false,false': [nan, 0.22627422272444422], 'false,false,false': [nan, 0.22627422272444422]}
{'': [0.2037275793065134, 0.22709629387928396], 'false': [nan, 0.22709629387928396], 'false,false': [nan, 0.22709629387928396], 'true': [0.19518817310131434, 0.20413591320567015], 'true,false': [0.2100418414305209, 0.2021484375000006]}
{'': [0.22123741188958343, 0.21688911749825865], 'false': [0.2083631203337984, 0.21800604095780313], 'false,false': [nan, 0.21800604095780313], 'false,true': [0.2083631203337984, nan], 'false,true,true': [0.20955949699956222, 0.2078834287040384]}
{'': [0.2077258541256668, 0.21801819978957643], 'false': [0.22250218448286746, 0.2172419916672381], 'false,false': [nan, 0.2172419916672381], 'true': [0.21058892290128978, 0.20565534401479682], 'true,true': [0.22222222222222224, 0.20827591114320332], 'true,false': [nan, 0.20565534401479682], 'true,false,false': [nan, 0.20565534401479682]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 16.86
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(C, E), acquired(E, F) )
%   | | | then return 0.06648226843284567;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.17814893509951232;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(H, A) )
%   | | then if ( countryhascompanyoffice(I, A), countryhascompanyoffice(I, H) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02682363389469309;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | else return 0.19549833268986924;  // std dev = 0.473, 581.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=196 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), cityhascompanyoffice(D, A) )
%   then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8327701923181121;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.16023291234788556;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.7291048158683332;  // std dev = 0.111, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1487299621027505;  // std dev = 0.462, 743.000 (wgt'ed) examples reached here.  /* #neg=509 #pos=234 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5660260028864145;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.05259569365621852;  // std dev = 0.407, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.6441228780397307;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | | then return 0.6552174332014115;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1381094860548619;  // std dev = 3.436, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.7645183073607085;  // std dev = 1.008, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.184433081107932;  // std dev = 0.099, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.8108851160895569;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.140672350132106;  // std dev = 10.192, 470.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=155 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), countryhascompanyoffice(E, D) )
%   | then return 0.39521561319394377;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(C, F) )
%   | | then return 0.6727753032233256;  // std dev = 0.209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5516555902501226;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(A, G) )
%   | then if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then return 0.4901535999813582;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(I, G), cityhascompanyoffice(J, G) )
%   | | | then return 0.4550318780973965;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -7.839909331181546E-5;  // std dev = 4.167, 121.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=25 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.412587315906356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return 0.21028347396369532;  // std dev = 2.757, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return 0.0996829944655447;  // std dev = 11.168, 612.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=190 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.02142135270262714;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.22483501539294212;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then if ( companyalsoknownas(A, G) )
%   | | then return 0.34704696092917303;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, H), acquired(H, I) )
%   | | | then return 0.5756928721845692;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40566411063477836;  // std dev = 0.235, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(J, A) )
%   | | then if ( acquired(K, J), economicsectorcompany(B, K) )
%   | | | then return 0.5633918351174948;  // std dev = 0.492, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02927669833196537;  // std dev = 3.836, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.15018331709434868;  // std dev = 4.345, 116.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=47 */
%   | | | else return 0.09485499717766553;  // std dev = 10.584, 518.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=169 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.7020778266926744;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A), cityhascompanyoffice(E, A) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.3657628155914681;  // std dev = 0.264, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(F, A) )
%   | | | then return 0.029937285854030188;  // std dev = 0.870, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14830274632993173;  // std dev = 0.747, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.5255658002665085;  // std dev = 1.332, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.22718432203224923;  // std dev = 0.293, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.10298960182692177;  // std dev = 4.160, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
%   | | | else return 0.093636225484193;  // std dev = 10.679, 534.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=184 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.33192488240469414;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( acquired(D, E), companyceo(A, F) )
%   | | then if ( companyalsoknownas(D, D) )
%   | | | then return -0.19473695547058506;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1460692011719414;  // std dev = 1.882, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( cityhascompanyoffice(G, D) )
%   | | | then return -0.139209725835655;  // std dev = 1.334, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.003867141024606378;  // std dev = 2.907, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | then if ( acquired(A, I), acquired(I, J) )
%   | | | then return 0.40519264698225804;  // std dev = 0.262, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28860814651164113;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(K, A) )
%   | | | then return -0.0021001523949943797;  // std dev = 3.669, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | | else return 0.07064818245723611;  // std dev = 10.713, 560.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=192 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.49619883676664134;  // std dev = 0.173, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.20528433198992396;  // std dev = 0.035, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return -0.09109857025361719;  // std dev = 0.179, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( acquired(A, G), acquired(E, H) )
%   | | | then return 0.3372558113008168;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10158075881005983;  // std dev = 2.620, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( acquired(I, A) )
%   | | then if ( companyalsoknownas(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.45931399662325506;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06621719763744291;  // std dev = 3.273, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.0956663073136081;  // std dev = 2.289, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.035598988017636335;  // std dev = 9.937, 464.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=146 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyalsoknownas(A, D), acquired(D, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0.3655253628851893;  // std dev = 0.708, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.0011207600125411055;  // std dev = 0.302, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.28874617642614037;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(H, A), acquired(A, I) )
%   | | | then return 0.014264699822040311;  // std dev = 1.651, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.06359279547164644;  // std dev = 2.805, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   else if ( cityhascompanyoffice(J, A) )
%   | then return -0.009255526681633163;  // std dev = 0.276, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | else if ( acquired(K, A), companyceo(K, L) )
%   | | then if ( acquired(K, M), economicsectorcompany(B, M) )
%   | | | then return 0.5371151566960625;  // std dev = 0.869, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.21460719082601057;  // std dev = 0.066, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0.07208449037827422;  // std dev = 0.467, 481.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=175 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( bankboughtbank(D, C), acquired(E, D) )
%   | then return -0.3791295227688718;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | | then return 0.06450589591374467;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2183287731767054;  // std dev = 0.243, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( cityhascompanyoffice(H, A), cityhascompanyoffice(H, C) )
%   | | | then return -0.19870896164967108;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0240548936585621;  // std dev = 3.681, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.24522396373802913;  // std dev = 0.283, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4378924856442563;  // std dev = 0.407, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.17853020842755368;  // std dev = 0.033, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0.03197715053455552;  // std dev = 0.454, 542.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=180 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '46.674', 'seconds']
Refined model CLL: -0.305692


******************************************
Best model found
******************************************
Results 

CLL : -0.30597 

AUC ROC : 0.768737 

AUC PR : 0.104465 

Precision : 0.11571 

Recall : 0.237452 

F1 : 0.155598 

Total Learning Time : 16.86 

Total Inference Time : 55.2894868850708 

Total revision time: 138.98242229270934
Best scored revision CLL: -0.305692


Results 

CLL : -0.30597 

AUC ROC : 0.768737 

AUC PR : 0.104465 

Precision : 0.11571 

Recall : 0.237452 

F1 : 0.155598 

Total Learning Time : 139.12679380226135 

Total Inference Time : 55.2894868850708 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.518
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2581489350995124;  // std dev = 0.490, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.17187442529558936;  // std dev = 4.686, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | else return 0.17160719745044475;  // std dev = 0.464, 587.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.20334068276527323;  // std dev = 5.224, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.14067460423748754;  // std dev = 4.717, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | | | else return 0.17418464398470304;  // std dev = 11.035, 544.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.05891153426120798;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.12338767659886442;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1922448675945407;  // std dev = 4.648, 90.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
%   | | else return 0.13688636371228247;  // std dev = 0.469, 564.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.2206048103659925;  // std dev = 0.494, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.11353880635403976;  // std dev = 0.476, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1382010457223536;  // std dev = 11.865, 620.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07525877937291886;  // std dev = 2.878, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else return 0.05904851027400619;  // std dev = 4.466, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10616840170915692;  // std dev = 4.750, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1067971102349556;  // std dev = 0.474, 538.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.21403112778264707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06687433251033965;  // std dev = 5.357, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.10744721267875862;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.0636256296561351;  // std dev = 11.920, 658.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09322054583107686;  // std dev = 2.765, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return 0.08194144121992622;  // std dev = 4.319, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06804313122382856;  // std dev = 12.033, 648.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.018682399006283858;  // std dev = 2.494, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.1063545719005954;  // std dev = 2.033, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return 0.16437401889690925;  // std dev = 0.499, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0541202465402417;  // std dev = 0.472, 648.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.04661874114172991;  // std dev = 0.466, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.004425477212875051;  // std dev = 2.141, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.051930848267972333;  // std dev = 4.178, 73.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0508188451215559;  // std dev = 10.998, 537.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.19882251374962628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.03344513848023363;  // std dev = 2.392, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036690497927348825;  // std dev = 4.631, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.056060176704760496;  // std dev = 4.578, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.020369162164482042;  // std dev = 11.163, 570.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '53.331', 'seconds']
Parameter learned model CLL:-0.373783 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.49, 66, 44], 'false,true': [4.686, 70, 32], 'false,false': [0.464, 403, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.224, 72, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.717, 73, 32], 'false,false,false,false': [11.035, 360, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.422, 22, 8], 'true,false,false': [4.707, 72, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.648, 54, 36], 'false,false,false': [0.469, 380, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.494, 11, 9], 'true,false': [0.476, 65, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.865, 404, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.878, 27, 12], 'true,false': [4.466, 69, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.75, 61, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 354, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [5.357, 82, 44], 'false,false,true': [2.284, 15, 8], 'false,false,false': [11.92, 450, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.765, 22, 12], 'true,false': [4.319, 56, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.033, 428, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.494, 21, 9], 'true,false,true': [2.033, 24, 5], 'true,false,false': [0.499, 33, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 432, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.466, 84, 40], 'false,true,true,true': [2.141, 13, 7], 'false,true,true,false': [4.178, 44, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.998, 353, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.392, 16, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.631, 59, 35], 'false,true': [4.578, 61, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.163, 386, 184]}]
{'': [0.24000000000000088, 0.2152169379488186], 'true': [nan, 0.24000000000000088], 'false': [0.21530180699731008, 0.21520218011487094]}
{'': [0.23521905935143536, 0.22205108778901816], 'false': [nan, 0.22205108778901936], 'false,false': [nan, 0.22205108778901816], 'false,false,false': [0.21188208616779997, 0.2238321799307938]}
{'': [0.20983064699780868, 0.22295028494308808], 'false': [nan, 0.22295028494308808], 'false,false': [0.24000000000000096, 0.21980785674764627], 'false,false,true': [nan, 0.24000000000000096], 'true': [nan, 0.2098306469978085], 'true,false': [0.19555555555555576, 0.2130177514792902]}
{'': [0.23114857241334913, 0.22706254483040753], 'true': [0.24410568802929272, 0.2266466277543125], 'false': [nan, 0.22706254483040753], 'false,false': [nan, 0.22706254483040753]}
{'': [0.20761136113613196, 0.22619330473485233], 'false': [0.23259880465631716, 0.22503834938709935], 'false,true': [nan, 0.23259880465631713], 'false,false': [nan, 0.22503834938709935], 'true': [0.2123097771063638, 0.20564695332076827]}
{'': [0.0, 0.21814788835593776], 'false': [0.22778116404234255, 0.21636503174558697], 'false,false': [0.22684310018903608, 0.21593392007473838], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.22293187468420664, 0.22346395835740274], 'false': [nan, 0.22346395835739818], 'false,false': [nan, 0.22346395835740274], 'false,false,false': [nan, 0.22346395835740274], 'true': [0.22488055427204606, 0.22210646733069805]}
{'': [0.22733855434157058, 0.22243707729736778], 'true': [0.2072747799162341, 0.23153301928047593], 'true,false': [0.1424561868492021, 0.24943310657596315], 'false': [nan, 0.22243707729736778], 'false,false': [nan, 0.22243707729736778]}
{'': [0.21739103439743473, 0.2270393347035325], 'false': [0.23736306733267176, 0.22523919006550916], 'false,true': [0.23736306733267176, nan], 'false,true,true': [0.22915582933755002, 0.23912630089629897], 'false,false': [nan, 0.22523919006550916]}
{'': [0.226828184373457, 0.2197059397031898], 'true': [0.22199757356939803, 0.22813217444515557], 'true,false': [nan, 0.22813217444515557], 'true,false,false': [nan, 0.22813217444515557], 'true,true': [0.0, 0.22880254334785174], 'false': [0.22537289258037746, 0.21860264696829618], 'false,false': [nan, 0.21860264696829618]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 12.375
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( acquired(E, D) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( acquired(A, F), companyceo(F, G) )
%   | | | then return -0.03658790700575096;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.11269438964496688;  // std dev = 3.231, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then if ( countryhascompanyoffice(H, I), acquired(A, I) )
%   | | | then return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.09451257146314873;  // std dev = 3.151, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else if ( bankboughtbank(J, A), countryhascompanyoffice(K, J) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.22255571476052474;  // std dev = 11.690, 590.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=215 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( acquired(D, A), cityhascompanyoffice(C, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.8313468003308531;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -7.342637658110778E-4;  // std dev = 0.371, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | | then return 0.02838463367488813;  // std dev = 0.371, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( acquired(A, G), companyceo(G, H) )
%   | | | then return 0.2994518063372335;  // std dev = 1.883, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.09668124661454527;  // std dev = 4.595, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | then return 0.8288422618575149;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, K), companyceo(A, L) )
%   | | | then return -0.14078757291542315;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.17956486418319217;  // std dev = 11.337, 568.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=198 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then return -0.027604691616743098;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( acquired(C, G) )
%   | | then if ( bankchiefexecutiveceo(A, H) )
%   | | | then return 0.445240405117243;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13162238230112913;  // std dev = 1.816, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( bankchiefexecutiveceo(A, I) )
%   | | | then return 0.06651850719278249;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4837079968770122;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | then return 0.19418388709508402;  // std dev = 0.463, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( companyalsoknownas(A, L) )
%   | | then return 0.09378677100074269;  // std dev = 0.413, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( countryhascompanyoffice(M, A) )
%   | | | then return 0.09368131748780725;  // std dev = 3.388, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.14253498204590223;  // std dev = 11.125, 556.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=189 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.7639745780169961;  // std dev = 0.068, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else return -0.19626987679171298;  // std dev = 0.328, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( bankboughtbank(E, A) )
%   | then if ( bankboughtbank(A, F), cityhascompanyoffice(G, E) )
%   | | then return -0.1742325408409312;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.5221347481119434;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14145643196752833;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( acquired(I, A), acquired(A, J) )
%   | | then if ( companyceo(A, K) )
%   | | | then return 0.028196424994523753;  // std dev = 0.553, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.21215673699340631;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.05623591267378638;  // std dev = 2.921, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.13898635473241405;  // std dev = 10.900, 525.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=191 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(D, E) )
%   | | then return 0.6052363992687387;  // std dev = 0.089, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( cityhascompanyoffice(C, F), companyalsoknownas(F, F) )
%   | | | then return 0.13974406270468975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.602888554281202;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1655411483803604;  // std dev = 0.291, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.6129349957983917;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6012513006289395;  // std dev = 0.921, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.2559903179307233;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( countryhascompanyoffice(K, A), bankboughtbank(L, A) )
%   | | | then return 0.5472762527814957;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.09134955009131314;  // std dev = 11.181, 570.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=192 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.17729813863124136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( companyceo(A, D) )
%   | then if ( acquired(E, A), countryhascompanyoffice(F, A) )
%   | | then return 0.3676439670259788;  // std dev = 0.583, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | | | then return -0.13877144206937417;  // std dev = 0.911, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.024843190951427715;  // std dev = 3.908, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then if ( companyalsoknownas(I, J), cityhascompanyoffice(K, J) )
%   | | | then return 0.39712646401685664;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4745856646398213;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return -0.01732972789046104;  // std dev = 2.640, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.08215999086688011;  // std dev = 10.926, 587.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=207 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( companyceo(D, E), acquired(D, F) )
%   | then if ( companyceo(F, G) )
%   | | then return -0.10222200952085723;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.15060093751857484;  // std dev = 0.640, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04603581597045416;  // std dev = 1.041, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return -0.08727451660051815;  // std dev = 0.179, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | then return 0.3375653187113819;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( bankboughtbank(J, A), countryhascompanyoffice(K, J) )
%   | | then if ( bankboughtbank(A, L) )
%   | | | then return 0.06533571682811129;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12085076962129566;  // std dev = 1.920, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.38246590171416806;  // std dev = 0.260, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.04717691640135397;  // std dev = 11.690, 704.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | then return 0.2463238021981662;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.348319541190176;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( bankchiefexecutiveceo(A, E), companyceo(F, E) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.46676414220957846;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankchiefexecutiveceo(F, G), countryhascompanyoffice(H, A) )
%   | | | then return -0.3792480741558477;  // std dev = 0.229, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.17472436577208347;  // std dev = 0.725, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( acquired(I, A), countryhascompanyoffice(J, I) )
%   | | then if ( countryhascompanyoffice(K, A) )
%   | | | then return -0.06408871600106984;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5036107460774075;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.018228960407229072;  // std dev = 3.376, 139.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=40 */
%   | | | else return 0.03731239275553513;  // std dev = 11.295, 606.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=196 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( companyceo(A, E) )
%   | then if ( acquired(F, A), companyceo(D, G) )
%   | | then return 0.14178265638024554;  // std dev = 0.592, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( countryhascompanyoffice(H, D), countryhascompanyoffice(H, C) )
%   | | | then return 0.08402130051801864;  // std dev = 0.767, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.057388968099116526;  // std dev = 1.078, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else return -0.19801425090596084;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | then return 0.5066121177642086;  // std dev = 0.339, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.38485465219220505;  // std dev = 1.188, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.16807037284275167;  // std dev = 0.134, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.04876594349141339;  // std dev = 2.621, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.04090850802608752;  // std dev = 11.042, 561.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=194 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.045366165594160374;  // std dev = 0.362, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( bankboughtbank(F, A), bankboughtbank(G, F) )
%   | | then return -0.36217688716911967;  // std dev = 0.976, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, H) )
%   | | | then return -0.19551412544735708;  // std dev = 0.630, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.01905834092017488;  // std dev = 3.402, 80.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=33 */
%   else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | then return 0.36599334711385856;  // std dev = 0.342, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then return -0.03408045713834145;  // std dev = 0.330, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return -0.01959277372580864;  // std dev = 2.657, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.029582280139696146;  // std dev = 10.391, 533.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=179 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '24.580', 'seconds']
Refined model CLL: -0.319946


******************************************
Best model found
******************************************
Results 

CLL : -0.319662 

AUC ROC : 0.724774 

AUC PR : 0.078135 

Precision : 0.081366 

Recall : 0.252896 

F1 : 0.12312 

Total Learning Time : 12.375 

Total Inference Time : 42.6109139919281 

Total revision time: 123.96400510597229
Best scored revision CLL: -0.319946


Results 

CLL : -0.319662 

AUC ROC : 0.724774 

AUC PR : 0.078135 

Precision : 0.081366 

Recall : 0.252896 

F1 : 0.12312 

Total Learning Time : 124.10837661552429 

Total Inference Time : 42.6109139919281 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.516
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.05045662740720463;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15922420391671543;  // std dev = 0.459, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.19148226843284427;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | else return 0.2029765213064044;  // std dev = 0.475, 551.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13776303082065347;  // std dev = 4.811, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.19778882456488245;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | | | else return 0.16032168718795264;  // std dev = 11.294, 578.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.25448372836122424;  // std dev = 2.722, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.1538808859480863;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08998393307166692;  // std dev = 3.816, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else return 0.1754482208789692;  // std dev = 0.482, 517.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.02011575893337043;  // std dev = 0.400, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.1647911477712738;  // std dev = 0.482, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12473806468591023;  // std dev = 12.134, 651.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.037178213218510704;  // std dev = 2.570, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0.10961608939537984;  // std dev = 5.020, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06443554240354463;  // std dev = 3.773, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07744402915906257;  // std dev = 0.467, 593.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.17443924125887264;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( acquired(D, A) )
%   | then return 0.0877693738033367;  // std dev = 4.690, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -6.907370772522015E-4;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.08497837034560055;  // std dev = 12.017, 641.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.03908829279825318;  // std dev = 2.533, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return 0.1277730421873951;  // std dev = 4.797, 95.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048687734111944096;  // std dev = 11.945, 657.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.020278419625876287;  // std dev = 1.968, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.13443883928923547;  // std dev = 2.227, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.01967651174744512;  // std dev = 0.449, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06384082280418621;  // std dev = 0.477, 643.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.010393939350467635;  // std dev = 0.465, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.05295727224489346;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.01989692502479645;  // std dev = 3.593, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.027219511811182474;  // std dev = 11.331, 586.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.15450160330991752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.06784584183115445;  // std dev = 1.853, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08602393140113203;  // std dev = 4.169, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.06344316272976591;  // std dev = 4.649, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.022615346340691185;  // std dev = 11.322, 584.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.281', 'seconds']
Parameter learned model CLL:-0.368146 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.01, 21, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.459, 65, 28], 'false,true': [4.83, 70, 35], 'false,false': [0.475, 361, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.811, 78, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.716, 61, 35], 'false,false,false,false': [11.294, 388, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.722, 17, 13], 'true,false,false': [4.77, 65, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.816, 54, 20], 'false,false,false': [0.482, 327, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.4, 19, 5], 'true,false': [0.482, 48, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.134, 426, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.57, 24, 9], 'true,false': [5.02, 71, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.773, 51, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.467, 403, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'false,true': [4.69, 69, 33], 'false,false,true': [1.936, 15, 5], 'false,false,false': [12.017, 421, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.533, 23, 9], 'true,false': [4.797, 56, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.945, 447, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.968, 19, 5], 'true,false,true': [2.227, 11, 9], 'true,false,false': [0.449, 49, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 418, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.465, 102, 48], 'false,true,true,true': [1.25, 8, 2], 'false,true,true,false': [3.593, 47, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.331, 396, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.853, 12, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.169, 47, 28], 'false,true': [4.649, 58, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.322, 394, 190]}]
{'': [0.20040957559494518, 0.22534717058298875], 'false': [0.22222222222222365, 0.2259215219976248], 'true': [0.15532544378698218, 0.2104289513238537], 'true,false': [nan, 0.2104289513238537]}
{'': [0.20854823016013527, 0.22240119379988543], 'false': [nan, 0.22240119379988504], 'false,false': [nan, 0.22240119379988543], 'false,false,false': [0.23166232638888953, 0.2206630667736328]}
{'': [0.23380906222509967, 0.2287764944277198], 'true': [nan, 0.23380906222509865], 'true,false': [0.24705393741009207, 0.2275], 'false': [nan, 0.2287764944277198], 'false,false': [0.19675672883090717, 0.2324450314079485], 'false,false,true': [nan, 0.19675672883090717]}
{'': [0.21877615769875958, 0.22617297483147697], 'false': [nan, 0.22617297483147697], 'false,false': [nan, 0.22617297483147697], 'true': [0.16036380920512275, 0.23219873013372833]}
{'': [0.22331849599680398, 0.21591262601861463], 'true': [0.20016256090044843, 0.22905437362455272], 'false': [0.2004528287218479, 0.21774553603166769], 'false,false': [nan, 0.21774553603166769], 'false,true': [nan, 0.20045282872184797]}
{'': [0.0, 0.22318452134697964], 'false': [0.21561641423962943, 0.22434849459111697], 'false,false': [0.18749999999999992, 0.22527615019306862], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.23316416659830777, 0.21715606152375602], 'true': [0.20046651201679316, 0.2421963849576665], 'false': [nan, 0.2171560615237524], 'false,false': [nan, 0.21715606152375602], 'false,false,false': [nan, 0.21715606152375602]}
{'': [0.20363552827377454, 0.22728063043501417], 'false': [nan, 0.22728063043501417], 'false,false': [nan, 0.22728063043501417], 'true': [0.16130689663573797, 0.21424521721928827], 'true,false': [0.2479430112814645, 0.20134083044982687]}
{'': [0.2158591118205913, 0.21623267761244055], 'false': [0.1935279633313708, 0.21910563897075502], 'false,false': [nan, 0.21910563897075502], 'false,true': [0.1935279633313708, nan], 'false,true,true': [0.15621603349585395, 0.1985605623545011]}
{'': [0.22448429249303076, 0.2214590949699755], 'true': [0.19335974134720627, 0.23177377344013234], 'true,false': [nan, 0.23177377344013234], 'true,false,false': [nan, 0.23177377344013234], 'false': [0.2323564374824874, 0.21949474573090716], 'false,false': [nan, 0.21949474573090716], 'true,true': [0.0, 0.20198726675935258]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 19.973
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( companyalsoknownas(C, D), acquired(E, D) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.005207758628924089;  // std dev = 0.354, 102.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.8381489350995122;  // std dev = 0.140, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26240425424844854;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( acquired(A, J), acquired(J, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1914822684328416;  // std dev = 10.132, 462.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=154 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.7392402461956502;  // std dev = 0.127, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.8047371907310567;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(E, C), countryhascompanyoffice(F, A) )
%   | | | then return -0.13622077614994446;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.17041197419325532;  // std dev = 2.564, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(A, H), companyceo(A, I) )
%   | | then if ( acquired(J, A) )
%   | | | then return -0.148814030857167;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.003167812218519763;  // std dev = 1.883, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else if ( acquired(K, A), companyceo(K, L) )
%   | | | then return -0.004478957565796313;  // std dev = 2.237, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.15626540257919128;  // std dev = 11.643, 647.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=210 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.5639308153436687;  // std dev = 0.124, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(D, A), cityhascompanyoffice(E, D) )
%   | then if ( companyalsoknownas(D, F), acquired(F, G) )
%   | | then if ( companyalsoknownas(D, G) )
%   | | | then return 0.5702081849869569;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.016094746715144777;  // std dev = 0.805, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( companyceo(D, H) )
%   | | | then return -0.14766700674607797;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.01980847270108726;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then if ( companyalsoknownas(A, J), companyceo(A, K) )
%   | | | then return 0.5540114759000055;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7547619268333755;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( bankboughtbank(L, A), cityhascompanyoffice(M, L) )
%   | | | then return 0.3117958359668147;  // std dev = 1.722, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12395929198754814;  // std dev = 11.899, 703.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=220 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.4245162094486975;  // std dev = 0.132, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(D, A) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.486403797488206;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(D, F), acquired(G, F) )
%   | | | then return 0.17313246371013258;  // std dev = 1.200, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.004389837752732229;  // std dev = 3.186, 80.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | else if ( countryhascompanyoffice(H, A), acquired(A, I) )
%   | | then if ( companyalsoknownas(A, J) )
%   | | | then return 0.16063707353058207;  // std dev = 1.684, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.13646149605268892;  // std dev = 0.944, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( acquired(A, K), acquired(K, L) )
%   | | | then return -0.03355769004861663;  // std dev = 1.053, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.14303011291774115;  // std dev = 11.255, 595.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=214 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( bankchiefexecutiveceo(A, E), acquired(A, F) )
%   | then return 0.3585935459333996;  // std dev = 1.089, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | | | then return 0.44607111565361934;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.710505822235271;  // std dev = 0.268, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.19361856105489544;  // std dev = 0.269, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | then return 0.6400761680076822;  // std dev = 0.410, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(K, A), companyceo(K, L) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.33340873405198285;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.012715632068512318;  // std dev = 2.083, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0.009175817808278555;  // std dev = 3.271, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.10985712965933164;  // std dev = 10.816, 558.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=194 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.18307745147151291;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(A, E) )
%   | | then if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | | | then return 0.39554809160966026;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3186329792580252;  // std dev = 0.211, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5617943107404382;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, H), companyceo(H, I) )
%   | | then if ( acquired(J, A), acquired(H, J) )
%   | | | then return 0.30042353375722897;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.053821550657151336;  // std dev = 1.618, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.27277792097481607;  // std dev = 0.133, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.07488670861719131;  // std dev = 11.675, 694.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=225 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.221221169907746;  // std dev = 0.122, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( countryhascompanyoffice(D, A), bankbankincountry(E, D) )
%   | then if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return -0.2154423414854641;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( countryhascompanyoffice(D, H), economicsectorcompany(B, H) )
%   | | | then return 0.48993820095066754;  // std dev = 1.066, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.1842123391025834;  // std dev = 0.294, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( bankchiefexecutiveceo(A, I) )
%   | | then return 0.527600263747147;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( acquired(A, J), cityhascompanyoffice(K, J) )
%   | | | then return -0.01874913377833855;  // std dev = 1.460, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.050154032976912316;  // std dev = 11.437, 666.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.25597526542338894;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.42487690306048537;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( countryhascompanyoffice(E, A), bankbankincountry(F, E) )
%   | then if ( acquired(G, A), bankboughtbank(G, H) )
%   | | then return -0.18313625736571323;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0.27041843433807905;  // std dev = 0.762, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.020129712176855188;  // std dev = 2.212, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( bankboughtbank(J, A) )
%   | | then if ( bankboughtbank(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.669468205320416;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2927881628528185;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.025619273541630426;  // std dev = 3.687, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | | else return 0.04521458433854938;  // std dev = 10.742, 584.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=191 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.2008801458773962;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5313113179111841;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then if ( companyceo(A, G) )
%   | | then if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.24971635419828295;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20593174708794834;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3270106999350198;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.4221930328985895;  // std dev = 0.451, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1642155769861077;  // std dev = 0.309, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.07694577592024197;  // std dev = 4.198, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | | else return 0.03380384836729495;  // std dev = 10.505, 537.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=173 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.08812700575935636;  // std dev = 0.248, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.054695788952139196;  // std dev = 0.242, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22808407886075457;  // std dev = 1.474, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( companyceo(A, G) )
%   | | | then return -0.07194449817280174;  // std dev = 1.034, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.020574643369173796;  // std dev = 2.530, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   else if ( acquired(A, H), cityhascompanyoffice(I, H) )
%   | then return -0.07661082729216054;  // std dev = 0.262, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( bankboughtbank(J, A) )
%   | | then if ( bankboughtbank(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.42800537064033933;  // std dev = 0.421, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.25673173520661874;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.022498710494186412;  // std dev = 0.432, 646.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=209 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '29.998', 'seconds']
Refined model CLL: -0.305918


******************************************
Best model found
******************************************
Results 

CLL : -0.30615 

AUC ROC : 0.742205 

AUC PR : 0.098745 

Precision : 0.193133 

Recall : 0.173077 

F1 : 0.182556 

Total Learning Time : 19.973 

Total Inference Time : 114.80594944953918 

Total revision time: 199.44956056022644
Best scored revision CLL: -0.305918


Results 

CLL : -0.30615 

AUC ROC : 0.742205 

AUC PR : 0.098745 

Precision : 0.193133 

Recall : 0.173077 

F1 : 0.182556 

Total Learning Time : 199.59393206977845 

Total Inference Time : 114.80594944953918 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.573
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, C) )
%   | then return 0.2227322684328443;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(D, E), companyalsoknownas(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1885454108704328;  // std dev = 0.470, 681.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=225 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.21770610289978584;  // std dev = 4.625, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17764993631187007;  // std dev = 12.149, 654.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.10542295492544212;  // std dev = 4.915, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15471565486366648;  // std dev = 0.476, 648.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=225 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.15845024573528108;  // std dev = 0.485, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1098055808489785;  // std dev = 12.301, 687.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.11787242812299703;  // std dev = 4.702, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08629132764600748;  // std dev = 0.468, 696.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=225 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.3933413147672799;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05646188214316573;  // std dev = 4.558, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.091096488014239;  // std dev = 12.149, 654.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=225 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.04237513611748537;  // std dev = 4.820, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05273803856110383;  // std dev = 12.339, 696.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.06577549906929078;  // std dev = 4.697, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.044073966310056306;  // std dev = 0.468, 692.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.04296305067050398;  // std dev = 0.478, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.046764480648325064;  // std dev = 12.215, 668.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=225 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.06733532764750527;  // std dev = 4.601, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02724930356980959;  // std dev = 12.305, 688.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '53.251', 'seconds']
Parameter learned model CLL:-0.371238 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, E), companyalsoknownas(A, E)'}, {'true,true': [4.716, 61, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 456, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.625, 55, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.149, 429, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.915, 78, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 423, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.485, 57, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.301, 462, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.702, 60, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 471, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [1.155, 2, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.558, 63, 31], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.149, 429, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.82, 70, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.339, 471, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.697, 61, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 467, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.478, 63, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.215, 443, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.601, 55, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.305, 463, 225]}]
{'': [0.2316623263888904, 0.22123464456907996], 'true': [0.2316623263888904, nan], 'false': [nan, 0.22123464456907996]}
{'': [0.23765432098765416, 0.22567544819459312], 'false': [nan, 0.22567544819459312], 'false,false': [nan, 0.22567544819459312], 'false,false,false': [nan, 0.22567544819459312]}
{'': [0.21379904456104548, 0.22665895061727553], 'false': [nan, 0.22665895061727553], 'false,false': [nan, 0.22665895061727553], 'true': [0.21379904456104548, nan], 'true,true': [0.21379904456104548, nan]}
{'': [0.23570415879016943, 0.220247516256357], 'true': [0.23570415879016943, nan], 'false': [nan, 0.220247516256357], 'false,false': [nan, 0.220247516256357]}
{'': [0.2326869806094185, 0.218768579072543], 'true': [0.2326869806094185, nan], 'false': [nan, 0.218768579072543], 'false,false': [nan, 0.218768579072543]}
{'': [0.22749999999999995, 0.22567544819459673], 'true': [0.22222222222222224, 0.22102761430511528], 'false': [nan, 0.22567544819459673], 'false,false': [nan, 0.22567544819459673], 'true,false': [nan, 0.22102761430511528]}
{'': [0.22124768431788383, 0.2187685790725371], 'true': [0.22124768431788383, nan], 'false': [nan, 0.2187685790725371], 'false,false': [nan, 0.2187685790725371], 'false,false,false': [nan, 0.2187685790725371]}
{'': [0.22979405693030377, 0.21942555715193052], 'true': [0.22979405693030377, nan], 'false': [nan, 0.21942555715193052], 'false,false': [nan, 0.21942555715193052]}
{'': [0.228855207410361, 0.22337435906629996], 'false': [nan, 0.22337435906629996], 'false,false': [nan, 0.22337435906629996]}
{'': [0.2351742147381058, 0.22008306855056495], 'true': [0.2351742147381058, nan], 'true,true': [0.2351742147381058, nan], 'false': [nan, 0.22008306855056495], 'false,false': [nan, 0.22008306855056495]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
0;true;companyalsoknownas(A, C).;true;true
0;false;companyalsoknownas(D, E), companyalsoknownas(A, E).;true;true
1;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
1;false;companyalsoknownas(A, D), companyalsoknownas(D, A).;true;true
1;false,false;companyalsoknownas(E, A), companyalsoknownas(F, E).;true;true
1;false,false,false;companyalsoknownas(A, G).;true;true
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
2;true;companyalsoknownas(D, A), companyalsoknownas(A, D).;true;true
2;true,true;companyalsoknownas(C, E).;true;true
2;false;companyalsoknownas(A, A).;true;true
2;false,false;companyalsoknownas(F, A).;true;true
3;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
3;true;companyalsoknownas(D, C).;true;true
3;false;companyalsoknownas(E, A).;true;true
3;false,false;companyalsoknownas(A, A).;true;true
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
4;false;companyalsoknownas(E, A).;true;true
4;false,false;companyalsoknownas(A, F).;true;true
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true
5;true,false;companyalsoknownas(C, C).;true;true
5;false;companyalsoknownas(D, A).;true;true
5;false,false;companyalsoknownas(A, E), companyalsoknownas(E, F).;true;true
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
6;true;companyalsoknownas(C, D).;true;true
6;false;companyalsoknownas(E, A), companyalsoknownas(E, E).;true;true
6;false,false;companyalsoknownas(A, F).;true;true
6;false,false,false;companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
7;true;companyalsoknownas(D, C).;true;true
7;false;companyalsoknownas(A, A).;true;true
7;false,false;companyalsoknownas(E, A), companyalsoknownas(A, E).;true;true
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false;companyalsoknownas(D, A).;true;true
8;false,false;companyalsoknownas(E, A).;true;true
9;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
9;true;companyalsoknownas(D, C).;true;true
9;true,true;companyalsoknownas(A, E), companyalsoknownas(D, E).;true;true
9;false;companyalsoknownas(A, F).;true;true
9;false,false;companyalsoknownas(G, A), companyalsoknownas(G, G).;true;true


Refining candidate
***************************
Model training time 13.731
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, C) )
%   | then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.10233498161113995;  // std dev = 3.984, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, G), companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.020939632773930943;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.11188027838309446;  // std dev = 3.562, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return 0.21182936597922059;  // std dev = 11.284, 557.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=197 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | | then return -0.09025434417726368;  // std dev = 1.368, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | | else return 0.08881927038022147;  // std dev = 3.791, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16828412202804818;  // std dev = 12.191, 669.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.12501437779321445;  // std dev = 4.015, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), companyceo(H, I) )
%   | | | then return 0.22247388858854297;  // std dev = 3.088, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.1439595384607835;  // std dev = 11.731, 617.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=208 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( companyalsoknownas(A, F), cityhascompanyoffice(G, F) )
%   | | | then return 0.02421386258504092;  // std dev = 2.648, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return 0.15965763716684736;  // std dev = 3.012, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(I, A), acquired(J, A) )
%   | | | then return 0.2835946673266575;  // std dev = 1.571, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12256729546247233;  // std dev = 12.015, 648.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=220 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.44114083130492526;  // std dev = 0.211, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.035783414646647256;  // std dev = 4.000, 91.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, A) )
%   | | | then return 0.12474549455079043;  // std dev = 4.171, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.09329688499245775;  // std dev = 11.443, 591.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=196 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.24406871111784467;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16757561487774267;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(E, A), acquired(F, A) )
%   | | | then return -0.04529315313525057;  // std dev = 0.980, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11528448754968783;  // std dev = 3.824, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H), companyalsoknownas(H, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(J, A) )
%   | | | then return 0.02813487128922073;  // std dev = 4.413, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | | else return 0.1001440127652398;  // std dev = 11.233, 551.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=196 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.30792060823902384;  // std dev = 0.203, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.2320640753708927;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.018947512315727156;  // std dev = 3.973, 90.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05079440164600217;  // std dev = 12.271, 691.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), countryhascompanyoffice(F, E) )
%   | | then if ( countryhascompanyoffice(G, A) )
%   | | | then return -0.071108142485904;  // std dev = 0.789, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.012256914791074994;  // std dev = 1.317, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( acquired(H, A) )
%   | | | then return -0.07309895740287561;  // std dev = 1.296, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.16040057862716295;  // std dev = 3.253, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.7015289302557901;  // std dev = 0.139, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04424495449555208;  // std dev = 12.050, 662.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=218 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.2377441502736323;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | | then if ( companyalsoknownas(E, G) )
%   | | | then return -0.08907421037938697;  // std dev = 0.310, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.33552888610452586;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( acquired(A, H), companyceo(A, I) )
%   | | | then return -0.06265498443565853;  // std dev = 2.046, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.03194742096354578;  // std dev = 2.985, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   else if ( companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(K, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.08172802445408904;  // std dev = 3.818, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.011202814243819376;  // std dev = 11.719, 655.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=201 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then if ( companyalsoknownas(A, F), acquired(G, F) )
%   | | | then return -0.0539386096853043;  // std dev = 1.120, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.06623996453943223;  // std dev = 3.716, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(I, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.050012680618589954;  // std dev = 5.131, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.01796852322756694;  // std dev = 11.110, 579.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '52.522', 'seconds']
Refined model CLL: -0.351914


******************************************
Best model found
******************************************
Results 

CLL : -0.35197 

AUC ROC : 0.560922 

AUC PR : 0.029726 

Precision : 0.282353 

Recall : 0.046332 

F1 : 0.079602 

Total Learning Time : 13.731 

Total Inference Time : 119.16682744026184 

Total revision time: 202.5052619972229
Best scored revision CLL: -0.351914


Results 

CLL : -0.35197 

AUC ROC : 0.560922 

AUC PR : 0.029726 

Precision : 0.282353 

Recall : 0.046332 

F1 : 0.079602 

Total Learning Time : 202.64961371803284 

Total Inference Time : 119.16682744026184 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.894
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.13287420982478626;  // std dev = 4.258, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20941948816378275;  // std dev = 0.477, 669.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=235 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.17903007589064085;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1668923250010298;  // std dev = 12.490, 699.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=235 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.10648995208316207;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1603654287949671;  // std dev = 0.478, 663.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=235 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.09336641594163553;  // std dev = 0.456, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11627378948690911;  // std dev = 12.485, 698.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=235 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.04700692591532233;  // std dev = 4.292, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10557915590197399;  // std dev = 0.476, 678.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=235 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07339750963128366;  // std dev = 4.190, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.057130801488385896;  // std dev = 12.660, 739.000 (wgt'ed) examples reached here.  /* #neg=504 #pos=235 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.01340469368645702;  // std dev = 4.326, 100.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06953808952092946;  // std dev = 12.439, 688.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=235 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.04470825101085072;  // std dev = 4.229, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.047314907675615935;  // std dev = 0.471, 705.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=235 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.027097734258681967;  // std dev = 0.446, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04186599883724579;  // std dev = 12.476, 696.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=235 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.05203440546786125;  // std dev = 4.168, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03799360702348054;  // std dev = 12.430, 686.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=235 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '9.173', 'seconds']
Parameter learned model CLL:-0.367495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.258, 66, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.477, 434, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.069, 49, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.49, 464, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.211, 61, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.478, 428, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.456, 60, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.485, 463, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.292, 70, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 443, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.19, 59, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.66, 504, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.326, 75, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.439, 453, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.229, 63, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 470, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.446, 66, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.476, 461, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.168, 57, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.43, 451, 235]}]
{'': [0.19925129815239812, 0.22787955161419574], 'false': [nan, 0.22787955161419574], 'true': [0.19925129815239812, nan]}
{'': [0.22370343316289232, 0.22316777902623242], 'false': [nan, 0.22316777902623242], 'false,false': [nan, 0.22316777902623242], 'false,false,false': [nan, 0.22316777902623242]}
{'': [0.20619253650622033, 0.22881504382701312], 'false': [nan, 0.22881504382701312], 'false,false': [nan, 0.22881504382701312], 'true': [0.20619253650622033, nan], 'true,true': [0.20619253650622033, nan]}
{'': [0.20761245674740428, 0.22332534215646618], 'false': [nan, 0.22332534215646618], 'false,false': [nan, 0.22332534215646618], 'true': [0.20761245674740428, nan]}
{'': [0.19390581717451427, 0.226470792979528], 'false': [nan, 0.226470792979528], 'false,false': [nan, 0.226470792979528], 'true': [0.19390581717451427, nan]}
{'': [0.2090419501133789, 0.21687501487766395], 'false': [nan, 0.21687501487766395], 'false,false': [nan, 0.21687501487766395], 'true': [nan, 0.2090419501133789], 'true,false': [nan, 0.2090419501133789]}
{'': [0.18718243294629971, 0.22489986141156973], 'false': [nan, 0.22489986141156973], 'false,false': [nan, 0.22489986141156973], 'false,false,false': [nan, 0.22489986141156973], 'true': [0.18718243294629971, nan]}
{'': [0.2032176789592424, 0.2222222222222192], 'false': [nan, 0.2222222222222192], 'false,false': [nan, 0.2222222222222192], 'true': [0.2032176789592424, nan]}
{'': [0.19909298561513072, 0.22364042475888915], 'false': [nan, 0.22364042475888915], 'false,false': [nan, 0.22364042475888915]}
{'': [0.21182838820199126, 0.22521440896225234], 'false': [nan, 0.22521440896225234], 'false,false': [nan, 0.22521440896225234], 'true': [0.21182838820199126, nan], 'true,true': [0.21182838820199126, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
0;true;companyalsoknownas(D, C).;true;true
0;false;companyalsoknownas(E, F), companyalsoknownas(A, F).;true;true
1;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
1;false;companyalsoknownas(A, D), companyalsoknownas(D, A).;true;true
1;false,false;companyalsoknownas(E, A), companyalsoknownas(F, E).;true;true
1;false,false,false;companyalsoknownas(A, G).;true;true
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
2;true;companyalsoknownas(D, A), companyalsoknownas(A, D).;true;true
2;true,true;companyalsoknownas(C, E).;true;true
2;false;companyalsoknownas(A, A).;true;true
2;false,false;companyalsoknownas(F, A).;true;true
3;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
3;true;companyalsoknownas(D, C).;true;true
3;false;companyalsoknownas(E, A).;true;true
3;false,false;companyalsoknownas(A, A).;true;true
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
4;false;companyalsoknownas(E, A).;true;true
4;false,false;companyalsoknownas(A, F).;true;true
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true
5;true,false;companyalsoknownas(C, C).;true;true
5;false;companyalsoknownas(D, A).;true;true
5;false,false;companyalsoknownas(A, E), companyalsoknownas(E, F).;true;true
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
6;true;companyalsoknownas(C, D).;true;true
6;false;companyalsoknownas(E, A), companyalsoknownas(E, E).;true;true
6;false,false;companyalsoknownas(A, F).;true;true
6;false,false,false;companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
7;true;companyalsoknownas(D, C).;true;true
7;false;companyalsoknownas(A, A).;true;true
7;false,false;companyalsoknownas(E, A), companyalsoknownas(A, E).;true;true
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false;companyalsoknownas(D, A).;true;true
8;false,false;companyalsoknownas(E, A).;true;true
9;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
9;true;companyalsoknownas(D, C).;true;true
9;true,true;companyalsoknownas(A, E), companyalsoknownas(D, E).;true;true
9;false;companyalsoknownas(A, F).;true;true
9;false,false;companyalsoknownas(G, A), companyalsoknownas(G, G).;true;true


Refining candidate
***************************
Model training time 13.67
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( companyalsoknownas(A, F), acquired(G, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.1340110040650296;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, I), companyalsoknownas(A, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J), companyceo(J, K) )
%   | | then if ( bankboughtbank(L, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( acquired(A, M), companyceo(A, N) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.19465687160744452;  // std dev = 11.860, 630.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=212 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.08104031723828672;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.15638160243607316;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( companyalsoknownas(A, G), cityhascompanyoffice(H, G) )
%   | | | then return -0.008920744711715778;  // std dev = 1.299, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.20467668087465035;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   else if ( companyalsoknownas(A, I), companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15524610162074606;  // std dev = 12.597, 724.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=235 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.05152786578223065;  // std dev = 3.489, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.10567858199934921;  // std dev = 5.211, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | | else return 0.1675615016799533;  // std dev = 11.205, 546.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=196 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( acquired(A, E) )
%   | | then if ( companyalsoknownas(A, A) )
%   | | | then return -0.1774937312333822;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03560494768385455;  // std dev = 2.258, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.10040036114817745;  // std dev = 2.657, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H), acquired(A, I) )
%   | | | then return 0.2869761292312898;  // std dev = 2.680, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.12828393562632817;  // std dev = 11.996, 638.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=220 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.34030496317141384;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( companyalsoknownas(A, F), acquired(G, F) )
%   | | | then return -0.13328299586688394;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.02356497203110783;  // std dev = 3.518, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(J, A), countryhascompanyoffice(K, J) )
%   | | | then return 0.02009799166846047;  // std dev = 2.268, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.10199751102844433;  // std dev = 12.219, 663.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=228 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.1718032376106867;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, D), acquired(E, D) )
%   | | | then return -0.06195644328312183;  // std dev = 0.644, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.05816665172745759;  // std dev = 3.517, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   else if ( companyalsoknownas(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G), companyalsoknownas(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.09336712041056913;  // std dev = 5.017, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
%   | | | else return 0.08252183707987448;  // std dev = 11.331, 570.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=196 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E) )
%   | | then if ( acquired(F, A), cityhascompanyoffice(G, A) )
%   | | | then return 0.09043810067042081;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.05486926996461915;  // std dev = 1.950, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.2471423691205663;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.10514400618703343;  // std dev = 2.581, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), companyalsoknownas(I, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06703783441525532;  // std dev = 12.406, 682.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=235 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then if ( companyceo(E, F) )
%   | | | then return 0.20338309117309245;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26007447609204404;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, G), acquired(H, G) )
%   | | | then return -0.12375324053086093;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.04386887876712785;  // std dev = 3.411, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(J, A), cityhascompanyoffice(K, A) )
%   | | | then return 0.19723261567901493;  // std dev = 2.568, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.04161202395654651;  // std dev = 12.166, 669.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=222 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.19563808472183952;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyceo(A, E), cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.7965452196773437;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19376212460014508;  // std dev = 0.131, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( companyceo(A, H) )
%   | | | then return -0.16751207230824283;  // std dev = 0.193, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.024510731721543593;  // std dev = 2.611, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   else if ( companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), countryhascompanyoffice(L, K) )
%   | | | then return 0.1484738896441887;  // std dev = 1.989, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.04193873312289534;  // std dev = 12.215, 665.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=228 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | | | then return -0.12684382055925128;  // std dev = 0.382, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.04310577729727683;  // std dev = 3.227, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(I, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, J), companyceo(J, K) )
%   | | | then return 0.24083579870182747;  // std dev = 2.063, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.02357761316862708;  // std dev = 12.222, 676.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=224 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '15.743', 'seconds']
Refined model CLL: -0.361106


******************************************
Best model found
******************************************
Results 

CLL : -0.361394 

AUC ROC : 0.54896 

AUC PR : 0.015852 

Precision : 0.285714 

Recall : 0.034749 

F1 : 0.061962 

Total Learning Time : 13.67 

Total Inference Time : 121.97447395324707 

Total revision time: 204.4704931869507
Best scored revision CLL: -0.361106


Results 

CLL : -0.361394 

AUC ROC : 0.54896 

AUC PR : 0.015852 

Precision : 0.285714 

Recall : 0.034749 

F1 : 0.061962 

Total Learning Time : 204.61484490776064 

Total Inference Time : 121.97447395324707 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.662
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18373033044834824;  // std dev = 0.469, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.14503418100115023;  // std dev = 4.996, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | else return 0.19804160057356865;  // std dev = 0.474, 559.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1543692709846232;  // std dev = 4.741, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1577428842977843;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.17279371263171137;  // std dev = 11.194, 558.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.33648242353617336;  // std dev = 2.497, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else return 0.1536983829557794;  // std dev = 4.819, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09556403512042085;  // std dev = 3.784, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else return 0.1466637964021012;  // std dev = 0.474, 559.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.026934068273424573;  // std dev = 0.385, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else return 0.1191745431589762;  // std dev = 0.470, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11706076641586811;  // std dev = 12.252, 677.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05459566107003273;  // std dev = 2.533, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return 0.16665179404120897;  // std dev = 4.817, 98.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09116006249807082;  // std dev = 3.709, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10528009676561799;  // std dev = 0.475, 554.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1776212656605756;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( acquired(D, A) )
%   | then return 0.08313828616972767;  // std dev = 4.673, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.041260299733977185;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.07156220049230184;  // std dev = 12.151, 669.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.044883369821034184;  // std dev = 2.528, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else return 0.07877441220769967;  // std dev = 5.006, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04722846897858844;  // std dev = 11.974, 665.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.03385623018664001;  // std dev = 1.973, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.143596265496915;  // std dev = 2.164, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.04252038825840045;  // std dev = 0.461, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0695035049089875;  // std dev = 0.477, 643.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.044082335996031376;  // std dev = 0.473, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.050051991203970206;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.023735424425046954;  // std dev = 3.565, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02607974073149878;  // std dev = 11.359, 592.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08947650089431004;  // std dev = 1.797, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023849882569485913;  // std dev = 4.312, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.07666103454512961;  // std dev = 4.644, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.019010167997458655;  // std dev = 11.372, 595.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.658', 'seconds']
Parameter learned model CLL:-0.364405 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.966, 17, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.469, 58, 28], 'false,true': [4.996, 87, 35], 'false,false': [0.474, 369, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.741, 71, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.885, 75, 35], 'false,false,false,false': [11.194, 368, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.497, 12, 13], 'true,false,false': [4.819, 69, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.784, 51, 20], 'false,false,false': [0.474, 369, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.385, 22, 5], 'true,false': [0.47, 56, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.252, 452, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.533, 23, 9], 'true,false': [4.817, 59, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.709, 44, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 364, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'false,true': [4.673, 66, 33], 'false,false,true': [1.9, 13, 5], 'false,false,false': [12.151, 449, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.528, 21, 9], 'true,false': [5.006, 69, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.974, 455, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.973, 18, 5], 'true,false,true': [2.164, 10, 9], 'true,false,false': [0.461, 43, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 418, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.473, 91, 48], 'false,true,true,true': [1.247, 7, 2], 'false,true,true,false': [3.565, 44, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.359, 402, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.797, 10, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.312, 59, 28], 'false,true': [4.644, 57, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.372, 405, 190]}]
{'': [0.21219135802469272, 0.22123464456907996], 'false': [0.20458210158559662, 0.2243656414310019], 'true': [0.17561983471074363, 0.21957815035154268], 'true,false': [nan, 0.21957815035154268]}
{'': [0.21615148522338734, 0.22333699193585346], 'false': [nan, 0.22333699193585105], 'false,false': [nan, 0.22333699193585346], 'false,false,false': [0.2169421487603314, 0.2245603216813779]}
{'': [0.2335738590446978, 0.2220634981639541], 'true': [nan, 0.23357385904469652], 'true,false': [0.249459760599265, 0.22328032544378637], 'false': [nan, 0.2220634981639541], 'false,false': [0.20162126387481097, 0.2243656414309959], 'false,false,true': [nan, 0.20162126387481097]}
{'': [0.20724443897115588, 0.2217413271186481], 'false': [nan, 0.2217413271186481], 'false,false': [nan, 0.2217413271186481], 'true': [0.14860119420142578, 0.2209013631719032]}
{'': [0.230158054915745, 0.22428541265127938], 'true': [0.2005092185892624, 0.23674845788634516], 'false': [0.21499064523415834, 0.22533852910894595], 'false,false': [nan, 0.22533852910894595], 'false,true': [nan, 0.21499064523415837]}
{'': [0.0, 0.22026793880019271], 'false': [0.22058010618455884, 0.22020368079124603], 'false,false': [0.2006172839506173, 0.220706611269155], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.22808556119654586, 0.21559133493179625], 'true': [0.21296167903450672, 0.23203694332400862], 'false': [nan, 0.21559133493179672], 'false,false': [nan, 0.21559133493179625], 'false,false,false': [nan, 0.21559133493179625]}
{'': [0.21233406900384047, 0.22719728881942658], 'false': [nan, 0.22719728881942658], 'false,false': [nan, 0.22719728881942658], 'true': [0.1693108488684446, 0.22233520494328782], 'true,false': [0.24648178795623185, 0.21253902185223694]}
{'': [0.22377646416372401, 0.2161885341361263], 'false': [0.20146553485966442, 0.21793964572681196], 'false,false': [nan, 0.21793964572681196], 'false,true': [0.20146553485966442, nan], 'false,true,true': [0.1728395061728396, 0.2049307677495723]}
{'': [0.21449356906048475, 0.22003182788547698], 'false': [0.2344490130980444, 0.2173575312477928], 'false,false': [nan, 0.2173575312477928], 'true': [0.21520184689694466, 0.2137380914520191], 'true,true': [nan, 0.21520184689694466], 'true,false': [nan, 0.2137380914520191], 'true,false,false': [nan, 0.2137380914520191]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 35.955
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( cityhascompanyoffice(D, A), cityhascompanyoffice(E, C) )
%   | | then if ( cityhascompanyoffice(D, C) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else return 0.15602127552504425;  // std dev = 0.457, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(G, A), cityhascompanyoffice(H, G) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.22021790061675325;  // std dev = 3.660, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.1688285467499932;  // std dev = 11.504, 618.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=192 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then return 0.793026147583176;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | | then return -0.07247319593657574;  // std dev = 0.329, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.17527936688291879;  // std dev = 2.702, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.5047422629901209;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( cityhascompanyoffice(I, A), countryhascompanyoffice(J, A) )
%   | then if ( countryhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | then return 0.8306049351656309;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.17102007313331696;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | then return 0.7392404428963711;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.763367967819152;  // std dev = 0.962, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.14069909910162762;  // std dev = 12.072, 693.000 (wgt'ed) examples reached here.  /* #neg=481 #pos=212 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), companyceo(A, F) )
%   | then if ( companyalsoknownas(C, G) )
%   | | then return 0.1727548365865019;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4614766888875637;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.026544473393509987;  // std dev = 0.348, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   else if ( bankchiefexecutiveceo(A, H) )
%   | then if ( companyceo(I, H), economicsectorcompany(B, I) )
%   | | then return 0.7237126550909729;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, H) )
%   | | | then return -0.16044811176462961;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24135312915944931;  // std dev = 1.928, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | then return 0.5935305008863919;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.7120387904134142;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1302921969517993;  // std dev = 12.248, 704.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=224 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5420476070790082;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyceo(C, E) )
%   | | then if ( companyceo(D, F) )
%   | | | then return 0.14361923574439694;  // std dev = 1.266, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.2024578322904204;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(G, D) )
%   | | | then return 0.09823968787997688;  // std dev = 0.949, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.47219967024020726;  // std dev = 1.653, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.6571242255361753;  // std dev = 0.080, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | then return -0.0674494005790622;  // std dev = 0.345, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.5498895113166934;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12374339995778716;  // std dev = 11.772, 641.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=214 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.43035969102045923;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( acquired(A, D) )
%   | | then if ( economicsectorcompany(B, D) )
%   | | | then return 0.4468314241350055;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0056115209884376425;  // std dev = 2.805, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else return -0.07715330174878113;  // std dev = 0.365, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   else if ( acquired(A, E), companyceo(A, F) )
%   | then return -0.020768507019246724;  // std dev = 0.355, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( acquired(G, A), cityhascompanyoffice(H, G) )
%   | | then if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.6600995698010519;  // std dev = 0.293, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07505027958179078;  // std dev = 1.616, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.10331685802811938;  // std dev = 4.877, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.1162307922292104;  // std dev = 10.359, 487.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=169 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then if ( cityhascompanyoffice(F, D) )
%   | | then if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.29795731569788675;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03154018911956549;  // std dev = 2.715, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else return -0.20975591345745379;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( acquired(H, A), cityhascompanyoffice(I, H) )
%   | | then if ( companyalsoknownas(H, J), economicsectorcompany(B, J) )
%   | | | then return 0.5180580404326537;  // std dev = 0.330, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06623582931576417;  // std dev = 2.027, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.06724457921769983;  // std dev = 2.756, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.06895804916437805;  // std dev = 11.763, 668.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | then return -0.08832521170796082;  // std dev = 0.299, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else return 0.04623000269094857;  // std dev = 0.414, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else if ( acquired(A, G) )
%   | then if ( companyceo(A, H), acquired(G, I) )
%   | | then return -0.03964072644775544;  // std dev = 0.319, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.5706607555638954;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13747788835288646;  // std dev = 3.764, 69.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=32 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.31410302617778296;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.027141984691411367;  // std dev = 2.336, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( acquired(L, A), acquired(M, L) )
%   | | | then return -0.12507447563152654;  // std dev = 0.640, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.07560392575681558;  // std dev = 10.840, 544.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=184 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.43322862361639397;  // std dev = 0.328, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.3395512322414202;  // std dev = 0.305, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( economicsectorcompany(B, C) )
%   | | | then return 0.3000494963569248;  // std dev = 0.216, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.03651295475502013;  // std dev = 4.378, 113.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   else if ( bankboughtbank(F, A), acquired(F, G) )
%   | then return -0.08901256836958231;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( cityhascompanyoffice(I, H), companyceo(A, J) )
%   | | | then return -0.28862153700415694;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03346909118408217;  // std dev = 2.446, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( acquired(K, A), companyalsoknownas(K, L) )
%   | | | then return 0.12475499821009811;  // std dev = 1.655, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.06266213465679456;  // std dev = 10.997, 559.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=189 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.43308378729163893;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.6485910968937949;  // std dev = 0.199, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.2588484990976402;  // std dev = 0.466, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.2672576743955779;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(F, G) )
%   | | | then return -0.15102805405206315;  // std dev = 0.886, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.02951961607927419;  // std dev = 2.575, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else if ( acquired(H, A), bankboughtbank(H, I) )
%   | | then return -0.16375620346955896;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.40147535367975784;  // std dev = 0.326, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.02151158058637763;  // std dev = 10.694, 555.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=171 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.19562568706856365;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.23256914287379393;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(F, A) )
%   | | | then return 0.09576984353528638;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11199364547643698;  // std dev = 1.505, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   else if ( acquired(G, A), acquired(H, G) )
%   | then return -0.12289257022497359;  // std dev = 0.179, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.5057778743329134;  // std dev = 0.936, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return -0.22507476719137598;  // std dev = 0.270, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( bankboughtbank(K, A), bankchiefexecutiveceo(K, L) )
%   | | | then return 0.3505018829604702;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04478525971303872;  // std dev = 10.776, 559.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=191 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.774', 'seconds']
Refined model CLL: -0.312572


******************************************
Best model found
******************************************
Results 

CLL : -0.312996 

AUC ROC : 0.704887 

AUC PR : 0.095169 

Precision : 0.095912 

Recall : 0.234615 

F1 : 0.136161 

Total Learning Time : 35.955 

Total Inference Time : 37.23262071609497 

Total revision time: 139.75732125473024
Best scored revision CLL: -0.312572


Results 

CLL : -0.312996 

AUC ROC : 0.704887 

AUC PR : 0.095169 

Precision : 0.095912 

Recall : 0.234615 

F1 : 0.136161 

Total Learning Time : 139.90167297554018 

Total Inference Time : 37.23262071609497 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.59
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.20979728674786263;  // std dev = 0.477, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.19814893509951095;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | else return 0.1897640553744219;  // std dev = 0.471, 582.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1250919117948363;  // std dev = 4.821, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.19017167484842531;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | | else return 0.16000928547965185;  // std dev = 11.401, 591.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7886420087245505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.13231311424271255;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.19039432877399376;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12400142593102433;  // std dev = 4.064, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else return 0.15715561675458942;  // std dev = 0.476, 556.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.25738416546068155;  // std dev = 0.492, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return 0.062042919626563234;  // std dev = 0.444, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12164368242305014;  // std dev = 12.251, 670.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.12200725950610296;  // std dev = 3.020, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else return 0.06592404611300146;  // std dev = 4.406, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08805442392471939;  // std dev = 4.049, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10866231260810008;  // std dev = 0.475, 559.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.33788695461134216;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06985023509899116;  // std dev = 4.689, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.17108296619786406;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else return 0.08492634388068435;  // std dev = 11.892, 628.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07531195065306012;  // std dev = 3.034, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else return 0.04148526248218191;  // std dev = 4.393, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08142304769591248;  // std dev = 11.849, 616.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.006050546469949758;  // std dev = 2.461, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.08045305549639085;  // std dev = 2.006, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.007456310834830393;  // std dev = 0.443, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.058753822296498635;  // std dev = 0.477, 649.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.07165349197964349;  // std dev = 0.483, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.1463089818770045;  // std dev = 1.874, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.023250277022074446;  // std dev = 3.554, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.014885514797706337;  // std dev = 11.482, 609.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.5826342474780533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0429882585521217;  // std dev = 2.266, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05409822859358804;  // std dev = 4.015, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.04916926036303729;  // std dev = 4.585, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04320080875730392;  // std dev = 11.214, 554.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.077', 'seconds']
Parameter learned model CLL:-0.379072 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.707, 1, 1], 'true,false': [0.477, 59, 32], 'false,true': [4.737, 66, 34], 'false,false': [0.471, 389, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.821, 79, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.672, 61, 34], 'false,false,false,false': [11.401, 398, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.332, 17, 8], 'true,false,false': [4.568, 54, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.064, 53, 24], 'false,false,false': [0.476, 363, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.492, 10, 9], 'true,false': [0.444, 65, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.251, 443, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.02, 25, 15], 'true,false': [4.406, 62, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.049, 53, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 366, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.935, 7, 1], 'false,true': [4.689, 71, 32], 'false,false,true': [2.582, 15, 12], 'false,false,false': [11.892, 413, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.034, 24, 15], 'true,false': [4.393, 61, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.849, 399, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.461, 20, 9], 'true,false,true': [2.006, 12, 6], 'true,false,false': [0.443, 49, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 422, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.483, 71, 43], 'false,true,true,true': [1.874, 8, 6], 'false,true,true,false': [3.554, 44, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.482, 416, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.266, 14, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.015, 49, 24], 'false,true': [4.585, 57, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.214, 361, 193]}]
{'': [0.2289281997918849, 0.2220590638195429], 'true': [0.25, 0.2279917884313503], 'false': [0.22440000000000143, 0.22164653227997114]}
{'': [0.20755680029632279, 0.22139790875296697], 'false': [nan, 0.22139790875296708], 'false,false': [nan, 0.22139790875296697], 'false,false,false': [0.22980609418282685, 0.21992035066322582]}
{'': [0.23455682529815444, 0.2252752274274173], 'true': [0.0, 0.23335675852064056], 'true,false': [0.21760000000000013, 0.23708677685950477], 'false': [nan, 0.2252752274274173], 'false,false': [0.21453870804520112, 0.22662840950262028], 'false,false,true': [nan, 0.21453870804520112], 'true,true': [0.0, nan]}
{'': [0.21031519424924933, 0.2240188463960398], 'false': [nan, 0.2240188463960398], 'false,false': [nan, 0.2240188463960398], 'true': [0.24162445561095713, 0.19691817755718252]}
{'': [0.22014797974866324, 0.2245121728191537], 'false': [0.2129358808714497, 0.22605534416492776], 'false,false': [nan, 0.22605534416492776], 'true': [0.22806255432853298, 0.21566259817742278], 'false,true': [nan, 0.21293588087144974]}
{'': [0.10937500000000001, 0.2246812726095148], 'false': [0.2134948204444516, 0.2263932135307704], 'false,false': [0.24691358024691365, 0.22520498370714534], 'true': [nan, 0.10937500000000001], 'true,false': [nan, 0.10937500000000001]}
{'': [0.22293342107201047, 0.22791216705327905], 'false': [nan, 0.22791216705327866], 'false,false': [nan, 0.22791216705327905], 'false,false,false': [nan, 0.22791216705327905], 'true': [0.2359762669038797, 0.2168693796212833]}
{'': [0.20461610493756358, 0.2271919116949489], 'false': [nan, 0.2271919116949489], 'false,false': [nan, 0.2271919116949489], 'true': [0.20885308018447257, 0.20309820357918845], 'true,false': [0.2235314353942663, 0.1964802851414572]}
{'': [0.23319082164371072, 0.21637312323891902], 'false': [0.21466736845541534, 0.21647914020939552], 'false,false': [nan, 0.21647914020939552], 'false,true': [0.21466736845541534, nan], 'false,true,true': [0.2508888133190758, 0.20369875057414374]}
{'': [0.2243097374419921, 0.22758528749494414], 'false': [0.231057013582353, 0.22700999622046336], 'false,false': [nan, 0.22700999622046336], 'true': [0.23537066813945237, 0.2207882276676407], 'true,true': [0.0, 0.23340769168333136], 'true,false': [nan, 0.2207882276676407], 'true,false,false': [nan, 0.2207882276676407]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 10.306
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(A, D) )
%   | then if ( countryhascompanyoffice(E, A), cityhascompanyoffice(F, D) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.0329062166529104;  // std dev = 3.854, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( acquired(K, A), companyceo(K, L) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.19537764962371507;  // std dev = 11.571, 599.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=202 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyceo(A, E) )
%   | | then if ( cityhascompanyoffice(D, C) )
%   | | | then return -0.1493755840942831;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.13874265209675488;  // std dev = 3.132, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return -0.14590411777593618;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0.18256773523783085;  // std dev = 0.475, 685.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=240 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.8102431730502517;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7255881876250374;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, F), acquired(F, G) )
%   | | | then return 0.16018324529892647;  // std dev = 2.561, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.08945273457747646;  // std dev = 4.079, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   else if ( acquired(H, A) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.7775645036209544;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.004813542449290308;  // std dev = 0.392, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | else if ( bankboughtbank(I, A) )
%   | | then return -0.01252150499591012;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.1525990886961115;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | | else return 0.12092135736261718;  // std dev = 10.368, 498.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=157 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, C) )
%   | then return 0.6786782369130726;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(C, E) )
%   | | then return 0.5571668664909791;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5491862417111631;  // std dev = 0.233, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | then if ( companyceo(F, G) )
%   | | then return 0.6075973591251717;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7908351456334434;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.5608433970936069;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0299643685972458;  // std dev = 4.542, 118.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=27 */
%   | | else if ( acquired(A, J), cityhascompanyoffice(K, A) )
%   | | | then return -0.1419035294878698;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.11507358736115593;  // std dev = 11.724, 630.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=207 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(A, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.3599555903717408;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.011877445450405285;  // std dev = 0.374, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   else if ( acquired(E, A), companyalsoknownas(E, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.6575894075953308;  // std dev = 0.276, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(F, G), countryhascompanyoffice(H, G) )
%   | | | then return -0.19335633602032304;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14933789071196552;  // std dev = 1.917, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( acquired(A, K), companyceo(A, L) )
%   | | | then return -0.1892618139223626;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1917286818754421;  // std dev = 3.712, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | else if ( acquired(M, A) )
%   | | | then return 0.01779282893629557;  // std dev = 2.673, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.12245940438858406;  // std dev = 10.968, 532.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(A, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( companyalsoknownas(C, F) )
%   | | then return -0.031166690000788554;  // std dev = 0.282, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.2816819656969618;  // std dev = 0.464, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else return 0.0037326159809377324;  // std dev = 0.370, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.7084248376982707;  // std dev = 0.101, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.23635207241842937;  // std dev = 0.052, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.4967041826293938;  // std dev = 0.282, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07811673123698319;  // std dev = 1.492, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( companyalsoknownas(A, K), companyceo(A, L) )
%   | | | then return 0.31806037568248763;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07766447286625268;  // std dev = 10.976, 557.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=187 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3678607458154927;  // std dev = 0.128, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then if ( cityhascompanyoffice(F, D), cityhascompanyoffice(F, A) )
%   | | then if ( companyalsoknownas(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.5157721679985575;  // std dev = 0.525, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20047900344812458;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(D, H), acquired(H, I) )
%   | | | then return 0.039423118380958744;  // std dev = 1.724, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.10323683916483031;  // std dev = 1.797, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, A) )
%   | | then if ( acquired(L, J), companyalsoknownas(J, M) )
%   | | | then return 0.0107612016598407;  // std dev = 0.284, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16301294573510278;  // std dev = 0.834, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( acquired(A, N), economicsectorcompany(B, N) )
%   | | | then return 0.5609398283105131;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05581189361169968;  // std dev = 11.848, 685.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=223 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(D, E), countryhascompanyoffice(F, D) )
%   | | then return 0.3233226619536607;  // std dev = 0.420, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.5238138754777919;  // std dev = 0.214, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | else return -0.21509138464441363;  // std dev = 0.489, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( acquired(A, G), companyceo(G, H) )
%   | then if ( bankchiefexecutiveceo(A, I) )
%   | | then return 0.29897800849658357;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.1192777947929871;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1580020002780998;  // std dev = 1.379, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.5520223608219442;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(L, A), companyalsoknownas(L, M) )
%   | | | then return 0.11843108097988349;  // std dev = 2.120, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.05173433819063677;  // std dev = 10.729, 537.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=180 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.1561154104951591;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.02021486294503576;  // std dev = 0.277, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( acquired(A, F), cityhascompanyoffice(D, F) )
%   | | | then return -0.0465199444584409;  // std dev = 0.251, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14475251041330323;  // std dev = 0.236, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then if ( companyalsoknownas(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.39715068595804515;  // std dev = 0.552, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.5011242345286814;  // std dev = 0.591, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.18385475774477536;  // std dev = 0.322, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0.01734006995693562;  // std dev = 0.449, 644.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=203 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.030136364356985298;  // std dev = 0.341, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( companyceo(A, E), cityhascompanyoffice(F, A) )
%   | | then return -0.08093769682086986;  // std dev = 0.204, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1498379663752542;  // std dev = 1.271, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.011917899768495584;  // std dev = 2.961, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   else if ( companyalsoknownas(A, H), companyceo(A, I) )
%   | then return -0.0190857172620042;  // std dev = 0.302, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.3835723065316177;  // std dev = 0.195, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.044458322319589405;  // std dev = 2.447, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( acquired(A, K), companyceo(A, L) )
%   | | | then return 0.10801374812184548;  // std dev = 1.900, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.04127946633677242;  // std dev = 10.273, 541.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=187 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.272', 'seconds']
Refined model CLL: -0.316957


******************************************
Best model found
******************************************
Results 

CLL : -0.31704 

AUC ROC : 0.719877 

AUC PR : 0.064916 

Precision : 0.099053 

Recall : 0.222008 

F1 : 0.136986 

Total Learning Time : 10.306 

Total Inference Time : 39.198200702667236 

Total revision time: 115.73064431762695
Best scored revision CLL: -0.316957


Results 

CLL : -0.31704 

AUC ROC : 0.719877 

AUC PR : 0.064916 

Precision : 0.099053 

Recall : 0.222008 

F1 : 0.136986 

Total Learning Time : 115.77905902481079 

Total Inference Time : 39.198200702667236 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.304
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.22789683425917617;  // std dev = 0.483, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1813812583318342;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else return 0.18095595264336747;  // std dev = 0.468, 570.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.16212068113019945;  // std dev = 5.411, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.22014671797821486;  // std dev = 4.434, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.16441235400191787;  // std dev = 11.105, 558.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.14433642942522643;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.05376318098281253;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.11877299300412826;  // std dev = 4.676, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23233460955424126;  // std dev = 4.536, 84.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=36 */
%   | | else return 0.13522522398484635;  // std dev = 0.468, 567.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.22217960352940822;  // std dev = 0.500, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.11396597932232701;  // std dev = 0.474, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1353718796445734;  // std dev = 11.874, 622.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06721965433148275;  // std dev = 2.889, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else return 0.07941491869087193;  // std dev = 4.364, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15402181165836384;  // std dev = 4.592, 87.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10390775224480511;  // std dev = 0.473, 544.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.10551175891870418;  // std dev = 5.186, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.10958257741045184;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return 0.06965559569042676;  // std dev = 11.863, 643.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.10542249523233245;  // std dev = 2.729, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else return 0.06165702623715783;  // std dev = 4.326, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04346379852286794;  // std dev = 12.249, 694.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.04710184264856726;  // std dev = 2.540, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.03289167662697606;  // std dev = 1.948, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.04294811660943478;  // std dev = 0.480, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05081225944436078;  // std dev = 0.469, 659.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.034251858677826555;  // std dev = 0.465, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.03968408512510874;  // std dev = 2.102, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.029686908413202536;  // std dev = 4.314, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04166834951548206;  // std dev = 11.125, 562.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.002891499917511856;  // std dev = 2.475, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08923542570197278;  // std dev = 4.500, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.010404531361231217;  // std dev = 4.685, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0336725039717713;  // std dev = 11.120, 561.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.128', 'seconds']
Parameter learned model CLL:-0.36756 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.483, 75, 44], 'false,true': [4.654, 67, 32], 'false,false': [0.468, 386, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.411, 88, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.434, 51, 32], 'false,false,false,false': [11.105, 374, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.449, 24, 8], 'true,false,false': [4.676, 69, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.536, 48, 36], 'false,false,false': [0.468, 383, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.5, 11, 9], 'true,false': [0.474, 67, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.874, 406, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.889, 27, 12], 'true,false': [4.364, 60, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.592, 51, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 360, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.186, 70, 44], 'false,false,true': [2.256, 14, 8], 'false,false,false': [11.863, 435, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.729, 20, 12], 'true,false': [4.326, 57, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.249, 474, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.54, 24, 9], 'true,false,true': [1.948, 16, 5], 'true,false,false': [0.48, 53, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 443, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.465, 84, 40], 'false,true,true,true': [2.102, 12, 7], 'false,true,true,false': [4.314, 52, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.125, 378, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.475, 19, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.5, 51, 35], 'false,true': [4.685, 70, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.12, 377, 184]}]
{'': [0.23140495867768693, 0.21862494721390174], 'true': [0.0, 0.23303439022667988], 'false': [0.2187531884501595, 0.2186026469683008]}
{'': [0.22178503302159552, 0.22342161548984585], 'false': [nan, 0.22342161548984724], 'false,false': [nan, 0.22342161548984585], 'false,false,false': [0.2368994048483091, 0.2210146323916753]}
{'': [0.20803521534017427, 0.22358002794343446], 'false': [nan, 0.22358002794343446], 'false,false': [0.2448979591836723, 0.21920501168002193], 'false,false,true': [nan, 0.2448979591836723], 'true': [0.0, 0.21025629935924509], 'true,false': [0.18750000000000025, 0.2164493677090483], 'true,true': [0.0, nan]}
{'': [0.23004917388664078, 0.22666960530338767], 'true': [0.2499722907160839, 0.22422297736378122], 'false': [nan, 0.22666960530338767], 'false,false': [nan, 0.22666960530338767]}
{'': [0.21567532252400853, 0.22668017500191537], 'false': [0.24232317450981694, 0.22383217993079252], 'false,true': [nan, 0.2423231745098171], 'false,false': [nan, 0.22383217993079252], 'true': [0.21399131094257684, 0.216375974543711]}
{'': [nan, 0.22189101349169751], 'false': [0.2358859520876921, 0.2193173419050417], 'false,false': [0.2314049586776861, 0.21885102944704093]}
{'': [0.22399414435481507, 0.2162039154251935], 'true': [0.23276659783009085, 0.2201676990975846], 'false': [nan, 0.2162039154251931], 'false,false': [nan, 0.2162039154251935], 'false,false,false': [nan, 0.2162039154251935]}
{'': [0.21637071177477288, 0.2203154467805668], 'false': [nan, 0.2203154467805668], 'false,false': [nan, 0.2203154467805668], 'true': [0.19555506596620073, 0.221630265625511], 'true,false': [0.1807869176657197, 0.23080272898824278]}
{'': [0.21658063416905388, 0.221746553154646], 'false': [0.23029581886007683, 0.22020997707729126], 'false,true': [0.23029581886007683, nan], 'false,true,true': [0.23246720451484415, 0.22976749221124734], 'false,false': [nan, 0.22020997707729126]}
{'': [0.23294509482838302, 0.21968033544386048], 'true': [0.21880183715967225, 0.2354652590977932], 'true,false': [nan, 0.2354652590977932], 'true,false,false': [nan, 0.2354652590977932], 'false': [0.21520305543082327, 0.22041109427079875], 'false,false': [nan, 0.22041109427079875], 'true,true': [nan, 0.2188018371596721]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 13.144
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, D) )
%   | | then return 0.09344305274657119;  // std dev = 0.424, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( cityhascompanyoffice(E, A) )
%   | | | then return 0.4581489350995123;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.21814893509951105;  // std dev = 4.157, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   else if ( companyalsoknownas(A, F) )
%   | then return 0.08167834686421822;  // std dev = 0.417, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | else if ( acquired(A, G), companyceo(A, H) )
%   | | then if ( economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39148226843284567;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.10304689428318518;  // std dev = 4.257, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | | else return 0.184059866273597;  // std dev = 10.418, 494.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=161 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8295397467506443;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, E) )
%   | | then if ( acquired(C, F), companyceo(F, G) )
%   | | | then return -0.1520874716625579;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08876654304637989;  // std dev = 2.305, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else return -0.16311114061463655;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( acquired(A, H), bankboughtbank(I, H) )
%   | then return 0.628093979810369;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( bankboughtbank(J, A) )
%   | | then if ( acquired(A, K) )
%   | | | then return 0.13686537905126747;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7010744601408848;  // std dev = 0.932, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.8166635144703777;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.1434928944170506;  // std dev = 12.448, 727.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.16023143386697836;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.11934253027155048;  // std dev = 0.451, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   else if ( acquired(E, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.584740884797088;  // std dev = 0.262, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( acquired(F, E), economicsectorcompany(B, F) )
%   | | | then return 0.8082002759672675;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09702523112392604;  // std dev = 3.734, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.7793263303131353;  // std dev = 0.981, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.17144909149423512;  // std dev = 0.082, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.011396108625387556;  // std dev = 2.364, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.15176562589120018;  // std dev = 10.111, 454.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=154 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( countryhascompanyoffice(E, C), companyceo(A, F) )
%   | then return -0.051782969573059945;  // std dev = 0.329, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( cityhascompanyoffice(G, C) )
%   | | then return 0.5529537563396825;  // std dev = 0.856, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.34004877148879054;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13900311966546364;  // std dev = 1.558, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( acquired(A, I), countryhascompanyoffice(J, I) )
%   | then if ( countryhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | then return 0.7390946072031188;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.05016833128432967;  // std dev = 0.355, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | then return 0.7268149428567406;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( countryhascompanyoffice(M, A) )
%   | | | then return 0.04210367503721669;  // std dev = 3.067, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.10755567677556475;  // std dev = 11.794, 678.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=218 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.5773392995486617;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(A, D), cityhascompanyoffice(E, D) )
%   | then if ( cityhascompanyoffice(F, A), companyceo(A, G) )
%   | | then if ( companyalsoknownas(D, D) )
%   | | | then return -0.14560121405637336;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07756663317738453;  // std dev = 1.806, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.037026154158383597;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.19053646011853514;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | then if ( cityhascompanyoffice(K, A), companyceo(I, L) )
%   | | | then return 0.3152001716244677;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04797923370516502;  // std dev = 1.909, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( acquired(M, A), cityhascompanyoffice(N, M) )
%   | | | then return 0.19233238608443373;  // std dev = 2.895, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.1154854562390391;  // std dev = 11.621, 623.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=219 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(E, A), cityhascompanyoffice(F, A) )
%   | then return 0.2781687969023386;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( countryhascompanyoffice(G, D), companyceo(A, H) )
%   | | then return 0.07263733846529175;  // std dev = 0.398, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.1385802147384694;  // std dev = 0.254, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   else if ( acquired(I, A), companyalsoknownas(I, J) )
%   | then if ( economicsectorcompany(B, I) )
%   | | then return 0.48718304676131985;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(K, A), cityhascompanyoffice(L, I) )
%   | | | then return -0.2550303187245175;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0018959582786785643;  // std dev = 2.625, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( bankboughtbank(M, A), bankboughtbank(N, M) )
%   | | then return -0.19161089508333615;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( companyalsoknownas(A, A) )
%   | | | then return -0.2314713028796872;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08835305115731727;  // std dev = 11.952, 678.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=237 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.3293775344852266;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4808843986889358;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then if ( cityhascompanyoffice(F, A), companyalsoknownas(E, G) )
%   | | then return 0.4907758724616366;  // std dev = 0.296, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41995350935586534;  // std dev = 0.148, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( bankchiefexecutiveceo(A, H) )
%   | | then if ( companyceo(A, H), cityhascompanyoffice(I, A) )
%   | | | then return 0.24519743614495595;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15887715519733786;  // std dev = 1.529, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return -0.03284463893788228;  // std dev = 3.394, 80.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=15 */
%   | | | else return 0.0637350462335735;  // std dev = 11.743, 648.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), countryhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | then return 0.6188632001506894;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(C, F), acquired(F, G) )
%   | | then if ( countryhascompanyoffice(D, F) )
%   | | | then return -0.13365240255948724;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.013391275005749548;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.3866264392321017;  // std dev = 0.064, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.28381330122181814;  // std dev = 0.214, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( acquired(I, A) )
%   | | then if ( acquired(J, I), economicsectorcompany(B, J) )
%   | | | then return 0.44293340819077986;  // std dev = 0.249, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.018559215169440015;  // std dev = 3.971, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.017176503522927246;  // std dev = 4.118, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.06686502170794588;  // std dev = 10.678, 518.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=180 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyceo(A, D) )
%   | then return 0.03296811821094703;  // std dev = 0.346, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( countryhascompanyoffice(C, E), bankboughtbank(E, F) )
%   | | then return -0.11350077249923958;  // std dev = 0.336, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | | then return 0.6584712361935154;  // std dev = 0.256, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.29806641341924806;  // std dev = 0.205, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( bankchiefexecutiveceo(A, H) )
%   | then return -0.2439042187879818;  // std dev = 0.219, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.5272023995129187;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.002390767377796149;  // std dev = 3.856, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.25970136364051255;  // std dev = 0.152, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.04743609723660858;  // std dev = 11.075, 582.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=198 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.4045029558860634;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyceo(A, D), acquired(A, E) )
%   | then if ( acquired(F, A), cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, F) )
%   | | | then return 0.01430946884073125;  // std dev = 1.091, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3400069918474437;  // std dev = 1.079, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( countryhascompanyoffice(H, E) )
%   | | | then return 0.038500534091451856;  // std dev = 1.658, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.10047959627184942;  // std dev = 2.352, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | else if ( acquired(I, A), acquired(A, J) )
%   | | then if ( acquired(J, I) )
%   | | | then return -0.0362539215801446;  // std dev = 0.941, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.23501767789652103;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( bankchiefexecutiveceo(A, K) )
%   | | | then return -0.0538174235265851;  // std dev = 1.218, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.04379065577391252;  // std dev = 11.557, 655.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=232 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.160', 'seconds']
Refined model CLL: -0.338655


******************************************
Best model found
******************************************
Results 

CLL : -0.338671 

AUC ROC : 0.690908 

AUC PR : 0.049498 

Precision : 0.227642 

Recall : 0.108108 

F1 : 0.146597 

Total Learning Time : 13.144 

Total Inference Time : 26.309940814971924 

Total revision time: 104.18386034774781
Best scored revision CLL: -0.338655


Results 

CLL : -0.338671 

AUC ROC : 0.690908 

AUC PR : 0.049498 

Precision : 0.227642 

Recall : 0.108108 

F1 : 0.146597 

Total Learning Time : 104.23227505493165 

Total Inference Time : 26.309940814971924 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.367
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19961234973365735;  // std dev = 0.474, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.18525173883782867;  // std dev = 4.853, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | else return 0.21529179224236503;  // std dev = 0.479, 532.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.15003543061774813;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1948943190691475;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.18237492008687756;  // std dev = 11.092, 539.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.1855308109453749;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.1832478280575903;  // std dev = 2.857, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else return 0.12938959218943827;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08469074589509103;  // std dev = 3.808, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | else return 0.1524618039964417;  // std dev = 0.477, 543.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.02272697338593126;  // std dev = 0.415, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else return 0.10359021163328905;  // std dev = 0.462, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11821683456769533;  // std dev = 12.188, 662.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.0507113860858821;  // std dev = 2.544, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else return 0.1701421148241383;  // std dev = 4.810, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07135975177441044;  // std dev = 3.763, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08889369161694795;  // std dev = 0.471, 571.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.169185881351483;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.05913195711539385;  // std dev = 4.793, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.0876068748018602;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.06916270626924483;  // std dev = 12.133, 665.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.10299135940614498;  // std dev = 2.412, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0.1375414410382498;  // std dev = 4.760, 93.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05501034932634263;  // std dev = 11.893, 645.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.01049764448502615;  // std dev = 1.928, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.11936232546897736;  // std dev = 2.276, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return 0.042719188152084454;  // std dev = 0.457, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.049506663834383235;  // std dev = 0.473, 666.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.03167164833654698;  // std dev = 0.474, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.03338058539497286;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0660365323234813;  // std dev = 3.483, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04875738534429312;  // std dev = 11.163, 552.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10049900114108645;  // std dev = 1.774, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025186478013270463;  // std dev = 4.343, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return -0.023534820066275004;  // std dev = 4.942, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04165425805694965;  // std dev = 11.136, 547.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '6.671', 'seconds']
Parameter learned model CLL:-0.373824 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.854, 11, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.474, 54, 28], 'false,true': [4.853, 72, 35], 'false,false': [0.479, 342, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.746, 71, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.73, 62, 35], 'false,false,false,false': [11.092, 349, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.857, 22, 13], 'true,false,false': [4.864, 73, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.808, 53, 20], 'false,false,false': [0.477, 353, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.415, 17, 5], 'true,false': [0.462, 62, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.188, 437, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.544, 23, 9], 'true,false': [4.81, 57, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.763, 49, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 381, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [4.793, 78, 33], 'false,false,true': [1.826, 10, 5], 'false,false,false': [12.133, 445, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.412, 16, 9], 'true,false': [4.76, 54, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.893, 435, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.928, 16, 5], 'true,false,true': [2.276, 12, 9], 'true,false,false': [0.457, 45, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 441, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.474, 91, 48], 'false,true,true,true': [1.237, 7, 2], 'false,true,true,false': [3.483, 37, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.163, 362, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.774, 9, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.343, 62, 28], 'false,true': [4.942, 82, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.136, 357, 190]}]
{'': [0.22334443981674446, 0.22812933941678487], 'false': [0.22010655952485075, 0.2295918367346969], 'true': [0.2148437499999998, 0.22486615110053673], 'true,false': [nan, 0.22486615110053673]}
{'': [0.2165953301809026, 0.22862914676310492], 'false': [nan, 0.22862914676310578], 'false,false': [nan, 0.22862914676310492], 'false,false,false': [0.23063024763524229, 0.22824511825307153]}
{'': [0.2222359712733232, 0.2245389416371699], 'false': [nan, 0.2245389416371699], 'false,false': [0.19867045152356735, 0.22747236721169437], 'true': [0.0, 0.22304249089689032], 'true,false': [0.23317121976293984, 0.21905006858710574], 'false,false,true': [nan, 0.19867045152356735], 'true,true': [0.0, nan]}
{'': [0.20663354309717255, 0.22438166702451], 'false': [nan, 0.22438166702451], 'false,false': [nan, 0.22438166702451], 'true': [0.17247553004090235, 0.21369886004528277]}
{'': [0.23402801260357947, 0.22023983908141612], 'true': [0.2022626083344691, 0.24105055595154526], 'false': [0.20517373317091228, 0.22202729104622132], 'false,false': [nan, 0.22202729104622132], 'false,true': [nan, 0.2051737331709122]}
{'': [0.0, 0.21938004164812325], 'false': [0.20695591810276984, 0.22139280919355683], 'false,false': [0.2222222222222222, 0.2213665964962173], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.24150493548500154, 0.21928953868301518], 'true': [0.23279907163722285, 0.24359231719847146], 'false': [nan, 0.21928953868301176], 'false,false': [nan, 0.21928953868301518], 'false,false,false': [nan, 0.21928953868301518]}
{'': [0.21168372390818183, 0.22357722603800526], 'false': [nan, 0.22357722603800526], 'false,false': [nan, 0.22357722603800526], 'true': [0.17705562780195203, 0.21920753524360903], 'true,false': [0.24668497590255534, 0.20874023437500042]}
{'': [0.22502868777275634, 0.22457851199700768], 'false': [0.21466078266297137, 0.2257272631800055], 'false,false': [nan, 0.2257272631800055], 'false,true': [0.21466078266297137, nan], 'false,true,true': [0.17000470644833088, 0.22057823637558138]}
{'': [0.21231835458552772, 0.22414488629140508], 'false': [0.20870900048909863, 0.22669772633844745], 'false,false': [nan, 0.22669772633844745], 'true': [0.22486066777652977, 0.20960379283955077], 'true,true': [nan, 0.22486066777652977], 'true,false': [nan, 0.20960379283955077], 'true,false,false': [nan, 0.20960379283955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 65.477
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(A, D), acquired(D, E) )
%   | then if ( acquired(F, A), cityhascompanyoffice(G, A) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankchiefexecutiveceo(J, I), cityhascompanyoffice(K, J) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2902477005316099;  // std dev = 4.458, 81.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=35 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return 0.15814893509951236;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.18192633813492096;  // std dev = 11.395, 593.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=192 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(D, A), countryhascompanyoffice(E, D) )
%   | then if ( bankboughtbank(D, F) )
%   | | then return -0.16808012502922834;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( countryhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.6368456629415792;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1636093574632763;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(A, H), acquired(H, I) )
%   | | then if ( companyalsoknownas(I, J), cityhascompanyoffice(K, A) )
%   | | | then return 0.4136340068748178;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.049148833427395996;  // std dev = 1.295, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( companyalsoknownas(A, L), companyceo(L, M) )
%   | | | then return 0.10680864596398155;  // std dev = 2.811, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.1619900898870501;  // std dev = 12.283, 684.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.1201511182350446;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7408171440670778;  // std dev = 0.219, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5616357328603002;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1015866667853136;  // std dev = 4.685, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
%   else if ( cityhascompanyoffice(G, A), bankchiefexecutiveceo(A, H) )
%   | then if ( cityhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | then return 0.7994866694821271;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18599976109765648;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( companyalsoknownas(A, J), countryhascompanyoffice(K, J) )
%   | | then return -0.17987782445517675;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( bankboughtbank(L, A), cityhascompanyoffice(M, L) )
%   | | | then return 0.3638792844651215;  // std dev = 1.479, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.11729902578287499;  // std dev = 11.722, 648.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=199 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | then if ( companyceo(E, F), companyceo(A, G) )
%   | | then return 0.6619723569704148;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7568682200353285;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.2536087305122165;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then if ( acquired(A, I), companyceo(I, J) )
%   | | then return 0.5271650278726673;  // std dev = 0.272, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7615072537616989;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then if ( acquired(A, L) )
%   | | | then return 0.5847113649910075;  // std dev = 0.256, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7783355639925151;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(M, A) )
%   | | | then return -0.02957841604756724;  // std dev = 3.557, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
%   | | | else return 0.12319351680663125;  // std dev = 11.686, 631.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=211 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.4117842085941703;  // std dev = 0.102, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5089299449302965;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( countryhascompanyoffice(E, A), bankbankincountry(F, E) )
%   | then if ( countryhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.5861085479053318;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7146598653480493;  // std dev = 0.348, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.1966615164928525;  // std dev = 0.280, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( acquired(A, I), companyceo(I, J) )
%   | | then if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.0014358670819415785;  // std dev = 1.798, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.21795935277957562;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( acquired(A, L), cityhascompanyoffice(M, L) )
%   | | | then return 0.06002926100573389;  // std dev = 1.017, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.11054916965248608;  // std dev = 11.709, 630.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=216 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.11607042615516809;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( companyceo(A, F) )
%   | | | then return 0.5112966990097265;  // std dev = 1.119, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.7175817925504843;  // std dev = 0.555, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.22904692986375852;  // std dev = 0.352, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.5171769737408499;  // std dev = 0.616, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1770072382804526;  // std dev = 0.207, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.5927534699125719;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.052739361345573395;  // std dev = 10.780, 569.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=173 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then return 0.16772936539595135;  // std dev = 0.362, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.541239335208859;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(A, H), bankchiefexecutiveceo(G, I) )
%   | | | then return 0.2418129998887896;  // std dev = 0.813, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.48730041029609533;  // std dev = 1.829, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else return -0.19439907549832142;  // std dev = 0.292, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( acquired(J, A) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.3883857696480335;  // std dev = 0.388, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.024923727581442887;  // std dev = 2.822, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.10825388416090141;  // std dev = 3.006, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.06593003494535789;  // std dev = 9.861, 463.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=151 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.419, 727.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=258 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, C) )
%   | then return 0.16324693805929683;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, E), companyalsoknownas(C, F) )
%   | | then return 0.2678507980087473;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3612931067017323;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then if ( acquired(A, H) )
%   | | then return 0.1911157493168553;  // std dev = 0.159, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5950261796012599;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, I), companyceo(I, J) )
%   | | then if ( companyceo(A, K), acquired(A, L) )
%   | | | then return 0.12410605451493491;  // std dev = 1.554, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return -0.1849826030431342;  // std dev = 0.742, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.02060391289903926;  // std dev = 3.315, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.06412810288295676;  // std dev = 10.538, 537.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=183 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( cityhascompanyoffice(E, A), companyalsoknownas(D, F) )
%   | then return 0.027592819182341955;  // std dev = 0.289, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then return -0.04591783443871065;  // std dev = 0.211, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return -0.13528391258641598;  // std dev = 0.108, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   else if ( acquired(H, A), cityhascompanyoffice(I, H) )
%   | then if ( companyalsoknownas(H, J), economicsectorcompany(B, J) )
%   | | then return 0.305618383870161;  // std dev = 0.724, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( economicsectorcompany(B, H) )
%   | | | then return 0.25852244205017605;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13325784037394503;  // std dev = 1.392, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | then if ( countryhascompanyoffice(K, M), economicsectorcompany(B, M) )
%   | | | then return 0.3397237092784691;  // std dev = 0.602, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.15286694438127477;  // std dev = 0.274, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.03970739566909508;  // std dev = 0.437, 637.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=218 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '5.341', 'seconds']
Refined model CLL: -0.293632


******************************************
Best model found
******************************************
Results 

CLL : -0.294252 

AUC ROC : 0.755347 

AUC PR : 0.088023 

Precision : 0.084405 

Recall : 0.290385 

F1 : 0.130793 

Total Learning Time : 65.477 

Total Inference Time : 123.7855429649353 

Total revision time: 255.54471053504943
Best scored revision CLL: -0.293632


Results 

CLL : -0.294252 

AUC ROC : 0.755347 

AUC PR : 0.088023 

Precision : 0.084405 

Recall : 0.290385 

F1 : 0.130793 

Total Learning Time : 255.59312524223327 

Total Inference Time : 123.7855429649353 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 6.678
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.024815601766178873;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( bankbankincountry(E, F), bankbankincountry(A, F) )
%   | then return 0.17064893509951237;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else return 0.19102751627276823;  // std dev = 0.471, 733.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=244 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then return 0.3551012175257391;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankbankincountry(A, D), bankbankincountry(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A), bankbankincountry(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0.1485807217799291;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.16751525577058168;  // std dev = 12.745, 730.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=244 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(D, A), bankbankincountry(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17183176543135947;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A) )
%   | | then if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8053514561880246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14851307918941334;  // std dev = 0.474, 718.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=244 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14901941535419405;  // std dev = 0.500, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankbankincountry(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10856324921071554;  // std dev = 13.234, 800.000 (wgt'ed) examples reached here.  /* #neg=541 #pos=259 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09467850214109168;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   else if ( bankbankincountry(E, A) )
%   | then if ( bankbankincountry(F, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.052298249956026645;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( bankbankincountry(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09952391636327766;  // std dev = 0.472, 731.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=244 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A), bankbankincountry(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankbankincountry(D, A) )
%   | then return -0.039984215718089966;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( bankbankincountry(A, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0705401150140802;  // std dev = 13.243, 802.000 (wgt'ed) examples reached here.  /* #neg=543 #pos=259 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08675161908196989;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   else if ( bankbankincountry(E, A), bankbankincountry(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07046160392192329;  // std dev = 12.746, 727.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=245 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.047141528147386556;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A), bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04696044015718854;  // std dev = 0.469, 792.000 (wgt'ed) examples reached here.  /* #neg=533 #pos=259 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then return 0.07709994711215452;  // std dev = 0.482, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   else if ( bankbankincountry(D, A) )
%   | then if ( bankbankincountry(D, E) )
%   | | then if ( bankbankincountry(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13057274977139288;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05014383935582125;  // std dev = 12.692, 718.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=244 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(E, C), bankbankincountry(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.20032720266763998;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( bankbankincountry(A, F) )
%   | then return 0.036066912204710255;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( bankbankincountry(G, A), bankbankincountry(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.039718012636183735;  // std dev = 12.692, 718.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=244 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '39.249', 'seconds']
Parameter learned model CLL:-0.370683 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(E, F), bankbankincountry(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.373, 5, 1], 'false,true': [3.211, 33, 15], 'false,false': [0.471, 489, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'false': 'bankbankincountry(A, D), bankbankincountry(D, A)', 'false,false': 'bankbankincountry(E, A), bankbankincountry(F, E)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true': [0.707, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.211, 33, 15], 'false,false,false,false': [12.745, 486, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(D, A), bankbankincountry(A, D)', 'true,false': 'bankbankincountry(E, A)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A)', 'false,false,true': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.105, 27, 15], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.474, 474, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'false': 'bankbankincountry(E, A)', 'false,false': 'bankbankincountry(A, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.5, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [13.234, 541, 259]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A)', 'false,true': 'bankbankincountry(F, E), bankbankincountry(E, F)', 'false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.179, 31, 15], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.816, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 487, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A), bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,false': 'bankbankincountry(A, E), bankbankincountry(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.816, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [13.243, 543, 259]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A), bankbankincountry(E, E)', 'false,false': 'bankbankincountry(A, F)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.125, 28, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.746, 482, 245]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, E)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A), bankbankincountry(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.471, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 533, 259]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,true': 'bankbankincountry(D, E)', 'false,true,true': 'bankbankincountry(E, F)', 'false,false': 'bankbankincountry(G, A)'}, {'true': [0.482, 26, 15], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.692, 474, 244]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, C)', 'true,false,false': 'bankbankincountry(E, C), bankbankincountry(E, A)', 'false': 'bankbankincountry(A, F)', 'false,false': 'bankbankincountry(G, A), bankbankincountry(G, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.894, 4, 1], 'false,true': [3.144, 29, 15], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.692, 474, 244]}]
{'': [0.13888888888888892, 0.22165023665447667], 'false': [0.21484374999999947, 0.2220704313693397], 'true': [nan, 0.13888888888888892], 'true,false': [nan, 0.13888888888888892]}
{'': [0.24999999999999997, 0.22207259985471076], 'false': [nan, 0.22207259985471065], 'false,false': [nan, 0.22207259985471076], 'false,false,false': [0.21484374999999956, 0.22252580221429213]}
{'': [0.2295918367346939, 0.2246336808717706], 'true': [nan, 0.2295918367346939], 'true,false': [nan, 0.2295918367346939], 'false': [nan, 0.2246336808717706], 'false,false': [0.0, 0.2243464901730966], 'false,false,true': [nan, 0.0]}
{'': [0.25, 0.21892837452500213], 'true': [nan, 0.25], 'false': [nan, 0.21892837452500213], 'false,false': [nan, 0.21892837452500213]}
{'': [0.21975425330812817, 0.22246721730916644], 'false': [0.2222222222222222, 0.2223740130735514], 'false,false': [nan, 0.2223740130735514], 'false,true': [nan, 0.2222222222222222], 'true': [nan, 0.21975425330812817]}
{'': [nan, 0.21873657508259675], 'false': [0.22222222222222224, 0.2186780124239493], 'false,false': [nan, 0.2186780124239497]}
{'': [0.2271498107084912, 0.22347377912144809], 'true': [nan, 0.2271498107084912], 'false': [nan, 0.22347377912144809], 'false,false': [nan, 0.22347377912144809], 'false,false,false': [nan, 0.22347377912144809]}
{'': [0.2222222222222222, 0.22007188820136106], 'true': [nan, 0.2222222222222222], 'true,false': [nan, 0.2222222222222222], 'false': [nan, 0.22007188820136106], 'false,false': [nan, 0.22007188820136106]}
{'': [0.23200475907198087, 0.22443566892461275], 'false': [0.24999999999999997, 0.22434649017310757], 'false,true': [0.24999999999999997, nan], 'false,true,true': [nan, 0.24999999999999997], 'false,false': [nan, 0.22434649017310757]}
{'': [0.16, 0.2243670554534194], 'false': [0.22469008264462786, 0.22434649017310004], 'false,false': [nan, 0.22434649017310004], 'true': [nan, 0.16], 'true,false': [nan, 0.16], 'true,false,false': [nan, 0.16]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- bankbankincountry(A, C).;true;true
2;false;bankbankincountry(F, A).;true;true


Refining candidate
***************************
Model training time 9.17
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A) )
%   then if ( acquired(A, E), companyceo(A, F) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( companyceo(A, C) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( countryhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13474467978036342;  // std dev = 4.337, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | else if ( acquired(K, A), companyalsoknownas(K, L) )
%   | | | then return 0.03461952333480645;  // std dev = 2.223, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.18829247576936467;  // std dev = 11.775, 627.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=207 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( cityhascompanyoffice(D, A), acquired(E, A) )
%   | then if ( cityhascompanyoffice(F, E), acquired(G, E) )
%   | | then return 0.3051045921231424;  // std dev = 0.946, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(H, E) )
%   | | | then return -0.14611775293816578;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.00960097520024267;  // std dev = 1.600, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else return 0.16150797774973044;  // std dev = 0.467, 749.000 (wgt'ed) examples reached here.  /* #neg=504 #pos=245 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then return 0.7686893225124414;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1594974691380886;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0.2789236500560378;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( bankboughtbank(G, A) )
%   | | | then return -0.18228319264281992;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.007901254515179545;  // std dev = 1.692, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else if ( bankbankincountry(H, A) )
%   | then return 0.010029142482141562;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.8066602782300066;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.7062129227003815;  // std dev = 0.304, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1120161625852037;  // std dev = 12.370, 740.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=223 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(D, A) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.673305056413701;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.16328526637704202;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( acquired(F, D) )
%   | | | then return -0.03782170889270387;  // std dev = 0.570, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.17559306337789793;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.4983760965638052;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | then if ( cityhascompanyoffice(J, A), acquired(H, K) )
%   | | | then return 0.09758672475629185;  // std dev = 2.194, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.053036371827527726;  // std dev = 1.599, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.06964684824854984;  // std dev = 3.780, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | | else return 0.13488497087258275;  // std dev = 11.642, 613.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=211 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyceo(A, D), acquired(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.34634752334677316;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.04678260306723491;  // std dev = 1.303, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.17132529603310187;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | then return 0.6821343267659374;  // std dev = 0.129, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.20314876729867734;  // std dev = 0.145, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.5655104772112602;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( cityhascompanyoffice(I, A), acquired(J, A) )
%   | | then return -0.10330148228375657;  // std dev = 0.189, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.05577452038801184;  // std dev = 3.818, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.08842902469613068;  // std dev = 11.385, 609.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=195 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(A, D) )
%   then if ( cityhascompanyoffice(C, D), companyceo(A, E) )
%   | then return -0.15832849936663657;  // std dev = 0.171, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( companyceo(A, F) )
%   | | then if ( economicsectorcompany(B, D) )
%   | | | then return 0.29606398622966706;  // std dev = 0.177, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.022264881655961716;  // std dev = 3.114, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else return -0.14458807150831832;  // std dev = 0.197, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.5771845919408041;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.5935357706724261;  // std dev = 1.762, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return -0.21705028032078752;  // std dev = 0.428, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.3382472032061073;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07590831291372921;  // std dev = 11.064, 586.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=189 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( acquired(A, E), companyalsoknownas(E, F) )
%   | then return -0.04845843387347944;  // std dev = 0.244, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | then if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.7070054350331337;  // std dev = 0.449, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2201314025625757;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.10274594891449759;  // std dev = 0.383, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   else if ( companyalsoknownas(A, J), cityhascompanyoffice(K, J) )
%   | then return -0.053358879828136405;  // std dev = 0.289, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( acquired(L, A), companyalsoknownas(L, M) )
%   | | then if ( economicsectorcompany(B, M) )
%   | | | then return 0.4015659962503303;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.04385439378357533;  // std dev = 2.118, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( acquired(A, N), economicsectorcompany(B, N) )
%   | | | then return 0.4496480725993453;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07796024578295854;  // std dev = 11.203, 613.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=211 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D), economicsectorcompany(B, D) )
%   | then return 0.5614924061637078;  // std dev = 0.360, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | | then return 0.21553678646594132;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32038809776716703;  // std dev = 0.150, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | | | then return 0.0756661842598294;  // std dev = 2.679, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return -0.07853043079527203;  // std dev = 2.918, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | then return 0.42594429971687986;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( acquired(J, A), bankchiefexecutiveceo(J, K) )
%   | | then return -0.24413631859025486;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( acquired(L, A) )
%   | | | then return 0.00963921429475471;  // std dev = 3.149, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.06697795034488332;  // std dev = 10.640, 551.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=193 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.22232430716736865;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11261998075361143;  // std dev = 0.264, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | else if ( cityhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | then return 0.5062722598252517;  // std dev = 0.185, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | else return -0.196265821397976;  // std dev = 0.046, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( bankboughtbank(H, A), cityhascompanyoffice(I, H) )
%   | then return -0.16947016905556578;  // std dev = 0.167, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( acquired(A, J) )
%   | | then if ( bankboughtbank(K, J), bankboughtbank(L, K) )
%   | | | then return -0.10757298425846398;  // std dev = 0.389, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13570903745401394;  // std dev = 2.716, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( acquired(M, A), companyalsoknownas(M, M) )
%   | | | then return -0.12462597446618488;  // std dev = 0.470, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.025499962561260442;  // std dev = 10.731, 564.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=178 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | then return 0.26509181008093996;  // std dev = 0.536, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.04404182477677167;  // std dev = 0.165, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   else if ( acquired(G, A) )
%   | then if ( acquired(H, G), economicsectorcompany(B, H) )
%   | | then return 0.4898738136823171;  // std dev = 0.326, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(G, I), companyceo(G, J) )
%   | | | then return 0.008597865052401331;  // std dev = 2.295, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.0531799627417408;  // std dev = 2.768, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | else if ( cityhascompanyoffice(K, A), companyceo(A, L) )
%   | | then if ( cityhascompanyoffice(K, M), economicsectorcompany(B, M) )
%   | | | then return 0.504727324190936;  // std dev = 0.978, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.19982822313833096;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( acquired(A, N) )
%   | | | then return -0.03874404077012134;  // std dev = 2.649, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.0518307733100121;  // std dev = 10.360, 528.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=188 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '56.166', 'seconds']
Refined model CLL: -0.309521


******************************************
Best model found
******************************************
Results 

CLL : -0.309727 

AUC ROC : 0.745546 

AUC PR : 0.088059 

Precision : 0.098797 

Recall : 0.222008 

F1 : 0.136742 

Total Learning Time : 9.17 

Total Inference Time : 29.985838890075684 

Total revision time: 97.38559813308716
Best scored revision CLL: -0.309521


Results 

CLL : -0.309727 

AUC ROC : 0.745546 

AUC PR : 0.088059 

Precision : 0.098797 

Recall : 0.222008 

F1 : 0.136742 

Total Learning Time : 97.536556432724 

Total Inference Time : 29.985838890075684 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.715
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24752946607296372;  // std dev = 0.488, 113.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1813812583318342;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else return 0.17870642638870643;  // std dev = 0.467, 574.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.18037412753479334;  // std dev = 5.326, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.12289283759180436;  // std dev = 4.772, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | | | else return 0.153864266724179;  // std dev = 11.195, 577.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.1652564734129114;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.09401494470502986;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.13693614448700525;  // std dev = 4.665, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21151175185700882;  // std dev = 4.594, 87.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=36 */
%   | | else return 0.1424154427976871;  // std dev = 0.470, 558.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.21557575106811533;  // std dev = 0.500, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.1428984391216694;  // std dev = 0.483, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10580549178197603;  // std dev = 12.163, 686.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.10421887926138346;  // std dev = 2.820, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.08810116916930691;  // std dev = 4.387, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1282256569607839;  // std dev = 4.661, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07605643905909634;  // std dev = 0.460, 605.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.09143464812061207;  // std dev = 5.220, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.07928533787911694;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.09917609337874311;  // std dev = 11.712, 611.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.0365248557593295;  // std dev = 2.887, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else return 0.04060075070436454;  // std dev = 4.429, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07801212927472789;  // std dev = 11.979, 637.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.02315963364666436;  // std dev = 2.488, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.025915425681422466;  // std dev = 1.853, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.034055834875874616;  // std dev = 0.480, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06361041616196403;  // std dev = 0.473, 640.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.05525819888556149;  // std dev = 0.470, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.031185531218422012;  // std dev = 2.205, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.09102995622468246;  // std dev = 4.079, 68.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.023297271956947176;  // std dev = 11.252, 590.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.19837777401209186;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.16935541609050653;  // std dev = 2.098, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09964483425346736;  // std dev = 4.412, 79.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.08911591591984501;  // std dev = 4.467, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0393571281528094;  // std dev = 11.081, 553.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '57.524', 'seconds']
Parameter learned model CLL:-0.373949 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.488, 69, 44], 'false,true': [4.654, 67, 32], 'false,false': [0.467, 390, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.326, 80, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.772, 79, 32], 'false,false,false,false': [11.195, 393, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.373, 19, 8], 'true,false,false': [4.665, 68, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.594, 51, 36], 'false,false,false': [0.47, 374, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.5, 11, 9], 'true,false': [0.483, 58, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.163, 470, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.82, 24, 12], 'true,false': [4.387, 61, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.661, 55, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.46, 421, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.22, 72, 44], 'false,false,true': [2.332, 17, 8], 'false,false,false': [11.712, 403, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.887, 28, 12], 'true,false': [4.429, 65, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.979, 417, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.488, 21, 9], 'true,false,true': [1.853, 11, 5], 'true,false,false': [0.48, 53, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 424, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.47, 80, 40], 'false,true,true,true': [2.205, 16, 7], 'false,true,true,false': [4.079, 39, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.252, 406, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [2.098, 9, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.412, 44, 35], 'false,true': [4.467, 53, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.081, 369, 184]}]
{'': [0.23776333307228534, 0.21794144336088236], 'true': [nan, 0.23776333307228534], 'false': [0.2187531884501595, 0.2178003860675768]}
{'': [0.22874867592809767, 0.21538976899534018], 'false': [nan, 0.21538976899534185], 'false,false': [nan, 0.21538976899534018], 'false,false,false': [0.20517815112409754, 0.21719946294854867]}
{'': [0.21495322478159748, 0.22447899440228247], 'false': [nan, 0.22447899440228247], 'false,false': [0.24256837098692088, 0.2210146323916722], 'false,false,true': [nan, 0.24256837098692088], 'true': [0.0, 0.21597476485324044], 'true,false': [0.2085048010973938, 0.21759999999999968], 'true,true': [0.0, nan]}
{'': [0.23692104805071937, 0.21566770099457622], 'true': [0.2500505436506607, 0.2331626348272595], 'false': [nan, 0.21566770099457622], 'false,false': [nan, 0.21566770099457622]}
{'': [0.21763751355391475, 0.21548743310715676], 'true': [0.22091854335316474, 0.21623553862622916], 'false': [0.2387285475538491, 0.2116358172255988], 'false,true': [nan, 0.23872854755384887], 'false,false': [nan, 0.2116358172255988]}
{'': [nan, 0.22590579311946996], 'false': [0.23490690992631882, 0.22425660852724086], 'false,false': [0.2176, 0.22451342188011356]}
{'': [0.21016234063154762, 0.22527499732348727], 'false': [nan, 0.2252749973234814], 'false,false': [nan, 0.22527499732348727], 'false,false,false': [nan, 0.22527499732348727], 'true': [0.20842387474138965, 0.21090507152933366]}
{'': [0.22366852779587465, 0.2236031557835231], 'true': [0.20633204195488739, 0.22819531233604573], 'true,false': [0.21461378188981103, 0.23080272898824158], 'false': [nan, 0.2236031557835231], 'false,false': [nan, 0.2236031557835231]}
{'': [0.2212384853980097, 0.21803107639728586], 'false': [0.23906808451301315, 0.2146049985636265], 'false,true': [0.23906808451301315, nan], 'false,true,true': [0.21148695886113314, 0.24462180363214767], 'false,false': [nan, 0.2146049985636265]}
{'': [0.2437523145157238, 0.22400010841774126], 'true': [0.23233278872151733, 0.2464241694046313], 'true,false': [nan, 0.2464241694046313], 'true,false,false': [nan, 0.2464241694046313], 'true,true': [0.0, 0.24462477311360484], 'false': [0.23473030944930637, 0.22202093463566674], 'false,false': [nan, 0.22202093463566674]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 16.042
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( countryhascompanyoffice(F, E), bankchiefexecutiveceo(E, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8337586911970732;  // std dev = 0.988, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( acquired(A, H) )
%   | | then if ( companyalsoknownas(A, I) )
%   | | | then return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.21880467280442972;  // std dev = 3.750, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | else if ( acquired(J, A), acquired(K, J) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.1966104735610468;  // std dev = 10.790, 520.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=176 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.7663713019336724;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.8056516293930205;  // std dev = 0.141, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then if ( countryhascompanyoffice(F, A), acquired(A, G) )
%   | | | then return -0.08225683487149785;  // std dev = 0.830, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.07133875438455702;  // std dev = 3.187, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.14283933541740818;  // std dev = 12.005, 701.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=218 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6071357014192389;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.021911162667313418;  // std dev = 2.035, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.20536508219957794;  // std dev = 3.881, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( companyceo(A, I) )
%   | | | then return 0.2743682215652385;  // std dev = 1.545, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.06980127724339687;  // std dev = 3.261, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | else if ( companyceo(A, J), companyalsoknownas(A, K) )
%   | | | then return -0.17769383147892753;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.14748681040557063;  // std dev = 10.914, 537.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=181 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.4702992256918486;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( countryhascompanyoffice(F, D) )
%   | | | then return 0.5894576159478478;  // std dev = 0.985, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.6667212532084259;  // std dev = 0.172, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.1502409377907065;  // std dev = 0.166, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(H, A), companyceo(H, I) )
%   | | then if ( bankboughtbank(H, J), acquired(H, J) )
%   | | | then return 0.4161707908497391;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03805403088655852;  // std dev = 2.533, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | else if ( acquired(A, K), companyalsoknownas(A, L) )
%   | | | then return -0.13694388571084717;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.12347645352034302;  // std dev = 11.268, 574.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=194 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.1967783464734908;  // std dev = 0.488, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6397327152939517;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return -0.18642103190495093;  // std dev = 0.146, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( countryhascompanyoffice(G, A), cityhascompanyoffice(H, A) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.5477394898871706;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15076120511817756;  // std dev = 0.403, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.05462497451861609;  // std dev = 3.372, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.09016881457661391;  // std dev = 11.558, 624.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=205 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), cityhascompanyoffice(E, A) )
%   | then return 0.4178929577651176;  // std dev = 0.206, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3000778524936235;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( bankchiefexecutiveceo(A, H), companyceo(A, H) )
%   | | | then return -0.08627323699051592;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4085455312234002;  // std dev = 1.687, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else return -0.13832459596464552;  // std dev = 0.176, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankboughtbank(J, A), countryhascompanyoffice(K, A) )
%   | | | then return 0.45447173542904423;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04129751441447808;  // std dev = 3.183, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( acquired(L, A), cityhascompanyoffice(M, L) )
%   | | | then return 0.17294424429940813;  // std dev = 2.334, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.07665794768089244;  // std dev = 10.784, 538.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=176 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.02080047787586302;  // std dev = 0.379, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   else if ( countryhascompanyoffice(D, A) )
%   | then if ( acquired(A, E), bankboughtbank(F, E) )
%   | | then if ( countryhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.7220017429516004;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.25502073820741045;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( countryhascompanyoffice(D, H), economicsectorcompany(B, H) )
%   | | | then return 0.5395637492168163;  // std dev = 1.173, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.2131480189487756;  // std dev = 0.432, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.28005776828270235;  // std dev = 0.254, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.038655851833082976;  // std dev = 2.801, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.025615685717176647;  // std dev = 2.224, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.10228227951289233;  // std dev = 9.920, 428.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=158 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), companyalsoknownas(C, E) )
%   | then return 0.3218607741915541;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2372526613294714;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( companyceo(A, H), countryhascompanyoffice(I, G) )
%   | | | then return 0.2729256338825333;  // std dev = 0.372, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3907986491288659;  // std dev = 0.250, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.1229862814729294;  // std dev = 0.197, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else return 0.04247101770559872;  // std dev = 0.457, 625.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=204 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(E, D), companyceo(D, F) )
%   | | then return 0.27779731017234577;  // std dev = 0.069, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( companyalsoknownas(D, G), countryhascompanyoffice(H, G) )
%   | | | then return -0.018492286013715633;  // std dev = 1.111, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.19773779316244341;  // std dev = 0.950, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.10693695943585822;  // std dev = 0.186, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( acquired(A, I), bankboughtbank(J, I) )
%   | then return 0.30875485527587837;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( companyceo(A, K), bankboughtbank(L, A) )
%   | | then if ( countryhascompanyoffice(M, A) )
%   | | | then return -0.03798126659772838;  // std dev = 1.056, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.2711331360924841;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(N, A), companyceo(N, P) )
%   | | | then return -0.002986360788729357;  // std dev = 2.724, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.06227420738428826;  // std dev = 10.796, 527.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=188 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.16196831781944612;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | | | then return 0.32527610488195263;  // std dev = 0.994, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.11078220159413989;  // std dev = 0.964, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.004375534910992387;  // std dev = 0.362, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.15993855350513306;  // std dev = 0.268, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | else return -0.0974379410800506;  // std dev = 0.173, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( companyceo(J, K) )
%   | | | then return 0.11568235511561337;  // std dev = 1.541, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.12110258183357549;  // std dev = 1.974, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else return 0.047338597733444066;  // std dev = 0.472, 479.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=171 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '18.933', 'seconds']
Refined model CLL: -0.313005


******************************************
Best model found
******************************************
Results 

CLL : -0.312405 

AUC ROC : 0.757164 

AUC PR : 0.088726 

Precision : 0.078421 

Recall : 0.295367 

F1 : 0.123937 

Total Learning Time : 16.042 

Total Inference Time : 70.39803576469421 

Total revision time: 152.11763814163209
Best scored revision CLL: -0.313005


Results 

CLL : -0.312405 

AUC ROC : 0.757164 

AUC PR : 0.088726 

Precision : 0.078421 

Recall : 0.295367 

F1 : 0.123937 

Total Learning Time : 152.26859644126893 

Total Inference Time : 70.39803576469421 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 6.913
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2581489350995122;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( bankbankincountry(D, E), bankbankincountry(A, E) )
%   | then return 0.22549587387502257;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | else return 0.17463829680163528;  // std dev = 0.465, 752.000 (wgt'ed) examples reached here.  /* #neg=514 #pos=238 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then return 0.49040032115077253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( bankbankincountry(A, D), bankbankincountry(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A), bankbankincountry(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0.18842475938974576;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.16793548210028839;  // std dev = 12.605, 716.000 (wgt'ed) examples reached here.  /* #neg=478 #pos=238 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(D, A), bankbankincountry(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18294432208401554;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A) )
%   | | then if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07438671781083357;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.138511471128143;  // std dev = 0.469, 727.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=238 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22652526662998307;  // std dev = 0.500, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( bankbankincountry(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10880464784235173;  // std dev = 13.179, 798.000 (wgt'ed) examples reached here.  /* #neg=542 #pos=256 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07646901342315146;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   else if ( bankbankincountry(E, A) )
%   | then if ( bankbankincountry(F, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07929608079746528;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( bankbankincountry(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12660585491942422;  // std dev = 0.479, 668.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=238 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A), bankbankincountry(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankbankincountry(D, A) )
%   | then return 0.061781359841439495;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( bankbankincountry(A, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08845917476704918;  // std dev = 12.978, 748.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=256 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10825833867137033;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   else if ( bankbankincountry(E, A), bankbankincountry(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06009521272020858;  // std dev = 12.674, 726.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=240 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0802972040405797;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A), bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06153345578415778;  // std dev = 0.475, 742.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=256 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then return 0.10984057308328607;  // std dev = 0.495, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   else if ( bankbankincountry(D, A) )
%   | then if ( bankbankincountry(D, E) )
%   | | then if ( bankbankincountry(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31907978150286403;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02406384738311902;  // std dev = 12.735, 747.000 (wgt'ed) examples reached here.  /* #neg=509 #pos=238 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(E, C), bankbankincountry(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0896389792439662;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( bankbankincountry(A, F) )
%   | then return 0.009899771483302433;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | else if ( bankbankincountry(G, A), bankbankincountry(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03564257640713568;  // std dev = 12.579, 710.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=238 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '38.726', 'seconds']
Parameter learned model CLL:-0.37208 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(D, E), bankbankincountry(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.49, 3, 2], 'false,true': [3.375, 31, 18], 'false,false': [0.465, 514, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'false': 'bankbankincountry(A, D), bankbankincountry(D, A)', 'false,false': 'bankbankincountry(E, A), bankbankincountry(F, E)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true': [0.816, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.394, 32, 18], 'false,false,false,false': [12.605, 478, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(D, A), bankbankincountry(A, D)', 'true,false': 'bankbankincountry(E, A)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A)', 'false,false,true': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.333, 29, 18], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false': [0.469, 489, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'false': 'bankbankincountry(E, A)', 'false,false': 'bankbankincountry(A, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.5, 2, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [13.179, 542, 256]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A)', 'false,true': 'bankbankincountry(F, E), bankbankincountry(E, F)', 'false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.48, 37, 18], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.095, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.479, 430, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A), bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,false': 'bankbankincountry(A, E), bankbankincountry(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [1.095, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.978, 492, 256]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'true': 'bankbankincountry(C, D)', 'false': 'bankbankincountry(E, A), bankbankincountry(E, E)', 'false,false': 'bankbankincountry(A, F)', 'false,false,false': 'bankbankincountry(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [3.31, 28, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.674, 486, 240]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, E)', 'false': 'bankbankincountry(A, A)', 'false,false': 'bankbankincountry(F, A), bankbankincountry(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.452, 5, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 486, 256]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(A, C)', 'false': 'bankbankincountry(D, A)', 'false,true': 'bankbankincountry(D, E)', 'false,true,true': 'bankbankincountry(E, F)', 'false,false': 'bankbankincountry(G, A)'}, {'true': [0.495, 24, 18], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.816, 1, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.735, 509, 238]}]
['companyeconomicsector(A, B)', {'': 'bankbankincountry(C, A)', 'true': 'bankbankincountry(D, C)', 'true,false': 'bankbankincountry(A, C)', 'true,false,false': 'bankbankincountry(E, C), bankbankincountry(E, A)', 'false': 'bankbankincountry(A, F)', 'false,false': 'bankbankincountry(G, A), bankbankincountry(G, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.155, 4, 2], 'false,true': [3.413, 33, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.579, 472, 238]}]
{'': [0.24000000000000005, 0.2174560201745341], 'true': [nan, 0.24000000000000005], 'false': [0.23240316534777128, 0.21632384563150958]}
{'': [0.22222222222222224, 0.2224907161122304], 'false': [nan, 0.2224907161122302], 'false,false': [nan, 0.2224907161122304], 'false,false,false': [0.23040000000000013, 0.2219109890452947]}
{'': [0.2363060208239023, 0.22024977525945305], 'true': [nan, 0.2363060208239023], 'true,false': [nan, 0.2363060208239023], 'false': [nan, 0.22024977525945305], 'false,false': [0.22222222222222224, 0.22019983766265014], 'false,false,true': [nan, 0.22222222222222224]}
{'': [0.25, 0.2176489744822612], 'true': [nan, 0.25], 'false': [nan, 0.2176489744822612], 'false,false': [nan, 0.2176489744822612]}
{'': [0.22016528925619785, 0.2294423488035845], 'false': [0.24, 0.2293466958298906], 'false,true': [nan, 0.24], 'false,false': [nan, 0.2293466958298906], 'true': [nan, 0.22016528925619785]}
{'': [nan, 0.22526715383412385], 'false': [0.24, 0.22516394643992002], 'false,false': [nan, 0.22516394643992055]}
{'': [0.2381852551984874, 0.22126398359637925], 'true': [nan, 0.2381852551984874], 'false': [nan, 0.22126398359637925], 'false,false': [nan, 0.22126398359637925], 'false,false,false': [nan, 0.22126398359637925]}
{'': [0.20408163265306123, 0.22594391624775756], 'false': [nan, 0.22594391624775756], 'false,false': [nan, 0.22594391624775756], 'true': [nan, 0.20408163265306123], 'true,false': [nan, 0.20408163265306123]}
{'': [0.24489795918367327, 0.21746410337728556], 'false': [0.2222222222222222, 0.21709685686072377], 'false,true': [0.2222222222222222, nan], 'false,true,true': [nan, 0.2222222222222222], 'false,false': [nan, 0.21709685686072377]}
{'': [0.2222222222222222, 0.22325664839649279], 'false': [0.2283737024221459, 0.2228446736758614], 'false,false': [nan, 0.2228446736758614], 'true': [nan, 0.2222222222222222], 'true,false': [nan, 0.2222222222222222], 'true,false,false': [nan, 0.2222222222222222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- bankbankincountry(C, A).;true;true
0;true;bankbankincountry(A, C).;true;true
0;false;bankbankincountry(D, E), bankbankincountry(A, E).;true;true
1;;companyeconomicsector(A, B) :- bankbankincountry(C, A).;true;true
1;false;bankbankincountry(A, D), bankbankincountry(D, A).;true;true
1;false,false;bankbankincountry(E, A), bankbankincountry(F, E).;true;true
1;false,false,false;bankbankincountry(A, G).;true;true
2;;companyeconomicsector(A, B) :- bankbankincountry(A, C).;true;true
2;true;bankbankincountry(D, A), bankbankincountry(A, D).;true;true
2;true,false;bankbankincountry(E, A).;true;true
2;false;bankbankincountry(A, A).;true;true
2;false,false;bankbankincountry(F, A).;true;true
2;false,false,true;bankbankincountry(A, G).;true;true
3;;companyeconomicsector(A, B) :- bankbankincountry(C, A).;true;true
3;true;bankbankincountry(D, C).;true;true
3;false;bankbankincountry(E, A).;true;true
3;false,false;bankbankincountry(A, A).;true;true
4;;companyeconomicsector(A, B) :- bankbankincountry(A, C).;true;true
4;true;bankbankincountry(C, D).;true;true
4;false;bankbankincountry(E, A).;true;true
4;false,true;bankbankincountry(F, E), bankbankincountry(E, F).;true;true
4;false,false;bankbankincountry(A, G).;true;true
5;;companyeconomicsector(A, B) :- bankbankincountry(C, A), bankbankincountry(A, C).;true;true
5;false;bankbankincountry(D, A).;true;true
5;false,false;bankbankincountry(A, E), bankbankincountry(E, F).;true;true
6;;companyeconomicsector(A, B) :- bankbankincountry(A, C).;true;true
6;true;bankbankincountry(C, D).;true;true
6;false;bankbankincountry(E, A), bankbankincountry(E, E).;true;true
6;false,false;bankbankincountry(A, F).;true;true
6;false,false,false;bankbankincountry(A, G).;true;true
7;;companyeconomicsector(A, B) :- bankbankincountry(C, A).;true;true
7;true;bankbankincountry(D, C).;true;true
7;true,false;bankbankincountry(A, E).;true;true
7;false;bankbankincountry(A, A).;true;true
7;false,false;bankbankincountry(F, A), bankbankincountry(A, F).;true;true
8;;companyeconomicsector(A, B) :- bankbankincountry(A, C).;true;true
8;false;bankbankincountry(D, A).;true;true
8;false,true;bankbankincountry(D, E).;true;true
8;false,true,true;bankbankincountry(E, F).;true;true
8;false,false;bankbankincountry(G, A).;true;true
9;;companyeconomicsector(A, B) :- bankbankincountry(C, A).;true;true
9;true;bankbankincountry(D, C).;true;true
9;true,false;bankbankincountry(A, C).;true;true
9;true,false,false;bankbankincountry(E, C), bankbankincountry(E, A).;true;true
9;false;bankbankincountry(A, F).;true;true
9;false,false;bankbankincountry(G, A), bankbankincountry(G, G).;true;true


Refining candidate
***************************
Model training time 15.831
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( bankbankincountry(D, E), bankbankincountry(A, E) )
%   | then if ( companyalsoknownas(A, F), acquired(A, G) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( cityhascompanyoffice(H, A), countryhascompanyoffice(I, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.17243464938522662;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.18443292301491615;  // std dev = 12.063, 662.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=216 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( bankbankincountry(A, D), bankbankincountry(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A), bankbankincountry(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, G) )
%   | | | then return 0.14398377577579982;  // std dev = 3.464, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.16260182461219155;  // std dev = 12.486, 717.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=238 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(D, A), bankbankincountry(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), cityhascompanyoffice(G, F) )
%   | | | then return 0.5076381673218309;  // std dev = 1.435, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.10861972275166716;  // std dev = 2.718, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(H, A) )
%   | | then if ( bankbankincountry(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1441443075583419;  // std dev = 0.468, 705.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=238 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09991386268170668;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( bankbankincountry(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.6632817236601737;  // std dev = 0.140, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.10014858377039314;  // std dev = 12.770, 762.000 (wgt'ed) examples reached here.  /* #neg=521 #pos=241 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, E), companyceo(E, F) )
%   | | then if ( bankchiefexecutiveceo(A, G) )
%   | | | then return -0.1792101442572924;  // std dev = 0.933, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.05713646478826898;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.2590580423633166;  // std dev = 2.121, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.030233369765267068;  // std dev = 2.056, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   else if ( bankbankincountry(I, A) )
%   | then if ( bankbankincountry(J, I), bankbankincountry(I, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.025043628813514296;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( bankbankincountry(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09145028209177632;  // std dev = 0.461, 725.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=238 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A), bankbankincountry(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankbankincountry(D, A) )
%   | then return -0.08120516399027969;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( bankbankincountry(A, E), bankbankincountry(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(G, A), bankboughtbank(G, H) )
%   | | | then return -0.1776541179725733;  // std dev = 0.834, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.08354934198007236;  // std dev = 12.750, 750.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=255 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( bankbankincountry(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(E, A) )
%   | | then if ( bankchiefexecutiveceo(E, F) )
%   | | | then return 0.09485325524188865;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35720254784105526;  // std dev = 1.693, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( companyceo(A, G), bankchiefexecutiveceo(A, H) )
%   | | | then return 0.11471251846493227;  // std dev = 1.784, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.12198523926464164;  // std dev = 1.314, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   else if ( bankbankincountry(I, A), bankbankincountry(I, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050828703226121465;  // std dev = 12.524, 748.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=240 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.026373311402836816;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( bankbankincountry(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(F, A), bankbankincountry(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.06385719594546874;  // std dev = 5.934, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
%   | | | else return 0.041414357215968395;  // std dev = 11.376, 615.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=198 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then if ( bankchiefexecutiveceo(A, E), acquired(A, F) )
%   | | then return 0.2648884038440394;  // std dev = 1.133, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( countryhascompanyoffice(D, G), companyceo(G, H) )
%   | | | then return -0.015655927317402757;  // std dev = 2.125, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.1828523567809487;  // std dev = 1.017, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4501168377842863;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( bankbankincountry(I, A) )
%   | then if ( bankbankincountry(I, J) )
%   | | then if ( bankbankincountry(J, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0802058672660072;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(L, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.039886977299162366;  // std dev = 0.461, 724.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=238 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankbankincountry(C, A) )
%   then if ( bankbankincountry(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankbankincountry(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankbankincountry(E, C), bankbankincountry(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06022825078835727;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( bankbankincountry(A, F) )
%   | then if ( bankboughtbank(G, A), companyceo(A, H) )
%   | | then return -0.05859468217793503;  // std dev = 0.430, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.11777028079569075;  // std dev = 2.231, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.2531113242397268;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( bankbankincountry(J, A), bankbankincountry(J, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03534626698074022;  // std dev = 0.462, 716.000 (wgt'ed) examples reached here.  /* #neg=478 #pos=238 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '31.619', 'seconds']
Refined model CLL: -0.361507


******************************************
Best model found
******************************************
Results 

CLL : -0.361543 

AUC ROC : 0.52027 

AUC PR : 0.041808 

Precision : 0.007423 

Recall : 0.048077 

F1 : 0.01286 

Total Learning Time : 15.831 

Total Inference Time : 137.37515425682068 

Total revision time: 210.22484378242493
Best scored revision CLL: -0.361507


Results 

CLL : -0.361543 

AUC ROC : 0.52027 

AUC PR : 0.041808 

Precision : 0.007423 

Recall : 0.048077 

F1 : 0.01286 

Total Learning Time : 210.37580208206177 

Total Inference Time : 137.37515425682068 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.602
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17393840878372205;  // std dev = 0.465, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.178903652080643;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | else return 0.19853694215418155;  // std dev = 0.474, 567.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1259257649739021;  // std dev = 4.845, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.18911294075971904;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | | | else return 0.18186044948762206;  // std dev = 11.204, 552.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.8226893368677732;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.04776732300779446;  // std dev = 2.483, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else return 0.15414894098379936;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0911325111588027;  // std dev = 4.181, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | else return 0.14626550967006718;  // std dev = 0.474, 566.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.2266194196578538;  // std dev = 0.494, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0.10894504450830388;  // std dev = 0.460, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11281124788267843;  // std dev = 12.320, 685.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.18679608608032813;  // std dev = 2.918, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else return 0.05194762686351277;  // std dev = 4.481, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19716838914693388;  // std dev = 3.744, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09021871150995937;  // std dev = 0.470, 587.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5740930160878583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.07732075087519193;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.14054940246766634;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else return 0.09848586906801152;  // std dev = 11.795, 609.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.08421761413948436;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else return 0.012852338393941872;  // std dev = 4.516, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05270764035201399;  // std dev = 12.088, 665.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.15424904998347283;  // std dev = 2.198, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.11942324549426422;  // std dev = 1.978, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0.006939485921714498;  // std dev = 0.450, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041958347406941814;  // std dev = 0.468, 696.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.02375963131816133;  // std dev = 0.466, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.08723097271516321;  // std dev = 1.926, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.04757327561357526;  // std dev = 3.692, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.040142413695410016;  // std dev = 11.338, 578.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.36871141136298624;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.013706968431651517;  // std dev = 2.346, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04099536325685778;  // std dev = 4.078, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.04852200413666162;  // std dev = 4.704, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041252089023538774;  // std dev = 11.257, 562.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '6.049', 'seconds']
Parameter learned model CLL:-0.368504 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.543, 23, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.465, 52, 24], 'false,true': [4.806, 72, 34], 'false,false': [0.474, 374, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.845, 81, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.686, 62, 34], 'false,false,false,false': [11.204, 359, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.483, 27, 8], 'true,false,false': [4.712, 64, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.181, 64, 24], 'false,false,false': [0.474, 373, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.494, 12, 9], 'true,false': [0.46, 55, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.32, 458, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.918, 20, 15], 'true,false': [4.481, 71, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.744, 34, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 394, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.654, 67, 32], 'false,false,true': [2.652, 17, 12], 'false,false,false': [11.795, 394, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.013, 23, 15], 'true,false': [4.516, 76, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.088, 448, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.198, 10, 9], 'true,false,true': [1.978, 11, 6], 'true,false,false': [0.45, 46, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 469, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.466, 92, 43], 'false,true,true,true': [1.926, 10, 6], 'false,true,true,false': [3.692, 59, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.338, 385, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.346, 18, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.078, 53, 24], 'false,true': [4.704, 64, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.257, 369, 193]}]
{'': [0.21219135802469272, 0.22352730781204355], 'false': [0.21787112851548734, 0.22452401170802397], 'true': [0.2021484375000001, 0.21606648199446088], 'true,false': [nan, 0.21606648199446088]}
{'': [0.2059459746027508, 0.22759654671082927], 'false': [nan, 0.2275965467108303], 'false,false': [nan, 0.22759654671082927], 'false,false,false': [0.22873263888888862, 0.22739117307289428]}
{'': [0.21749155012898988, 0.22155600081055862], 'false': [nan, 0.22155600081055862], 'false,false': [0.1986032046909032, 0.2247156288628867], 'true': [0.0, 0.21550621461163313], 'true,false': [0.1761824052150757, 0.22657226155768379], 'false,false,true': [nan, 0.1986032046909032], 'true,true': [0.0, nan]}
{'': [0.22072525966158574, 0.22157235484040622], 'false': [nan, 0.22157235484040622], 'false,false': [nan, 0.22157235484040622], 'true': [0.24410112957365493, 0.21160349652516472]}
{'': [0.21692679089960804, 0.22351089094534146], 'false': [0.24167796618721984, 0.22068729340132429], 'false,true': [nan, 0.24167796618722004], 'false,false': [nan, 0.22068729340132429], 'true': [0.24333319281044047, 0.20284161409013526]}
{'': [0.0, 0.22781640872447467], 'false': [0.21876816996235973, 0.22914890888351822], 'false,false': [0.24256837098692022, 0.22842946229487004], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.20851619284810374, 0.2197171657963245], 'false': [nan, 0.21971716579632017], 'false,false': [nan, 0.2197171657963245], 'false,false,false': [nan, 0.2197171657963245], 'true': [0.23886996446530046, 0.1960624754963028]}
{'': [0.22086598486890469, 0.21906288497922569], 'true': [0.25434710058969745, 0.21010498122399432], 'false': [nan, 0.21906288497922569], 'false,false': [nan, 0.21906288497922569], 'true,false': [0.23006191516362, 0.20214843749999975]}
{'': [0.21715489351902276, 0.21828003545128055], 'false': [0.18900019500882137, 0.22241412339411692], 'false,false': [nan, 0.22241412339411692], 'false,true': [0.18900019500882137, nan], 'false,true,true': [0.23179367606132753, 0.17698164561923097]}
{'': [0.21452547279784984, 0.22554052858861084], 'false': [0.22583365211896547, 0.22548156684945897], 'false,false': [nan, 0.22548156684945897], 'true': [0.2091246191960368, 0.2159926305192398], 'true,false': [nan, 0.2159926305192398], 'true,false,false': [nan, 0.2159926305192398], 'true,true': [0.0, 0.21175143610624955]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 34.648
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), countryhascompanyoffice(D, A) )
%   then if ( bankboughtbank(E, A) )
%   | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | | then if ( bankboughtbank(I, G) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.20189893509951218;  // std dev = 5.374, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.19267487427660981;  // std dev = 11.155, 559.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=187 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7269123891755109;  // std dev = 0.085, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.05275871009078893;  // std dev = 0.419, 90.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=21 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.8188711391147161;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | | then return 0.8221987972403195;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12850431591301822;  // std dev = 3.539, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else if ( companyceo(A, F) )
%   | | then if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | | | then return -0.2090369945210387;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07841391820540076;  // std dev = 3.362, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.2593720230967321;  // std dev = 3.010, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.17031272018432891;  // std dev = 10.455, 489.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=165 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.8255722858823612;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.650146389649074;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | | then return 0.23696520686680836;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.06676176646581504;  // std dev = 4.253, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   else if ( acquired(H, A), countryhascompanyoffice(I, A) )
%   | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then return 0.7196094605801878;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.22248881483664495;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(A, K), companyceo(K, L) )
%   | | then return 0.0024182326343857204;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.5535287478462076;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.14938135679699477;  // std dev = 11.501, 593.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=202 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), countryhascompanyoffice(E, D) )
%   | then return 0.49948364156815755;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A) )
%   | | then return 0.6294370944047158;  // std dev = 0.226, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7425613700957295;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then if ( acquired(A, H) )
%   | | then return 0.5115097852544263;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6316712215281601;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7672508788740705;  // std dev = 0.468, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.21345610375571258;  // std dev = 0.218, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( acquired(A, K) )
%   | | | then return -0.0066181551197161265;  // std dev = 3.192, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.06797606771216423;  // std dev = 11.076, 618.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=177 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.3919924691800925;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(C, E), cityhascompanyoffice(F, E) )
%   | | then if ( acquired(E, G), companyceo(G, H) )
%   | | | then return 0.5242337393740095;  // std dev = 0.956, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03982138706777104;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.05183907162437694;  // std dev = 0.338, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   else if ( companyalsoknownas(A, I), acquired(J, I) )
%   | then return -0.0074377419357802245;  // std dev = 0.291, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( companyceo(A, K) )
%   | | then if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.44681507877888454;  // std dev = 0.279, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07855216321601848;  // std dev = 3.753, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0.11282884385651645;  // std dev = 2.716, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.12070858560877432;  // std dev = 10.691, 534.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=189 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.6508513337847941;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then if ( companyalsoknownas(D, F), cityhascompanyoffice(G, F) )
%   | | | then return 0.05979150118248126;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0920529790771587;  // std dev = 0.978, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.34548744145690485;  // std dev = 0.183, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.06067831483342331;  // std dev = 3.310, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( acquired(A, H) )
%   | | then if ( companyceo(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.1272815398120907;  // std dev = 2.254, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.026200508031827975;  // std dev = 3.046, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.10065688592271185;  // std dev = 2.914, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.11324722764130561;  // std dev = 10.255, 481.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=177 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, C) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then return 0.06307155608990846;  // std dev = 0.357, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( cityhascompanyoffice(D, F), companyalsoknownas(F, G) )
%   | | then return 0.40358499723230684;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(C, H) )
%   | | | then return 0.16688098880402435;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10714485417907944;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(A, I), cityhascompanyoffice(J, A) )
%   | then return 0.005394370773000927;  // std dev = 0.347, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | else if ( companyceo(A, K), acquired(L, A) )
%   | | then if ( companyalsoknownas(L, M), economicsectorcompany(B, M) )
%   | | | then return 0.5742144298793347;  // std dev = 0.409, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10296206420290126;  // std dev = 1.012, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( acquired(N, A), cityhascompanyoffice(P, N) )
%   | | | then return -0.027049676225797445;  // std dev = 2.284, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.04323332147085163;  // std dev = 11.582, 681.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=219 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.2719922016366681;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.1256350684406266;  // std dev = 0.604, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.13814415315410183;  // std dev = 0.187, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   else if ( bankboughtbank(F, A), cityhascompanyoffice(G, F) )
%   | then if ( bankboughtbank(A, H) )
%   | | then return 0.03724538423104166;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.27625125770093223;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( companyceo(A, J), acquired(A, K) )
%   | | | then return -0.09524051640944671;  // std dev = 1.310, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.08895682549705548;  // std dev = 3.341, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.1522710264631194;  // std dev = 3.107, 53.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | | | else return 0.040353769266405354;  // std dev = 11.033, 611.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=198 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return -0.0068517783334776155;  // std dev = 0.361, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   else if ( acquired(A, D) )
%   | then if ( acquired(D, E), companyceo(A, F) )
%   | | then if ( countryhascompanyoffice(G, D) )
%   | | | then return 0.07393237971198843;  // std dev = 0.765, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4412259975619788;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.4590984474791363;  // std dev = 0.282, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.06309868014289775;  // std dev = 3.311, 88.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.5447335959684022;  // std dev = 0.170, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.23467915456873686;  // std dev = 0.068, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return -0.0024803628091268175;  // std dev = 2.820, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.04605486078439943;  // std dev = 9.842, 436.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=146 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.4460309530040024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.2435924501102914;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.01373682144287022;  // std dev = 1.697, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.048702776149068414;  // std dev = 0.206, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return 0.018931322511453387;  // std dev = 0.400, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.32891280482721275;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, I) )
%   | | then return -0.05388261916002467;  // std dev = 0.355, 105.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=24 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return -0.01871629786222872;  // std dev = 2.926, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.041004501145379534;  // std dev = 10.167, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.716', 'seconds']
Refined model CLL: -0.323375


******************************************
Best model found
******************************************
Results 

CLL : -0.323628 

AUC ROC : 0.711851 

AUC PR : 0.068771 

Precision : 0.065903 

Recall : 0.222008 

F1 : 0.101635 

Total Learning Time : 34.648 

Total Inference Time : 28.599925756454468 

Total revision time: 129.63497352600098
Best scored revision CLL: -0.323375


Results 

CLL : -0.323628 

AUC ROC : 0.711851 

AUC PR : 0.068771 

Precision : 0.065903 

Recall : 0.222008 

F1 : 0.101635 

Total Learning Time : 129.776349067688 

Total Inference Time : 28.599925756454468 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.916
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.1667909104081534;  // std dev = 4.157, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2068136235268074;  // std dev = 0.477, 674.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=235 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.1143865555347246;  // std dev = 4.249, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17665216704918654;  // std dev = 12.401, 680.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=235 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.0981428050806939;  // std dev = 4.249, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14147073251825404;  // std dev = 0.473, 698.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=235 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.07426215865277601;  // std dev = 0.443, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11732258511284255;  // std dev = 12.494, 700.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=235 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.0682686023575684;  // std dev = 4.258, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1246990705761189;  // std dev = 0.481, 646.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=235 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.21786547491173994;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09463452508826009;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08207997124867532;  // std dev = 12.411, 682.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=235 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.08463735792955936;  // std dev = 4.119, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05276132302791708;  // std dev = 12.534, 709.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=235 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.032766502505969505;  // std dev = 4.230, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07156267295092213;  // std dev = 0.480, 651.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=235 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.047707695317960035;  // std dev = 0.457, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.028976886100451224;  // std dev = 12.517, 705.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=235 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.007625048843273182;  // std dev = 4.260, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.022807250611358545;  // std dev = 12.517, 705.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=235 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '11.849', 'seconds']
Parameter learned model CLL:-0.371215 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.157, 56, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.477, 439, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.249, 65, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.401, 445, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.249, 65, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 463, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.443, 68, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.494, 465, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.258, 66, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.481, 411, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [7.45e-09, 6, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.146, 55, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.411, 447, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.119, 54, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.534, 474, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.23, 64, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.48, 416, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.457, 58, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.517, 470, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.26, 67, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.517, 470, 235]}]
{'': [0.21338210638622274, 0.22709762347119605], 'false': [nan, 0.22709762347119605], 'true': [0.21338210638622274, nan]}
{'': [0.20061728395061698, 0.22615700692040958], 'false': [nan, 0.22615700692040958], 'false,false': [nan, 0.22615700692040958], 'false,false,false': [nan, 0.22615700692040958]}
{'': [0.20061728395061718, 0.2233253421564621], 'false': [nan, 0.2233253421564621], 'false,false': [nan, 0.2233253421564621], 'true': [0.20061728395061718, nan], 'true,true': [0.20061728395061718, nan]}
{'': [0.19655451497282947, 0.22301020408162897], 'false': [nan, 0.22301020408162897], 'false,false': [nan, 0.22301020408162897], 'true': [0.19655451497282947, nan]}
{'': [0.19925129815239653, 0.23144331873209237], 'false': [nan, 0.23144331873209237], 'false,false': [nan, 0.23144331873209237], 'true': [0.19925129815239653, nan]}
{'': [0.20619253650622013, 0.22584300100619226], 'false': [nan, 0.22584300100619226], 'false,false': [nan, 0.22584300100619226], 'true': [9.25185853854297e-18, 0.2148437500000005], 'true,false': [nan, 0.2148437500000005]}
{'': [0.21479130895028256, 0.22159182463629298], 'false': [nan, 0.22159182463629298], 'false,false': [nan, 0.22159182463629298], 'false,false,false': [nan, 0.22159182463629298], 'true': [0.21479130895028256, nan]}
{'': [0.20106810532466785, 0.23067430232585198], 'false': [nan, 0.23067430232585198], 'false,false': [nan, 0.23067430232585198], 'true': [0.20106810532466785, nan]}
{'': [0.2090246152475868, 0.22222222222221577], 'false': [nan, 0.22222222222221577], 'false,false': [nan, 0.22222222222221577]}
{'': [0.1972989446203796, 0.22222222222222282], 'false': [nan, 0.22222222222222282], 'false,false': [nan, 0.22222222222222282], 'true': [0.1972989446203796, nan], 'true,true': [0.1972989446203796, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true


Refining candidate
***************************
Model training time 8.968
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( cityhascompanyoffice(E, A), companyalsoknownas(C, F) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyalsoknownas(C, G), acquired(H, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3781489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(A, J), acquired(A, K) )
%   | | then if ( countryhascompanyoffice(L, J), countryhascompanyoffice(L, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03840278903841881;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( bankboughtbank(M, A), companyceo(A, N) )
%   | | | then return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.18369638035498226;  // std dev = 12.264, 685.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=223 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.7290461931854456;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then if ( cityhascompanyoffice(E, D) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.834284722721758;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, F), companyalsoknownas(A, G) )
%   | | then if ( cityhascompanyoffice(H, A), acquired(G, I) )
%   | | | then return 0.0751305183478242;  // std dev = 1.754, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.10355034354621641;  // std dev = 0.993, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.062290844774023364;  // std dev = 4.437, 111.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=26 */
%   | | | else return 0.15476147114969693;  // std dev = 11.832, 643.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=206 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.5908644317987358;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.553001350850537;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, E), acquired(F, A) )
%   | then if ( cityhascompanyoffice(G, A) )
%   | | then if ( companyceo(A, H) )
%   | | | then return 0.15517249593633892;  // std dev = 1.691, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.011554798103646366;  // std dev = 1.181, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.16590278362416488;  // std dev = 0.075, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7138291552452445;  // std dev = 1.705, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return -0.18169918817673072;  // std dev = 0.168, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return 0.15736401842488684;  // std dev = 0.473, 592.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=205 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.508555340492186;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(D, E), acquired(F, A) )
%   | | then if ( acquired(E, G) )
%   | | | then return 0.035626054673393526;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35901219509927895;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.07736768852835355;  // std dev = 0.239, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.6692393435392745;  // std dev = 0.303, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(I, A), bankchiefexecutiveceo(I, J) )
%   | | then if ( countryhascompanyoffice(K, I), companyceo(L, J) )
%   | | | then return 0.06605913067364622;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2858798847699658;  // std dev = 1.166, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.5494253548624439;  // std dev = 0.445, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.09731199146454814;  // std dev = 12.194, 732.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=226 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( companyceo(C, D) )
%   | then if ( acquired(E, C), acquired(F, E) )
%   | | then return -0.1739522525834026;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(G, C) )
%   | | | then return 0.2572236560421438;  // std dev = 1.601, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.06314464753135068;  // std dev = 2.716, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( companyceo(A, H), cityhascompanyoffice(I, A) )
%   | | then return 0.5303384866869328;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyalsoknownas(C, J), companyceo(A, K) )
%   | | | then return -0.18421339662039324;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.21620537121119543;  // std dev = 2.633, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   else if ( companyalsoknownas(A, L) )
%   | then if ( acquired(M, L) )
%   | | then return -0.11949609352931476;  // std dev = 0.165, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return 0.029927904619965397;  // std dev = 0.375, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else return 0.09510796271820775;  // std dev = 0.457, 606.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=197 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.15853571758795498;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, D) )
%   | | then return -3.696567084429135E-4;  // std dev = 0.294, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0.13986295642456362;  // std dev = 0.425, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.5566256742158708;  // std dev = 0.200, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.2028505929718171;  // std dev = 0.029, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( acquired(G, A), countryhascompanyoffice(H, G) )
%   | | then if ( countryhascompanyoffice(I, A), companyceo(G, J) )
%   | | | then return -0.20221089254119595;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07428741825499349;  // std dev = 1.802, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.23961240054739777;  // std dev = 3.305, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.1015619169713256;  // std dev = 10.350, 478.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=169 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.437, 762.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=260 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.32973050011542754;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(C, D), cityhascompanyoffice(E, A) )
%   | | then if ( acquired(D, F), countryhascompanyoffice(G, A) )
%   | | | then return -0.14865643120564997;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16215884360727853;  // std dev = 1.469, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( cityhascompanyoffice(H, C) )
%   | | | then return -0.1568536918656423;  // std dev = 0.902, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return -0.010663975972972658;  // std dev = 2.605, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   else if ( acquired(A, I), acquired(J, A) )
%   | then return -0.07544859564178656;  // std dev = 0.288, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.3339225047702188;  // std dev = 0.152, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.467490425965705;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05795291360172182;  // std dev = 11.521, 656.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=214 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), acquired(C, A) )
%   then return 0.31528067535083115;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( acquired(E, A), companyceo(D, F) )
%   | | then if ( acquired(G, D) )
%   | | | then return -0.03906830575645855;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.34377478564124303;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.2525685302205214;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0017251569125685965;  // std dev = 2.948, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( acquired(A, H) )
%   | | then if ( bankchiefexecutiveceo(A, I), cityhascompanyoffice(J, H) )
%   | | | then return -0.16619159539737655;  // std dev = 0.492, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09902722519927848;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.27046841788347414;  // std dev = 0.457, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.021822412478348065;  // std dev = 11.064, 634.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=189 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E), cityhascompanyoffice(D, E) )
%   | then return 0.21246324455462443;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0649266687451902;  // std dev = 0.304, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.2277134540513331;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(F, G), cityhascompanyoffice(H, G) )
%   | | | then return 0.14365119104585541;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03994208073745328;  // std dev = 3.076, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | else if ( acquired(A, I), companyceo(I, J) )
%   | | then if ( companyceo(A, K) )
%   | | | then return 0.06299789501893696;  // std dev = 1.028, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.45048172571114176;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( bankboughtbank(L, A), acquired(L, M) )
%   | | | then return 0.3270982685057374;  // std dev = 1.175, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04462960829772616;  // std dev = 11.235, 636.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=216 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '50.475', 'seconds']
Refined model CLL: -0.314782


******************************************
Best model found
******************************************
Results 

CLL : -0.314454 

AUC ROC : 0.680814 

AUC PR : 0.057366 

Precision : 0.086565 

Recall : 0.241313 

F1 : 0.127421 

Total Learning Time : 8.968 

Total Inference Time : 26.95147156715393 

Total revision time: 103.9260868396759
Best scored revision CLL: -0.314782


Results 

CLL : -0.314454 

AUC ROC : 0.680814 

AUC PR : 0.057366 

Precision : 0.086565 

Recall : 0.241313 

F1 : 0.127421 

Total Learning Time : 104.06746238136292 

Total Inference Time : 26.95147156715393 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.518
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.17296374991432573;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21540571340891765;  // std dev = 0.479, 627.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=224 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.18992989680302116;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16418255544454605;  // std dev = 12.211, 670.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=224 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.14800615367184788;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14275235233854972;  // std dev = 0.473, 664.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=224 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.15356006707835926;  // std dev = 0.483, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10023290570024299;  // std dev = 12.358, 704.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=224 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.14322349758842898;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10336524542456105;  // std dev = 0.473, 661.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=224 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.39621192487504303;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.040224869858861124;  // std dev = 4.697, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08735321435339773;  // std dev = 12.141, 655.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=224 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.041076901000279845;  // std dev = 4.810, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059308695064205365;  // std dev = 12.243, 677.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=224 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.056494816402101834;  // std dev = 4.724, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05645631877356306;  // std dev = 0.474, 659.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=224 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.057303830769694704;  // std dev = 0.482, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04955726330043275;  // std dev = 12.116, 650.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=224 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.05279403950812593;  // std dev = 4.645, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03703805949905295;  // std dev = 12.136, 654.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=224 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.487', 'seconds']
Parameter learned model CLL:-0.379603 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.827, 74, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.479, 403, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.686, 62, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.211, 446, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.737, 66, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 440, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.483, 58, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.358, 480, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.568, 54, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 437, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [0.816, 1, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.697, 71, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.141, 431, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.81, 70, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.243, 453, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.724, 63, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 435, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.482, 60, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.116, 426, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.645, 58, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.136, 430, 224]}]
{'': [0.21570644718793006, 0.22962437266139357], 'false': [nan, 0.22962437266139357], 'true': [0.21570644718793006, nan]}
{'': [0.22873263888889003, 0.2225529071062558], 'false': [nan, 0.2225529071062558], 'false,false': [nan, 0.2225529071062558], 'false,false,false': [nan, 0.2225529071062558]}
{'': [0.22440000000000104, 0.22354478153577673], 'true': [0.22440000000000104, nan], 'true,true': [0.22440000000000104, nan], 'false': [nan, 0.22354478153577673], 'false,false': [nan, 0.22354478153577673]}
{'': [0.23298676748582228, 0.2169421487603212], 'true': [0.23298676748582228, nan], 'false': [nan, 0.2169421487603212], 'false,false': [nan, 0.2169421487603212]}
{'': [0.23708677685950424, 0.2240405016009759], 'true': [0.23708677685950424, nan], 'false': [nan, 0.2240405016009759], 'false,false': [nan, 0.2240405016009759]}
{'': [0.21787112851548565, 0.22503117533943803], 'false': [nan, 0.22503117533943803], 'false,false': [nan, 0.22503117533943803], 'true': [0.22222222222222218, 0.21415779055518863], 'true,false': [nan, 0.21415779055518863]}
{'': [0.22243044721152724, 0.2213955477397243], 'true': [0.22243044721152724, nan], 'false': [nan, 0.2213955477397243], 'false,false': [nan, 0.2213955477397243], 'false,false,false': [nan, 0.2213955477397243]}
{'': [0.23001998491701425, 0.22437085665731968], 'true': [0.23001998491701425, nan], 'false': [nan, 0.22437085665731968], 'false,false': [nan, 0.22437085665731968]}
{'': [0.2322068068154065, 0.22585562130177586], 'false': [nan, 0.22585562130177586], 'false,false': [nan, 0.22585562130177586]}
{'': [0.23447736471098826, 0.22519615819843142], 'true': [0.23447736471098826, nan], 'true,true': [0.23447736471098826, nan], 'false': [nan, 0.22519615819843142], 'false,false': [nan, 0.22519615819843142]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
0;true;companyalsoknownas(D, C).;true;true
0;false;companyalsoknownas(E, F), companyalsoknownas(A, F).;true;true
1;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
1;false;companyalsoknownas(A, D), companyalsoknownas(D, A).;true;true
1;false,false;companyalsoknownas(E, A), companyalsoknownas(F, E).;true;true
1;false,false,false;companyalsoknownas(A, G).;true;true
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
2;true;companyalsoknownas(D, A), companyalsoknownas(A, D).;true;true
2;true,true;companyalsoknownas(C, E).;true;true
2;false;companyalsoknownas(A, A).;true;true
2;false,false;companyalsoknownas(F, A).;true;true
3;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
3;true;companyalsoknownas(D, C).;true;true
3;false;companyalsoknownas(E, A).;true;true
3;false,false;companyalsoknownas(A, A).;true;true
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
4;false;companyalsoknownas(E, A).;true;true
4;false,false;companyalsoknownas(A, F).;true;true
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true
5;true,false;companyalsoknownas(C, C).;true;true
5;false;companyalsoknownas(D, A).;true;true
5;false,false;companyalsoknownas(A, E), companyalsoknownas(E, F).;true;true
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
6;true;companyalsoknownas(C, D).;true;true
6;false;companyalsoknownas(E, A), companyalsoknownas(E, E).;true;true
6;false,false;companyalsoknownas(A, F).;true;true
6;false,false,false;companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
7;true;companyalsoknownas(D, C).;true;true
7;false;companyalsoknownas(A, A).;true;true
7;false,false;companyalsoknownas(E, A), companyalsoknownas(A, E).;true;true
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false;companyalsoknownas(D, A).;true;true
8;false,false;companyalsoknownas(E, A).;true;true
9;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
9;true;companyalsoknownas(D, C).;true;true
9;true,true;companyalsoknownas(A, E), companyalsoknownas(D, E).;true;true
9;false;companyalsoknownas(A, F).;true;true
9;false,false;companyalsoknownas(G, A), companyalsoknownas(G, G).;true;true


Refining candidate
***************************
Model training time 13.538
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19148226843284494;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, I), companyalsoknownas(A, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J), acquired(J, K) )
%   | | then if ( acquired(L, A) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( acquired(M, A), acquired(N, M) )
%   | | | then return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.20303082486328777;  // std dev = 11.978, 635.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=219 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( acquired(A, D), countryhascompanyoffice(E, D) )
%   | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.48267997401279744;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.06824397057833359;  // std dev = 0.321, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.794853814947355;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07114242916529877;  // std dev = 3.710, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   else if ( companyalsoknownas(A, I), companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15115952549205347;  // std dev = 12.341, 703.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=224 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.6529875220162313;  // std dev = 0.180, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08753451421806165;  // std dev = 4.108, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.8123964348441393;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.13903258559350526;  // std dev = 11.856, 639.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=210 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then if ( cityhascompanyoffice(F, E) )
%   | | | then return 0.4569426752840935;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5224881637024535;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return 0.20474687064492594;  // std dev = 2.652, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.03325800271876481;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(J, A), cityhascompanyoffice(K, J) )
%   | | | then return 0.28697334232698163;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.11606584454689994;  // std dev = 11.969, 659.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=218 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( companyceo(A, E) )
%   | | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.4521200950474993;  // std dev = 0.317, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1064624810838573;  // std dev = 3.109, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.4932420015600879;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02438323498659004;  // std dev = 2.443, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.0957610328001608;  // std dev = 5.295, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
%   | | | else return 0.08100738158950892;  // std dev = 11.031, 572.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=181 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.36852527836571763;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | | | then return 0.34145788615937384;  // std dev = 0.229, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.05301119378255274;  // std dev = 3.825, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), cityhascompanyoffice(I, A) )
%   | | | then return 0.27743501071911597;  // std dev = 2.156, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.06706591030727273;  // std dev = 11.958, 671.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=213 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then if ( cityhascompanyoffice(F, E) )
%   | | | then return 0.38157067632953856;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2811102719341847;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.10756054204204067;  // std dev = 2.976, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return -0.029891733833765977;  // std dev = 2.432, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(H, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07917700852004718;  // std dev = 11.994, 649.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=224 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( countryhascompanyoffice(E, A), acquired(F, A) )
%   | | then return -0.24830411375280842;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.24901904578590267;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.04238695644579913;  // std dev = 3.883, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), companyceo(I, J) )
%   | | | then return -0.11395776017124748;  // std dev = 1.918, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.04880608759381047;  // std dev = 12.001, 665.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=219 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then if ( acquired(A, E), companyceo(E, F) )
%   | | then return 0.19411714882409684;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2852207334049157;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(A, G), companyceo(G, H) )
%   | | then if ( companyalsoknownas(G, I) )
%   | | | then return -0.1997095055904941;  // std dev = 0.454, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07521592934097289;  // std dev = 1.352, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | | then return -0.010200343144307823;  // std dev = 2.245, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.13898613229947612;  // std dev = 2.658, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   else if ( companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(M, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.047870378427750146;  // std dev = 0.468, 663.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=224 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then if ( countryhascompanyoffice(F, A), cityhascompanyoffice(G, A) )
%   | | | then return -0.1371398111255346;  // std dev = 1.310, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.02664895528661686;  // std dev = 3.787, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(I, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.04945791825351134;  // std dev = 3.977, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | | else return 0.061380419369061634;  // std dev = 11.152, 549.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=198 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '35.595', 'seconds']
Refined model CLL: -0.360691


******************************************
Best model found
******************************************
Results 

CLL : -0.360692 

AUC ROC : 0.557227 

AUC PR : 0.033876 

Precision : 0.27907 

Recall : 0.046154 

F1 : 0.079208 

Total Learning Time : 13.538 

Total Inference Time : 101.25506567955017 

Total revision time: 184.30693007087706
Best scored revision CLL: -0.360691


Results 

CLL : -0.360692 

AUC ROC : 0.557227 

AUC PR : 0.033876 

Precision : 0.27907 

Recall : 0.046154 

F1 : 0.079208 

Total Learning Time : 184.44830561256407 

Total Inference Time : 101.25506567955017 

Starting experiment 25_yeast_nell_finances 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.766
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11901850031690298;  // std dev = 0.439, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.1882460224781517;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | else return 0.19556152251209521;  // std dev = 0.473, 572.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.12021407481340685;  // std dev = 4.855, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17028842411368333;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | | | else return 0.18807059058943207;  // std dev = 11.154, 543.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7937947311708269;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.1142900753959459;  // std dev = 2.375, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.12349631300508951;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1627868457910977;  // std dev = 3.963, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | else return 0.13355884407523735;  // std dev = 0.470, 587.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.14842033754718695;  // std dev = 0.486, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.09965928310233163;  // std dev = 0.457, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11808788254163784;  // std dev = 12.294, 679.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1476024058845344;  // std dev = 3.001, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else return 0.07051259094249047;  // std dev = 4.443, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09482402200750663;  // std dev = 4.037, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08986353933584619;  // std dev = 0.469, 589.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06417785333780568;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.08539165594212274;  // std dev = 4.637, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.14121228032757352;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.06279137252452624;  // std dev = 12.125, 680.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.0908744023414646;  // std dev = 3.015, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else return 0.022692299706571797;  // std dev = 4.512, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04106590199290487;  // std dev = 12.259, 709.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1501037166903601;  // std dev = 2.170, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.07430603104095546;  // std dev = 2.039, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return -5.455048265712624E-4;  // std dev = 0.435, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04648760208511219;  // std dev = 0.466, 708.000 (wgt'ed) examples reached here.  /* #neg=481 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.0673681346528802;  // std dev = 0.473, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.015417157417393263;  // std dev = 2.096, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.007822682462483193;  // std dev = 3.625, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05337330287338279;  // std dev = 11.308, 572.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.47143394111912684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.027853081712948157;  // std dev = 2.344, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07171526260196422;  // std dev = 4.026, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return -0.0025460012180135434;  // std dev = 4.889, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.045370743795508636;  // std dev = 11.283, 567.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.557', 'seconds']
Parameter learned model CLL:-0.359357 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.176, 10, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.439, 68, 24], 'false,true': [4.772, 69, 34], 'false,false': [0.473, 379, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.855, 83, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.749, 67, 34], 'false,false,false,false': [11.154, 350, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.375, 19, 8], 'true,false,false': [4.827, 74, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.963, 46, 24], 'false,false,false': [0.47, 394, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.486, 14, 9], 'true,false': [0.457, 57, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.294, 452, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.001, 24, 15], 'true,false': [4.443, 66, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.037, 51, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 396, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [4.637, 67, 32], 'false,false,true': [2.683, 18, 12], 'false,false,false': [12.125, 465, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.015, 24, 15], 'true,false': [4.512, 74, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.259, 492, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.17, 10, 9], 'true,false,true': [2.039, 13, 6], 'true,false,false': [0.435, 53, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 481, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.473, 80, 43], 'false,true,true,true': [2.096, 17, 6], 'false,true,true,false': [3.625, 52, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.308, 379, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.344, 17, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.026, 49, 24], 'false,true': [4.889, 81, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.283, 374, 193]}]
{'': [0.20891161431702107, 0.22320109739369234], 'false': [0.22113300028278018, 0.22356533326813333], 'true': [0.2493074792243767, 0.19281663516068154], 'true,false': [nan, 0.19281663516068154]}
{'': [0.20318030480903532, 0.22823424965537076], 'false': [nan, 0.2282342496553718], 'false,false': [nan, 0.22823424965537076], 'false,false,false': [0.2233114400548973, 0.22910031914640003]}
{'': [0.21607779545008063, 0.22115958301135852], 'false': [nan, 0.22115958301135852], 'false,false': [0.22435681141782546, 0.22068729340132193], 'false,false,true': [nan, 0.22435681141782546], 'true': [0.0, 0.21435652075538983], 'true,false': [0.20888901117650502, 0.21570644718792784], 'true,true': [0.0, nan]}
{'': [0.21531741537049237, 0.22258020613588977], 'false': [nan, 0.22258020613588977], 'false,false': [nan, 0.22258020613588977], 'true': [0.23659428895337187, 0.20875000965676901]}
{'': [0.21738476807277668, 0.21996534813589483], 'false': [0.21728587627660081, 0.22030375791606607], 'false,false': [nan, 0.22030375791606607], 'true': [0.23097730676328285, 0.21000267336447379], 'false,true': [nan, 0.21728587627660081]}
{'': [0.25, 0.21745095109974086], 'true': [nan, 0.25], 'true,false': [nan, 0.25], 'false': [0.21719206523244683, 0.21744152912870027], 'false,false': [0.24000000000000002, 0.21618645012976995]}
{'': [0.2098033578238394, 0.21197432317715487], 'false': [nan, 0.21197432317715875], 'false,false': [nan, 0.21197432317715487], 'false,false,false': [nan, 0.21197432317715487], 'true': [0.23306966480396263, 0.1996215788652851]}
{'': [0.20802831147198975, 0.21737075433317332], 'false': [nan, 0.21737075433317332], 'false,false': [nan, 0.21737075433317332], 'true': [0.24791547078167622, 0.19643803999262927], 'true,false': [0.21888551828976674, 0.18924816504661798]}
{'': [0.22361664564577144, 0.21914558713295407], 'false': [0.18853979011149163, 0.22356533326813482], 'false,false': [nan, 0.22356533326813482], 'false,true': [0.18853979011149163, nan], 'false,true,true': [0.19099330556674113, 0.18771937106402237]}
{'': [0.22293796560344445, 0.22203562476466965], 'true': [0.22057407915256777, 0.2220837174357943], 'true,false': [nan, 0.2220837174357943], 'true,false,false': [nan, 0.2220837174357943], 'false': [0.20785793863617122, 0.2245240117080169], 'false,false': [nan, 0.2245240117080169], 'true,true': [0.0, 0.21980906035065056]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 8.627
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( bankboughtbank(A, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(C, F), companyceo(A, G) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( bankboughtbank(H, C) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(K, A), cityhascompanyoffice(L, A) )
%   | | | then return -0.07288554765910848;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.19100402835632296;  // std dev = 12.441, 697.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=232 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), acquired(D, A) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.8108177041936702;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(D, E), cityhascompanyoffice(F, E) )
%   | | then return 0.563202276479008;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.0068970445646996115;  // std dev = 0.346, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.7880194783035982;  // std dev = 1.391, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return -0.16318268626766047;  // std dev = 0.105, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( companyceo(A, J) )
%   | | then return 0.05258035574488459;  // std dev = 0.408, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( acquired(K, A), acquired(A, L) )
%   | | | then return 0.4047005150540287;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1540630781534948;  // std dev = 11.100, 571.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.2692880398050683;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6152045233195468;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | | | then return 0.14913690871201532;  // std dev = 1.986, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.026053900344118728;  // std dev = 3.748, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   else if ( bankboughtbank(H, A), bankchiefexecutiveceo(A, I) )
%   | then return 0.38823410557062926;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( acquired(J, A) )
%   | | then if ( cityhascompanyoffice(K, A) )
%   | | | then return -0.034968539908754585;  // std dev = 1.039, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.13730151414579717;  // std dev = 3.687, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | else if ( bankboughtbank(L, A) )
%   | | | then return -0.14334413694019793;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1563162721862584;  // std dev = 10.838, 548.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=191 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then return 0.7589095541319387;  // std dev = 0.118, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5502340330300234;  // std dev = 0.348, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(E, A) )
%   | then if ( countryhascompanyoffice(F, A), countryhascompanyoffice(F, E) )
%   | | then if ( acquired(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.7629724231645509;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.24152693999423755;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyceo(E, H) )
%   | | | then return -0.0707116664436879;  // std dev = 2.478, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
%   | | | else return 0.06621892020231068;  // std dev = 2.430, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.530855538920154;  // std dev = 0.263, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15214139727236897;  // std dev = 3.354, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | else return 0.11320112435769403;  // std dev = 0.450, 608.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=200 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.4252640038713532;  // std dev = 0.323, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6004041358796119;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(A, E), bankboughtbank(F, E) )
%   | then if ( bankboughtbank(A, G), acquired(F, G) )
%   | | then if ( acquired(E, H) )
%   | | | then return -0.09757000076544647;  // std dev = 0.660, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12179505107439344;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.18971381131536033;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( acquired(I, A) )
%   | | then if ( countryhascompanyoffice(J, A), countryhascompanyoffice(J, I) )
%   | | | then return 0.2025063691150509;  // std dev = 1.133, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.009075273624779001;  // std dev = 3.490, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.06517246788340784;  // std dev = 3.765, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | | else return 0.12060504461272249;  // std dev = 10.778, 542.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=195 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D), acquired(D, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.16749023524195203;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3754431051558284;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyceo(C, G), cityhascompanyoffice(H, C) )
%   | | then return 0.2820545184886093;  // std dev = 0.489, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.009625829063767842;  // std dev = 0.354, 123.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=35 */
%   else if ( acquired(I, A), companyceo(I, J) )
%   | then if ( acquired(I, K), economicsectorcompany(B, K) )
%   | | then return 0.6173424025309826;  // std dev = 0.161, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.1875320897547062;  // std dev = 0.244, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( bankboughtbank(L, A), bankchiefexecutiveceo(A, M) )
%   | | then return 0.3774173287910459;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyalsoknownas(A, N) )
%   | | | then return 0.17218578398852324;  // std dev = 2.744, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.09962243260625561;  // std dev = 10.501, 515.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=184 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), companyalsoknownas(A, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.36625295959037;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(D, E) )
%   | | then if ( countryhascompanyoffice(F, D) )
%   | | | then return -0.10483601560586644;  // std dev = 0.905, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.07566848236151674;  // std dev = 1.639, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return -0.1183815905423707;  // std dev = 0.239, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   else if ( cityhascompanyoffice(G, A), acquired(H, A) )
%   | then return -0.06424739536171102;  // std dev = 0.181, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( bankchiefexecutiveceo(A, I) )
%   | | then if ( companyceo(J, I), economicsectorcompany(B, J) )
%   | | | then return 0.5954036911287278;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0871431227356926;  // std dev = 1.474, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( bankboughtbank(K, A), cityhascompanyoffice(L, K) )
%   | | | then return -0.15392550178653033;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05273430743578863;  // std dev = 11.758, 695.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=231 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), cityhascompanyoffice(D, A) )
%   then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then return 0.2728402523502007;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(C, F), cityhascompanyoffice(G, F) )
%   | | then return 0.31791536874793974;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( acquired(C, H), acquired(A, I) )
%   | | | then return -0.09161071700713688;  // std dev = 1.123, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.1262586406520897;  // std dev = 1.188, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( bankboughtbank(J, A) )
%   | then if ( acquired(J, K), economicsectorcompany(B, K) )
%   | | then return 0.5012006345496884;  // std dev = 0.332, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17138085570227782;  // std dev = 0.206, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else if ( acquired(L, A), cityhascompanyoffice(M, A) )
%   | | then return -0.07554538111153165;  // std dev = 0.155, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( acquired(N, A), companyalsoknownas(N, P) )
%   | | | then return -0.02568889418200217;  // std dev = 2.050, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.03881923292112002;  // std dev = 11.689, 689.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=226 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(E, C) )
%   | | then return 0.08622394464436542;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2086510570716539;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.3755137157337061;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.10662566538020381;  // std dev = 0.288, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   else if ( cityhascompanyoffice(F, A), acquired(G, A) )
%   | then return -0.08808605075928115;  // std dev = 0.198, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.4452678483173064;  // std dev = 1.990, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.22626918189643738;  // std dev = 0.160, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | | then return 0.07792669307514051;  // std dev = 2.134, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.028418491345830823;  // std dev = 10.886, 582.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=188 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.14345726388288502;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.11147408284725996;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09387053033339139;  // std dev = 1.386, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.08321536662361842;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else return 0.023015760112757067;  // std dev = 0.363, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return 0.03446219048609502;  // std dev = 0.308, 136.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=51 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6284457564000945;  // std dev = 0.424, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2645884221948689;  // std dev = 0.330, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.018615359826898808;  // std dev = 0.459, 506.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=161 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.391', 'seconds']
Refined model CLL: -0.310051


******************************************
Best model found
******************************************
Results 

CLL : -0.310442 

AUC ROC : 0.745651 

AUC PR : 0.067566 

Precision : 0.08415 

Recall : 0.198842 

F1 : 0.118255 

Total Learning Time : 8.627 

Total Inference Time : 30.374675035476685 

Total revision time: 108.14100968170166
Best scored revision CLL: -0.310051


Results 

CLL : -0.310442 

AUC ROC : 0.745651 

AUC PR : 0.067566 

Precision : 0.08415 

Recall : 0.198842 

F1 : 0.118255 

Total Learning Time : 108.23350226211548 

Total Inference Time : 30.374675035476685 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.628
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24411384738021413;  // std dev = 0.487, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.13885068948547585;  // std dev = 4.798, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | else return 0.17759337954395227;  // std dev = 0.466, 576.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.22605667431569462;  // std dev = 5.136, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.23545395238924446;  // std dev = 4.400, 81.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
%   | | | else return 0.16906505882599018;  // std dev = 11.070, 551.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.12414576043349125;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.10252601278808143;  // std dev = 4.745, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15815936587566742;  // std dev = 4.772, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   | | else return 0.11820447860900307;  // std dev = 0.462, 598.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.17419792137139073;  // std dev = 0.492, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.18630701972948122;  // std dev = 0.494, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11187296051659364;  // std dev = 12.115, 674.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06831144151554869;  // std dev = 2.878, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else return 0.11217257661514198;  // std dev = 4.290, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10366903592182741;  // std dev = 4.743, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09601180513191329;  // std dev = 0.468, 569.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.20892226987528087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.12117105046494292;  // std dev = 5.086, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.12186362021203591;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return 0.06740484912070993;  // std dev = 11.958, 665.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1008754876581778;  // std dev = 2.726, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else return -1.0377789993084467E-4;  // std dev = 4.533, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05618908360620774;  // std dev = 12.186, 686.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.007878299384802511;  // std dev = 2.451, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.08798264336838171;  // std dev = 1.959, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else return 0.09771938580125783;  // std dev = 0.495, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08231111785565608;  // std dev = 0.477, 616.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.015298131780418195;  // std dev = 0.461, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.0656727907297713;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.0125326199726969;  // std dev = 4.302, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.023008848737491677;  // std dev = 11.286, 598.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.1952416044421712;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.04604203138526447;  // std dev = 2.359, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011183366443091616;  // std dev = 4.721, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.02254479212945458;  // std dev = 4.700, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.037428531284835;  // std dev = 11.129, 563.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.465', 'seconds']
Parameter learned model CLL:-0.362834 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.487, 70, 44], 'false,true': [4.798, 82, 32], 'false,false': [0.466, 392, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.136, 66, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.4, 49, 32], 'false,false,false,false': [11.07, 367, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.309, 16, 8], 'true,false,false': [4.745, 76, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.772, 62, 36], 'false,false,false': [0.462, 414, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.492, 13, 9], 'true,false': [0.494, 48, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.115, 458, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.878, 27, 12], 'true,false': [4.29, 52, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.743, 60, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 385, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [5.086, 63, 44], 'false,false,true': [2.256, 14, 8], 'false,false,false': [11.958, 457, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.726, 20, 12], 'true,false': [4.533, 75, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.186, 466, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.451, 18, 9], 'true,false,true': [1.959, 17, 5], 'true,false,false': [0.495, 40, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 400, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.461, 91, 40], 'false,true,true,true': [2.029, 10, 7], 'false,true,true,false': [4.302, 51, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.286, 414, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [2.359, 15, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.721, 63, 35], 'false,true': [4.7, 71, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.129, 379, 184]}]
{'': [0.23699599876885286, 0.21504725897920837], 'true': [nan, 0.23699599876885286], 'false': [0.20190827947060766, 0.21739969135802753]}
{'': [0.23977390921628566, 0.22503897047360888], 'false': [nan, 0.22503897047360844], 'false,false': [nan, 0.22503897047360888], 'false,false,false': [0.23898795915256812, 0.22242350980398695]}
{'': [0.21106841025057374, 0.21594043637300922], 'false': [nan, 0.21594043637300922], 'false,false': [0.2324031653477721, 0.21301775147928537], 'false,false,true': [nan, 0.2324031653477721], 'true': [nan, 0.21106841025057368], 'true,false': [0.22222222222222232, 0.208504801097394]}
{'': [0.2433114965106725, 0.2177695815896005], 'true': [0.24204475103287718, 0.24361653784095205], 'false': [nan, 0.2177695815896005], 'false,false': [nan, 0.2177695815896005]}
{'': [0.22469615805294185, 0.2210479056863837], 'true': [0.2123909701368705, 0.23006444835768383], 'false': [0.23430124798992433, 0.21880337656481136], 'false,true': [nan, 0.23430124798992458], 'false,false': [nan, 0.21880337656481136]}
{'': [0.0, 0.2194658795143255], 'false': [0.2417228416271139, 0.2156346608816515], 'false,false': [0.23140495867768573, 0.21501796342457985], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.2090755431214958, 0.21645901935707598], 'false': [nan, 0.21645901935707582], 'false,false': [nan, 0.21645901935707598], 'false,false,false': [nan, 0.21645901935707598], 'true': [0.23222702268161202, 0.19946582832169912]}
{'': [0.23200954506167404, 0.22778430226699614], 'true': [0.22255093853773256, 0.2343170799460332], 'true,false': [0.1744118736750374, 0.24489795918367346], 'false': [nan, 0.22778430226699614], 'false,false': [nan, 0.22778430226699614]}
{'': [0.21289381418205897, 0.21589986625079705], 'false': [0.23366679145538988, 0.21301775147928767], 'false,true': [0.23366679145538988, nan], 'false,true,true': [0.24216497033773787, 0.2313660220334317], 'false,false': [nan, 0.21301775147928767]}
{'': [0.22550364824170466, 0.21917594478348446], 'true': [0.218209300072049, 0.22738318531380158], 'true,false': [nan, 0.22738318531380158], 'true,false,false': [nan, 0.22738318531380158], 'false': [0.21443574734440343, 0.22000889676908478], 'false,false': [nan, 0.22000889676908478], 'true,true': [0.0, 0.23191511664845513]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 11.683
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(D, A) )
%   | then if ( acquired(A, E), bankboughtbank(F, E) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( countryhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( companyalsoknownas(A, H), companyceo(A, I) )
%   | | then if ( acquired(J, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.01604367194161748;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( bankboughtbank(K, A), companyceo(A, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2106334071491972;  // std dev = 12.124, 644.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=227 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(E, A), companyceo(D, F) )
%   | then return 0.4456518945940749;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.021940769523140807;  // std dev = 0.317, 47.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   else if ( acquired(G, A), cityhascompanyoffice(H, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.8305269684556483;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.5805269684556483;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1272345209859987;  // std dev = 2.648, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.7533776658525131;  // std dev = 1.368, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.16356678370074712;  // std dev = 0.136, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( acquired(A, M) )
%   | | | then return 0.26817539871528284;  // std dev = 3.371, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.16977125605965407;  // std dev = 10.718, 522.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=177 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( countryhascompanyoffice(E, C), countryhascompanyoffice(E, D) )
%   | then return 0.3296384052510338;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyceo(A, F) )
%   | | then if ( companyceo(D, G), cityhascompanyoffice(H, A) )
%   | | | then return -0.0504610008649132;  // std dev = 1.280, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.20474323621718377;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return -0.15556970437698753;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then return 0.6503743429621753;  // std dev = 0.158, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.15463033751309546;  // std dev = 0.340, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( companyceo(A, K), bankboughtbank(L, A) )
%   | | then return -0.015203962817333529;  // std dev = 0.308, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( acquired(M, A), companyceo(A, N) )
%   | | | then return -0.05319811061626802;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.15562505174243732;  // std dev = 11.448, 587.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=207 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return -0.05808135296859662;  // std dev = 0.314, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( bankboughtbank(E, C) )
%   | | then return 0.7305440390933934;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, F), acquired(C, G) )
%   | | | then return -0.08949832074850461;  // std dev = 0.954, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.07650776427301961;  // std dev = 4.212, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( acquired(H, A) )
%   | then if ( acquired(H, I), economicsectorcompany(B, I) )
%   | | then return 0.7004219269809687;  // std dev = 0.124, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.1935502684563813;  // std dev = 0.221, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( companyceo(A, J) )
%   | | then return 0.0058782328879864254;  // std dev = 0.341, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( companyalsoknownas(A, K), companyceo(K, L) )
%   | | | then return 0.2862114118409644;  // std dev = 1.848, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.10396370156953734;  // std dev = 10.221, 518.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=168 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return -0.03209051741848377;  // std dev = 0.204, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( cityhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.5397232515429097;  // std dev = 0.777, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.26270344417751224;  // std dev = 1.319, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return -0.14556205919917983;  // std dev = 0.321, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then if ( companyalsoknownas(A, H), acquired(I, H) )
%   | | then return 0.33986488801875203;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7043157670692359;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(A, J), acquired(K, J) )
%   | | then return -0.21804032092055609;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( acquired(A, L), countryhascompanyoffice(M, L) )
%   | | | then return 0.21699675315114986;  // std dev = 1.539, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.08513093837321205;  // std dev = 11.195, 607.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=198 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyceo(A, D), companyalsoknownas(A, E) )
%   | then if ( acquired(F, E), companyceo(F, G) )
%   | | then return -0.15002908754049935;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( acquired(H, A), companyceo(E, I) )
%   | | | then return 0.294051346110313;  // std dev = 0.604, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02435930661219434;  // std dev = 1.888, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | else if ( acquired(J, A) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.44400162577309377;  // std dev = 0.619, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.016409377256393236;  // std dev = 3.250, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.10867635905891063;  // std dev = 2.954, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.1002176456092127;  // std dev = 10.387, 525.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=190 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.46837562197696037;  // std dev = 0.125, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(A, D), acquired(D, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then if ( acquired(G, A) )
%   | | | then return -0.15189554337150582;  // std dev = 0.771, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.031830492746187274;  // std dev = 1.301, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( acquired(E, H), acquired(I, A) )
%   | | | then return 0.06790054665226622;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.23622470912749316;  // std dev = 0.279, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.32901352591093347;  // std dev = 1.191, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.1343073417677441;  // std dev = 0.205, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( companyceo(A, L), acquired(A, M) )
%   | | | then return 0.23938941322279528;  // std dev = 1.867, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.05777280184001569;  // std dev = 10.948, 583.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=194 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, A) )
%   then if ( companyceo(C, E), countryhascompanyoffice(F, C) )
%   | then return -0.15980001204181937;  // std dev = 0.314, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return 0.010770117442940808;  // std dev = 0.316, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   else if ( companyalsoknownas(A, G) )
%   | then if ( companyceo(G, H) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.012737495692058003;  // std dev = 1.384, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.158566846994137;  // std dev = 1.623, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( companyalsoknownas(G, J), economicsectorcompany(B, J) )
%   | | | then return 0.551732964036285;  // std dev = 0.567, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.22244122653274206;  // std dev = 0.282, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( bankchiefexecutiveceo(A, K) )
%   | | then return -0.06492846002263418;  // std dev = 0.189, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( acquired(L, A), acquired(A, M) )
%   | | | then return -0.09166532469295907;  // std dev = 1.075, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.03366719499624228;  // std dev = 11.062, 672.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=220 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(C, D) )
%   then if ( companyceo(D, E) )
%   | then return -0.15531800659551698;  // std dev = 0.239, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( countryhascompanyoffice(F, A), acquired(A, G) )
%   | | then return -0.08370875874951776;  // std dev = 0.193, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( acquired(H, A), acquired(D, I) )
%   | | | then return 0.15435218470950923;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.028534354044388272;  // std dev = 1.355, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else if ( cityhascompanyoffice(J, A) )
%   | then return 0.008910153068733646;  // std dev = 0.199, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | else if ( companyceo(A, K) )
%   | | then if ( acquired(A, L), companyceo(L, M) )
%   | | | then return -0.11014276206172932;  // std dev = 0.778, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -9.443875229472662E-4;  // std dev = 3.049, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( acquired(N, A), cityhascompanyoffice(P, N) )
%   | | | then return 0.1345813526519969;  // std dev = 1.978, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.05766484589249748;  // std dev = 10.323, 502.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=178 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.00920554642336107;  // std dev = 0.286, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else return 0.05295055523981637;  // std dev = 0.319, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   else if ( acquired(A, E) )
%   | then if ( acquired(E, F) )
%   | | then if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.013139496442427461;  // std dev = 0.708, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.3861548402386026;  // std dev = 1.103, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( companyceo(E, H), countryhascompanyoffice(I, A) )
%   | | | then return 0.29492554543033717;  // std dev = 0.607, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0045408242289117886;  // std dev = 3.191, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then if ( countryhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.443882416636602;  // std dev = 0.420, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.190344249664517;  // std dev = 0.254, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.011802198393555934;  // std dev = 0.437, 549.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=174 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '14.762', 'seconds']
Refined model CLL: -0.30435


******************************************
Best model found
******************************************
Results 

CLL : -0.304045 

AUC ROC : 0.786949 

AUC PR : 0.058349 

Precision : 0.048717 

Recall : 0.289575 

F1 : 0.083403 

Total Learning Time : 11.683 

Total Inference Time : 39.26314115524292 

Total revision time: 119.16373170471192
Best scored revision CLL: -0.30435


Results 

CLL : -0.304045 

AUC ROC : 0.786949 

AUC PR : 0.058349 

Precision : 0.048717 

Recall : 0.289575 

F1 : 0.083403 

Total Learning Time : 119.25622428512574 

Total Inference Time : 39.26314115524292 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.602
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.209212764886745;  // std dev = 0.477, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.20128619000147172;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | else return 0.1868686582828988;  // std dev = 0.470, 578.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.12020051691469887;  // std dev = 4.842, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1964218789018387;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | | | else return 0.16717901160361281;  // std dev = 11.255, 570.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.1392359381376718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.1742576590390148;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else return 0.11786264685091848;  // std dev = 4.895, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14647988126123704;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else return 0.1456578977228273;  // std dev = 0.472, 565.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.04141381380188247;  // std dev = 0.430, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else return 0.10347871356288689;  // std dev = 0.464, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1193145408477007;  // std dev = 12.243, 674.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.08583030337064768;  // std dev = 2.469, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else return 0.14609935828419074;  // std dev = 4.908, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03023567441764567;  // std dev = 3.851, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10081299106341275;  // std dev = 0.472, 566.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13780493486993356;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.048476518484050005;  // std dev = 4.838, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.08697478696010943;  // std dev = 2.041, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else return 0.08724703672613499;  // std dev = 12.027, 643.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.03083683787171252;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0.08289248579867167;  // std dev = 4.985, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053382932185829166;  // std dev = 11.941, 655.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.13568448042805595;  // std dev = 1.741, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.18896184177224398;  // std dev = 2.182, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.09995722682631107;  // std dev = 0.478, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04021835665897228;  // std dev = 0.467, 698.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.03547060754584433;  // std dev = 0.469, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.11615330600365723;  // std dev = 1.299, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.08184914804563091;  // std dev = 3.414, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06594963634847587;  // std dev = 11.069, 535.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.14561007107657803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.21300327030888733;  // std dev = 1.574, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04776320680110148;  // std dev = 4.279, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.0037688595852188164;  // std dev = 4.910, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0624514179689324;  // std dev = 10.981, 520.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '58.206', 'seconds']
Parameter learned model CLL:-0.376609 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.477, 61, 33], 'false,true': [4.795, 67, 35], 'false,false': [0.47, 388, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.842, 81, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.716, 61, 35], 'false,false,false,false': [11.255, 380, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.882, 23, 13], 'true,false,false': [4.895, 76, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.651, 40, 20], 'false,false,false': [0.472, 375, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.43, 15, 5], 'true,false': [0.464, 61, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.243, 449, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.469, 20, 9], 'true,false': [4.908, 63, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.851, 58, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 376, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [4.838, 82, 33], 'false,false,true': [2.041, 25, 5], 'false,false,false': [12.027, 423, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.556, 24, 9], 'true,false': [4.985, 69, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.941, 445, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.741, 8, 5], 'true,false,true': [2.182, 10, 9], 'true,false,false': [0.478, 35, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.467, 473, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.469, 96, 48], 'false,true,true,true': [1.299, 11, 2], 'false,true,true,false': [3.414, 33, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.069, 345, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.574, 5, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.279, 53, 28], 'false,true': [4.91, 78, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.981, 330, 190]}]
{'': [0.22670360110803467, 0.22139922145328955], 'true': [0.0, 0.22781801720235545], 'false': [0.22539407920030902, 0.22066306677362862]}
{'': [0.2056786703601119, 0.22368845433305465], 'false': [nan, 0.2236884543330557], 'false,false': [nan, 0.22368845433305465], 'false,false,false': [0.2316623263888896, 0.22222222222223073]}
{'': [0.21911399005303758, 0.22310330347397825], 'false': [nan, 0.22310330347397825], 'false,false': [0.22222222222222196, 0.22319680476153952], 'false,false,true': [nan, 0.22222222222222196], 'true': [0.0, 0.22010866941452903], 'true,false': [0.23070987654320968, 0.21589156724291902], 'true,true': [0.0, nan]}
{'': [0.21037803674189287, 0.2223748703859372], 'false': [nan, 0.2223748703859372], 'false,false': [nan, 0.2223748703859372], 'true': [0.1852530828000407, 0.21531729531530433]}
{'': [0.23101245191526115, 0.21954803082416754], 'true': [0.21019871046422522, 0.23612597428535068], 'false': [0.19010741411540152, 0.22300191037470649], 'false,false': [nan, 0.22300191037470649], 'false,true': [nan, 0.19010741411540147]}
{'': [0.0, 0.2197962760734599], 'false': [0.20355564499257753, 0.22243113454887395], 'false,false': [0.13888888888888884, 0.22497586443463985], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.22305300334772132, 0.21767634683359077], 'true': [0.19802659492797137, 0.23006575519316852], 'false': [nan, 0.2176763468335869], 'false,false': [nan, 0.21767634683359077], 'false,false,false': [nan, 0.21767634683359077]}
{'': [0.2351070504821572, 0.21818841415532905], 'true': [0.23311124910316053, 0.23543861435412447], 'true,false': [0.25057181367804354, 0.22805212620027412], 'false': [nan, 0.21818841415532905], 'false,false': [nan, 0.21818841415532905]}
{'': [0.2195344367229206, 0.22755373328239717], 'false': [0.21480489602849984, 0.22901563455323717], 'false,false': [nan, 0.22901563455323717], 'false,true': [0.21480489602849984, nan], 'false,true,true': [0.12981487589181445, 0.22850550890962645]}
{'': [0.22905431926265846, 0.22907808104384886], 'false': [0.2133613844045894, 0.2318786982248514], 'false,false': [nan, 0.2318786982248514], 'true': [0.2358187998977314, 0.22603216748420463], 'true,true': [0.0, 0.2477094500129912], 'true,false': [nan, 0.22603216748420463], 'true,false,false': [nan, 0.22603216748420463]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 23.911
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, D) )
%   | | then return 0.12481560176617904;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( acquired(A, E) )
%   | | | then return 0.39148226843284567;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.24451257146314873;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | then return 0.12130682983635446;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | then if ( acquired(H, J), acquired(J, K) )
%   | | | then return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.1696243449355766;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | | else return 0.21305498937925743;  // std dev = 10.472, 479.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=170 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyceo(A, D), bankchiefexecutiveceo(E, D) )
%   | then if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.8373077255576388;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16377732685796786;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( bankchiefexecutiveceo(A, G), acquired(A, H) )
%   | | then return 0.5010343714087284;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(A, I), countryhascompanyoffice(C, I) )
%   | | | then return -0.04423322307791794;  // std dev = 1.307, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.05645154186958011;  // std dev = 3.517, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | then return 0.8273893433028658;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( acquired(K, A), cityhascompanyoffice(L, K) )
%   | | then return -0.0426006108068265;  // std dev = 0.334, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else if ( companyalsoknownas(A, M), economicsectorcompany(B, M) )
%   | | | then return 0.8037333417986952;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16833351605193755;  // std dev = 11.796, 619.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=210 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.16360219750568128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then if ( economicsectorcompany(B, E) )
%   | | | then return 0.7779246225821576;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15611451661419823;  // std dev = 3.295, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.7850449194225202;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.016096735490464517;  // std dev = 3.847, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.680102578171215;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(H, A), companyceo(H, I) )
%   | | then if ( companyalsoknownas(H, J), acquired(K, J) )
%   | | | then return 0.16031087442833938;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.0707951745451136;  // std dev = 1.614, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else return 0.1511453892757244;  // std dev = 0.474, 566.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=196 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.6366659666421565;  // std dev = 0.236, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7305443697006514;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( economicsectorcompany(B, D) )
%   | | then return 0.6960960226894062;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(C, D) )
%   | | | then return -0.199206788833122;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.13576221059480142;  // std dev = 2.714, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | then return 0.5820575356085819;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.6272332482530538;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, H), companyceo(A, I) )
%   | | | then return -0.050101599798453;  // std dev = 1.967, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.09928666081602003;  // std dev = 12.139, 699.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=222 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.5445455495883851;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyalsoknownas(A, D), cityhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(F, D), countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, D), cityhascompanyoffice(H, D) )
%   | | | then return 0.014961426273402259;  // std dev = 0.603, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.20164370431574283;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(A, I), countryhascompanyoffice(J, I) )
%   | | | then return 0.06254908407670556;  // std dev = 1.217, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.42701071595128987;  // std dev = 1.667, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( acquired(K, A), companyceo(K, L) )
%   | | then if ( companyalsoknownas(K, M), acquired(N, M) )
%   | | | then return 0.17786174222975176;  // std dev = 1.336, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.10049809158195804;  // std dev = 1.803, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | else if ( acquired(A, P), economicsectorcompany(B, P) )
%   | | | then return 0.5226350648863999;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08310096492200657;  // std dev = 11.988, 671.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=214 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.1713051525911696;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( countryhascompanyoffice(F, A), bankbankincountry(G, F) )
%   | | | then return 0.4746270353463335;  // std dev = 1.150, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.640997320501957;  // std dev = 1.636, 55.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=53 */
%   | | else if ( companyalsoknownas(A, H), companyceo(A, I) )
%   | | | then return -0.3047868464687861;  // std dev = 0.354, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.2268147089865827;  // std dev = 0.297, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then if ( companyalsoknownas(J, K) )
%   | | | then return 0.3417596334271329;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4385818125528341;  // std dev = 0.289, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.1426334927070774;  // std dev = 3.479, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 0.05810713921660318;  // std dev = 10.555, 530.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=165 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.3845259623454072;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09898976965399058;  // std dev = 0.339, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   else if ( bankboughtbank(E, A), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(G, A) )
%   | | then if ( bankboughtbank(A, H), countryhascompanyoffice(G, E) )
%   | | | then return -0.0913984473677179;  // std dev = 0.487, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10047635187101445;  // std dev = 1.334, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.7195932686949517;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4863283058165451;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(A, J), acquired(J, K) )
%   | | then return -0.08420560762084722;  // std dev = 0.255, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.32259922227494225;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07394726936970347;  // std dev = 11.400, 645.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.3628432491662948;  // std dev = 0.299, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2594480549564333;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return 0.048371388262321825;  // std dev = 0.442, 731.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=243 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankboughtbank(C, A) )
%   then return -0.1823135637270734;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( acquired(A, D), acquired(D, E) )
%   | then if ( acquired(E, F), economicsectorcompany(B, F) )
%   | | then return 0.49432474067480925;  // std dev = 0.276, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(A, G), companyalsoknownas(A, H) )
%   | | | then return 0.14425545166544276;  // std dev = 0.784, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.1909048490327292;  // std dev = 0.592, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( companyalsoknownas(I, K), acquired(L, K) )
%   | | | then return -0.27285151281871617;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13938420383168507;  // std dev = 0.592, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return -0.02757286965312354;  // std dev = 3.658, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.04095001741427081;  // std dev = 11.386, 654.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=219 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.02509115178624758;  // std dev = 0.252, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return -0.09535847307465338;  // std dev = 0.251, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.03513554472861195;  // std dev = 0.385, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   else if ( countryhascompanyoffice(F, A), bankbankincountry(G, F) )
%   | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | then return 0.5574028716966539;  // std dev = 0.252, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.23478694826970295;  // std dev = 0.064, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( companyalsoknownas(A, I), countryhascompanyoffice(J, I) )
%   | | then if ( acquired(A, K) )
%   | | | then return 0.020683656194278692;  // std dev = 1.268, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.3213072664129098;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.26005654310701376;  // std dev = 0.263, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.059005562856679995;  // std dev = 10.687, 533.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=192 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '34.444', 'seconds']
Refined model CLL: -0.329021


******************************************
Best model found
******************************************
Results 

CLL : -0.329317 

AUC ROC : 0.7201 

AUC PR : 0.061526 

Precision : 0.200704 

Recall : 0.109615 

F1 : 0.141791 

Total Learning Time : 23.911 

Total Inference Time : 47.81306290626526 

Total revision time: 138.42780350494385
Best scored revision CLL: -0.329021


Results 

CLL : -0.329317 

AUC ROC : 0.7201 

AUC PR : 0.061526 

Precision : 0.200704 

Recall : 0.109615 

F1 : 0.141791 

Total Learning Time : 138.52029608535767 

Total Inference Time : 47.81306290626526 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.555
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1824732594238358;  // std dev = 0.468, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20508771060971503;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | else return 0.18862838715430233;  // std dev = 0.470, 584.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13283878131192609;  // std dev = 4.817, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.15822918267444308;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.17580031131216842;  // std dev = 11.267, 564.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.3203454516468962;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.10280313469608322;  // std dev = 2.389, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.14794048593722686;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1053517625743741;  // std dev = 4.132, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else return 0.1422566399395498;  // std dev = 0.472, 577.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.25078592686041734;  // std dev = 0.497, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.048969613407291133;  // std dev = 0.433, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10748413251061825;  // std dev = 12.398, 703.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.2521985838319314;  // std dev = 2.748, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | else return 0.0562247074827829;  // std dev = 4.475, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0664059370707217;  // std dev = 4.149, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09590905839331511;  // std dev = 0.470, 585.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16715816523096924;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.05039216856396028;  // std dev = 4.807, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.11688452156848642;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.0744150274563935;  // std dev = 12.043, 661.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06328042285357562;  // std dev = 3.049, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else return 1.3819604227654296E-4;  // std dev = 4.577, 111.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06458374985340809;  // std dev = 12.081, 664.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.18321699093398314;  // std dev = 2.167, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.2309445805089028;  // std dev = 1.810, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.03205269720513942;  // std dev = 0.445, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0659415725956096;  // std dev = 0.475, 659.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.06645558255386969;  // std dev = 0.477, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.2321249553753446;  // std dev = 1.735, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.056054040093684185;  // std dev = 3.494, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03552739104422221;  // std dev = 11.391, 589.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.5536053344275509;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.03979757274221186;  // std dev = 2.220, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046510530676662956;  // std dev = 4.041, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.030182631301156084;  // std dev = 4.720, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04695163960058721;  // std dev = 11.231, 557.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.987', 'seconds']
Parameter learned model CLL:-0.368859 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.527, 22, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.468, 50, 24], 'false,true': [4.712, 64, 34], 'false,false': [0.47, 391, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.817, 78, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.784, 70, 34], 'false,false,false,false': [11.267, 371, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.389, 20, 8], 'true,false,false': [4.737, 66, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.132, 59, 24], 'false,false,false': [0.472, 384, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.497, 11, 9], 'true,false': [0.433, 72, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.398, 476, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.748, 16, 15], 'true,false': [4.475, 70, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.149, 61, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 392, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [4.807, 82, 32], 'false,false,true': [2.683, 18, 12], 'false,false,false': [12.043, 446, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.049, 26, 15], 'true,false': [4.577, 83, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.081, 447, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.167, 10, 9], 'true,false,true': [1.81, 7, 6], 'true,false,false': [0.445, 48, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 432, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.477, 77, 43], 'false,true,true,true': [1.735, 6, 6], 'false,true,true,false': [3.494, 40, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.391, 396, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.22, 13, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.041, 53, 24], 'false,true': [4.72, 69, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.231, 364, 193]}]
{'': [0.21551020408163402, 0.2220590638195429], 'false': [0.22657226155768576, 0.22126278382436004], 'true': [0.2060353798126952, 0.2191380569758959], 'true,false': [nan, 0.2191380569758959]}
{'': [0.20902176773394915, 0.22435239446746458], 'false': [nan, 0.22435239446746458], 'false,false': [nan, 0.22435239446746458], 'false,false,false': [0.22004437869822432, 0.2250987123384121]}
{'': [0.221198176010804, 0.22063621718352122], 'true': [0.24999999999999994, 0.22023698525222285], 'true,true': [0.24999999999999994, nan], 'false': [nan, 0.22063621718352122], 'false,false': [0.2057518281211025, 0.22260602110360408], 'true,false': [0.20377737194102227, 0.22440000000000077], 'false,false,true': [nan, 0.2057518281211025]}
{'': [0.203619938763341, 0.21864251094683249], 'false': [nan, 0.21864251094683249], 'false,false': [nan, 0.21864251094683249], 'true': [0.24724715428493674, 0.18750855201660485]}
{'': [0.2207959844256931, 0.2188164725790359], 'true': [0.2436253375415082, 0.20434516314487444], 'false': [0.2025404752412054, 0.22107093286580476], 'false,false': [nan, 0.22107093286580476], 'false,true': [nan, 0.20254047524120555]}
{'': [0.25, 0.21794260973318802], 'true': [nan, 0.25], 'true,false': [nan, 0.25], 'false': [0.2026662088918067, 0.22036813178094775], 'false,false': [0.24000000000000016, 0.21939881772375633]}
{'': [0.1997730284053204, 0.21981807501471606], 'false': [nan, 0.2198180750147202], 'false,false': [nan, 0.21981807501471606], 'false,false,false': [nan, 0.21981807501471606], 'true': [0.22667959103012605, 0.18875914351384157]}
{'': [0.22152422980973385, 0.22557052562390356], 'false': [nan, 0.22557052562390356], 'false,false': [nan, 0.22557052562390356], 'true': [0.24716673027550176, 0.2126375435126712], 'true,false': [0.2521405481726473, 0.1983471074380172]}
{'': [0.2274345779962605, 0.22070459881428287], 'false': [0.22177901244434775, 0.22030375791606463], 'false,true': [0.22177901244434775, nan], 'false,true,true': [0.25090688939185174, 0.21043810362347176], 'false,false': [nan, 0.22030375791606463]}
{'': [0.2172837233201249, 0.22489059167032904], 'false': [0.21628809476881738, 0.2264374744157062], 'false,false': [nan, 0.2264374744157062], 'true': [0.2354644916493796, 0.21202767271036219], 'true,true': [0.0, 0.2346771584912765], 'true,false': [nan, 0.21202767271036219], 'true,false,false': [nan, 0.21202767271036219]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 8.453
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(E, C), countryhascompanyoffice(F, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1225167511914662;  // std dev = 4.113, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.05295412990470718;  // std dev = 3.475, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | | else return 0.18684458727342085;  // std dev = 11.264, 575.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=189 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( acquired(E, C), acquired(A, E) )
%   | then return -0.15742901590247219;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.7605059361731455;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.009858815771686949;  // std dev = 0.350, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   else if ( countryhascompanyoffice(F, A), cityhascompanyoffice(G, A) )
%   | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | then return 0.7830855331128697;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.18288344605811052;  // std dev = 0.139, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( acquired(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.10363936733503254;  // std dev = 4.305, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | else if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | | then return 0.049401213147562864;  // std dev = 1.533, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1598315965551596;  // std dev = 11.679, 628.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=205 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.5717718946548249;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08070553697436181;  // std dev = 0.420, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( acquired(A, F) )
%   | | then return -0.09843599127049;  // std dev = 0.195, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( cityhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.7278988962757216;  // std dev = 1.379, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return -0.18580481053353323;  // std dev = 0.092, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( acquired(A, H), acquired(H, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.6463545890735541;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13448827430757182;  // std dev = 1.473, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | | then return 0.11588595076060255;  // std dev = 2.185, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.16388048981110134;  // std dev = 10.511, 491.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=174 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.6403628949514919;  // std dev = 0.328, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.01020129409154987;  // std dev = 0.367, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   else if ( acquired(A, E), acquired(E, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.5810613718584094;  // std dev = 0.378, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( countryhascompanyoffice(G, A), companyceo(E, H) )
%   | | | then return 0.3535804334840221;  // std dev = 0.988, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.0554678844152701;  // std dev = 1.505, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.6224839694363168;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03287118519456518;  // std dev = 3.575, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | else if ( acquired(J, A), bankchiefexecutiveceo(J, K) )
%   | | | then return 0.0025234836786094026;  // std dev = 1.053, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.132228909576329;  // std dev = 11.187, 588.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=205 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.5909387704799257;  // std dev = 0.510, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07201067902336487;  // std dev = 0.364, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.4600751978021116;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(F, A) )
%   | | | then return -0.19161399806881782;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07575393759631799;  // std dev = 2.918, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | | then if ( cityhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.5820126949221667;  // std dev = 1.367, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.19115761992032823;  // std dev = 0.075, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.5489548202900278;  // std dev = 0.435, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.08041281781412542;  // std dev = 11.385, 642.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=203 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.36027204508627064;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.13095270223788943;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( companyceo(A, F), acquired(G, C) )
%   | | | then return 0.004361679628998319;  // std dev = 0.511, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.15842944859309405;  // std dev = 0.078, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.3332904478795777;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( acquired(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.656970243213862;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1077004803712805;  // std dev = 3.426, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.022704701710596836;  // std dev = 3.322, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.07485751496040444;  // std dev = 11.101, 606.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=199 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.28933749975760364;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.43236700644813986;  // std dev = 0.102, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.28837215854652337;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.4414242097848427;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.044156601207208414;  // std dev = 4.144, 131.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=25 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then if ( bankboughtbank(H, A) )
%   | | | then return 0.7184216690804156;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1361497798654714;  // std dev = 1.065, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.014271633928032407;  // std dev = 3.278, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.06423755015404929;  // std dev = 10.764, 557.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=187 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.22441880212384516;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.35342407725636643;  // std dev = 0.286, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.20909741286828784;  // std dev = 0.229, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( bankboughtbank(G, A) )
%   | then if ( bankchiefexecutiveceo(A, H) )
%   | | then return 0.07040957849808793;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(G, I), bankboughtbank(I, J) )
%   | | | then return 0.008050515981232916;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2688220147076145;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.3474600366362899;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.2502858298755889;  // std dev = 0.243, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.045907569589026524;  // std dev = 11.873, 724.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=229 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( acquired(C, D), economicsectorcompany(B, D) )
%   | then return 0.5108601990648521;  // std dev = 0.324, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, E), bankchiefexecutiveceo(F, E) )
%   | | then return -0.3033487281516401;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( bankchiefexecutiveceo(A, G) )
%   | | | then return 0.053077475669377816;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.20905299976498656;  // std dev = 0.079, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( bankchiefexecutiveceo(A, H), companyceo(A, H) )
%   | then return 0.3760921581325247;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then if ( cityhascompanyoffice(J, A), cityhascompanyoffice(K, I) )
%   | | | then return 0.15501626187862935;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29763489041021857;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( countryhascompanyoffice(L, A), companyceo(A, M) )
%   | | | then return -0.03406873062270806;  // std dev = 1.129, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.04837519393278455;  // std dev = 11.770, 701.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=237 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.14468231901965534;  // std dev = 0.544, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return -4.0909267974498784E-4;  // std dev = 0.390, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10682717217797645;  // std dev = 1.571, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.07770427889653536;  // std dev = 0.168, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else return 0.041626179996692096;  // std dev = 0.409, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else if ( companyalsoknownas(A, H), countryhascompanyoffice(I, A) )
%   | then return -0.03626595664998022;  // std dev = 0.249, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( companyceo(A, J), bankboughtbank(K, A) )
%   | | then return -0.21124702661953573;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( companyceo(A, L), cityhascompanyoffice(M, A) )
%   | | | then return 0.12854305764912496;  // std dev = 2.446, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.049646376777274674;  // std dev = 10.894, 575.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=204 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.212', 'seconds']
Refined model CLL: -0.326726


******************************************
Best model found
******************************************
Results 

CLL : -0.327052 

AUC ROC : 0.679793 

AUC PR : 0.081541 

Precision : 0.308756 

Recall : 0.129344 

F1 : 0.182313 

Total Learning Time : 8.453 

Total Inference Time : 26.5324969291687 

Total revision time: 102.35243140029908
Best scored revision CLL: -0.326726


Results 

CLL : -0.327052 

AUC ROC : 0.679793 

AUC PR : 0.081541 

Precision : 0.308756 

Recall : 0.129344 

F1 : 0.182313 

Total Learning Time : 102.51227770614625 

Total Inference Time : 26.5324969291687 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.508
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.19923420641734163;  // std dev = 0.474, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.17498061826782776;  // std dev = 4.676, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | else return 0.19148226843284116;  // std dev = 0.471, 552.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.18166848316378614;  // std dev = 5.349, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.21195678935592935;  // std dev = 4.467, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return 0.17082017013063452;  // std dev = 11.040, 545.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.15302295111131442;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.1558968971507476;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27272933168726154;  // std dev = 4.378, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | | else return 0.1242490551474356;  // std dev = 0.465, 582.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10082667551330571;  // std dev = 0.470, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0.1341224253399567;  // std dev = 0.484, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10009022735978752;  // std dev = 12.179, 689.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09569093546016391;  // std dev = 2.821, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.048793408759913115;  // std dev = 4.464, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13875199019106735;  // std dev = 4.632, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08596111150532529;  // std dev = 0.465, 584.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.17312137642834907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.10146216398200679;  // std dev = 5.185, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.0286693280418133;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.07058400886339981;  // std dev = 11.931, 659.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07590507353415332;  // std dev = 2.804, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else return 0.10966265524479388;  // std dev = 4.194, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05237514658559119;  // std dev = 12.230, 692.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.03640178948527461;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.05751870145122183;  // std dev = 1.951, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.08919798372988058;  // std dev = 0.493, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03878145616623613;  // std dev = 0.462, 699.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.009050253003430228;  // std dev = 0.458, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.09490674915455233;  // std dev = 1.987, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.019666079997446663;  // std dev = 4.287, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06373630608383983;  // std dev = 11.024, 542.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.16583620007883845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.04740949801556252;  // std dev = 2.543, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11011405894642874;  // std dev = 4.371, 77.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.016095383345592965;  // std dev = 4.706, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.026412447780194956;  // std dev = 11.226, 584.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.366', 'seconds']
Parameter learned model CLL:-0.361815 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.474, 85, 44], 'false,true': [4.676, 69, 32], 'false,false': [0.471, 368, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.349, 82, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.467, 53, 32], 'false,false,false,false': [11.04, 361, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.284, 15, 8], 'true,false,false': [4.555, 59, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.378, 41, 36], 'false,false,false': [0.465, 398, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.47, 18, 9], 'true,false': [0.484, 59, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.179, 473, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.821, 24, 12], 'true,false': [4.464, 69, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.632, 53, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.465, 400, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [5.185, 70, 44], 'false,false,true': [2.39, 20, 8], 'false,false,false': [11.931, 451, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.804, 23, 12], 'true,false': [4.194, 47, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.23, 472, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.426, 17, 9], 'true,false,true': [1.951, 16, 5], 'true,false,false': [0.493, 42, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.462, 483, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.458, 94, 40], 'false,true,true,true': [1.987, 9, 7], 'false,true,true,false': [4.287, 51, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.024, 358, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.543, 24, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.371, 42, 35], 'false,true': [4.706, 72, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.226, 400, 184]}]
{'': [0.22306392401375316, 0.2213649336669748], 'true': [0.0, 0.22474610900787315], 'false': [0.21644936770904952, 0.22222222222222518]}
{'': [0.22704026204183855, 0.2253274162798306], 'false': [nan, 0.22532741627983133], 'false,false': [nan, 0.2253274162798306], 'false,false,false': [0.2347404844290652, 0.2236310074909597]}
{'': [0.22776136573974712, 0.22230080646899675], 'true': [nan, 0.22776136573974703], 'true,false': [0.2268431001890358, 0.22799178843134782], 'false': [nan, 0.22230080646899675], 'false,false': [0.24894585933547003, 0.21619961974941637], 'false,false,true': [nan, 0.24894585933547003]}
{'': [0.23122145420457427, 0.2152805071993372], 'true': [0.22128291071699108, 0.2338287671216033], 'false': [nan, 0.2152805071993372], 'false,false': [nan, 0.2152805071993372]}
{'': [0.2101116060684321, 0.21946695590051313], 'false': [0.2411082324753581, 0.2158003377744383], 'false,true': [nan, 0.24110823247535787], 'false,false': [nan, 0.2158003377744383], 'true': [0.22101495298628038, 0.2054696827248406]}
{'': [0.0, 0.2185936641351697], 'false': [0.23579564046768303, 0.21558805902222825], 'false,false': [0.204081632653061, 0.21600534779357455], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.23164933079283268, 0.21614712033493777], 'true': [0.22470233427507388, 0.2345286706710906], 'false': [nan, 0.21614712033493796], 'false,false': [nan, 0.21614712033493777], 'false,false,false': [nan, 0.21614712033493777]}
{'': [0.2315047717492173, 0.21362179952088803], 'true': [0.2263390678545117, 0.23286444136208562], 'true,false': [0.18125835399198872, 0.24305555555555555], 'false': [nan, 0.21362179952088803], 'false,false': [nan, 0.21362179952088803]}
{'': [0.20930660038852283, 0.2257390835065691], 'false': [0.23338960746467977, 0.22423441946596337], 'false,true': [0.23338960746467977, nan], 'false,true,true': [0.2467649288645818, 0.2297710168021642], 'false,false': [nan, 0.22423441946596337]}
{'': [0.23606191870377197, 0.2153890915671986], 'true': [0.19067535828036833, 0.24816231145501574], 'true,false': [nan, 0.24816231145501574], 'true,false,false': [nan, 0.24816231145501574], 'false': [0.21298943416568855, 0.21580033777444368], 'false,false': [nan, 0.21580033777444368], 'true,true': [0.0, 0.19604090285915618]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 14.304
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then if ( companyceo(A, E) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( bankboughtbank(F, A), companyceo(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.24945328292559835;  // std dev = 4.054, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   else if ( companyceo(A, H), companyalsoknownas(A, I) )
%   | then return 0.06504548682365029;  // std dev = 0.405, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | else if ( acquired(A, J) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.261657707029336;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else return 0.19270103747610748;  // std dev = 0.472, 547.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=183 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.7455877418273862;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.8298624051885035;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then if ( countryhascompanyoffice(F, A), acquired(A, G) )
%   | | | then return -0.09576054393016731;  // std dev = 0.976, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.11082057712766825;  // std dev = 3.274, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.11938812845390731;  // std dev = 5.099, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
%   | | | else return 0.1851825451070334;  // std dev = 11.194, 548.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=194 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.5849197152693666;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, D), companyalsoknownas(A, E) )
%   | then if ( companyceo(A, F) )
%   | | then if ( cityhascompanyoffice(G, D) )
%   | | | then return -0.15801493188950577;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09996071255461404;  // std dev = 2.186, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else return -0.18947094869542602;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( bankboughtbank(H, A), countryhascompanyoffice(I, H) )
%   | | then if ( countryhascompanyoffice(J, A), companyceo(A, K) )
%   | | | then return 0.3942685617123577;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.02221445270851273;  // std dev = 1.812, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.06640823999344428;  // std dev = 3.300, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.15484503028607255;  // std dev = 12.067, 644.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=226 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), cityhascompanyoffice(D, A) )
%   then if ( cityhascompanyoffice(D, E), companyalsoknownas(E, F) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.7191544469822364;  // std dev = 0.142, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.09203494710121647;  // std dev = 0.283, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | else return -0.24338482250512855;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( acquired(G, A), bankboughtbank(G, H) )
%   | then if ( acquired(I, G) )
%   | | then return 0.27039079229580726;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4251811087807551;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | then if ( acquired(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.764659930918764;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.22703468151475104;  // std dev = 0.031, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( acquired(A, M), countryhascompanyoffice(N, M) )
%   | | | then return 0.25789969820532394;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.12428756347030437;  // std dev = 11.824, 628.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( companyceo(D, C), economicsectorcompany(B, D) )
%   | then return 0.5525169249134035;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.13117530712140915;  // std dev = 0.277, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   else if ( acquired(A, E), cityhascompanyoffice(F, A) )
%   | then if ( acquired(G, A), acquired(H, G) )
%   | | then return 0.464387971626695;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( cityhascompanyoffice(F, I), economicsectorcompany(B, I) )
%   | | | then return 0.527716164152161;  // std dev = 1.206, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.1975182866191467;  // std dev = 0.224, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( companyceo(A, J), acquired(K, A) )
%   | | then if ( countryhascompanyoffice(L, K), bankchiefexecutiveceo(K, M) )
%   | | | then return -0.11818734365291168;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07010676210375966;  // std dev = 1.418, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( acquired(N, A), economicsectorcompany(B, N) )
%   | | | then return 0.6898454333009437;  // std dev = 0.210, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.09526018522634645;  // std dev = 11.949, 661.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=223 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then if ( cityhascompanyoffice(E, D) )
%   | | then return 0.46936802689306284;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6072024439034334;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then if ( companyceo(F, G) )
%   | | | then return 0.6007955328143061;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5064545342469122;  // std dev = 0.263, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(H, A) )
%   | | | then return -0.021640576853142683;  // std dev = 4.056, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | | else return 0.06440946273961513;  // std dev = 11.699, 660.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=210 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, C) )
%   | then return 0.35685480687748117;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.45755269149786343;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return 0.05214914993928456;  // std dev = 0.450, 760.000 (wgt'ed) examples reached here.  /* #neg=514 #pos=246 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then return -0.08300592598961429;  // std dev = 0.209, 61.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
%   else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | then if ( acquired(E, G), cityhascompanyoffice(H, G) )
%   | | then if ( cityhascompanyoffice(H, E) )
%   | | | then return -0.09143013036917189;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.016842373983618004;  // std dev = 0.564, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyalsoknownas(E, I), economicsectorcompany(B, I) )
%   | | | then return 0.6101665484460865;  // std dev = 0.378, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.26785613718184464;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.543703323043142;  // std dev = 1.885, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.2539712726505812;  // std dev = 0.315, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( acquired(L, A), companyceo(A, M) )
%   | | | then return -0.13050050667535396;  // std dev = 1.286, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.06349801633178032;  // std dev = 11.110, 568.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=200 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( companyceo(D, C), economicsectorcompany(B, D) )
%   | then return 0.35322429215431933;  // std dev = 0.328, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1417439518672528;  // std dev = 0.248, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( countryhascompanyoffice(G, F), acquired(H, A) )
%   | | | then return 0.22208527067753311;  // std dev = 0.849, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.4749038800602188;  // std dev = 1.638, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | else return -0.1905495195707895;  // std dev = 0.046, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( acquired(I, A) )
%   | | then if ( acquired(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.5415457823063504;  // std dev = 0.851, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.2562471387805788;  // std dev = 0.307, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return -0.004325148209003428;  // std dev = 2.818, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.05867048137481768;  // std dev = 10.295, 472.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=169 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.028588944059441925;  // std dev = 0.299, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.003870072318120949;  // std dev = 0.299, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.28333422949193704;  // std dev = 0.221, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(F, A), companyceo(A, G) )
%   | | | then return 0.004410541796465664;  // std dev = 1.110, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return -0.11022626239823603;  // std dev = 2.400, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.4545570727722803;  // std dev = 0.687, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.17577622942437005;  // std dev = 0.184, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0.0017409818118568343;  // std dev = 1.334, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.03558349811686571;  // std dev = 10.441, 488.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=168 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '13.634', 'seconds']
Refined model CLL: -0.315656


******************************************
Best model found
******************************************
Results 

CLL : -0.3153 

AUC ROC : 0.773534 

AUC PR : 0.101724 

Precision : 0.106039 

Recall : 0.291506 

F1 : 0.15551 

Total Learning Time : 14.304 

Total Inference Time : 37.83844232559204 

Total revision time: 119.35930105400085
Best scored revision CLL: -0.315656


Results 

CLL : -0.3153 

AUC ROC : 0.773534 

AUC PR : 0.101724 

Precision : 0.106039 

Recall : 0.291506 

F1 : 0.15551 

Total Learning Time : 119.51914735984802 

Total Inference Time : 37.83844232559204 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.556
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11502966904446545;  // std dev = 0.437, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.182223009173585;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | else return 0.17855365685330205;  // std dev = 0.467, 593.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.14582106991901475;  // std dev = 4.796, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17762557636221304;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.15757514679014073;  // std dev = 11.345, 589.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.20037910363196965;  // std dev = 2.837, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return 0.18482218376203097;  // std dev = 4.672, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07479002085040863;  // std dev = 3.870, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else return 0.15020234205009225;  // std dev = 0.473, 562.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.03540133994382135;  // std dev = 0.430, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else return 0.1280872057361314;  // std dev = 0.467, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12286503419578;  // std dev = 12.221, 669.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.13619912511819754;  // std dev = 2.375, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0.127911396999269;  // std dev = 4.962, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04176671364368777;  // std dev = 3.873, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10496308780544163;  // std dev = 0.473, 562.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.05198854175419569;  // std dev = 4.852, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.042403659043188;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else return 0.07562669227705701;  // std dev = 12.137, 667.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return -0.019205561625990485;  // std dev = 2.607, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else return 0.0601416504998928;  // std dev = 5.081, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07502333090602535;  // std dev = 11.794, 622.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07955727264542128;  // std dev = 1.808, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.22756910575388783;  // std dev = 2.118, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.07416705573347247;  // std dev = 0.463, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04839483484536429;  // std dev = 0.471, 679.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.04997547877085052;  // std dev = 0.476, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.15148151405938443;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.0759690675304103;  // std dev = 3.481, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.051808981367114086;  // std dev = 11.168, 553.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.23922020186033535;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.02012710529940216;  // std dev = 1.896, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02225668736208111;  // std dev = 4.394, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.09361052193027332;  // std dev = 4.560, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03309739435089764;  // std dev = 11.235, 566.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '59.347', 'seconds']
Parameter learned model CLL:-0.368527 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.793, 9, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.437, 81, 28], 'false,true': [4.864, 73, 35], 'false,false': [0.467, 403, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.796, 75, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.795, 67, 35], 'false,false,false,false': [11.345, 399, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.837, 21, 13], 'true,false,false': [4.672, 58, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.87, 59, 20], 'false,false,false': [0.473, 372, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.43, 15, 5], 'true,false': [0.467, 59, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.221, 444, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.375, 15, 9], 'true,false': [4.962, 67, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.873, 60, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 372, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.852, 86, 33], 'false,false,true': [1.966, 17, 5], 'false,false,false': [12.137, 447, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.607, 28, 9], 'true,false': [5.081, 76, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.794, 412, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.808, 10, 5], 'true,false,true': [2.118, 9, 9], 'true,false,false': [0.463, 42, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 454, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.476, 89, 48], 'false,true,true,true': [1.342, 18, 2], 'false,true,true,false': [3.481, 37, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.168, 363, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.896, 15, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.394, 66, 28], 'false,true': [4.56, 52, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.235, 376, 190]}]
{'': [0.1963117192147544, 0.21794827442353826], 'false': [0.21905006858710704, 0.2177455360316707], 'true': [0.2295918367346937, 0.19089302247285697], 'true,false': [nan, 0.19089302247285697]}
{'': [0.21297216231084698, 0.21958730321849573], 'false': [nan, 0.21958730321849435], 'false,false': [nan, 0.21958730321849573], 'false,false,false': [0.22539407920030738, 0.2185223725286149]}
{'': [0.23529819988404688, 0.22018104543180114], 'true': [nan, 0.235298199884047], 'true,false': [0.23673202134122953, 0.23470921493814237], 'false': [nan, 0.22018104543180114], 'false,false': [0.18958255602721585, 0.22378136041843824], 'false,false,true': [nan, 0.18958255602721585]}
{'': [0.2131228401587743, 0.22325219436266253], 'false': [nan, 0.22325219436266253], 'false,false': [nan, 0.22325219436266253], 'true': [0.18469434864486342, 0.21805239290676265]}
{'': [0.2327879519724998, 0.21969891087386448], 'true': [0.2351090154549491, 0.23224974759209968], 'false': [0.187523588618474, 0.22378136041843444], 'false,false': [nan, 0.22378136041843444], 'false,true': [nan, 0.187523588618474]}
{'': [nan, 0.21665342158609513], 'false': [0.1978708606759732, 0.21983929024460153], 'false,false': [0.17561983471074394, 0.22085297630918335]}
{'': [0.21572559087093873, 0.2236262429086237], 'false': [nan, 0.22362624290861965], 'false,false': [nan, 0.2236262429086237], 'false,false,false': [nan, 0.2236262429086237], 'true': [0.18366905844261977, 0.22450685764267075]}
{'': [0.22528240539992728, 0.22148177810261965], 'true': [0.21799598996679329, 0.22652644657852186], 'true,false': [0.2492530237643281, 0.21445847890352007], 'false': [nan, 0.22148177810261965], 'false,false': [nan, 0.22148177810261965]}
{'': [0.22646816729890815, 0.22210803083757288], 'false': [0.19568238299191965, 0.22553293068549407], 'false,false': [nan, 0.22553293068549407], 'false,true': [0.19568238299191965, nan], 'false,true,true': [0.09009877674716948, 0.22028075040889805]}
{'': [0.19994115182718925, 0.22556055026792174], 'false': [0.23903244709153507, 0.22300191037471215], 'false,false': [nan, 0.22300191037471215], 'true': [0.17326971081788717, 0.2053902574569603], 'true,false': [nan, 0.2053902574569603], 'true,false,false': [nan, 0.2053902574569603], 'true,true': [0.0, 0.1796473970749406]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 19.849
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( cityhascompanyoffice(E, A), companyceo(D, F) )
%   | | then if ( cityhascompanyoffice(E, D) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.43709630352056494;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( countryhascompanyoffice(G, A), companyceo(A, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.04458961306561405;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( acquired(A, J), acquired(J, K) )
%   | | | then return -0.10185106490048777;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | | else return 0.20417542516573342;  // std dev = 11.691, 604.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=209 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.810981803840668;  // std dev = 0.123, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then if ( countryhascompanyoffice(F, A), countryhascompanyoffice(G, E) )
%   | | | then return -0.1414544710766813;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.0843289287897357;  // std dev = 3.812, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else if ( acquired(H, A), companyceo(H, I) )
%   | | | then return 0.06145074964204709;  // std dev = 3.142, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.1958176224565031;  // std dev = 11.353, 560.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=204 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.6028953965401531;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6383494044377327;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6950405121734271;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(F, A), bankboughtbank(F, G) )
%   | then return -0.18612337152266853;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then return 0.7083658320745697;  // std dev = 0.146, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( countryhascompanyoffice(I, A), cityhascompanyoffice(J, A) )
%   | | | then return 0.07341273797748359;  // std dev = 2.307, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.10189293626251832;  // std dev = 12.421, 748.000 (wgt'ed) examples reached here.  /* #neg=525 #pos=223 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( companyceo(D, C), economicsectorcompany(B, D) )
%   | then return 0.6830841590196934;  // std dev = 0.355, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyceo(A, E), bankchiefexecutiveceo(F, E) )
%   | | then return 0.1705666652326227;  // std dev = 0.480, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.2575190831111847;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3874211303138727;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then if ( companyceo(I, J) )
%   | | | then return 0.62861571290722;  // std dev = 1.732, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.785834691666184;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.20261975998532897;  // std dev = 0.270, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0.10802035319167297;  // std dev = 0.458, 588.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=192 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( countryhascompanyoffice(D, A), countryhascompanyoffice(D, C) )
%   | then if ( acquired(A, E) )
%   | | then return 0.14744546178757756;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.23848608704377447;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(F, C) )
%   | | then return 0.7667578153494112;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3229841307185948;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( acquired(A, G), companyceo(A, H) )
%   | then if ( companyalsoknownas(A, I), acquired(I, J) )
%   | | then return 0.0815657515074369;  // std dev = 0.374, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else return -0.024939489470465898;  // std dev = 0.318, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( companyceo(A, K) )
%   | | then if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.06991294482394526;  // std dev = 1.688, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.22194712963340593;  // std dev = 2.613, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return 0.08806707546093644;  // std dev = 0.446, 627.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=205 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.4368377545662014;  // std dev = 0.095, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(A, D), companyceo(D, E) )
%   | then if ( companyceo(A, F), countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.45743223776929326;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10612514165438651;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( bankchiefexecutiveceo(A, I) )
%   | | | then return -0.23107318929730258;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.00643894451020349;  // std dev = 1.691, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( acquired(J, A) )
%   | | then if ( companyalsoknownas(J, K), acquired(L, K) )
%   | | | then return 0.5504987156050335;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.08243308872408052;  // std dev = 3.131, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | else if ( countryhascompanyoffice(M, A) )
%   | | | then return 0.20314189429389792;  // std dev = 2.990, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.08450086176200337;  // std dev = 10.925, 572.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=196 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.327831371266518;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, E), companyceo(E, F) )
%   | | then if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | | then return 0.002274953461304935;  // std dev = 1.045, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.1197211712586483;  // std dev = 0.667, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.05015108845694398;  // std dev = 2.550, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.1520678587129614;  // std dev = 3.195, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   else if ( acquired(A, J), countryhascompanyoffice(K, J) )
%   | then return -0.13298645585080013;  // std dev = 0.577, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | then return 0.3515677720843773;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(M, A), companyceo(M, N) )
%   | | | then return -0.06970651580469332;  // std dev = 2.048, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.048493942173194686;  // std dev = 11.051, 612.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=194 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C), bankboughtbank(A, D) )
%   then return -0.2130119038047773;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( countryhascompanyoffice(E, A), bankbankincountry(F, E) )
%   | then if ( countryhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(A, H), cityhascompanyoffice(I, G) )
%   | | | then return 0.3724511159433012;  // std dev = 0.461, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6046628334001417;  // std dev = 0.964, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( companyalsoknownas(A, A) )
%   | | | then return -0.09666893673839255;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.30017295092757;  // std dev = 0.427, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( acquired(J, A), companyceo(J, K) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.3264547552459816;  // std dev = 0.154, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05216087270800785;  // std dev = 2.135, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.040791032715192035;  // std dev = 4.443, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
%   | | | else return 0.05954309957864408;  // std dev = 10.362, 494.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=169 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( acquired(E, A), bankboughtbank(E, F) )
%   | then if ( acquired(E, F) )
%   | | then return -0.14766230209119371;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10391896625677581;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.4628397180407279;  // std dev = 0.319, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.21358738535493382;  // std dev = 0.245, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.09750603142867949;  // std dev = 1.065, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.005172219133600644;  // std dev = 2.035, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   else return 0.040024561576736034;  // std dev = 0.438, 692.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=234 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.2129100805003803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.010103587252864664;  // std dev = 1.044, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.1577450393739603;  // std dev = 0.456, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.4640924280034679;  // std dev = 0.488, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15977178466621228;  // std dev = 0.181, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.026839200686415883;  // std dev = 0.353, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | then if ( companyalsoknownas(A, J) )
%   | | then return 0.2425860134260387;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3855924369187017;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.016272645283348177;  // std dev = 0.436, 677.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=214 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '53.237', 'seconds']
Refined model CLL: -0.315386


******************************************
Best model found
******************************************
Results 

CLL : -0.315737 

AUC ROC : 0.72901 

AUC PR : 0.094112 

Precision : 0.292181 

Recall : 0.136538 

F1 : 0.186107 

Total Learning Time : 19.849 

Total Inference Time : 84.26482725143433 

Total revision time: 171.79157522201538
Best scored revision CLL: -0.315386


Results 

CLL : -0.315737 

AUC ROC : 0.72901 

AUC PR : 0.094112 

Precision : 0.292181 

Recall : 0.136538 

F1 : 0.186107 

Total Learning Time : 171.95142152786255 

Total Inference Time : 84.26482725143433 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.718
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, C) )
%   | then return 0.23449302112101633;  // std dev = 4.672, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(D, E), companyalsoknownas(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20271248793258584;  // std dev = 0.475, 653.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=225 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.16047548229332612;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16846528334264482;  // std dev = 12.215, 668.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.10470523522190521;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.134706077218787;  // std dev = 0.469, 686.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=225 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.23460783589308662;  // std dev = 0.497, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12575216654718452;  // std dev = 12.178, 660.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.10836515971080148;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10272832509841556;  // std dev = 0.474, 662.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=225 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.1670360164626488;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06703601646264856;  // std dev = 4.508, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07032628560262892;  // std dev = 12.310, 689.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=225 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.020327627100040803;  // std dev = 4.896, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06150500798667646;  // std dev = 12.265, 679.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.08772623937446986;  // std dev = 4.635, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03430216733350894;  // std dev = 0.465, 711.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.04563633533760374;  // std dev = 0.479, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03835811064280385;  // std dev = 12.301, 687.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=225 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.031582967610311985;  // std dev = 4.738, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.016707163123125552;  // std dev = 12.426, 717.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '58.165', 'seconds']
Parameter learned model CLL:-0.364258 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, E), companyalsoknownas(A, E)'}, {'true,true': [4.672, 58, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.475, 428, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.83, 70, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.215, 443, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.944, 81, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 461, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.497, 43, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.178, 435, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.716, 61, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 437, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [1.491, 5, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.508, 59, 31], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.31, 464, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.896, 77, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.265, 454, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.635, 56, 35], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.465, 486, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.479, 62, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.301, 462, 225]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.738, 63, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.426, 492, 225]}]
{'': [0.23470921493814462, 0.22583951089212714], 'true': [0.23470921493814462, nan], 'false': [nan, 0.22583951089212714]}
{'': [0.22222222222222132, 0.22337435906630124], 'false': [nan, 0.22337435906630124], 'false,false': [nan, 0.22337435906630124], 'false,false,false': [nan, 0.22337435906630124]}
{'': [0.21068668252080947, 0.22041198820218577], 'false': [nan, 0.22041198820218577], 'false,false': [nan, 0.22041198820218577], 'true': [0.21068668252080947, nan], 'true,true': [0.21068668252080947, nan]}
{'': [0.24737015121630562, 0.22469008264462498], 'true': [0.24737015121630562, nan], 'false': [nan, 0.22469008264462498], 'false,false': [nan, 0.22469008264462498]}
{'': [0.23166232638888995, 0.22436131470140117], 'true': [0.23166232638888995, nan], 'false': [nan, 0.22436131470140117], 'false,false': [nan, 0.22436131470140117]}
{'': [0.22854810733598574, 0.21991864695262486], 'true': [0.24691358024691368, 0.22580246913580204], 'true,false': [nan, 0.22580246913580204], 'false': [nan, 0.21991864695262486], 'false,false': [nan, 0.21991864695262486]}
{'': [0.2140672219352335, 0.22156380885864824], 'false': [nan, 0.22156380885864824], 'false,false': [nan, 0.22156380885864824], 'false,false,false': [nan, 0.22156380885864824], 'true': [0.2140672219352335, nan]}
{'': [0.23610836467188867, 0.2163114885435063], 'true': [0.23610836467188867, nan], 'false': [nan, 0.2163114885435063], 'false,false': [nan, 0.2163114885435063]}
{'': [0.2298286196257955, 0.2202475162563627], 'false': [nan, 0.2202475162563627], 'false,false': [nan, 0.2202475162563627]}
{'': [0.22910965592057594, 0.21533236462946864], 'true': [0.22910965592057594, nan], 'true,true': [0.22910965592057594, nan], 'false': [nan, 0.21533236462946864], 'false,false': [nan, 0.21533236462946864]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
0;true;companyalsoknownas(A, C).;true;true
0;false;companyalsoknownas(D, E), companyalsoknownas(A, E).;true;true
1;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
1;false;companyalsoknownas(A, D), companyalsoknownas(D, A).;true;true
1;false,false;companyalsoknownas(E, A), companyalsoknownas(F, E).;true;true
1;false,false,false;companyalsoknownas(A, G).;true;true
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
2;true;companyalsoknownas(D, A), companyalsoknownas(A, D).;true;true
2;true,true;companyalsoknownas(C, E).;true;true
2;false;companyalsoknownas(A, A).;true;true
2;false,false;companyalsoknownas(F, A).;true;true
3;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
3;true;companyalsoknownas(D, C).;true;true
3;false;companyalsoknownas(E, A).;true;true
3;false,false;companyalsoknownas(A, A).;true;true
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
4;false;companyalsoknownas(E, A).;true;true
4;false,false;companyalsoknownas(A, F).;true;true
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true
5;true,false;companyalsoknownas(C, C).;true;true
5;false;companyalsoknownas(D, A).;true;true
5;false,false;companyalsoknownas(A, E), companyalsoknownas(E, F).;true;true
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
6;true;companyalsoknownas(C, D).;true;true
6;false;companyalsoknownas(E, A), companyalsoknownas(E, E).;true;true
6;false,false;companyalsoknownas(A, F).;true;true
6;false,false,false;companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
7;true;companyalsoknownas(D, C).;true;true
7;false;companyalsoknownas(A, A).;true;true
7;false,false;companyalsoknownas(E, A), companyalsoknownas(A, E).;true;true
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false;companyalsoknownas(D, A).;true;true
8;false,false;companyalsoknownas(E, A).;true;true
9;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
9;true;companyalsoknownas(D, C).;true;true
9;true,true;companyalsoknownas(A, E), companyalsoknownas(D, E).;true;true
9;false;companyalsoknownas(A, F).;true;true
9;false,false;companyalsoknownas(G, A), companyalsoknownas(G, G).;true;true


Refining candidate
***************************
Model training time 12.963
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, C) )
%   | then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( cityhascompanyoffice(E, A) )
%   | | | then return 0.10259337954395681;  // std dev = 2.883, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.24703782398840124;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, G), companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, H) )
%   | | then if ( bankboughtbank(I, H), bankboughtbank(J, I) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.19638422921715884;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | else if ( acquired(K, A), countryhascompanyoffice(L, K) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.17618172198475412;  // std dev = 11.502, 610.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=194 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(A, E), acquired(F, E) )
%   | | then if ( acquired(G, A), companyceo(F, H) )
%   | | | then return 0.1652926739444522;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17245278619941293;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.10710048294747584;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.15867448372865434;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   else if ( companyalsoknownas(A, J), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(K, A), companyalsoknownas(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16574405024515437;  // std dev = 12.265, 679.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then if ( cityhascompanyoffice(F, A), countryhascompanyoffice(G, A) )
%   | | | then return 0.2844152521511182;  // std dev = 1.557, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.12497032705497983;  // std dev = 4.113, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(I, A), countryhascompanyoffice(J, A) )
%   | | | then return 0.27397774546869985;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.11592648269680192;  // std dev = 12.304, 713.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=218 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( cityhascompanyoffice(E, A), acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return -0.10431924984637343;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.046200176932969475;  // std dev = 0.613, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.5110535875415709;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.062192099215198464;  // std dev = 4.170, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(J, A) )
%   | | | then return 0.04503495859786787;  // std dev = 4.622, 112.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=29 */
%   | | | else return 0.1385477954915384;  // std dev = 11.314, 566.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=196 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6399194961609073;  // std dev = 0.485, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.4055991771816807;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.05851631802839723;  // std dev = 3.886, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I) )
%   | | | then return 0.03986512586204027;  // std dev = 4.186, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | | else return 0.1220009149217295;  // std dev = 11.400, 570.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=201 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.25935328365845856;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2184039193764689;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | | then return 0.6512025376216083;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06896064990347243;  // std dev = 3.933, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   else if ( companyalsoknownas(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G), companyalsoknownas(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | | then return 0.6748900166315787;  // std dev = 0.953, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.07119904318915672;  // std dev = 12.028, 664.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=214 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.3912193347003905;  // std dev = 0.357, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.2894686012228356;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.008407084425175716;  // std dev = 3.961, 87.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07426874178753948;  // std dev = 12.095, 660.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=225 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( acquired(A, E), companyalsoknownas(E, F) )
%   | | then if ( countryhascompanyoffice(G, F) )
%   | | | then return -0.0068408907102352826;  // std dev = 0.651, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.10035585388017257;  // std dev = 0.388, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyalsoknownas(A, H), countryhascompanyoffice(I, H) )
%   | | | then return -0.021284337668413995;  // std dev = 1.393, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1270001925816252;  // std dev = 3.551, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A), companyalsoknownas(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, K) )
%   | | | then return 0.003803402907703007;  // std dev = 4.124, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | | else return 0.0903913607856641;  // std dev = 11.161, 537.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=201 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return -0.05880606957200039;  // std dev = 0.304, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(E, A) )
%   | | then if ( cityhascompanyoffice(F, E) )
%   | | | then return 0.01133989559553119;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.11935594198079878;  // std dev = 0.940, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.20869829691794198;  // std dev = 1.850, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09007397526724162;  // std dev = 2.605, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   else if ( companyalsoknownas(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(J, A) )
%   | | | then return -0.030134475659109834;  // std dev = 4.385, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | | | else return 0.02735303274766188;  // std dev = 11.498, 602.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=196 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then if ( acquired(A, F) )
%   | | | then return 0.0931128712557327;  // std dev = 2.779, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return -0.01338276805504993;  // std dev = 2.897, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), companyceo(I, J) )
%   | | | then return 0.3348159103975822;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.022391729046171673;  // std dev = 12.069, 672.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=219 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '52.969', 'seconds']
Refined model CLL: -0.361242


******************************************
Best model found
******************************************
Results 

CLL : -0.361479 

AUC ROC : 0.574171 

AUC PR : 0.032585 

Precision : 0.267442 

Recall : 0.044402 

F1 : 0.076159 

Total Learning Time : 12.963 

Total Inference Time : 86.40406632423401 

Total revision time: 174.62470865821837
Best scored revision CLL: -0.361242


Results 

CLL : -0.361479 

AUC ROC : 0.574171 

AUC PR : 0.032585 

Precision : 0.267442 

Recall : 0.044402 

F1 : 0.076159 

Total Learning Time : 174.7264385280609 

Total Inference Time : 86.40406632423401 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.997
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.12988806553429413;  // std dev = 4.267, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21857838295226847;  // std dev = 0.480, 652.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=235 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.1749240776877044;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16753525580564224;  // std dev = 12.472, 695.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=235 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.15018899832843252;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1530428896843657;  // std dev = 0.477, 674.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=235 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.12225816840504813;  // std dev = 0.470, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11488555825240046;  // std dev = 12.494, 700.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=235 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.06666314736090215;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08652637182092741;  // std dev = 0.469, 717.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=235 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.2393807465264577;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.054736900532366246;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08514749482332025;  // std dev = 12.430, 686.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=235 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.034844991275851625;  // std dev = 4.221, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06853817279735065;  // std dev = 12.430, 686.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=235 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.027162698400137412;  // std dev = 4.227, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05469444642016197;  // std dev = 0.475, 686.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=235 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.040731122036909394;  // std dev = 0.455, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04485793503695992;  // std dev = 12.415, 683.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=235 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.05064584240019254;  // std dev = 4.115, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.028941446152987754;  // std dev = 12.476, 696.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=235 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '59.751', 'seconds']
Parameter learned model CLL:-0.372627 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.267, 67, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.48, 417, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.082, 50, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.472, 460, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.082, 50, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.477, 439, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.47, 51, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.494, 465, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.201, 60, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 482, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [0.0, 8, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.201, 60, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.43, 451, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.221, 64, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.43, 451, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.227, 64, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 451, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.455, 59, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.415, 448, 235]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.115, 54, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.476, 461, 235]}]
{'': [0.19789697542533188, 0.2305200609733172], 'false': [nan, 0.2305200609733172], 'true': [0.19789697542533188, nan]}
{'': [0.22222222222222243, 0.2237979400652073], 'false': [nan, 0.2237979400652073], 'false,false': [nan, 0.2237979400652073], 'false,false,false': [nan, 0.2237979400652073]}
{'': [0.22222222222222118, 0.22709762347119572], 'false': [nan, 0.22709762347119572], 'false,false': [nan, 0.22709762347119572], 'true': [0.22222222222222118, nan], 'true,true': [0.22222222222222118, nan]}
{'': [0.22074099722991752, 0.2230102040816258], 'false': [nan, 0.2230102040816258], 'false,false': [nan, 0.2230102040816258], 'true': [0.22074099722991752, nan]}
{'': [0.20761245674740444, 0.2203314990206061], 'false': [nan, 0.2203314990206061], 'false,false': [nan, 0.2203314990206061], 'true': [0.20761245674740444, nan]}
{'': [0.19655451497282994, 0.22521440896226022], 'false': [nan, 0.22521440896226022], 'false,false': [nan, 0.22521440896226022], 'true': [0.0, 0.20761245674740544], 'true,false': [nan, 0.20761245674740544]}
{'': [0.20022819276475873, 0.2252144089622551], 'false': [nan, 0.2252144089622551], 'false,false': [nan, 0.2252144089622551], 'false,false,false': [nan, 0.2252144089622551], 'true': [0.20022819276475873, nan]}
{'': [0.200799265034656, 0.2252144089622556], 'false': [nan, 0.2252144089622556], 'false,false': [nan, 0.2252144089622556], 'true': [0.200799265034656, nan]}
{'': [0.20664045099646366, 0.22568592185452846], 'false': [nan, 0.22568592185452846], 'false,false': [nan, 0.22568592185452846]}
{'': [0.21432719037467116, 0.22364042475888246], 'false': [nan, 0.22364042475888246], 'false,false': [nan, 0.22364042475888246], 'true': [0.21432719037467116, nan], 'true,true': [0.21432719037467116, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true


Refining candidate
***************************
Model training time 9.833
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(A, E), acquired(A, F) )
%   | | then if ( cityhascompanyoffice(G, A), acquired(E, H) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.10338952643894934;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( countryhascompanyoffice(I, A), acquired(A, J) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.17151940863711249;  // std dev = 12.429, 718.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=225 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.7934122320284444;  // std dev = 0.145, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | else return -0.15803405520065975;  // std dev = 0.136, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( acquired(A, E), companyceo(A, F) )
%   | then if ( companyalsoknownas(A, G) )
%   | | then return 0.01180779568379293;  // std dev = 0.775, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( countryhascompanyoffice(H, E), countryhascompanyoffice(H, A) )
%   | | | then return 0.5455186846434872;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26587838168719946;  // std dev = 1.992, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.017033683951692528;  // std dev = 2.721, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( bankboughtbank(K, A), companyceo(A, L) )
%   | | | then return 0.00262805536395345;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.16436784798294898;  // std dev = 11.037, 555.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=183 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyalsoknownas(A, D), acquired(D, E) )
%   | then if ( acquired(F, A), acquired(E, G) )
%   | | then return 0.14074835479621606;  // std dev = 0.982, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.05184133557801121;  // std dev = 0.280, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( companyalsoknownas(C, H), acquired(C, I) )
%   | | then return 0.4735013680666038;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( bankboughtbank(J, C) )
%   | | | then return 0.2543836951047921;  // std dev = 1.434, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.09902433105734217;  // std dev = 4.114, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | then return 0.6428243739313155;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(L, A), bankboughtbank(L, A) )
%   | | then return 0.4405824482361931;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.5655899373029244;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1283992037766956;  // std dev = 11.458, 631.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=199 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(A, D) )
%   then if ( acquired(E, A) )
%   | then return 0.43625269142974615;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.024709030191594473;  // std dev = 0.301, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | then if ( companyalsoknownas(F, H), acquired(I, H) )
%   | | then if ( companyalsoknownas(F, I) )
%   | | | then return -0.18350503026958875;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0722478144859961;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( acquired(J, F), economicsectorcompany(B, J) )
%   | | | then return 0.6757545401758177;  // std dev = 0.341, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21938167918230564;  // std dev = 2.401, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.7007951535345931;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.06268733248697983;  // std dev = 3.867, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | else return 0.11635821825153381;  // std dev = 11.296, 593.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=197 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(D, A) )
%   | | then return 0.3399455180657471;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(D, E), companyceo(E, F) )
%   | | | then return 0.6270536468966807;  // std dev = 0.403, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.47981970355850345;  // std dev = 1.583, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return -0.16330942217300357;  // std dev = 0.216, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.5183717096068269;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, H) )
%   | | then if ( acquired(I, A) )
%   | | | then return -0.21091749143739058;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.09047620127206812;  // std dev = 3.691, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.04612451986343153;  // std dev = 2.554, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.10740409133922496;  // std dev = 10.585, 512.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=174 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return -0.11587846597495984;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.35640303021680686;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.010297920890786391;  // std dev = 0.350, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   else if ( acquired(A, E), companyceo(E, F) )
%   | then if ( cityhascompanyoffice(G, E) )
%   | | then if ( companyceo(A, H) )
%   | | | then return -0.0757369980577138;  // std dev = 0.507, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19600139195659727;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4311958975665405;  // std dev = 0.329, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( bankchiefexecutiveceo(A, I) )
%   | | then return -0.06392923538701692;  // std dev = 0.257, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.05858791239150922;  // std dev = 2.979, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | | | else return 0.08955775915333115;  // std dev = 11.011, 553.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=190 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.41134567103578423;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.25934274030305354;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3667765158767022;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(F, A) )
%   | | then if ( countryhascompanyoffice(G, F) )
%   | | | then return 0.1752211139700891;  // std dev = 1.696, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.01885241694770418;  // std dev = 3.622, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return -0.013198831584730716;  // std dev = 3.000, 86.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | | | else return 0.05807552368609046;  // std dev = 10.960, 596.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=193 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(D, A), companyalsoknownas(D, E) )
%   | then return -0.07771034847990274;  // std dev = 0.244, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( cityhascompanyoffice(F, A), acquired(G, A) )
%   | | then return 0.16931997781118704;  // std dev = 0.305, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( bankboughtbank(H, A) )
%   | | | then return -0.11066923526894606;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.03059897258746221;  // std dev = 3.549, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return 0.005723737627370299;  // std dev = 0.290, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | else if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | then if ( companyalsoknownas(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.5345195188610843;  // std dev = 0.661, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21903279637977438;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(A, M), acquired(N, A) )
%   | | | then return -0.1613400106768929;  // std dev = 0.129, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07521163467189566;  // std dev = 10.718, 520.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=185 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.431, 766.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=260 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( companyceo(C, E), acquired(F, C) )
%   | then if ( countryhascompanyoffice(G, C) )
%   | | then return 0.29049201757717646;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.45043209404542645;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.21730745885687022;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyceo(A, H), companyalsoknownas(C, I) )
%   | | | then return -0.1112020160355337;  // std dev = 0.515, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.06040754131818137;  // std dev = 2.075, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else if ( acquired(A, J), companyalsoknownas(A, K) )
%   | then return -0.01652452577533416;  // std dev = 0.253, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | else if ( companyalsoknownas(A, L) )
%   | | then return 0.01708779640360205;  // std dev = 0.359, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( acquired(A, M) )
%   | | | then return 0.0467560265212202;  // std dev = 3.766, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | | | else return 0.01749789676392704;  // std dev = 10.812, 601.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=186 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '6.487', 'seconds']
Refined model CLL: -0.308181


******************************************
Best model found
******************************************
Results 

CLL : -0.307828 

AUC ROC : 0.721949 

AUC PR : 0.08046 

Precision : 0.134393 

Recall : 0.179537 

F1 : 0.153719 

Total Learning Time : 9.833 

Total Inference Time : 35.996185541152954 

Total revision time: 121.03394611358642
Best scored revision CLL: -0.308181


Results 

CLL : -0.307828 

AUC ROC : 0.721949 

AUC PR : 0.08046 

Precision : 0.134393 

Recall : 0.179537 

F1 : 0.153719 

Total Learning Time : 121.13567598342895 

Total Inference Time : 35.996185541152954 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.662
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.17296374991432573;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, F), companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19857446701440135;  // std dev = 0.474, 658.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=224 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then return 0.21778570204646686;  // std dev = 4.584, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   else if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15405660920026973;  // std dev = 12.325, 696.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=224 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then return 0.14364770847413072;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13997665932208117;  // std dev = 0.470, 678.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=224 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.18962765162863943;  // std dev = 0.492, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13222283923668846;  // std dev = 12.111, 649.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=224 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.14108040687430223;  // std dev = 4.534, 86.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0989062438628337;  // std dev = 0.472, 669.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=224 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.05140060778250318;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09453786268446383;  // std dev = 4.467, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09469583128165862;  // std dev = 12.077, 642.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=224 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.10394552901785917;  // std dev = 4.498, 84.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), companyalsoknownas(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05018567273589749;  // std dev = 12.317, 694.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=224 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then return 0.027402436256423787;  // std dev = 4.698, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03508601023334745;  // std dev = 0.466, 705.000 (wgt'ed) examples reached here.  /* #neg=481 #pos=224 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then return 0.010655339178432572;  // std dev = 0.474, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   else if ( companyalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06018766663000068;  // std dev = 12.066, 640.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=224 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then return 0.06826966432296377;  // std dev = 4.518, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), companyalsoknownas(G, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02802836413508274;  // std dev = 12.247, 678.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=224 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '692', 'milliseconds']
Parameter learned model CLL:-0.376636 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, F), companyalsoknownas(A, F)'}, {'true,true': [4.827, 74, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.474, 434, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'false': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(F, E)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true': [4.584, 55, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.325, 472, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(D, A), companyalsoknownas(A, D)', 'true,true': 'companyalsoknownas(C, E)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(F, A)'}, {'true,true,true': [4.737, 66, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 454, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, A)'}, {'true,true': [0.492, 49, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.111, 425, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A)', 'false,false': 'companyalsoknownas(A, F)'}, {'true,true': [4.534, 52, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 445, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A), companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, C)', 'true,false': 'companyalsoknownas(C, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(A, E), companyalsoknownas(E, F)'}, {'true,true': [1.155, 4, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.467, 53, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.077, 418, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'companyalsoknownas(E, A), companyalsoknownas(E, E)', 'false,false': 'companyalsoknownas(A, F)', 'false,false,false': 'companyalsoknownas(A, G)'}, {'true,true': [4.498, 50, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.317, 470, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'false': 'companyalsoknownas(A, A)', 'false,false': 'companyalsoknownas(E, A), companyalsoknownas(A, E)'}, {'true,true': [4.698, 63, 34], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 481, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C)', 'false': 'companyalsoknownas(D, A)', 'false,false': 'companyalsoknownas(E, A)'}, {'true': [0.474, 66, 34], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.066, 416, 224]}]
['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, A)', 'true': 'companyalsoknownas(D, C)', 'true,true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'companyalsoknownas(G, A), companyalsoknownas(G, G)'}, {'true,true,true': [4.518, 51, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.247, 454, 224]}]
{'': [0.21570644718793006, 0.2245359891353578], 'false': [nan, 0.2245359891353578], 'true': [0.21570644718793006, nan]}
{'': [0.23608130286580092, 0.21825868674858118], 'false': [nan, 0.21825868674858118], 'false,false': [nan, 0.21825868674858118], 'false,false,false': [nan, 0.21825868674858118]}
{'': [0.2244000000000008, 0.22123023642327785], 'true': [0.2244000000000008, nan], 'true,true': [0.2244000000000008, nan], 'false': [nan, 0.22123023642327785], 'false,false': [nan, 0.22123023642327785]}
{'': [0.24183480911598168, 0.22602035607703547], 'true': [0.24183480911598168, nan], 'false': [nan, 0.22602035607703547], 'false,false': [nan, 0.22602035607703547]}
{'': [0.23904813412655398, 0.2227182439935503], 'true': [0.23904813412655398, nan], 'false': [nan, 0.2227182439935503], 'false,false': [nan, 0.2227182439935503]}
{'': [0.23402970655718, 0.22717170834909886], 'true': [0.22222222222222218, 0.23474048442906667], 'true,false': [nan, 0.23474048442906667], 'false': [nan, 0.22717170834909886], 'false,false': [nan, 0.22717170834909886]}
{'': [0.24084319232876955, 0.21858831150494815], 'true': [0.24084319232876955, nan], 'false': [nan, 0.21858831150494815], 'false,false': [nan, 0.21858831150494815], 'false,false,false': [nan, 0.21858831150494815]}
{'': [0.2275725990435243, 0.21677782807705714], 'true': [0.2275725990435243, nan], 'false': [nan, 0.21677782807705714], 'false,false': [nan, 0.21677782807705714]}
{'': [0.2244610386501215, 0.2274999999999952], 'false': [nan, 0.2274999999999952], 'false,false': [nan, 0.2274999999999952]}
{'': [0.24009345009382144, 0.2212302364232813], 'true': [0.24009345009382144, nan], 'true,true': [0.24009345009382144, nan], 'false': [nan, 0.2212302364232813], 'false,false': [nan, 0.2212302364232813]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
0;true;companyalsoknownas(D, C).;true;true
0;false;companyalsoknownas(E, F), companyalsoknownas(A, F).;true;true
1;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
1;false;companyalsoknownas(A, D), companyalsoknownas(D, A).;true;true
1;false,false;companyalsoknownas(E, A), companyalsoknownas(F, E).;true;true
1;false,false,false;companyalsoknownas(A, G).;true;true
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
2;true;companyalsoknownas(D, A), companyalsoknownas(A, D).;true;true
2;true,true;companyalsoknownas(C, E).;true;true
2;false;companyalsoknownas(A, A).;true;true
2;false,false;companyalsoknownas(F, A).;true;true
3;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
3;true;companyalsoknownas(D, C).;true;true
3;false;companyalsoknownas(E, A).;true;true
3;false,false;companyalsoknownas(A, A).;true;true
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
4;false;companyalsoknownas(E, A).;true;true
4;false,false;companyalsoknownas(A, F).;true;true
5;;companyeconomicsector(A, B) :- companyalsoknownas(C, A), companyalsoknownas(A, C).;true;true
5;true;companyalsoknownas(C, C).;true;true
5;true,false;companyalsoknownas(C, C).;true;true
5;false;companyalsoknownas(D, A).;true;true
5;false,false;companyalsoknownas(A, E), companyalsoknownas(E, F).;true;true
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
6;true;companyalsoknownas(C, D).;true;true
6;false;companyalsoknownas(E, A), companyalsoknownas(E, E).;true;true
6;false,false;companyalsoknownas(A, F).;true;true
6;false,false,false;companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
7;true;companyalsoknownas(D, C).;true;true
7;false;companyalsoknownas(A, A).;true;true
7;false,false;companyalsoknownas(E, A), companyalsoknownas(A, E).;true;true
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false;companyalsoknownas(D, A).;true;true
8;false,false;companyalsoknownas(E, A).;true;true
9;;companyeconomicsector(A, B) :- companyalsoknownas(C, A).;true;true
9;true;companyalsoknownas(D, C).;true;true
9;true,true;companyalsoknownas(A, E), companyalsoknownas(D, E).;true;true
9;false;companyalsoknownas(A, F).;true;true
9;false,false;companyalsoknownas(G, A), companyalsoknownas(G, G).;true;true


Refining candidate
***************************
Model training time 15.628
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1321215378392384;  // std dev = 3.811, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, H), companyalsoknownas(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return 0.2008280628253649;  // std dev = 0.475, 642.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=220 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then if ( companyceo(A, F) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, G), companyceo(G, H) )
%   | | | then return -0.04106018110571189;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.07813486533391643;  // std dev = 3.706, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   else if ( companyalsoknownas(A, I), companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14816898906173012;  // std dev = 12.351, 709.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=224 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(D, A), companyalsoknownas(A, D) )
%   | then if ( companyalsoknownas(C, E) )
%   | | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5753897189581848;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11359995377897569;  // std dev = 4.031, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), companyceo(H, I) )
%   | | | then return 0.07557005715576515;  // std dev = 3.356, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.15175555172860367;  // std dev = 11.696, 609.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=208 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.4985387795194306;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.19788614833053933;  // std dev = 2.898, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.01822094184826399;  // std dev = 2.552, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.7673391416293666;  // std dev = 0.198, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.1142816576897349;  // std dev = 11.869, 643.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=210 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.37760802111793046;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.4207695170804662;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06254131107496974;  // std dev = 3.814, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(I, A), acquired(A, J) )
%   | | | then return 0.20589967185024174;  // std dev = 2.291, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.09348952985025481;  // std dev = 11.871, 647.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=213 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, C) )
%   | then return 0.10033712151868354;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( companyalsoknownas(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(D, A) )
%   | | | then return 6.286228662213003E-4;  // std dev = 1.376, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.15249114020857316;  // std dev = 3.405, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   else if ( companyalsoknownas(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyceo(A, I) )
%   | | | then return -0.006742263984384849;  // std dev = 2.190, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.0692848099416401;  // std dev = 12.006, 673.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=217 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( companyceo(A, E) )
%   | | then if ( acquired(A, F), companyceo(F, G) )
%   | | | then return 0.0020701141364018183;  // std dev = 1.576, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.16132188621121676;  // std dev = 2.605, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.27999353744205246;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04210646282276231;  // std dev = 2.430, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), companyalsoknownas(I, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08096049264330198;  // std dev = 11.961, 643.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=224 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), countryhascompanyoffice(F, E) )
%   | | then if ( acquired(E, G), countryhascompanyoffice(F, G) )
%   | | | then return -0.20764345252332742;  // std dev = 1.068, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -1.6923252418569264E-4;  // std dev = 1.330, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.24916259637167082;  // std dev = 2.012, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.08601054562830403;  // std dev = 2.511, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, J) )
%   | | | then return 0.21418268648383068;  // std dev = 2.219, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.04815779507612843;  // std dev = 11.829, 648.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=214 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.22424563176608464;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | | then if ( companyalsoknownas(E, G), countryhascompanyoffice(F, G) )
%   | | | then return -0.24795542418067756;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07752240739682392;  // std dev = 1.323, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( companyceo(A, H), countryhascompanyoffice(I, A) )
%   | | | then return 0.25968719136856805;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.018591354441163974;  // std dev = 3.317, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   else if ( companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(K, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(L, A), cityhascompanyoffice(M, L) )
%   | | | then return -0.07988144991710981;  // std dev = 2.438, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.029360056525986212;  // std dev = 11.966, 665.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=215 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A) )
%   then if ( companyalsoknownas(D, C) )
%   | then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.21876227155494377;  // std dev = 0.176, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.004023823461409121;  // std dev = 3.831, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.028999017847724396;  // std dev = 4.057, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.049630739892740396;  // std dev = 11.242, 571.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=198 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '47.466', 'seconds']
Refined model CLL: -0.356322


******************************************
Best model found
******************************************
Results 

CLL : -0.356279 

AUC ROC : 0.56759 

AUC PR : 0.042981 

Precision : 0.333333 

Recall : 0.055769 

F1 : 0.095552 

Total Learning Time : 15.628 

Total Inference Time : 149.1547417640686 

Total revision time: 234.88961104393007
Best scored revision CLL: -0.356322


Results 

CLL : -0.356279 

AUC ROC : 0.56759 

AUC PR : 0.042981 

Precision : 0.333333 

Recall : 0.055769 

F1 : 0.095552 

Total Learning Time : 234.9913409137726 

Total Inference Time : 149.1547417640686 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.552
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13401100406502886;  // std dev = 0.447, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.178903652080643;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | else return 0.18862838715430233;  // std dev = 0.470, 584.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13925967496402736;  // std dev = 4.804, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.17494627409305238;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | | else return 0.16578761615463877;  // std dev = 11.353, 581.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.8129445880966473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.16636807678308613;  // std dev = 2.287, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.08809374394693238;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12002530128499207;  // std dev = 4.095, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | else return 0.1539607333843234;  // std dev = 0.475, 560.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1194706671280573;  // std dev = 0.466, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0.10922390876997291;  // std dev = 0.461, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13376978570412398;  // std dev = 12.168, 653.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.11756330348766618;  // std dev = 3.098, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else return 0.09540915019934407;  // std dev = 4.359, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04962125764364686;  // std dev = 4.193, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08973292173606669;  // std dev = 0.470, 587.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6033108271897979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.08043677140873774;  // std dev = 4.696, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.12651771764932568;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else return 0.08470372599554539;  // std dev = 11.917, 634.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1609872065775326;  // std dev = 2.852, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else return 0.08621462041139298;  // std dev = 4.283, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.055158747176907816;  // std dev = 12.104, 673.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.056701066217291346;  // std dev = 2.427, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.10390553319799842;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.0628956537410771;  // std dev = 0.463, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05990951675771071;  // std dev = 0.475, 661.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.03408866437379144;  // std dev = 0.470, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.09077309389764646;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.02002977874113766;  // std dev = 3.593, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03152059683808232;  // std dev = 11.396, 590.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.10725977256153518;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18157819475024684;  // std dev = 2.051, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.006069014216661553;  // std dev = 4.187, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return -0.01879335640002328;  // std dev = 4.913, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.036393220583161405;  // std dev = 11.298, 570.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.643', 'seconds']
Parameter learned model CLL:-0.36609 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.449, 18, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.447, 63, 24], 'false,true': [4.806, 72, 34], 'false,false': [0.47, 391, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.804, 77, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.737, 66, 34], 'false,false,false,false': [11.353, 388, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.287, 15, 8], 'true,false,false': [4.952, 88, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.095, 56, 24], 'false,false,false': [0.475, 367, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.466, 18, 9], 'true,false': [0.461, 54, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.168, 426, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.098, 28, 15], 'true,false': [4.359, 59, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.193, 66, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 394, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.696, 71, 32], 'false,false,true': [2.739, 20, 12], 'false,false,false': [11.917, 419, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.852, 19, 15], 'true,false': [4.283, 53, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.104, 456, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.427, 16, 9], 'true,false,true': [1.936, 10, 6], 'true,false,false': [0.463, 40, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 434, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.47, 85, 43], 'false,true,true,true': [1.967, 11, 6], 'false,true,true,false': [3.593, 46, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.396, 397, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [2.051, 9, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.187, 66, 24], 'false,true': [4.913, 85, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.298, 377, 193]}]
{'': [0.20567867036011217, 0.2207540432682233], 'false': [0.21787112851548734, 0.22126278382436004], 'true': [0.2222222222222223, 0.19976218787158245], 'true,false': [nan, 0.19976218787158245]}
{'': [0.2097971032625798, 0.22222508119356943], 'false': [nan, 0.22222508119357], 'false,false': [nan, 0.22222508119356943], 'false,false,false': [0.22439999999999977, 0.22183842327756897]}
{'': [0.20807158990111305, 0.2239601479120314], 'false': [nan, 0.2239601479120314], 'false,false': [0.20962441429563042, 0.22586415816326189], 'false,false,true': [nan, 0.20962441429563042], 'true': [0.0, 0.2060301039940565], 'true,false': [0.22744388670788873, 0.20102123085192183], 'true,true': [0.0, nan]}
{'': [0.21398498179003947, 0.22674906466451702], 'false': [nan, 0.22674906466451702], 'false,false': [nan, 0.22674906466451702], 'true': [0.21692683698048862, 0.21293964831499118]}
{'': [0.22010979368225783, 0.2175026713342349], 'true': [0.22319537442992912, 0.2184223928400272], 'false': [0.19533680524709907, 0.22068729340132298], 'false,false': [nan, 0.22068729340132298], 'false,true': [nan, 0.1953368052470997]}
{'': [0.0, 0.2231869333058587], 'false': [0.21411384835609118, 0.22458485240666168], 'false,false': [0.23437499999999997, 0.22400670478224727], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.23139801001711902, 0.21769429730367484], 'true': [0.23922069843066296, 0.22646143895206844], 'false': [nan, 0.21769429730367568], 'false,false': [nan, 0.21769429730367484], 'false,false,false': [nan, 0.21769429730367484]}
{'': [0.22301725957348653, 0.2252407457003487], 'false': [nan, 0.2252407457003487], 'false,false': [nan, 0.2252407457003487], 'true': [0.23558342567810386, 0.21871464746765937], 'true,false': [0.23437500000000006, 0.21403091557669465]}
{'': [0.22083753366947712, 0.2186483533034379], 'false': [0.20797704884233703, 0.220112036771044], 'false,false': [nan, 0.220112036771044], 'false,true': [0.20797704884233703, nan], 'false,true,true': [0.227569711071298, 0.20172239629741573]}
{'': [0.20894735898984604, 0.22073614117543103], 'false': [0.2028277136625535, 0.2239489073561098], 'false,false': [nan, 0.2239489073561098], 'true': [0.2555619359181834, 0.19479656689614563], 'true,true': [0.25, 0.24743445275602774], 'true,false': [nan, 0.19479656689614563], 'true,false,false': [nan, 0.19479656689614563]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 8.817
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(D, A), cityhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( companyceo(D, G), cityhascompanyoffice(E, D) )
%   | | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( acquired(A, H) )
%   | | then if ( countryhascompanyoffice(I, A), cityhascompanyoffice(J, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11856560176617874;  // std dev = 4.300, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | | else if ( acquired(K, A), cityhascompanyoffice(L, K) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.18933864571044048;  // std dev = 11.738, 622.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=206 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.472, 757.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=260 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.8430943756734239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, E), cityhascompanyoffice(F, A) )
%   | | then if ( economicsectorcompany(B, E) )
%   | | | then return 0.7606804000317776;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21359229122021636;  // std dev = 2.410, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else return 0.12133751629489764;  // std dev = 0.436, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.8315492801156781;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, H) )
%   | | | then return -0.1678924609106383;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1883418962009902;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( countryhascompanyoffice(J, A), bankbankincountry(K, J) )
%   | | | then return 0.23328608581158228;  // std dev = 3.285, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.1403668817704202;  // std dev = 11.267, 598.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=183 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7978743615391987;  // std dev = 0.163, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(A, E), countryhascompanyoffice(F, E) )
%   | | then return 0.5882538090387059;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.691855055705705;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyceo(A, G) )
%   | | then if ( acquired(H, A), bankchiefexecutiveceo(H, I) )
%   | | | then return -0.1927182092963862;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.08615316834197613;  // std dev = 4.542, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.04470530518209384;  // std dev = 3.452, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.15494854490135376;  // std dev = 11.199, 560.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=192 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.4875953977966425;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( cityhascompanyoffice(E, A), bankchiefexecutiveceo(A, F) )
%   | | then if ( cityhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.7898101626222038;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21182070005360018;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03111222160870915;  // std dev = 0.408, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   else if ( acquired(H, A) )
%   | then return 0.04966996035020129;  // std dev = 0.405, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.760131711628748;  // std dev = 0.242, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.21672409048002778;  // std dev = 0.065, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.12074581376833704;  // std dev = 4.217, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | | else return 0.11793066570060423;  // std dev = 10.032, 461.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=153 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.1778622303293408;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(E, D), economicsectorcompany(B, E) )
%   | | then return 0.7050068691344219;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankboughtbank(F, D) )
%   | | | then return -0.18294783453929844;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.053058647437407125;  // std dev = 4.199, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | else if ( companyceo(A, G), bankboughtbank(H, A) )
%   | | then return -0.19926059377702354;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.10195842813091167;  // std dev = 0.459, 668.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=227 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, C) )
%   | then return 0.6617727972180448;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5301349888343989;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(E, A) )
%   | then if ( countryhascompanyoffice(F, E), countryhascompanyoffice(F, A) )
%   | | then return 0.42059317556581804;  // std dev = 1.107, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return 0.2591601719403331;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.02991570939488449;  // std dev = 3.270, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6413944609462093;  // std dev = 1.798, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | | else return -0.24165916652292357;  // std dev = 0.187, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.43667469974374223;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07271477919861188;  // std dev = 10.543, 525.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=170 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.4526313772987014;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then if ( countryhascompanyoffice(E, C) )
%   | | | then return -0.02126166532287795;  // std dev = 0.626, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05583862995686575;  // std dev = 0.706, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.1420295751122047;  // std dev = 0.104, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.4421844564402091;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.3201994838194479;  // std dev = 0.319, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6303572386025817;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, I), countryhascompanyoffice(J, I) )
%   | | | then return -0.12222451450123889;  // std dev = 1.197, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.05308182357092861;  // std dev = 11.912, 731.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=233 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, C), cityhascompanyoffice(E, A) )
%   | then return 0.2615453995267586;  // std dev = 0.280, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.49720741761876047;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, A) )
%   | then if ( acquired(H, F), companyceo(F, I) )
%   | | then return 0.0841615822668639;  // std dev = 0.612, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( companyalsoknownas(A, J), cityhascompanyoffice(K, J) )
%   | | | then return -0.19791283517615016;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09684745683002466;  // std dev = 0.915, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( acquired(A, L), cityhascompanyoffice(M, L) )
%   | | then if ( countryhascompanyoffice(N, A) )
%   | | | then return 0.5435111651832664;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0580012598329048;  // std dev = 1.344, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( bankboughtbank(P, A) )
%   | | | then return -0.031860941939588744;  // std dev = 1.511, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.058438114660277554;  // std dev = 11.606, 695.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=233 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( countryhascompanyoffice(E, A), companyceo(D, F) )
%   | | then if ( bankchiefexecutiveceo(A, G) )
%   | | | then return 0.439221364881932;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23680694238363037;  // std dev = 0.733, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.5332799341535283;  // std dev = 0.140, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return -0.19871938672727002;  // std dev = 0.041, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( bankchiefexecutiveceo(A, H), companyceo(I, H) )
%   | then return 0.24062258779612797;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( companyceo(A, J) )
%   | | then if ( acquired(A, K), companyceo(K, L) )
%   | | | then return 0.42744102113233495;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.019529970496594093;  // std dev = 2.665, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.3372057870294134;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.045759351557321866;  // std dev = 10.590, 537.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=179 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '6.412', 'seconds']
Refined model CLL: -0.303226


******************************************
Best model found
******************************************
Results 

CLL : -0.303477 

AUC ROC : 0.722492 

AUC PR : 0.083568 

Precision : 0.095987 

Recall : 0.235521 

F1 : 0.136389 

Total Learning Time : 8.817 

Total Inference Time : 37.67062449455261 

Total revision time: 113.79500083351135
Best scored revision CLL: -0.303226


Results 

CLL : -0.303477 

AUC ROC : 0.722492 

AUC PR : 0.083568 

Precision : 0.095987 

Recall : 0.235521 

F1 : 0.136389 

Total Learning Time : 113.84548096084595 

Total Inference Time : 37.67062449455261 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.688
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28122585817643564;  // std dev = 0.494, 104.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.20979728674786263;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | else return 0.18439006985128087;  // std dev = 0.469, 564.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1964262718787792;  // std dev = 5.240, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.19428098512497652;  // std dev = 4.513, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
%   | | | else return 0.16512404712330575;  // std dev = 11.095, 556.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.039572065679034374;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.08472177147509062;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16457206567903512;  // std dev = 4.743, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   | | else return 0.1351615398136309;  // std dev = 0.468, 566.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.16299518228283028;  // std dev = 0.486, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.1367783709252939;  // std dev = 0.483, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08872418473934672;  // std dev = 12.293, 719.000 (wgt'ed) examples reached here.  /* #neg=503 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.12147039266480748;  // std dev = 2.781, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return 0.06096309642620868;  // std dev = 4.461, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12969895012349592;  // std dev = 4.666, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11021930558236338;  // std dev = 0.473, 546.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.05848150865228915;  // std dev = 5.359, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.11408479961908419;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return 0.07234839532746666;  // std dev = 11.910, 654.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return -9.765872352061737E-4;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.0668580274417333;  // std dev = 4.366, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07255040840486018;  // std dev = 12.051, 648.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07856378480985532;  // std dev = 2.329, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.06805665281812777;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else return 0.12258807597764927;  // std dev = 0.497, 68.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.053887765048914446;  // std dev = 0.469, 660.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.0687191694035436;  // std dev = 0.475, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.12143077906375851;  // std dev = 1.934, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.05214911993936117;  // std dev = 4.180, 73.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.022759376218589002;  // std dev = 11.282, 597.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.051026747158101855;  // std dev = 2.524, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03615943071599138;  // std dev = 4.637, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return -0.005369539148381758;  // std dev = 4.782, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04750159810754284;  // std dev = 11.040, 545.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '3.801', 'seconds']
Parameter learned model CLL:-0.365328 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.494, 60, 44], 'false,true': [4.555, 59, 32], 'false,false': [0.469, 380, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.24, 73, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.513, 56, 32], 'false,false,false,false': [11.095, 372, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.449, 24, 8], 'true,false,false': [4.789, 81, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.743, 60, 36], 'false,false,false': [0.468, 382, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.486, 14, 9], 'true,false': [0.483, 59, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.293, 503, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.781, 22, 12], 'true,false': [4.461, 68, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.666, 55, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 362, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.359, 85, 44], 'false,false,true': [2.256, 14, 8], 'false,false,false': [11.91, 446, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.954, 32, 12], 'true,false': [4.366, 59, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.051, 428, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.329, 15, 9], 'true,false,true': [1.99, 19, 5], 'true,false,false': [0.497, 38, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 444, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.475, 76, 40], 'false,true,true,true': [1.934, 8, 7], 'false,true,true,false': [4.18, 44, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.282, 413, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.524, 22, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.637, 57, 35], 'false,true': [4.782, 80, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.04, 361, 184]}]
{'': [0.24408284023668717, 0.22102208496008635], 'true': [nan, 0.24408284023668717], 'false': [0.2279917884313503, 0.2198078567476514]}
{'': [0.23464095258967047, 0.22288220274237183], 'false': [nan, 0.22288220274237042], 'false,false': [nan, 0.22288220274237183], 'false,false,false': [0.23140495867768618, 0.22141711091558014]}
{'': [0.19992337219550418, 0.22168390001148916], 'false': [nan, 0.22168390001148916], 'false,false': [0.2343749999999997, 0.21940591092409753], 'false,false,true': [nan, 0.2343749999999997], 'true': [nan, 0.19992337219550427], 'true,false': [0.18750000000000017, 0.2029916203304881]}
{'': [0.23405106415034596, 0.21016302879962007], 'true': [0.23577512525920225, 0.2334941049874544], 'false': [nan, 0.21016302879962007], 'false,false': [nan, 0.21016302879962007]}
{'': [0.21325693098796944, 0.2257401667908966], 'false': [0.23927708397923234, 0.22342980584738703], 'false,true': [nan, 0.2392770839792326], 'false,false': [nan, 0.22342980584738703], 'true': [0.22748921562144167, 0.2072588031146231]}
{'': [nan, 0.21827709170066142], 'false': [0.2226475465428474, 0.2174059382558961], 'false,false': [0.2314049586776859, 0.21687833324946615]}
{'': [0.2131688317803864, 0.22411058667633524], 'false': [nan, 0.22411058667633488], 'false,false': [nan, 0.22411058667633524], 'false,false,false': [nan, 0.22411058667633524], 'true': [0.1983182118966866, 0.21913393638925616]}
{'': [0.23097139710425604, 0.22019625556343367], 'true': [0.22599617252314966, 0.23226253818942966], 'true,false': [0.1649463173310318, 0.24653979238754295], 'false': [nan, 0.22019625556343367], 'false,false': [nan, 0.22019625556343367]}
{'': [0.22559036842020905, 0.21707309499681612], 'false': [0.24176259580409953, 0.21321571565252093], 'false,true': [0.24176259580409953, nan], 'false,true,true': [0.24946208233452313, 0.23936233652657282], 'false,false': [nan, 0.21321571565252093]}
{'': [0.22803832205402827, 0.2207140013688157], 'true': [0.20543996017949692, 0.23373718000501162], 'true,false': [nan, 0.23373718000501162], 'true,false,false': [nan, 0.23373718000501162], 'false': [0.20420081374858265, 0.22363100749095058], 'false,false': [nan, 0.22363100749095058], 'true,true': [nan, 0.20543996017949698]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
0;false;acquired(D, E), acquired(A, E).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,false;acquired(E, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(F, A).;true;true
2;false,false,true;acquired(A, G).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 20.299
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.14941107102184112;  // std dev = 0.454, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.020939632773930943;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | | else return 0.2748156017661787;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | else if ( bankchiefexecutiveceo(A, I) )
%   | | then return -0.06492798797741087;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.19598677293734573;  // std dev = 10.765, 518.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=175 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.32189959886306874;  // std dev = 0.484, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return -0.07473064240325764;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.8389706299717545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.08897062997175453;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.3690866566423392;  // std dev = 3.419, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   else if ( acquired(A, H), acquired(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, K) )
%   | | | then return 0.1390185988086458;  // std dev = 4.600, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | | | else return 0.18187231485442676;  // std dev = 10.947, 528.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.11747291249905571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(E, A) )
%   | | then return 0.03688104259612606;  // std dev = 0.413, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.6905800468322076;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09388695167305018;  // std dev = 4.374, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17108764598953613;  // std dev = 4.406, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.06251073392983537;  // std dev = 2.737, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.1410687633931637;  // std dev = 10.755, 520.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=174 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | | then return 0.40902611948225254;  // std dev = 0.460, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.03557808093534761;  // std dev = 0.403, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( bankboughtbank(G, A), countryhascompanyoffice(H, A) )
%   | | then return 0.4673436120363467;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( acquired(A, I) )
%   | | | then return 0.048167087504875236;  // std dev = 1.868, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.1881130046356796;  // std dev = 3.477, 55.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   else if ( acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K), cityhascompanyoffice(L, A) )
%   | | | then return 0.021472321810233157;  // std dev = 2.259, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.12617913324713656;  // std dev = 11.666, 610.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=209 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.08555017188150654;  // std dev = 0.443, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else if ( acquired(E, A), companyalsoknownas(E, F) )
%   | | then return -0.04687292535810725;  // std dev = 0.361, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return 0.12367111582013453;  // std dev = 0.456, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   else if ( acquired(G, A) )
%   | then if ( acquired(H, G), acquired(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.23187620032144923;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12255376781542816;  // std dev = 4.068, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.035715142496595936;  // std dev = 2.595, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.10072381531405185;  // std dev = 10.747, 516.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=175 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then if ( cityhascompanyoffice(E, A), acquired(A, F) )
%   | | then if ( cityhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.7200749665716065;  // std dev = 0.148, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.23840066532865656;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( companyceo(A, H) )
%   | | | then return -0.01979719292338259;  // std dev = 2.056, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.05381380048095832;  // std dev = 4.040, 78.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=31 */
%   | else if ( acquired(A, I), acquired(I, J) )
%   | | then if ( companyalsoknownas(A, K), acquired(K, L) )
%   | | | then return -0.19785197783339467;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.003975551765896797;  // std dev = 2.296, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( countryhascompanyoffice(M, A), companyceo(A, N) )
%   | | | then return 0.2458300667502263;  // std dev = 1.913, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.06623924091736151;  // std dev = 11.621, 623.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=201 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return -0.10163256440740383;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.1336550361506642;  // std dev = 0.423, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.4578902011236119;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, G), cityhascompanyoffice(H, G) )
%   | | | then return -0.12198329306672312;  // std dev = 1.318, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.02799225911371306;  // std dev = 3.934, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   else if ( acquired(I, A), acquired(I, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05227172075466817;  // std dev = 11.989, 662.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), companyalsoknownas(E, F) )
%   | | then return 0.16045304239292812;  // std dev = 0.408, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return -0.02760899902219947;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( acquired(A, G) )
%   | | then return 0.024467491465533397;  // std dev = 0.369, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.00509514457400897;  // std dev = 1.771, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.14592434197193752;  // std dev = 3.221, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, J) )
%   | | | then return -0.009649279648478509;  // std dev = 4.098, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | | else return 0.06365006978120583;  // std dev = 11.171, 553.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=190 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return -0.05941039921845043;  // std dev = 0.339, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | else if ( acquired(E, A) )
%   | | then return -0.06567952424682691;  // std dev = 0.295, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return 0.15610693836183862;  // std dev = 0.479, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   else if ( acquired(F, A) )
%   | then if ( acquired(F, G) )
%   | | then if ( acquired(G, H) )
%   | | | then return 0.013672460703057636;  // std dev = 2.022, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.04176863802789722;  // std dev = 3.756, 67.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.004992830819968316;  // std dev = 2.587, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.05492418403046584;  // std dev = 10.671, 502.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=175 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05847277037581574;  // std dev = 0.442, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04608020276538353;  // std dev = 4.124, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.032422005042483514;  // std dev = 0.438, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, I), companyceo(I, J) )
%   | | | then return 0.23789624078986382;  // std dev = 1.775, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.03808998984933437;  // std dev = 10.800, 520.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=177 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '6.432', 'seconds']
Refined model CLL: -0.372561


******************************************
Best model found
******************************************
Results 

CLL : -0.365344 

AUC ROC : 0.489163 

AUC PR : 0.001346 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.299 

Total Inference Time : 162.98089218139648 

Total revision time: 247.46002889823913
Best scored revision CLL: -0.365328


Results 

CLL : -0.365344 

AUC ROC : 0.489163 

AUC PR : 0.001346 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 247.51050902557373 

Total Inference Time : 162.98089218139648 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.555
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1658412427918188;  // std dev = 0.462, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.1979547603422294;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | else return 0.19265597735302895;  // std dev = 0.472, 568.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.19621587982149977;  // std dev = 4.601, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.14761935682263946;  // std dev = 4.895, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.17172323920789598;  // std dev = 11.209, 561.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.18505353078185038;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.1522126380858465;  // std dev = 2.925, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else return 0.12317864727583586;  // std dev = 4.905, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09878059666598725;  // std dev = 3.766, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else return 0.1325619132701928;  // std dev = 0.468, 585.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.017876433976248968;  // std dev = 0.387, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else return 0.0981802533520885;  // std dev = 0.461, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.126424378235717;  // std dev = 12.192, 663.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 9.497580278366557E-4;  // std dev = 2.646, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else return 0.18436750389434944;  // std dev = 4.776, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07377880076558262;  // std dev = 3.744, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10423480243915055;  // std dev = 0.474, 559.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1565061245883748;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.055885676539709786;  // std dev = 4.812, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.007308307733114147;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.09198435229670349;  // std dev = 11.972, 632.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.026981213877909027;  // std dev = 2.584, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else return 0.1328404595303036;  // std dev = 4.781, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06857461606181996;  // std dev = 11.780, 621.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.010300372704779272;  // std dev = 1.971, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.14884837637508622;  // std dev = 2.229, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.050854320043227146;  // std dev = 0.463, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03249997010259173;  // std dev = 0.466, 702.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.06646110847557726;  // std dev = 0.482, 130.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.04370802623268322;  // std dev = 1.240, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.023797628446328222;  // std dev = 3.567, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.042968775726942326;  // std dev = 11.230, 565.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0386073645694083;  // std dev = 1.896, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01667168656106869;  // std dev = 4.385, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.03290220483603809;  // std dev = 4.747, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03220760458267025;  // std dev = 11.245, 568.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '58.326', 'seconds']
Parameter learned model CLL:-0.368002 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.919, 14, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.462, 63, 28], 'false,true': [4.807, 68, 35], 'false,false': [0.472, 378, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.601, 59, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.895, 76, 35], 'false,false,false,false': [11.209, 371, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.925, 25, 13], 'true,false,false': [4.905, 77, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.766, 49, 20], 'false,false,false': [0.468, 395, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.387, 22, 5], 'true,false': [0.461, 63, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.192, 438, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.646, 31, 9], 'true,false': [4.776, 55, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.744, 48, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 369, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [4.812, 79, 33], 'false,false,true': [1.952, 16, 5], 'false,false,false': [11.972, 412, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.584, 27, 9], 'true,false': [4.781, 55, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.78, 411, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.971, 18, 5], 'true,false,true': [2.229, 11, 9], 'true,false,false': [0.463, 42, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 477, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.482, 82, 48], 'false,true,true,true': [1.24, 7, 2], 'false,true,true,false': [3.567, 44, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.23, 375, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.896, 13, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.385, 62, 28], 'false,true': [4.747, 65, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.245, 378, 190]}]
{'': [0.21000000000000138, 0.2228806350376822], 'false': [0.22433782637383498, 0.222612080936325], 'true': [0.19390581717451505, 0.21301775147929117], 'true,false': [nan, 0.21301775147929117]}
{'': [0.23012778396431213, 0.22272087210442493], 'false': [nan, 0.22272087210442398], 'false,false': [nan, 0.22272087210442493], 'false,false,false': [0.21589156724291791, 0.22397615665939669]}
{'': [0.21526513649349627, 0.21796069485429204], 'false': [nan, 0.21796069485429204], 'false,false': [0.20558351403735972, 0.21930016801812252], 'true': [-4.625929269271485e-18, 0.2176175874152494], 'true,false': [0.22516368866006425, 0.21484374999999994], 'false,false,true': [nan, 0.20558351403735972], 'true,true': [-4.625929269271485e-18, nan]}
{'': [0.20036792219531796, 0.22421477829535325], 'false': [nan, 0.22421477829535325], 'false,false': [nan, 0.22421477829535325], 'true': [0.14938756575127712, 0.21241203679744194]}
{'': [0.2295499895504116, 0.22248277747053774], 'true': [0.1750536270911856, 0.24269752221682458], 'false': [0.2061775576010905, 0.22436564143100382], 'false,false': [nan, 0.22436564143100382], 'false,true': [nan, 0.20617755760109063]}
{'': [0.0, 0.22294429461308493], 'false': [0.20670655663787915, 0.22556624292337102], 'false,false': [0.18140589569161, 0.2268030132578248], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.22946335579666757, 0.22344177556440514], 'true': [0.1855373747220226, 0.24318282213719644], 'false': [nan, 0.22344177556440542], 'false,false': [nan, 0.22344177556440514], 'false,false,false': [nan, 0.22344177556440514]}
{'': [0.21353919385633818, 0.21744999433514034], 'false': [nan, 0.21744999433514034], 'false,false': [nan, 0.21744999433514034], 'true': [0.16884191006141092, 0.22461996435581286], 'true,false': [0.24838073029815888, 0.21445847890352027]}
{'': [0.2320677089224172, 0.2208350930727555], 'false': [0.20135816810090532, 0.22319680476153464], 'false,false': [nan, 0.22319680476153464], 'false,true': [0.20135816810090532, nan], 'false,true,true': [0.17096102182290837, 0.20519300748909883]}
{'': [0.21138931528017496, 0.22302419016025318], 'false': [0.2253645603086623, 0.2226120809363187], 'false,false': [nan, 0.2226120809363187], 'true': [0.19964088359609983, 0.2136588059553755], 'true,false': [nan, 0.2136588059553755], 'true,false,false': [nan, 0.2136588059553755], 'true,true': [nan, 0.1996408835960998]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true


Refining candidate
***************************
Model training time 10.475
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( companyalsoknownas(A, D), acquired(A, E) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.009664086614663881;  // std dev = 0.359, 99.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=15 */
%   else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | then if ( companyceo(A, H) )
%   | | then if ( companyceo(F, I), countryhascompanyoffice(J, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( acquired(A, K), companyalsoknownas(A, L) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.20153251968912303;  // std dev = 0.475, 597.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=205 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), bankchiefexecutiveceo(D, C) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.8134325432760375;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankboughtbank(E, D), countryhascompanyoffice(F, A) )
%   | | then return 0.16933148040056864;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.16767055948165444;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then if ( companyceo(H, G) )
%   | | then return 0.35151148314121633;  // std dev = 1.218, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5702726105787616;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.7651999097299829;  // std dev = 0.946, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.16138580266792146;  // std dev = 0.110, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.7694185050026602;  // std dev = 0.182, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15268580467785936;  // std dev = 12.072, 678.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=218 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.6377861925264019;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.6143829555996555;  // std dev = 0.251, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.07161949309841263;  // std dev = 4.559, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   else if ( acquired(G, A), cityhascompanyoffice(H, G) )
%   | then return 0.01942476422090861;  // std dev = 0.360, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.769096534947956;  // std dev = 0.996, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.1852279062910543;  // std dev = 0.115, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.25407890551475737;  // std dev = 2.775, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.1464041642072723;  // std dev = 9.991, 456.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=154 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.419996659052617;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5481771225182496;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(E, A), companyceo(A, F) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.5660067732445364;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankchiefexecutiveceo(G, F), bankchiefexecutiveceo(E, H) )
%   | | | then return 0.12177422792834665;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10468783620752191;  // std dev = 1.317, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | then if ( acquired(I, K) )
%   | | | then return -0.17599756417356555;  // std dev = 0.127, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.10252508651368705;  // std dev = 1.384, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( bankboughtbank(L, A), cityhascompanyoffice(M, L) )
%   | | | then return 0.21567365328960603;  // std dev = 1.759, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.11029986905647718;  // std dev = 11.911, 699.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=229 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( countryhascompanyoffice(D, C), cityhascompanyoffice(E, C) )
%   | then return 0.006673151872937242;  // std dev = 0.387, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( countryhascompanyoffice(F, A), acquired(A, G) )
%   | | then return 0.503031052320791;  // std dev = 0.768, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( economicsectorcompany(B, C) )
%   | | | then return 0.6157949747501196;  // std dev = 0.553, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10286167763591278;  // std dev = 2.926, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   else if ( companyceo(A, H) )
%   | then return 0.05910452325681116;  // std dev = 0.401, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | else if ( cityhascompanyoffice(I, A), acquired(A, J) )
%   | | then if ( cityhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.6712785462531593;  // std dev = 0.428, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21030322103803953;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( bankboughtbank(A, L), bankchiefexecutiveceo(A, M) )
%   | | | then return -0.2917390110975216;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09456846315758488;  // std dev = 10.816, 576.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, D), acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | | then return 0.2401595379132865;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( acquired(E, H), economicsectorcompany(B, H) )
%   | | | then return 0.4688638628501593;  // std dev = 0.267, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.143789638565809;  // std dev = 0.847, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( acquired(I, A) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.5049662779321721;  // std dev = 0.493, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.025643725362706652;  // std dev = 3.361, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0.24435492119286015;  // std dev = 1.807, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.08467347494865997;  // std dev = 11.187, 613.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=212 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( companyalsoknownas(D, E), cityhascompanyoffice(F, A) )
%   | then return 0.15872320796901374;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.27297954090938364;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14306937874873885;  // std dev = 0.191, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   else if ( acquired(G, A), companyalsoknownas(A, H) )
%   | then if ( cityhascompanyoffice(I, A), acquired(A, J) )
%   | | then if ( cityhascompanyoffice(I, G) )
%   | | | then return 0.01827206372124766;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.03858950949348869;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.16996241026538286;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.39999252750899017;  // std dev = 0.125, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(L, A), companyceo(L, M) )
%   | | | then return -0.03914590607927505;  // std dev = 2.128, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.050321129160428996;  // std dev = 11.723, 703.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=228 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.33194196046232927;  // std dev = 0.327, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6195443232048904;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(F, A), acquired(G, F) )
%   | then if ( acquired(H, G), economicsectorcompany(B, H) )
%   | | then return 0.2895299879441764;  // std dev = 0.290, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(F, I), companyalsoknownas(G, J) )
%   | | | then return -0.09601559119565542;  // std dev = 0.522, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.17404485739984935;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | then if ( companyalsoknownas(A, M), countryhascompanyoffice(K, M) )
%   | | | then return -0.19170247933845147;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -9.184791807222646E-4;  // std dev = 2.969, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( acquired(A, N), economicsectorcompany(B, N) )
%   | | | then return 0.28806875776802715;  // std dev = 0.202, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.033386929860357774;  // std dev = 11.615, 695.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=215 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( acquired(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0.12673968006116804;  // std dev = 0.379, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.030440323965908917;  // std dev = 0.312, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   else if ( cityhascompanyoffice(G, A), acquired(A, H) )
%   | then if ( companyceo(H, I) )
%   | | then if ( cityhascompanyoffice(G, J), economicsectorcompany(B, J) )
%   | | | then return 0.3867708273091818;  // std dev = 0.680, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.22409790435900767;  // std dev = 0.267, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( companyalsoknownas(A, K), acquired(K, L) )
%   | | | then return 0.3045012218230775;  // std dev = 1.229, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07772863906964124;  // std dev = 1.886, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( acquired(A, M), cityhascompanyoffice(N, M) )
%   | | then return -0.13487189740010488;  // std dev = 0.168, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( acquired(P, A), cityhascompanyoffice(Q, P) )
%   | | | then return -0.017569297166727393;  // std dev = 1.826, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.0449291389234181;  // std dev = 11.062, 600.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=201 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, A) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0.053297593786892;  // std dev = 0.384, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return -0.13589100134651363;  // std dev = 0.210, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.3451059466003092;  // std dev = 0.416, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(F, G), acquired(A, H) )
%   | | | then return 0.11945227294235626;  // std dev = 1.870, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.09950058660095526;  // std dev = 2.530, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else if ( companyceo(A, I), cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.5206353758218355;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.20543425712802546;  // std dev = 0.298, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( bankboughtbank(L, A) )
%   | | | then return 0.06827534220305556;  // std dev = 2.007, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.04020858010611574;  // std dev = 10.956, 616.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=205 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '22.722', 'seconds']
Refined model CLL: -0.315561


******************************************
Best model found
******************************************
Results 

CLL : -0.315888 

AUC ROC : 0.715268 

AUC PR : 0.077876 

Precision : 0.053702 

Recall : 0.126923 

F1 : 0.075472 

Total Learning Time : 10.475 

Total Inference Time : 42.969656229019165 

Total revision time: 121.36353447914124
Best scored revision CLL: -0.315561


Results 

CLL : -0.315888 

AUC ROC : 0.715268 

AUC PR : 0.077876 

Precision : 0.053702 

Recall : 0.126923 

F1 : 0.075472 

Total Learning Time : 121.41401460647583 

Total Inference Time : 42.969656229019165 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.753
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15083186192877987;  // std dev = 0.455, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.21985106275908542;  // std dev = 4.659, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
%   | else return 0.20402707130022468;  // std dev = 0.476, 558.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.22418645643610025;  // std dev = 4.491, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.19481700793808562;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return 0.16364067998635068;  // std dev = 11.353, 581.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7929277938189125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.05117179717256495;  // std dev = 2.455, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.14678474195732674;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284590569798325;  // std dev = 3.974, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | else return 0.14175318188153485;  // std dev = 0.472, 577.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.26721100666693587;  // std dev = 0.491, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.04365281318268769;  // std dev = 0.438, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13688800248631777;  // std dev = 12.111, 641.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.19483510875215543;  // std dev = 2.852, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else return 0.03782409406730477;  // std dev = 4.501, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05018626609199281;  // std dev = 4.114, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08619797250817492;  // std dev = 0.469, 592.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.22809136255656043;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06623496423667963;  // std dev = 4.709, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.045683164438948785;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else return 0.08369523635506745;  // std dev = 11.915, 633.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.08270684486743161;  // std dev = 3.011, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else return 0.025754292864908747;  // std dev = 4.466, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07020232101061682;  // std dev = 11.956, 637.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.05611840922597519;  // std dev = 2.334, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.07802588456769008;  // std dev = 2.046, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.04621654308757677;  // std dev = 0.460, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05890279226051673;  // std dev = 0.475, 657.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return -0.012401802535236978;  // std dev = 0.448, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.023555707548220107;  // std dev = 2.038, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.0461934079571815;  // std dev = 3.478, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.030902160615591135;  // std dev = 11.377, 586.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.1194679623158258;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.03889404441678039;  // std dev = 2.221, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02240869933882193;  // std dev = 4.136, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return -0.005273291053061389;  // std dev = 4.890, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.014576806257222545;  // std dev = 11.460, 604.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.664', 'seconds']
Parameter learned model CLL:-0.363796 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.372, 15, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.455, 58, 24], 'false,true': [4.659, 60, 34], 'false,false': [0.476, 365, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.491, 52, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.644, 59, 34], 'false,false,false,false': [11.353, 388, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.455, 24, 8], 'true,false,false': [4.712, 64, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.974, 47, 24], 'false,false,false': [0.472, 384, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.491, 9, 9], 'true,false': [0.438, 69, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.111, 414, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.852, 18, 15], 'true,false': [4.501, 72, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.114, 61, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 399, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.866, 3, 1], 'false,true': [4.709, 70, 32], 'false,false,true': [2.828, 24, 12], 'false,false,false': [11.915, 418, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.011, 24, 15], 'true,false': [4.466, 69, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.956, 420, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.334, 14, 9], 'true,false,true': [2.046, 13, 6], 'true,false,false': [0.46, 41, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 430, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.448, 109, 43], 'false,true,true,true': [2.038, 13, 6], 'false,true,true,false': [3.478, 37, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.377, 393, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.816, 2, 1], 'true,true,false': [2.221, 13, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.136, 58, 24], 'false,true': [4.89, 82, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.46, 411, 193]}]
{'': [0.21440014239943178, 0.2269444653543628], 'false': [0.23087369850611283, 0.2262464510990381], 'true': [0.23437500000000003, 0.2070196311719225], 'true,false': [nan, 0.2070196311719225]}
{'': [0.23730491922450672, 0.22334708668641504], 'false': [nan, 0.22334708668641326], 'false,false': [nan, 0.22334708668641504], 'false,false,false': [0.23193432766793773, 0.22183842327756928]}
{'': [0.2205904004814408, 0.2225868962601923], 'false': [nan, 0.2225868962601923], 'false,false': [0.22243041002079103, 0.222606021103592], 'false,false,true': [nan, 0.22243041002079103], 'true': [0.0, 0.21886381952566636], 'true,false': [0.18836517849014234, 0.22657226155768534], 'true,true': [0.0, nan]}
{'': [0.20675697325232525, 0.22884276018020186], 'false': [nan, 0.22884276018020186], 'false,false': [nan, 0.22884276018020186], 'true': [0.24098167985921626, 0.19202825283446753]}
{'': [0.2181136736327627, 0.21727804170344034], 'true': [0.24654868698234705, 0.2026133437524516], 'false': [0.1990758906138345, 0.2197287025200883], 'false,false': [nan, 0.2197287025200883], 'false,true': [nan, 0.19907589061383407]}
{'': [0.18750000000000006, 0.22337740573692028], 'false': [0.21741668660602867, 0.22425477942796554], 'false,false': [0.2222222222222222, 0.22429262168436456], 'true': [nan, 0.18750000000000006], 'true,false': [nan, 0.18750000000000006]}
{'': [0.2139734156212717, 0.22439548248651414], 'false': [nan, 0.2243954824865097], 'false,false': [nan, 0.22439548248651414], 'false,false,false': [nan, 0.22439548248651414], 'true': [0.23239771156261513, 0.20563556096152968]}
{'': [0.21939125209693355, 0.22592692113835697], 'false': [nan, 0.22592692113835697], 'false,false': [nan, 0.22592692113835697], 'true': [0.23695108451358837, 0.21421229677803685], 'true,false': [0.22029172098797045, 0.21200804366561335]}
{'': [0.20084775355987952, 0.2207508219721634], 'false': [0.21965521046562106, 0.220879101678532], 'false,false': [nan, 0.220879101678532], 'false,true': [0.21965521046562106, nan], 'false,true,true': [0.218554818991068, 0.2199037667277399]}
{'': [0.21481914657008372, 0.2156720510052875], 'false': [0.20617296018894563, 0.21743289767992682], 'false,false': [nan, 0.21743289767992682], 'true': [0.2359711198345378, 0.20862584464166026], 'true,true': [0.2222222222222222, 0.2348004324178215], 'true,false': [nan, 0.20862584464166026], 'true,false,false': [nan, 0.20862584464166026]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 33.137
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.11621345122854462;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( acquired(E, A), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1568502338008104;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19038577720477148;  // std dev = 11.614, 608.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=202 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.7984665181383471;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.737177965009168;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyalsoknownas(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.7460914429196658;  // std dev = 1.349, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return -0.16094489012801844;  // std dev = 0.051, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( acquired(A, G) )
%   | | then if ( cityhascompanyoffice(H, G), cityhascompanyoffice(H, A) )
%   | | | then return -0.14445888869480694;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10944534811362111;  // std dev = 3.460, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | | then return 0.7691576952393929;  // std dev = 0.144, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1714261724761124;  // std dev = 11.281, 572.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.7103446122291877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.5475338016129662;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5436356851133199;  // std dev = 0.917, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.05073546852510778;  // std dev = 4.175, 114.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=26 */
%   else if ( acquired(G, A), cityhascompanyoffice(H, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.5430663648940439;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03996427814361584;  // std dev = 0.407, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else if ( bankboughtbank(I, A), cityhascompanyoffice(J, I) )
%   | | then return -0.06682609618265394;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.3886997700796178;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.147244688660312;  // std dev = 11.391, 594.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=202 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), cityhascompanyoffice(E, C) )
%   | then return 0.4510314728837148;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(C, F) )
%   | | then return 0.5939660713911239;  // std dev = 0.237, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5101953615257827;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(G, A), cityhascompanyoffice(H, A) )
%   | then if ( companyalsoknownas(G, I), cityhascompanyoffice(J, I) )
%   | | then return 0.06446717066235186;  // std dev = 0.618, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.2052018800389428;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.16984648025417506;  // std dev = 0.116, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | then return 0.43255010515059517;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(M, A), companyalsoknownas(M, N) )
%   | | | then return 0.061388259634575844;  // std dev = 2.218, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.1178972503751427;  // std dev = 12.063, 689.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=229 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.33323647172755105;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.34014189926814575;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.47377108128262063;  // std dev = 0.224, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( bankboughtbank(F, A), cityhascompanyoffice(G, F) )
%   | then if ( bankboughtbank(A, H), companyceo(H, I) )
%   | | then return 0.15798818854405652;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.20137458582107345;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( countryhascompanyoffice(J, A), bankbankincountry(K, J) )
%   | | then if ( companyalsoknownas(A, L), bankchiefexecutiveceo(A, M) )
%   | | | then return -0.16308350374721967;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.19707500821210616;  // std dev = 3.498, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | else if ( acquired(N, A), companyceo(N, P) )
%   | | | then return -0.022333096863962697;  // std dev = 2.426, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return 0.09616324359132823;  // std dev = 11.475, 626.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=209 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.31483492137931374;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( cityhascompanyoffice(D, A) )
%   | | then return -0.10557933411077329;  // std dev = 0.182, 40.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else if ( countryhascompanyoffice(E, C), companyalsoknownas(C, F) )
%   | | | then return -0.1923566003372823;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.016923364289683114;  // std dev = 3.516, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   else if ( companyalsoknownas(A, G), countryhascompanyoffice(H, G) )
%   | then return -0.028570761842891573;  // std dev = 0.301, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( cityhascompanyoffice(I, A), companyceo(A, J) )
%   | | then if ( cityhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.6994971235099255;  // std dev = 0.287, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.2234469675210309;  // std dev = 0.198, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( acquired(A, L) )
%   | | | then return 0.01916426388709024;  // std dev = 2.868, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.07174025047459284;  // std dev = 11.064, 575.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=188 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( cityhascompanyoffice(E, A), acquired(C, F) )
%   | then return -0.03682717803079117;  // std dev = 0.215, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then return 0.33767690329413697;  // std dev = 0.556, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.16377323647358472;  // std dev = 0.470, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( acquired(H, A) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.252965772318647;  // std dev = 0.073, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( companyalsoknownas(H, I), companyceo(A, J) )
%   | | | then return 0.43011013082318056;  // std dev = 0.977, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.015493014087877113;  // std dev = 3.372, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.42056148727414255;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( countryhascompanyoffice(L, A), companyalsoknownas(A, M) )
%   | | | then return -0.06879574534773676;  // std dev = 1.017, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06035717972204833;  // std dev = 11.384, 621.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=204 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(A, D) )
%   then if ( companyceo(A, E) )
%   | then return 0.027674406772453832;  // std dev = 0.317, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | else return -0.16428949986574287;  // std dev = 0.110, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( acquired(F, A), acquired(A, G) )
%   | then if ( acquired(G, H), companyceo(F, I) )
%   | | then return -0.01841855717337751;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( companyalsoknownas(F, J) )
%   | | | then return 0.07914754003504637;  // std dev = 0.669, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4223337184439587;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(A, K), cityhascompanyoffice(L, K) )
%   | | then if ( cityhascompanyoffice(L, M), bankboughtbank(N, M) )
%   | | | then return -0.08238198139504431;  // std dev = 0.432, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3013446917860632;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( acquired(A, P), economicsectorcompany(B, P) )
%   | | | then return 0.3377188462562426;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.02899418310225135;  // std dev = 11.917, 722.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=224 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(C, D) )
%   then if ( companyceo(A, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.3781725863927427;  // std dev = 0.254, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(D, F), companyalsoknownas(A, F) )
%   | | | then return -0.15375952800109835;  // std dev = 0.494, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.03033522137204655;  // std dev = 1.417, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else return -0.10595083391297516;  // std dev = 0.269, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   else if ( acquired(G, A), cityhascompanyoffice(H, A) )
%   | then return -0.049249883633324255;  // std dev = 0.215, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( acquired(I, A), companyalsoknownas(I, J) )
%   | | then if ( cityhascompanyoffice(K, I), countryhascompanyoffice(L, J) )
%   | | | then return -0.04208219335670176;  // std dev = 0.952, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.32924819393183863;  // std dev = 1.336, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( companyceo(A, M) )
%   | | | then return -0.012294653331055514;  // std dev = 3.084, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.054594710112276686;  // std dev = 11.309, 600.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=207 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( acquired(A, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.254063935818174;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06257747887051177;  // std dev = 0.367, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( acquired(E, A), countryhascompanyoffice(C, E) )
%   | | then return 0.394321239543002;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | | then return 0.6019324389926193;  // std dev = 0.608, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.29800094501335495;  // std dev = 0.240, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.07875273591004546;  // std dev = 0.343, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( acquired(A, H) )
%   | | then return -0.012994227350149642;  // std dev = 0.332, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.06756607310038149;  // std dev = 2.232, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.03335124515856488;  // std dev = 10.786, 542.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=180 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '50.168', 'seconds']
Refined model CLL: -0.322422


******************************************
Best model found
******************************************
Results 

CLL : -0.322695 

AUC ROC : 0.680181 

AUC PR : 0.083447 

Precision : 0.350254 

Recall : 0.133205 

F1 : 0.193007 

Total Learning Time : 33.137 

Total Inference Time : 26.3233802318573 

Total revision time: 128.15801466941832
Best scored revision CLL: -0.322422


Results 

CLL : -0.322695 

AUC ROC : 0.680181 

AUC PR : 0.083447 

Precision : 0.350254 

Recall : 0.133205 

F1 : 0.193007 

Total Learning Time : 128.3020078086853 

Total Inference Time : 26.3233802318573 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.748
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28122585817643564;  // std dev = 0.494, 104.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.19499104036266884;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | else return 0.161279083369689;  // std dev = 0.460, 607.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.21355245866119874;  // std dev = 5.166, 112.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.1404096002278876;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return 0.1546021964930585;  // std dev = 11.208, 580.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.07242675780135278;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.10581310871900593;  // std dev = 4.755, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16969119549132297;  // std dev = 4.713, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | | else return 0.12811905325575812;  // std dev = 0.464, 588.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08576492527203752;  // std dev = 0.466, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0.11338978274948182;  // std dev = 0.478, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11005229110590069;  // std dev = 12.165, 686.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09609697597999553;  // std dev = 2.841, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else return 0.05816362635705055;  // std dev = 4.482, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14539059550436575;  // std dev = 4.612, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11545573943631444;  // std dev = 0.473, 543.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.09733290492300567;  // std dev = 5.202, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.09332557644427475;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.08740488894234148;  // std dev = 11.803, 630.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07019687907491506;  // std dev = 2.821, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.045901743423359315;  // std dev = 4.440, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06433346608743391;  // std dev = 12.102, 663.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.25664602279828536;  // std dev = 1.962, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.06902340291927116;  // std dev = 1.786, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.11269997607049224;  // std dev = 0.497, 68.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04627753295258392;  // std dev = 0.466, 680.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return -0.002235903774365897;  // std dev = 0.448, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.05001823498848954;  // std dev = 2.031, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.05084612528300049;  // std dev = 4.143, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.074166438402072;  // std dev = 10.881, 516.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08028748125273574;  // std dev = 2.201, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06313783737172717;  // std dev = 4.482, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.03506259700432987;  // std dev = 4.717, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02912790366018581;  // std dev = 11.129, 563.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '2.887', 'seconds']
Parameter learned model CLL:-0.372487 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.494, 60, 44], 'false,true': [4.607, 63, 32], 'false,false': [0.46, 423, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.166, 68, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.707, 72, 32], 'false,false,false,false': [11.208, 396, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.39, 20, 8], 'true,false,false': [4.755, 77, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.713, 58, 36], 'false,false,false': [0.464, 404, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.466, 19, 9], 'true,false': [0.478, 64, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.165, 470, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.841, 25, 12], 'true,false': [4.482, 70, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.612, 52, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 359, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.202, 71, 44], 'false,false,true': [2.309, 16, 8], 'false,false,false': [11.803, 422, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.821, 24, 12], 'true,false': [4.44, 65, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.102, 443, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.962, 7, 9], 'true,false,true': [1.786, 9, 5], 'true,false,false': [0.497, 38, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.466, 464, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.448, 104, 40], 'false,true,true,true': [2.031, 10, 7], 'false,true,true,false': [4.143, 42, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.881, 332, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.201, 11, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.482, 50, 35], 'false,true': [4.717, 73, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.129, 379, 184]}]
{'': [0.24408284023668717, 0.21301775147929222], 'true': [nan, 0.24408284023668717], 'false': [0.22337950138504295, 0.2112422614798819]}
{'': [0.23826793005395158, 0.21608069572605315], 'false': [nan, 0.2160806957260542], 'false,false': [nan, 0.21608069572605315], 'false,false,false': [0.21301775147929064, 0.21659928656362373]}
{'': [0.20689504919273966, 0.21814457239173293], 'false': [nan, 0.21814457239173293], 'false,false': [0.23630602082390245, 0.21500300800591945], 'false,false,true': [nan, 0.23630602082390245], 'true': [nan, 0.20689504919273963], 'true,false': [0.20408163265306126, 0.20738995034088006]}
{'': [0.22591553689220115, 0.2157217343138354], 'true': [0.21711848694918284, 0.22823534168123896], 'false': [nan, 0.2157217343138354], 'false,false': [nan, 0.2157217343138354]}
{'': [0.20891789208118713, 0.22660788708377821], 'false': [0.24172301890059214, 0.2240333187495996], 'false,true': [nan, 0.2417230189005923], 'false,false': [nan, 0.2240333187495996], 'true': [0.21819213622133884, 0.2050220158647521]}
{'': [nan, 0.22330141761106723], 'false': [0.23534187906491594, 0.2211701092254425], 'false,false': [0.2222222222222224, 0.22112874232517063]}
{'': [0.21462551009504632, 0.22089872557474668], 'false': [nan, 0.22089872557474727], 'false,false': [nan, 0.22089872557474668], 'false,false,false': [nan, 0.22089872557474668], 'true': [0.22102828345455877, 0.2119822952422461]}
{'': [0.24626193800362634, 0.21677474598708277], 'true': [0.24057090867365294, 0.2436298725040806], 'true,false': [0.22791402803857855, 0.24653979238754337], 'false': [nan, 0.21677474598708277], 'false,false': [nan, 0.21677474598708277]}
{'': [0.20105426854987268, 0.23132157018923066], 'false': [0.24192254279823008, 0.22943332732408173], 'false,true': [0.24192254279823008, nan], 'false,true,true': [0.24255315153995144, 0.24177141956547712], 'false,false': [nan, 0.22943332732408173]}
{'': [0.23748239807990654, 0.21873841762712454], 'true': [0.24229972690544055, 0.2362928879377735], 'true,true': [nan, 0.24229972690544055], 'true,false': [nan, 0.2362928879377735], 'true,false,false': [nan, 0.2362928879377735], 'false': [0.21189654505067007, 0.22000889676908086], 'false,false': [nan, 0.22000889676908086]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
0;false;acquired(D, E), acquired(A, E).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,false;acquired(E, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(F, A).;true;true
2;false,false,true;acquired(A, G).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 16.344
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( companyalsoknownas(A, E) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13287420982478626;  // std dev = 4.258, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   else if ( acquired(F, G), acquired(A, G) )
%   | then if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.14538297765270278;  // std dev = 0.452, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyceo(A, J), bankchiefexecutiveceo(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16730264839829911;  // std dev = 11.120, 579.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=179 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, D) )
%   | then if ( companyceo(D, E) )
%   | | then return 0.2523752629325395;  // std dev = 0.476, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.04043824385961607;  // std dev = 0.402, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( bankboughtbank(F, A), countryhascompanyoffice(G, A) )
%   | | then return 0.6411922380528037;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.24724900261486107;  // std dev = 1.952, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.16952366664936908;  // std dev = 3.833, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   else if ( acquired(A, I), acquired(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A), acquired(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0.1535120449399182;  // std dev = 4.584, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | | | else return 0.15386523778302136;  // std dev = 11.167, 578.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | | then return 0.04345151649551427;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2946644785313715;  // std dev = 1.676, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.11629804815473875;  // std dev = 0.452, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A) )
%   | | then if ( acquired(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24880781076801475;  // std dev = 4.195, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.07479709783130796;  // std dev = 4.098, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | | else return 0.14676525298358833;  // std dev = 10.329, 483.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=161 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.045438394475304546;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3357764135769312;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.01951141781225786;  // std dev = 0.414, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( cityhascompanyoffice(G, A), acquired(A, H) )
%   | | then return 0.32744301413216165;  // std dev = 0.484, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.09217522039929828;  // std dev = 0.455, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   else if ( acquired(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, J) )
%   | | | then return -0.031733391240559655;  // std dev = 1.760, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.124869676926331;  // std dev = 11.829, 636.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=212 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.015431519067610788;  // std dev = 0.427, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( countryhascompanyoffice(E, A), companyceo(A, F) )
%   | | then return 0.2824362256938882;  // std dev = 0.500, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.035044541413779814;  // std dev = 0.431, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   else if ( acquired(G, A) )
%   | then if ( acquired(H, G), acquired(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return -0.03058117907523883;  // std dev = 1.849, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.09948541850992014;  // std dev = 4.148, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.6296311441915766;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08608581061858524;  // std dev = 11.073, 570.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=179 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return -0.15127718671361626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.595869117642823;  // std dev = 0.944, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.27463021313048996;  // std dev = 0.095, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( acquired(A, G) )
%   | | | then return -0.15819491439215919;  // std dev = 0.920, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.049166752379589;  // std dev = 4.060, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | else if ( acquired(A, H), acquired(H, I) )
%   | | then if ( companyalsoknownas(A, J), companyalsoknownas(J, J) )
%   | | | then return -0.2236526715432508;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1879699429320429;  // std dev = 2.087, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( companyceo(A, K), cityhascompanyoffice(L, A) )
%   | | | then return -0.015877937445012136;  // std dev = 2.572, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.08777255109286113;  // std dev = 11.449, 596.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=199 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | then return -0.18886145144319894;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.15997735309386077;  // std dev = 0.450, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.5652464850062808;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.1129025842296984;  // std dev = 0.953, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.014803388263758512;  // std dev = 0.408, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   else if ( acquired(J, A), acquired(J, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.060703438235506;  // std dev = 11.893, 668.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), countryhascompanyoffice(F, E) )
%   | | then return 0.33566591494830683;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.054109214824654285;  // std dev = 0.420, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( acquired(A, G) )
%   | | then return 0.021642805922508536;  // std dev = 0.372, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( bankchiefexecutiveceo(A, H) )
%   | | | then return -0.04581335874728765;  // std dev = 0.647, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11351566932388854;  // std dev = 3.630, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(J, A), companyceo(A, K) )
%   | | | then return -0.02936839584071487;  // std dev = 2.778, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.06065866039448076;  // std dev = 11.569, 612.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=205 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyalsoknownas(A, D), countryhascompanyoffice(E, D) )
%   | then return 0.3310945851450908;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then return -0.11370750517303768;  // std dev = 0.275, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else return 0.06823263008865096;  // std dev = 0.449, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   else if ( acquired(H, A) )
%   | then if ( acquired(H, I) )
%   | | then if ( acquired(I, J) )
%   | | | then return 0.007559565703083283;  // std dev = 1.934, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.10388530600139644;  // std dev = 3.559, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, L) )
%   | | | then return -0.12813927448785165;  // std dev = 0.965, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.06141351236065502;  // std dev = 10.853, 525.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=183 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.009256258461120378;  // std dev = 0.406, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.006273045668874633;  // std dev = 0.420, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   else if ( acquired(A, E) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.5824520659091487;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | | | then return -0.12919270242809053;  // std dev = 1.764, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.07206967963522118;  // std dev = 3.762, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | else if ( acquired(I, A), acquired(I, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, J), acquired(K, J) )
%   | | | then return -0.2112499008859157;  // std dev = 0.659, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.03535043274140575;  // std dev = 10.985, 549.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=183 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '58.008', 'seconds']
Refined model CLL: -0.354223


******************************************
Best model found
******************************************
Results 

CLL : -0.354019 

AUC ROC : 0.572628 

AUC PR : 0.061383 

Precision : 0.391304 

Recall : 0.086873 

F1 : 0.14218 

Total Learning Time : 16.344 

Total Inference Time : 120.44379544258118 

Total revision time: 203.3946933670044
Best scored revision CLL: -0.354223


Results 

CLL : -0.354019 

AUC ROC : 0.572628 

AUC PR : 0.061383 

Precision : 0.391304 

Recall : 0.086873 

F1 : 0.14218 

Total Learning Time : 203.53868650627138 

Total Inference Time : 120.44379544258118 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.693
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1692600462106222;  // std dev = 0.463, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.15729423424481004;  // std dev = 4.953, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | else return 0.18801004621061893;  // std dev = 0.470, 576.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.11346555136083097;  // std dev = 4.887, 120.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.16500557898594262;  // std dev = 4.853, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.16878448382562333;  // std dev = 11.240, 567.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.16934306113241296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.2293455687803933;  // std dev = 2.780, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.1353258735996303;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08137991254113114;  // std dev = 3.843, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else return 0.1512928884291762;  // std dev = 0.474, 555.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.026787182723735987;  // std dev = 0.408, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else return 0.10589938845635903;  // std dev = 0.459, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12773238938789336;  // std dev = 12.168, 658.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1233292255491698;  // std dev = 2.427, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.12168743427703396;  // std dev = 5.031, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12738025595254915;  // std dev = 3.641, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0977804935197686;  // std dev = 0.472, 566.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.06649471475869438;  // std dev = 4.793, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.03397986501408471;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else return 0.09824773850240755;  // std dev = 11.925, 622.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return -0.02373692688915806;  // std dev = 2.640, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | else return 0.12883020248662774;  // std dev = 4.845, 98.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.049600340231267505;  // std dev = 11.930, 655.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10341693278751088;  // std dev = 1.801, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.08505648523901611;  // std dev = 2.361, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return 0.023088127982269308;  // std dev = 0.447, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04065490487268007;  // std dev = 0.468, 691.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.050002400654318116;  // std dev = 0.473, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.08662324837227925;  // std dev = 1.286, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.06645651096454026;  // std dev = 3.490, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04446447106535384;  // std dev = 11.215, 562.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.03019633831895898;  // std dev = 1.935, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06132948965148097;  // std dev = 4.274, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.08068344362286535;  // std dev = 4.622, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0406606404434912;  // std dev = 11.168, 553.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '53.622', 'seconds']
Parameter learned model CLL:-0.369969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.952, 16, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.463, 62, 28], 'false,true': [4.953, 82, 35], 'false,false': [0.47, 386, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.887, 87, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.853, 72, 35], 'false,false,false,false': [11.24, 377, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.78, 19, 13], 'true,false,false': [4.875, 74, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.843, 57, 20], 'false,false,false': [0.474, 365, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.408, 18, 5], 'true,false': [0.459, 64, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.168, 433, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.427, 17, 9], 'true,false': [5.031, 72, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.641, 40, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 376, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.793, 76, 33], 'false,false,true': [1.978, 18, 5], 'false,false,false': [11.925, 402, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.64, 32, 9], 'true,false': [4.845, 59, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.93, 445, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.801, 10, 5], 'true,false,true': [2.361, 15, 9], 'true,false,false': [0.447, 50, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 466, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.473, 92, 48], 'false,true,true,true': [1.286, 10, 2], 'false,true,true,false': [3.49, 38, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.215, 372, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.935, 17, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.274, 54, 28], 'false,true': [4.622, 56, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.168, 363, 190]}]
{'': [0.20891161431702107, 0.2192612582222995], 'false': [0.20965738914457002, 0.22105275848765715], 'true': [0.1814058956916098, 0.21432098765432223], 'true,false': [nan, 0.21432098765432223]}
{'': [0.1989973788671989, 0.22238020316869866], 'false': [nan, 0.22238020316869697], 'false,false': [nan, 0.22238020316869866], 'false,false,false': [0.220106559524851, 0.22280700117265914]}
{'': [0.2240307838379781, 0.221602257162248], 'true': [0.0, 0.22487120117243822], 'true,false': [0.24145932927362207, 0.21799511825603826], 'false': [nan, 0.221602257162248], 'false,false': [0.19178134280288084, 0.2251440629819034], 'false,false,true': [nan, 0.19178134280288084], 'true,true': [0.0, nan]}
{'': [0.20305470848791787, 0.22502241262713482], 'false': [nan, 0.22502241262713482], 'false,false': [nan, 0.22502241262713482], 'true': [0.166482537398258, 0.2109460030411567]}
{'': [0.22771321086970522, 0.22288143563313442], 'true': [0.22649435540961427, 0.22799819699436233], 'false': [0.2209527869503575, 0.22300191037470923], 'false,false': [nan, 0.22300191037470923], 'false,true': [nan, 0.22095278695035744]}
{'': [nan, 0.22486261263513468], 'false': [0.21072002449443522, 0.22714691814628252], 'false,false': [0.1701323251417769, 0.22863170937439556]}
{'': [0.22383407617788204, 0.21729627349425598], 'true': [0.16999819147221398, 0.23949145467974278], 'false': [nan, 0.2172962734942599], 'false,false': [nan, 0.21729627349425598], 'false,false,false': [nan, 0.21729627349425598]}
{'': [0.210262364657655, 0.21918755558658706], 'false': [nan, 0.21918755558658706], 'false,false': [nan, 0.21918755558658706], 'true': [0.21620193890895648, 0.20872947356128652], 'true,false': [0.23230612285495122, 0.19953791220331835]}
{'': [0.2233851076907408, 0.2219580963429584], 'false': [0.20686685642416916, 0.22378136041843194], 'false,false': [nan, 0.22378136041843194], 'false,true': [0.20686685642416916, nan], 'false,true,true': [0.13780141396427217, 0.21753128596733204]}
{'': [0.21300855277667363, 0.22703326833157655], 'false': [0.2347752248269818, 0.22553293068549637], 'false,false': [nan, 0.22553293068549637], 'true': [0.17010619723112225, 0.22274688798366998], 'true,false': [nan, 0.22274688798366998], 'true,false,false': [nan, 0.22274688798366998], 'true,true': [nan, 0.1701061972311223]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 36.053
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(D, E), cityhascompanyoffice(F, A) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.030739953789376665;  // std dev = 0.314, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then if ( companyceo(H, G), cityhascompanyoffice(I, A) )
%   | | then return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( bankboughtbank(J, A), countryhascompanyoffice(K, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( acquired(L, A), bankchiefexecutiveceo(L, M) )
%   | | then return -0.050941973991396876;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.2311648081153858;  // std dev = 5.428, 126.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=47 */
%   | | | else return 0.18401100406502505;  // std dev = 11.288, 580.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=189 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(C, D), acquired(E, A) )
%   | then return 0.0010935070084387387;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.8394874463832152;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.7746494068983326;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09741548915677928;  // std dev = 3.693, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   else if ( companyceo(A, G), cityhascompanyoffice(H, A) )
%   | then if ( bankchiefexecutiveceo(A, G) )
%   | | then return -0.15659274975699555;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.10179319642194504;  // std dev = 0.445, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankchiefexecutiveceo(J, I), economicsectorcompany(B, J) )
%   | | | then return 0.8254391691324793;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18258521082660187;  // std dev = 3.025, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else return 0.15413972578608298;  // std dev = 0.467, 617.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=198 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | | then if ( economicsectorcompany(B, E) )
%   | | | then return 0.6748779138533891;  // std dev = 0.267, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08710945800790437;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.11539638524889867;  // std dev = 0.445, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.7715037818902973;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return -0.19225228223615554;  // std dev = 0.134, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.8112673226575216;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return -0.004007316036684841;  // std dev = 2.594, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.12882288677095752;  // std dev = 10.393, 500.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=159 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7044837113085994;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return -0.18634820056265544;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.03366316715794275;  // std dev = 0.355, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   else if ( countryhascompanyoffice(E, A), bankbankincountry(F, E) )
%   | then if ( countryhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | then return 0.6655524356068698;  // std dev = 0.210, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.1997199611694143;  // std dev = 0.144, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( companyceo(A, H) )
%   | | then if ( companyalsoknownas(A, I), acquired(J, I) )
%   | | | then return 0.47591670238071626;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16073237417730316;  // std dev = 3.874, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.0491500151185247;  // std dev = 2.551, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.11833582339737199;  // std dev = 10.304, 501.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=166 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return 0.5042248774993926;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7647566844695666;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.20535590802878714;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.07670242157320097;  // std dev = 0.438, 802.000 (wgt'ed) examples reached here.  /* #neg=551 #pos=251 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5268677583160646;  // std dev = 0.085, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( companyceo(C, D), acquired(E, C) )
%   | | then return -0.16402674678819767;  // std dev = 0.138, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( acquired(C, F), economicsectorcompany(B, F) )
%   | | | then return 0.7492555357789877;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.20766548675804164;  // std dev = 0.163, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then return 0.5724617926926145;  // std dev = 0.156, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.5644144560792117;  // std dev = 0.540, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.18031658289093347;  // std dev = 0.167, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( acquired(A, J), companyceo(A, K) )
%   | | | then return -0.03176358952037125;  // std dev = 2.474, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.08866808191066902;  // std dev = 10.750, 553.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=185 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(A, D) )
%   then if ( cityhascompanyoffice(E, A), companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, C) )
%   | | then return 0.39637728685103785;  // std dev = 0.254, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0038713512248923763;  // std dev = 0.355, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | else return -0.03794718810474867;  // std dev = 0.351, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   else if ( companyceo(A, G) )
%   | then if ( cityhascompanyoffice(H, A) )
%   | | then return -0.02697818383699239;  // std dev = 0.208, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( bankboughtbank(I, A), bankboughtbank(J, I) )
%   | | | then return -0.0365476982188568;  // std dev = 0.628, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17747398919127283;  // std dev = 2.575, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( acquired(K, A), companyceo(K, L) )
%   | | then return 0.061765231863635126;  // std dev = 0.326, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( acquired(A, M), countryhascompanyoffice(N, M) )
%   | | | then return -0.15610190057798465;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07159959695780206;  // std dev = 10.767, 584.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=197 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyceo(C, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.3504356549814494;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.038473949306127506;  // std dev = 0.339, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.4633539802719657;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.5198589540243739;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03810261872774673;  // std dev = 3.668, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.3269880680801497;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( countryhascompanyoffice(H, A), cityhascompanyoffice(I, A) )
%   | | then return -0.04158155624709274;  // std dev = 0.176, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( acquired(J, A), companyceo(J, K) )
%   | | | then return -0.06726843681442092;  // std dev = 1.605, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.047118319461498734;  // std dev = 10.765, 586.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=191 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), acquired(A, E) )
%   | then return 0.4196243138647785;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26901801826415955;  // std dev = 0.110, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( acquired(A, F), companyceo(F, G) )
%   | then if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then return 0.27712666416590803;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( economicsectorcompany(B, F) )
%   | | | then return 0.27343804868900995;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08286560971764453;  // std dev = 1.786, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | else if ( acquired(I, A) )
%   | | then if ( acquired(J, I), companyceo(J, K) )
%   | | | then return -0.18551940928072788;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.01763152540824269;  // std dev = 2.700, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.10020072441591296;  // std dev = 3.836, 101.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=42 */
%   | | | else return 0.034247713249447434;  // std dev = 10.490, 538.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=173 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.24729278747860212;  // std dev = 0.057, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( acquired(A, D) )
%   | | then if ( companyceo(C, E) )
%   | | | then return -0.037298462687674894;  // std dev = 0.985, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.2218253820286687;  // std dev = 1.143, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( acquired(F, C) )
%   | | | then return -0.1640487301056225;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0387354947666202;  // std dev = 2.265, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then if ( acquired(A, H) )
%   | | then return 0.24770437998296782;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6018124478061107;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.32330769676881366;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.019641216386326748;  // std dev = 0.435, 672.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=209 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '31.156', 'seconds']
Refined model CLL: -0.3018


******************************************
Best model found
******************************************
Results 

CLL : -0.301951 

AUC ROC : 0.762167 

AUC PR : 0.08798 

Precision : 0.202934 

Recall : 0.159615 

F1 : 0.178687 

Total Learning Time : 36.053 

Total Inference Time : 47.21501874923706 

Total revision time: 150.94672245597837
Best scored revision CLL: -0.3018


Results 

CLL : -0.301951 

AUC ROC : 0.762167 

AUC PR : 0.08798 

Precision : 0.202934 

Recall : 0.159615 

F1 : 0.178687 

Total Learning Time : 151.09071559524534 

Total Inference Time : 47.21501874923706 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.593
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11901850031690298;  // std dev = 0.439, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20158327853385438;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else return 0.19615243772647806;  // std dev = 0.473, 571.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.11381024337892728;  // std dev = 4.859, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.15560650759239322;  // std dev = 4.795, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return 0.17967775044524184;  // std dev = 11.225, 556.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7856041651366331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.13401171550463592;  // std dev = 2.344, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.19525308833595625;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1458462132881267;  // std dev = 4.016, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | else return 0.13990131378043383;  // std dev = 0.472, 578.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08900815350629522;  // std dev = 0.465, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0.07254109272450528;  // std dev = 0.442, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1185666297734254;  // std dev = 12.274, 675.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.18823547468777369;  // std dev = 2.888, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else return 0.07284581833494944;  // std dev = 4.400, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1004139949999059;  // std dev = 4.036, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10456581127009307;  // std dev = 0.474, 564.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5586737475455021;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.10079478277719042;  // std dev = 4.614, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.11925214292341166;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else return 0.08788169413595097;  // std dev = 11.867, 623.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return -0.03441846592407577;  // std dev = 3.259, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else return 0.023344301619119434;  // std dev = 4.468, 96.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04704890712012684;  // std dev = 12.150, 682.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.0064892102017669595;  // std dev = 2.408, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.11430947234872128;  // std dev = 1.972, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0.06614817257553961;  // std dev = 0.465, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04843736734153702;  // std dev = 0.471, 683.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.05874520575544664;  // std dev = 0.475, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.03907069276886516;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.042573617973691254;  // std dev = 3.501, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.037405812950556935;  // std dev = 11.363, 583.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.4124834252770906;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.030139007296741037;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004932506751494954;  // std dev = 4.171, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.01995667882010682;  // std dev = 4.772, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06338082938520272;  // std dev = 11.072, 529.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.837', 'seconds']
Parameter learned model CLL:-0.373132 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.058, 8, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.439, 68, 24], 'false,true': [4.725, 65, 34], 'false,false': [0.473, 378, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.859, 86, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.795, 71, 34], 'false,false,false,false': [11.225, 363, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.344, 17, 8], 'true,false,false': [4.568, 54, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.016, 49, 24], 'false,false,false': [0.472, 385, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.465, 18, 9], 'true,false': [0.442, 66, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.274, 448, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.888, 19, 15], 'true,false': [4.4, 63, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.036, 52, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 371, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [4.614, 63, 32], 'false,false,true': [2.683, 18, 12], 'false,false,false': [11.867, 408, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.259, 39, 15], 'true,false': [4.468, 68, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.15, 465, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.408, 19, 9], 'true,false,true': [1.972, 11, 6], 'true,false,false': [0.465, 39, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 456, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.475, 79, 43], 'false,true,true,true': [2.026, 13, 6], 'false,true,true,false': [3.501, 40, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.363, 390, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.284, 15, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.171, 63, 24], 'false,true': [4.772, 70, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.072, 336, 193]}]
{'': [0.21109334231125462, 0.2240164847404791], 'false': [0.22548719518416635, 0.2237571348388728], 'true': [0.24913494809688577, 0.19281663516068154], 'true,false': [nan, 0.19281663516068154]}
{'': [0.1983638872691921, 0.22548721193201388], 'false': [nan, 0.22548721193201426], 'false,false': [nan, 0.22548721193201388], 'false,false,false': [0.21895691609977266, 0.22662840950260846]}
{'': [0.23503889601851313, 0.22224891518418768], 'true': [0.0, 0.23391980489680886], 'true,false': [0.21985131575032021, 0.23708677685950474], 'false': [nan, 0.22224891518418768], 'false,false': [0.22090944949394187, 0.22241412339411784], 'false,false,true': [nan, 0.22090944949394187], 'true,true': [0.0, nan]}
{'': [0.20040591026705745, 0.223180238257095], 'false': [nan, 0.223180238257095], 'false,false': [nan, 0.223180238257095], 'true': [0.2161263540192372, 0.19562720081275992]}
{'': [0.22428068936851636, 0.22382421034490446], 'true': [0.24537982283514742, 0.21277587844496337], 'false': [0.2143508733561161, 0.2250987123384124], 'false,false': [nan, 0.2250987123384124], 'false,true': [nan, 0.21435087335611666]}
{'': [0.0, 0.22639585100147328], 'false': [0.2240882101862764, 0.22671485770332933], 'false,false': [0.2400000000000001, 0.22602991215971693], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.20466918300170892, 0.2164554661985503], 'false': [nan, 0.21645546619855519], 'false,false': [nan, 0.2164554661985503], 'false,false,false': [nan, 0.2164554661985503], 'true': [0.19663664522725408, 0.20798633206671013]}
{'': [0.21702315497948824, 0.2217890316664021], 'false': [nan, 0.2217890316664021], 'false,false': [nan, 0.2217890316664021], 'true': [0.20709456966861836, 0.21940688783547538], 'true,false': [0.22882042191833268, 0.21606648199445927]}
{'': [0.2259469860918458, 0.22041340462206394], 'false': [0.2125133202051698, 0.22145465137147785], 'false,false': [nan, 0.22145465137147785], 'false,true': [0.2125133202051698, nan], 'false,true,true': [0.21601276907478678, 0.21136392124173278]}
{'': [0.2053192186510358, 0.22989049509925283], 'false': [0.2189498437515921, 0.2317315904388545], 'false,false': [nan, 0.2317315904388545], 'true': [0.22326321940911306, 0.20000324777174616], 'true,true': [0.0, 0.2268791803234642], 'true,false': [nan, 0.20000324777174616], 'true,false,false': [nan, 0.20000324777174616]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 14.857
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( economicsectorcompany(B, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(E, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( acquired(C, G), economicsectorcompany(B, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( acquired(A, I), companyceo(I, J) )
%   | | then return 0.04963829680164004;  // std dev = 0.393, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.2270013941159059;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | | | else return 0.1870963035205605;  // std dev = 10.837, 532.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=175 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.727171360523649;  // std dev = 0.096, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(D, A), cityhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return 0.16154399650602963;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( companyceo(D, G) )
%   | | | then return -0.019829882185973154;  // std dev = 1.118, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.15989545966115176;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( bankboughtbank(H, A), cityhascompanyoffice(I, H) )
%   | | then if ( bankboughtbank(A, J), companyceo(J, K) )
%   | | | then return 0.1732088966977817;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16012443663555168;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( companyalsoknownas(A, L), acquired(A, M) )
%   | | | then return 0.06872864373268679;  // std dev = 3.004, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.1682085811173331;  // std dev = 12.257, 686.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=230 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.8240708356031136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | | then return 0.2871400054736362;  // std dev = 0.413, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.7196383635114884;  // std dev = 0.304, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05753984834093254;  // std dev = 4.570, 128.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   else if ( countryhascompanyoffice(H, A), bankbankincountry(I, H) )
%   | then if ( companyceo(A, J) )
%   | | then if ( acquired(K, A) )
%   | | | then return 0.20606942907970222;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05450233584080941;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( countryhascompanyoffice(H, L), economicsectorcompany(B, L) )
%   | | | then return 0.7895794716821266;  // std dev = 0.161, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1854848933380926;  // std dev = 0.061, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.13399908292869647;  // std dev = 0.463, 607.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=197 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.5900525036788662;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.691522886229448;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then if ( acquired(A, F), acquired(E, G) )
%   | | then return 0.29286791315629024;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | | then return 0.6803473022586233;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7891900848824631;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(J, A) )
%   | | then if ( companyalsoknownas(A, K), companyceo(K, L) )
%   | | | then return -0.1636382485516098;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.030254100617222335;  // std dev = 3.481, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | else if ( companyalsoknownas(A, M), countryhascompanyoffice(N, M) )
%   | | | then return -0.09318397994057936;  // std dev = 1.169, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.13169150865231005;  // std dev = 11.702, 625.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), cityhascompanyoffice(D, A) )
%   then if ( acquired(E, A) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0.13010822818808435;  // std dev = 0.802, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.06266589806985223;  // std dev = 0.316, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( cityhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | then return 0.7103861078331442;  // std dev = 0.152, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.19650478589281803;  // std dev = 0.138, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( countryhascompanyoffice(H, A), cityhascompanyoffice(I, A) )
%   | then if ( countryhascompanyoffice(H, J), economicsectorcompany(B, J) )
%   | | then return 0.5852804062121584;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1746953882119322;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, K), bankboughtbank(L, A) )
%   | | then return -0.18113241540328653;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(A, M), economicsectorcompany(B, M) )
%   | | | then return 0.47812906591535576;  // std dev = 0.138, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.09042976736350057;  // std dev = 11.915, 685.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=224 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0.1455236800554156;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( companyceo(A, D) )
%   | then if ( cityhascompanyoffice(E, A), bankchiefexecutiveceo(F, D) )
%   | | then if ( economicsectorcompany(B, F) )
%   | | | then return 0.6681402746541961;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02016025904446528;  // std dev = 1.035, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.36925876350314923;  // std dev = 0.388, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.01010952845876451;  // std dev = 3.977, 118.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | else if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.673617093080267;  // std dev = 0.339, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.21854749053718497;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.4671242479895173;  // std dev = 0.247, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.09106063296613175;  // std dev = 11.272, 599.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=207 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(D, A) )
%   then if ( cityhascompanyoffice(E, D), acquired(F, D) )
%   | then return 0.2652523486194434;  // std dev = 0.563, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then return 0.027048712223168136;  // std dev = 0.821, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( companyalsoknownas(D, H), cityhascompanyoffice(C, D) )
%   | | | then return 0.04081081276985268;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1425833160308199;  // std dev = 0.367, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   else if ( acquired(A, I) )
%   | then if ( economicsectorcompany(B, I) )
%   | | then if ( companyceo(I, J), countryhascompanyoffice(K, A) )
%   | | | then return 0.1700680437375611;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3572256255471807;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(I, L), companyalsoknownas(L, M) )
%   | | | then return 0.28827901928083965;  // std dev = 1.170, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 6.232700705714396E-4;  // std dev = 3.663, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   | else return 0.0795070167787463;  // std dev = 0.462, 606.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=214 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then if ( acquired(E, A) )
%   | | then return -0.013913627228503778;  // std dev = 0.296, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.1684980647913387;  // std dev = 0.373, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( countryhascompanyoffice(F, A), acquired(A, G) )
%   | | then return -0.17509707267957494;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.41695041139502204;  // std dev = 0.266, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02349907251027451;  // std dev = 2.702, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   else if ( acquired(A, I), countryhascompanyoffice(J, A) )
%   | then return 0.3292246420005929;  // std dev = 0.312, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.3416175220660195;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.03767110225276248;  // std dev = 4.290, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0.04567232115227655;  // std dev = 10.529, 530.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=176 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.36630089620965534;  // std dev = 0.269, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2707350394396386;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(E, A), cityhascompanyoffice(F, A) )
%   | then if ( countryhascompanyoffice(G, A) )
%   | | then return 0.07084229772909194;  // std dev = 0.772, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( companyalsoknownas(E, H), cityhascompanyoffice(I, H) )
%   | | | then return -0.0026098487521750333;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15596218922840702;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), companyceo(K, L) )
%   | | | then return 0.055700674933607204;  // std dev = 4.916, 136.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=50 */
%   | | | else return -0.1404892355303961;  // std dev = 0.907, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( companyceo(A, M) )
%   | | | then return -0.06104895347647046;  // std dev = 2.849, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.021298005884097047;  // std dev = 10.723, 572.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=182 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.008925340700293544;  // std dev = 0.362, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return -0.00513118178121655;  // std dev = 0.329, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.3960251048644603;  // std dev = 0.174, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( companyceo(A, F), companyceo(E, G) )
%   | | | then return 0.10278019349079394;  // std dev = 1.807, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.03036946536443354;  // std dev = 2.855, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.12091772702202543;  // std dev = 1.262, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.059554281299455614;  // std dev = 2.455, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.0369196475048803;  // std dev = 4.123, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.03985002160728426;  // std dev = 9.821, 448.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=153 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '2.102', 'seconds']
Refined model CLL: -0.330674


******************************************
Best model found
******************************************
Results 

CLL : -0.330988 

AUC ROC : 0.674796 

AUC PR : 0.081512 

Precision : 0.31694 

Recall : 0.111969 

F1 : 0.165478 

Total Learning Time : 14.857 

Total Inference Time : 33.05819654464722 

Total revision time: 114.77074451446533
Best scored revision CLL: -0.330674


Results 

CLL : -0.330988 

AUC ROC : 0.674796 

AUC PR : 0.081512 

Precision : 0.31694 

Recall : 0.111969 

F1 : 0.165478 

Total Learning Time : 114.87396354675293 

Total Inference Time : 33.05819654464722 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.439
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24075763075168627;  // std dev = 0.486, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1658412427918186;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | else return 0.1838126519136671;  // std dev = 0.469, 565.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.24194091902074905;  // std dev = 5.068, 106.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.11744030501829437;  // std dev = 4.798, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | | | else return 0.16942347407905609;  // std dev = 11.060, 549.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.17392533270026464;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.10873238779993749;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.11096383852197633;  // std dev = 4.763, 110.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14167356427052702;  // std dev = 4.826, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | else return 0.16131633494712336;  // std dev = 0.478, 523.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.17981323800923213;  // std dev = 0.488, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else return 0.1455550507515593;  // std dev = 0.485, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10540137629676334;  // std dev = 12.128, 677.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1461311875800057;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else return 0.09431308644625015;  // std dev = 4.395, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09961959476592168;  // std dev = 4.785, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09708606774887138;  // std dev = 0.471, 554.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.11634249647944991;  // std dev = 5.137, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.05657754271288228;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.07620326075848831;  // std dev = 11.837, 637.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.06574126717260878;  // std dev = 2.818, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.0644944244162518;  // std dev = 4.383, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04959997200621352;  // std dev = 12.199, 680.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.06455136770859603;  // std dev = 2.343, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.07021635339066311;  // std dev = 1.746, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.08233226905598322;  // std dev = 0.490, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05155617260458026;  // std dev = 0.469, 662.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.00665243710686209;  // std dev = 0.453, 139.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.1634351386974804;  // std dev = 1.870, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.021703535121828165;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.017746925406468342;  // std dev = 11.303, 602.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17792760053262385;  // std dev = 2.059, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011091345277700792;  // std dev = 4.744, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.11160312838033412;  // std dev = 4.452, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03239072833208038;  // std dev = 11.153, 568.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '56.005', 'seconds']
Parameter learned model CLL:-0.365802 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.486, 71, 44], 'false,true': [4.707, 72, 32], 'false,false': [0.469, 381, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.068, 62, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.798, 82, 32], 'false,false,false,false': [11.06, 365, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.332, 17, 8], 'true,false,false': [4.763, 78, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.826, 66, 36], 'false,false,false': [0.478, 339, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.488, 13, 9], 'true,false': [0.485, 57, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.128, 461, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.739, 20, 12], 'true,false': [4.395, 60, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.785, 63, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 370, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.137, 66, 44], 'false,false,true': [2.373, 19, 8], 'false,false,false': [11.837, 429, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.818, 24, 12], 'true,false': [4.383, 60, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.199, 460, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.343, 14, 9], 'true,false,true': [1.746, 8, 5], 'true,false,false': [0.49, 45, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.469, 446, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.453, 99, 40], 'false,true,true,true': [1.87, 7, 7], 'false,true,true,false': [4.315, 52, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.303, 418, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.059, 8, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.744, 64, 35], 'false,true': [4.452, 52, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.153, 384, 184]}]
{'': [0.236219281663517, 0.21862494721390174], 'true': [nan, 0.236219281663517], 'false': [0.2130177514792913, 0.21960686036494925]}
{'': [0.2423101245307978, 0.21961409230123322], 'false': [nan, 0.21961409230123385], 'false,false': [nan, 0.21961409230123322], 'false,false,false': [0.201908279470606, 0.22282606892478385]}
{'': [0.2065000060125671, 0.22814851956080556], 'false': [nan, 0.22814851956080556], 'false,false': [0.2283737024221457, 0.2280416336110617], 'false,false,true': [nan, 0.2283737024221457], 'true': [0.0, 0.2083778557227217], 'true,false': [0.21759999999999993, 0.206280991735536], 'true,true': [0.0, nan]}
{'': [0.23631431773331738, 0.21727687650116653], 'true': [0.2382769759679883, 0.23561849769113757], 'false': [nan, 0.21727687650116653], 'false,false': [nan, 0.21727687650116653]}
{'': [0.22397806877028956, 0.2232558690949823], 'true': [0.23444876090330302, 0.21945451353025633], 'false': [0.23128744201655416, 0.22181965097942208], 'false,true': [nan, 0.23128744201655418], 'false,false': [nan, 0.22181965097942208]}
{'': [nan, 0.222601342569605], 'false': [0.23989251017203447, 0.21949867059063505], 'false,false': [0.20850480109739356, 0.2199489967948154]}
{'': [0.21893584543101302, 0.2188596640759181], 'true': [0.22052870523910795, 0.21828376962368673], 'false': [nan, 0.21885966407591334], 'false,false': [nan, 0.2188596640759181], 'false,false,false': [nan, 0.2188596640759181]}
{'': [0.23915995647859534, 0.21998439138409245], 'true': [0.23876796269643288, 0.23920942368031095], 'true,false': [0.23452329672484803, 0.24000000000000005], 'false': [nan, 0.21998439138409245], 'false,false': [nan, 0.21998439138409245]}
{'': [0.20543802244255654, 0.2154478881643027], 'false': [0.23532356833764984, 0.21222723810995497], 'false,true': [0.23532356833764984, nan], 'false,true,true': [0.24973908460385505, 0.22987168326360582], 'false,false': [nan, 0.21222723810995497]}
{'': [0.23406142306375982, 0.22189239781572317], 'true': [0.249459604969165, 0.2273381208764524], 'true,true': [nan, 0.24945960496916494], 'true,false': [nan, 0.2273381208764524], 'true,false,false': [nan, 0.2273381208764524], 'false': [0.23595612764953813, 0.21900416584010843], 'false,false': [nan, 0.21900416584010843]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 10.41
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(D, E) )
%   | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( cityhascompanyoffice(C, F), companyalsoknownas(F, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, H), companyceo(A, I) )
%   | | then if ( countryhascompanyoffice(J, H) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.42957750652808374;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.25814893509951237;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.1727359298271001;  // std dev = 11.077, 569.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=179 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.450, 829.000 (wgt'ed) examples reached here.  /* #neg=569 #pos=260 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E) )
%   | | then return -0.015377240248282421;  // std dev = 0.312, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | | else if ( acquired(A, F), companyalsoknownas(F, G) )
%   | | | then return 0.5666214520971284;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2126828793790915;  // std dev = 3.987, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   else if ( cityhascompanyoffice(H, A), countryhascompanyoffice(I, A) )
%   | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1324938180402393;  // std dev = 0.152, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.8063569474385806;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return 0.23482963146184122;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.160491158893766;  // std dev = 11.316, 607.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=199 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( acquired(D, A), cityhascompanyoffice(C, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.692072029418877;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.026861740344382955;  // std dev = 0.327, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( cityhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | | then return 0.6796834977099321;  // std dev = 0.311, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.13755084740824294;  // std dev = 0.138, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.6859731307840325;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.7994699942532135;  // std dev = 0.044, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.19766636651011485;  // std dev = 0.075, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( acquired(A, I), companyalsoknownas(A, J) )
%   | | | then return -0.18346340821876372;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1526887609841593;  // std dev = 10.999, 540.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=186 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(C, D), economicsectorcompany(B, D) )
%   | then return 0.617456508122381;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(C, E), companyceo(E, F) )
%   | | then return -0.08246604258500705;  // std dev = 0.160, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( economicsectorcompany(B, C) )
%   | | | then return 0.5839697212400882;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.002580099908947559;  // std dev = 2.991, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.52236190832216;  // std dev = 0.011, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( acquired(H, A) )
%   | | then if ( bankboughtbank(I, A) )
%   | | | then return 0.19252485236796668;  // std dev = 1.351, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.021665872508497976;  // std dev = 3.626, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.049020883218964154;  // std dev = 2.928, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return 0.11896203784711856;  // std dev = 10.517, 510.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=171 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.5514561861388041;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.0073692381859085075;  // std dev = 0.342, 134.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=32 */
%   else if ( acquired(E, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.3934539718151568;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(F, E), companyalsoknownas(F, G) )
%   | | | then return -0.19913924432006283;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04821697693023593;  // std dev = 3.597, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( companyalsoknownas(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.6361303655191979;  // std dev = 0.605, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.19261867550209327;  // std dev = 0.227, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.032886915136960446;  // std dev = 2.050, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.10905023149430644;  // std dev = 10.113, 487.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=168 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.35945030263994227;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyceo(C, D), acquired(E, A) )
%   | | then if ( acquired(F, C) )
%   | | | then return -0.0956825260375473;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4077295580918125;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.03686989971864292;  // std dev = 0.268, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then if ( companyceo(H, G), economicsectorcompany(B, H) )
%   | | then return 0.434376061832962;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12167832076645207;  // std dev = 0.251, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.31114465501255734;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(A, J), bankboughtbank(K, J) )
%   | | | then return 0.2379423431909531;  // std dev = 1.034, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08147237927274825;  // std dev = 11.280, 640.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=214 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyceo(C, D), countryhascompanyoffice(E, C) )
%   | then if ( bankboughtbank(F, C) )
%   | | then return 0.6291337225094064;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.04432991777161577;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( companyceo(A, G), countryhascompanyoffice(H, C) )
%   | | then return 0.13065566595607228;  // std dev = 0.341, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.010716596126368843;  // std dev = 0.351, 118.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   else if ( acquired(I, A), bankboughtbank(I, J) )
%   | then if ( bankboughtbank(I, A) )
%   | | then return 0.15925167997411477;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.46568998048186605;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.24988021502295207;  // std dev = 0.074, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.008138705987660814;  // std dev = 2.791, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | | else return 0.06694615593662201;  // std dev = 10.553, 532.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=177 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( acquired(D, A), countryhascompanyoffice(C, D) )
%   | then return -0.12360142162107847;  // std dev = 0.156, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | | then return 0.49402638892659234;  // std dev = 0.076, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.1892598389479439;  // std dev = 0.061, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then if ( companyalsoknownas(F, G), cityhascompanyoffice(H, A) )
%   | | then return 0.33787522204804127;  // std dev = 0.293, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20667982846893543;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, I), acquired(J, A) )
%   | | then if ( companyceo(A, K), cityhascompanyoffice(L, A) )
%   | | | then return 0.08026014095026096;  // std dev = 1.094, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.12782648165559915;  // std dev = 0.644, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.02224337086421327;  // std dev = 2.940, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | | else return 0.06723398033688464;  // std dev = 10.796, 532.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=186 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.34215681365248984;  // std dev = 0.249, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(D, C), companyceo(A, E) )
%   | | then if ( companyceo(C, F) )
%   | | | then return -0.18608933409480719;  // std dev = 0.168, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06287799580688595;  // std dev = 0.733, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( countryhascompanyoffice(G, C), bankboughtbank(H, C) )
%   | | | then return 0.39432279268835807;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06095026505689472;  // std dev = 3.432, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   else if ( bankboughtbank(I, A), acquired(I, A) )
%   | then return 0.2833330916463835;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | then return 0.24021846141068154;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.043887716363758426;  // std dev = 2.597, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.02200303217734693;  // std dev = 10.683, 574.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=182 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.627', 'seconds']
Refined model CLL: -0.299172


******************************************
Best model found
******************************************
Results 

CLL : -0.298839 

AUC ROC : 0.784295 

AUC PR : 0.109542 

Precision : 0.093373 

Recall : 0.299228 

F1 : 0.142332 

Total Learning Time : 10.41 

Total Inference Time : 35.812973737716675 

Total revision time: 113.64614703559874
Best scored revision CLL: -0.299172


Results 

CLL : -0.298839 

AUC ROC : 0.784295 

AUC PR : 0.109542 

Precision : 0.093373 

Recall : 0.299228 

F1 : 0.142332 

Total Learning Time : 113.74936606788634 

Total Inference Time : 35.812973737716675 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.445
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21257931484634648;  // std dev = 0.478, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.2427643197148956;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | else return 0.2200536970042698;  // std dev = 0.481, 525.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13621853940951342;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.18678107545183048;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.17215720184663186;  // std dev = 11.173, 554.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.15330649979494992;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else return 0.16587464452103315;  // std dev = 4.702, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11360437328230899;  // std dev = 3.732, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.12274472372660668;  // std dev = 0.466, 595.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.020880087907033253;  // std dev = 0.417, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else return 0.10521506612304425;  // std dev = 0.464, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10854085233371347;  // std dev = 12.303, 687.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.017940396048630142;  // std dev = 2.597, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else return 0.16021151468032116;  // std dev = 4.814, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.026248520528213047;  // std dev = 3.868, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09417965708787708;  // std dev = 0.470, 576.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.19255723980661196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( acquired(D, A) )
%   | then return 0.08948137287664874;  // std dev = 4.706, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.0538659863719371;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return 0.08329754982045377;  // std dev = 12.043, 648.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05480673903519958;  // std dev = 2.509, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else return 0.1161966472230495;  // std dev = 4.798, 95.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0602508843840944;  // std dev = 11.888, 642.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.06933215640931104;  // std dev = 1.836, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return -1.912596379538667E-4;  // std dev = 2.513, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return 0.0388773489709546;  // std dev = 0.457, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05219913036119795;  // std dev = 0.473, 665.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.03479725719209045;  // std dev = 0.471, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.08238600859964376;  // std dev = 1.277, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.004861766598713321;  // std dev = 3.624, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.060034988668337994;  // std dev = 11.097, 540.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.18738383106753298;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.03469025411647572;  // std dev = 1.855, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07619641852064955;  // std dev = 4.256, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return -0.023711034837375376;  // std dev = 4.911, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.024912540825588168;  // std dev = 11.289, 577.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.532', 'seconds']
Parameter learned model CLL:-0.36854 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.826, 10, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.478, 51, 28], 'false,true': [4.641, 56, 35], 'false,false': [0.481, 335, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.787, 75, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.73, 62, 35], 'false,false,false,false': [11.173, 364, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.924, 25, 13], 'true,false,false': [4.702, 60, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.732, 46, 20], 'false,false,false': [0.466, 405, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.417, 17, 5], 'true,false': [0.464, 61, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.303, 462, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.597, 26, 9], 'true,false': [4.814, 57, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.868, 60, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 386, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [4.706, 69, 33], 'false,false,true': [2.0, 20, 5], 'false,false,false': [12.043, 428, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.509, 22, 9], 'true,false': [4.798, 56, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.888, 432, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.836, 11, 5], 'true,false,true': [2.513, 21, 9], 'true,false,false': [0.457, 45, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 440, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.471, 92, 48], 'false,true,true,true': [1.277, 9, 2], 'false,true,true,false': [3.624, 49, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.097, 350, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.855, 12, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.256, 51, 28], 'false,true': [4.911, 80, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.289, 387, 190]}]
{'': [0.22781801720235545, 0.23184506240512992], 'false': [0.2366863905325459, 0.23092970521542258], 'true': [0.22222222222222202, 0.22880948565935083], 'true,false': [nan, 0.22880948565935083]}
{'': [0.21221518298495462, 0.22615412046843228], 'false': [nan, 0.22615412046843356], 'false,false': [nan, 0.22615412046843228], 'false,false,false': [0.23063024763524168, 0.22533852910893548]}
{'': [0.23053826242472394, 0.21673673257671897], 'true': [nan, 0.23053826242472517], 'true,false': [0.22505363963309297, 0.23268698060941928], 'false': [nan, 0.21673673257671897], 'false,false': [0.21106493445160424, 0.21735753124779492], 'false,false,true': [nan, 0.21106493445160424]}
{'': [0.2082267334449409, 0.22034250907509526], 'false': [nan, 0.22034250907509526], 'false,false': [nan, 0.22034250907509526], 'true': [0.17417443604749824, 0.2152344926778888]}
{'': [0.23232192925288048, 0.21739079188719418], 'true': [0.19264394257142556, 0.2413799421117794], 'false': [0.18697275394157462, 0.2210527584876557], 'false,false': [nan, 0.2210527584876557], 'false,true': [nan, 0.18697275394157462]}
{'': [0.0, 0.22146568322722862], 'false': [0.217149395217281, 0.222103117210057], 'false,false': [0.1599999999999999, 0.22380019132391943], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.2333502178039157, 0.2201291214983396], 'true': [0.20310519140882646, 0.24229242250423155], 'false': [nan, 0.22012912149833536], 'false,false': [nan, 0.2201291214983396], 'false,false,false': [nan, 0.2201291214983396]}
{'': [0.20999502461853672, 0.2240516523075191], 'false': [nan, 0.2240516523075191], 'false,false': [nan, 0.2240516523075191], 'true': [0.21067706500891592, 0.20961094312311127], 'true,false': [0.21042923389107548, 0.20874023437499964]}
{'': [0.2214231504670319, 0.2237772604236332], 'false': [0.19020351250297599, 0.22805212620027754], 'false,false': [nan, 0.22805212620027754], 'false,true': [0.19020351250297599, nan], 'false,true,true': [0.14830258842372845, 0.19600925693806967]}
{'': [0.223087086305208, 0.2193290188244258], 'true': [0.19373039348850704, 0.22923796925981973], 'true,false': [nan, 0.22923796925981973], 'true,false,false': [nan, 0.22923796925981973], 'false': [0.20968667158872958, 0.2208579006334716], 'false,false': [nan, 0.2208579006334716], 'true,true': [0.0, 0.20238647124836912]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 21.588
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(A, E), companyceo(A, F) )
%   | | then if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.009775593202374552;  // std dev = 2.465, 53.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return 0.008148935099512315;  // std dev = 2.258, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.18167834686421389;  // std dev = 11.890, 646.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=209 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.6569734122109542;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( countryhascompanyoffice(D, A), bankbankincountry(E, D) )
%   | then if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | then if ( companyalsoknownas(A, H) )
%   | | | then return 0.04980648329448081;  // std dev = 1.467, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.15993175030215775;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( countryhascompanyoffice(D, I), economicsectorcompany(B, I) )
%   | | | then return 0.7906473051160091;  // std dev = 0.956, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.1613667947315195;  // std dev = 0.058, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.7813714778312605;  // std dev = 1.393, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.16026972393637903;  // std dev = 0.117, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.2339844406085247;  // std dev = 3.236, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.14968298389911347;  // std dev = 10.280, 492.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=155 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.43006844141320927;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7742040977364255;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(A, A) )
%   | then return -0.18134762925415665;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( bankboughtbank(F, A), cityhascompanyoffice(G, F) )
%   | | then if ( countryhascompanyoffice(H, F), countryhascompanyoffice(H, A) )
%   | | | then return 0.2882447176501299;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7841874135534525;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( countryhascompanyoffice(I, A), bankchiefexecutiveceo(A, J) )
%   | | | then return 0.2739630796252871;  // std dev = 1.559, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.14137251766048803;  // std dev = 11.840, 704.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=236 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5336090930801601;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.004950655722973998;  // std dev = 0.368, 89.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.5235464174227265;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyceo(A, F), cityhascompanyoffice(G, A) )
%   | | | then return 0.047804720717072806;  // std dev = 1.981, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.1715799748304282;  // std dev = 2.824, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else if ( acquired(A, H) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.6142774687436264;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02513124463534238;  // std dev = 2.779, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.12803844156062436;  // std dev = 3.521, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.12499108869191115;  // std dev = 9.912, 444.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=151 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.5376139736972195;  // std dev = 0.253, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | else return -0.17312013080218622;  // std dev = 0.195, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( bankchiefexecutiveceo(A, E) )
%   | then if ( companyceo(A, E) )
%   | | then if ( acquired(A, F), companyceo(F, G) )
%   | | | then return 0.005842735628739127;  // std dev = 0.742, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.18099117527098857;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6827031103224727;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, H), companyceo(H, I) )
%   | | then if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.062453639666609724;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08749704188654163;  // std dev = 0.654, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.5884879795018443;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07945980500517594;  // std dev = 10.921, 589.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=186 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.24066342211205796;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.44863761180183936;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5527196565851482;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.47206220595096454;  // std dev = 0.212, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.3485296522769882;  // std dev = 0.182, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.06158280902528729;  // std dev = 11.524, 735.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=225 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.417, 784.000 (wgt'ed) examples reached here.  /* #neg=526 #pos=258 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.3880604239755885;  // std dev = 0.248, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | else return -0.15669794811846688;  // std dev = 0.174, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.33536616564710353;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.4261264764117765;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.043847369067944765;  // std dev = 2.569, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( bankboughtbank(G, A), countryhascompanyoffice(H, G) )
%   | | then if ( bankboughtbank(I, G) )
%   | | | then return -0.06857473711653714;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.15375599593974637;  // std dev = 1.867, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.3061685247080428;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.08481016905675479;  // std dev = 10.163, 477.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=162 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyceo(A, D), acquired(A, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0.02475095722741562;  // std dev = 0.473, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4363469574288236;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | then return 0.4864002796998493;  // std dev = 0.148, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.19311702784227958;  // std dev = 0.173, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.23679844048823648;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | then if ( companyalsoknownas(I, K), companyceo(K, L) )
%   | | | then return -0.023472071997959892;  // std dev = 1.485, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.12556032406526407;  // std dev = 1.150, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.013316638527791564;  // std dev = 3.002, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
%   | | | else return 0.021983706529373342;  // std dev = 10.640, 561.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=168 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.08932930612677055;  // std dev = 0.202, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.21800585092002772;  // std dev = 0.453, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.01131881385006125;  // std dev = 0.331, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   else if ( bankboughtbank(F, A) )
%   | then if ( companyceo(A, G), cityhascompanyoffice(H, F) )
%   | | then return 0.45159239627701814;  // std dev = 0.274, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankboughtbank(F, I), economicsectorcompany(B, I) )
%   | | | then return 0.5681857053462509;  // std dev = 0.339, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.31535400467449726;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(A, J) )
%   | | then return -0.01587761660425531;  // std dev = 0.307, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return -0.031145092278781747;  // std dev = 2.275, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.036758347040328036;  // std dev = 10.039, 535.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=172 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '28.747', 'seconds']
Refined model CLL: -0.28599


******************************************
Best model found
******************************************
Results 

CLL : -0.286494 

AUC ROC : 0.748995 

AUC PR : 0.098286 

Precision : 0.057371 

Recall : 0.303846 

F1 : 0.096518 

Total Learning Time : 21.588 

Total Inference Time : 74.51949453353882 

Total revision time: 161.30447674560546
Best scored revision CLL: -0.28599


Results 

CLL : -0.286494 

AUC ROC : 0.748995 

AUC PR : 0.098286 

Precision : 0.057371 

Recall : 0.303846 

F1 : 0.096518 

Total Learning Time : 161.40769577789305 

Total Inference Time : 74.51949453353882 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.438
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10304689428318518;  // std dev = 0.430, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.20158327853385438;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | else return 0.21227737546648032;  // std dev = 0.478, 545.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13328639976830584;  // std dev = 4.835, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.21816062014650583;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | | | else return 0.19307740589180514;  // std dev = 11.090, 532.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.3119011263592064;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.07360249011288632;  // std dev = 2.448, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.14954759201164117;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16174272852630192;  // std dev = 3.983, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | else return 0.15546123084208235;  // std dev = 0.478, 545.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.15009729548095854;  // std dev = 0.477, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0.10163940230202087;  // std dev = 0.457, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12071567081403337;  // std dev = 12.189, 657.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.14224850459490906;  // std dev = 3.021, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else return 0.049476546669240486;  // std dev = 4.477, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06784462793984983;  // std dev = 4.125, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10783293482882944;  // std dev = 0.478, 545.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03561022951783299;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.06829305785432765;  // std dev = 4.741, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.08830603109511981;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else return 0.05276320725631496;  // std dev = 12.103, 675.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.03378006776139891;  // std dev = 3.175, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else return 0.04196078664844406;  // std dev = 4.440, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06527440825770794;  // std dev = 11.976, 641.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.043696578906767494;  // std dev = 2.461, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.03050534397128262;  // std dev = 2.117, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.11004878290152596;  // std dev = 0.480, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05168313174333204;  // std dev = 0.474, 666.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.01863911626420999;  // std dev = 0.461, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.12214158116234408;  // std dev = 1.901, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.010387974211461959;  // std dev = 3.640, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0246713272228736;  // std dev = 11.405, 592.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.17402310807047708;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.03402206337340557;  // std dev = 2.313, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0985976682798044;  // std dev = 3.911, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.029630112065724492;  // std dev = 4.774, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03144181985707101;  // std dev = 11.303, 571.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '6.237', 'seconds']
Parameter learned model CLL:-0.369786 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.426, 17, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.43, 74, 24], 'false,true': [4.725, 65, 34], 'false,false': [0.478, 352, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.835, 80, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.568, 54, 34], 'false,false,false,false': [11.09, 339, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.448, 24, 8], 'true,false,false': [4.699, 63, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.983, 47, 24], 'false,false,false': [0.478, 352, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.477, 16, 9], 'true,false': [0.457, 57, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.189, 430, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.021, 24, 15], 'true,false': [4.477, 69, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.125, 60, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.478, 352, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.816, 2, 1], 'false,true': [4.741, 76, 32], 'false,false,true': [2.763, 21, 12], 'false,false,false': [12.103, 460, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.175, 32, 15], 'true,false': [4.44, 65, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.976, 424, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.461, 19, 9], 'true,false,true': [2.117, 17, 6], 'true,false,false': [0.48, 32, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 439, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.461, 98, 43], 'false,true,true,true': [1.901, 9, 6], 'false,true,true,false': [3.64, 50, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.405, 399, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [2.313, 17, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.911, 42, 24], 'false,true': [4.774, 70, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.303, 378, 193]}]
{'': [0.19530437044745186, 0.22823916901354363], 'false': [0.22548719518416635, 0.22872148809023107], 'true': [0.22633136094674564, 0.18492294877134627], 'true,false': [nan, 0.18492294877134627]}
{'': [0.20687274703770583, 0.23208746341248906], 'false': [nan, 0.23208746341249062], 'false,false': [nan, 0.23208746341248906], 'false,false,false': [0.23708677685950372, 0.23117120809543054]}
{'': [0.21969200560549054, 0.2281133468320586], 'false': [nan, 0.2281133468320586], 'false,false': [0.22341031088780602, 0.22872148809023177], 'false,false,true': [nan, 0.22341031088780602], 'true': [0.25, 0.218720881105849], 'true,true': [0.25, nan], 'true,false': [0.18730431086076116, 0.2276543734722068]}
{'': [0.21372640805461146, 0.22612933744139843], 'false': [nan, 0.22612933744139843], 'false,false': [nan, 0.22612933744139843], 'true': [0.22770308191179103, 0.208858806758374]}
{'': [0.21621509540130146, 0.2254124921470411], 'false': [0.20255789422678983, 0.22872148809023046], 'false,false': [nan, 0.22872148809023046], 'true': [0.2339389743529231, 0.20662092024830242], 'false,true': [nan, 0.20255789422678983]}
{'': [0.22222222222222224, 0.21647659991673826], 'true': [nan, 0.22222222222222224], 'true,false': [nan, 0.22222222222222224], 'false': [0.2080983414179379, 0.21772916597383735], 'false,false': [0.23140495867768607, 0.2170016893944128]}
{'': [0.21285379543963182, 0.22374598941657764], 'false': [nan, 0.22374598941657312], 'false,false': [nan, 0.22374598941657764], 'false,false,false': [nan, 0.22374598941657764], 'true': [0.21452083134376343, 0.21198884753186337]}
{'': [0.21972441353265346, 0.22435803949926228], 'false': [nan, 0.22435803949926228], 'false,false': [nan, 0.22435803949926228], 'true': [0.21624057032141406, 0.22058803346177552], 'true,false': [0.19492400109554878, 0.2303999999999994]}
{'': [0.21252247317075904, 0.21802267239926496], 'false': [0.2057461421766805, 0.2197287025200893], 'false,false': [nan, 0.2197287025200893], 'false,true': [0.2057461421766805, nan], 'false,true,true': [0.24096280701728315, 0.19480352835047943]}
{'': [0.22833961778128284, 0.22304120975081], 'true': [0.21799465534583135, 0.2317186223344513], 'true,false': [nan, 0.2317186223344513], 'true,false,false': [nan, 0.2317186223344513], 'false': [0.21910772909145157, 0.22375713483887447], 'false,false': [nan, 0.22375713483887447], 'true,true': [0.24999999999999997, 0.2139823542537741]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(D, C).;true;true
0;true,false;acquired(A, C).;true;true
0;false;acquired(E, F), acquired(A, F).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,true;acquired(C, E).;true;true
2;true,false;acquired(F, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(A, H).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;true;acquired(C, C).;true;true
5;true,false;acquired(C, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 22.693
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( cityhascompanyoffice(E, A), acquired(A, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4735335504841277;  // std dev = 0.487, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, G), bankboughtbank(H, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10233498161114027;  // std dev = 3.984, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   else if ( acquired(I, J), acquired(A, J) )
%   | then if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( bankchiefexecutiveceo(A, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09727936988212063;  // std dev = 4.091, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | else return 0.19497266982900172;  // std dev = 0.473, 573.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.1785628601238116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.15477047320952178;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.8412215149375016;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return -0.018260105037070304;  // std dev = 1.558, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.20071352171351292;  // std dev = 4.047, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   else if ( acquired(A, I), acquired(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A), acquired(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0.13617577128667652;  // std dev = 4.696, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | | else return 0.1701324389332244;  // std dev = 11.308, 572.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.755054265588187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(E, A) )
%   | | then return 0.11479080928395279;  // std dev = 0.425, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.6911871707326643;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.11755530220363665;  // std dev = 4.115, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12350420731739518;  // std dev = 4.011, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.8076628509804141;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12800183403126686;  // std dev = 11.334, 590.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=189 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), companyceo(E, F) )
%   | | then return -0.18064450248222005;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04213311144041063;  // std dev = 0.451, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( bankboughtbank(A, G) )
%   | | then return 0.4146651820754806;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( bankboughtbank(H, A) )
%   | | | then return -0.05653852204236091;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12374268389953356;  // std dev = 3.708, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   else if ( acquired(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.5285908079671026;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.11701674285291554;  // std dev = 12.041, 660.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=217 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07780440068723955;  // std dev = 0.409, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7045548021396776;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0979626605664841;  // std dev = 0.445, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   else if ( acquired(F, A) )
%   | then if ( acquired(G, F), acquired(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(H, A), cityhascompanyoffice(I, A) )
%   | | | then return 0.4189229059719973;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08953195917718526;  // std dev = 3.816, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.138786392984408;  // std dev = 4.598, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | | | else return 0.09233375556973836;  // std dev = 10.324, 487.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=159 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.062363836989322796;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.039320921610674506;  // std dev = 0.407, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0.008255632135915599;  // std dev = 0.429, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | else if ( acquired(A, F), acquired(F, G) )
%   | | then if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | | | then return 0.09590355398651101;  // std dev = 1.809, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.04722667437273365;  // std dev = 1.576, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.07608065902565332;  // std dev = 3.749, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.06885986100269413;  // std dev = 11.350, 597.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=192 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( cityhascompanyoffice(E, A), acquired(F, A) )
%   | | then return -0.07589642749707544;  // std dev = 0.285, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( acquired(A, G), companyceo(G, H) )
%   | | | then return 0.21785528931340956;  // std dev = 1.585, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.06873977114460011;  // std dev = 1.781, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.39049476750624035;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.004642730055118714;  // std dev = 0.421, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   else if ( acquired(J, A), acquired(J, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07244983495634605;  // std dev = 11.936, 644.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.7003432927874624;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06951520198154346;  // std dev = 0.417, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( acquired(A, F) )
%   | | then if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | | then return -0.2269600865313237;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.024857807797956325;  // std dev = 1.790, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.05321103893185414;  // std dev = 0.457, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.043146980679717443;  // std dev = 0.461, 697.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.012451462142796372;  // std dev = 0.400, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | else if ( companyalsoknownas(A, E), countryhascompanyoffice(F, A) )
%   | | then return -0.10167766660306883;  // std dev = 0.352, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return 0.21735022523495404;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06587055026722048;  // std dev = 2.958, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   else if ( acquired(I, A) )
%   | then if ( acquired(I, J) )
%   | | then if ( acquired(J, K) )
%   | | | then return 0.19259440607634745;  // std dev = 1.656, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.002112010232422804;  // std dev = 3.511, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(L, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06575890250718569;  // std dev = 0.477, 544.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.04418309061317922;  // std dev = 0.403, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(E, C), acquired(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.014413225464371187;  // std dev = 3.998, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   else if ( acquired(A, F) )
%   | then if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.5576699608441803;  // std dev = 0.479, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(H, A), companyceo(A, I) )
%   | | | then return 0.0595278250529236;  // std dev = 2.915, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.05307476297894056;  // std dev = 2.844, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( acquired(J, A), acquired(J, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.026433416425814125;  // std dev = 0.469, 586.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '8.425', 'seconds']
Refined model CLL: -0.352993


******************************************
Best model found
******************************************
Results 

CLL : -0.353242 

AUC ROC : 0.531445 

AUC PR : 0.02262 

Precision : 0.032882 

Recall : 0.032819 

F1 : 0.03285 

Total Learning Time : 22.693 

Total Inference Time : 164.87290573120117 

Total revision time: 256.425709444046
Best scored revision CLL: -0.352993


Results 

CLL : -0.353242 

AUC ROC : 0.531445 

AUC PR : 0.02262 

Precision : 0.032882 

Recall : 0.032819 

F1 : 0.03285 

Total Learning Time : 256.473134475708 

Total Inference Time : 164.87290573120117 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.641
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2545453314959088;  // std dev = 0.489, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1658412427918186;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | else return 0.19452919104100694;  // std dev = 0.472, 547.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.28329570535178034;  // std dev = 4.876, 96.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.15673855063232944;  // std dev = 4.665, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | | | else return 0.15389854633916059;  // std dev = 11.177, 573.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.007968965938939403;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else return 0.11606939434181385;  // std dev = 4.726, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17070188519359855;  // std dev = 4.681, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
%   | | else return 0.1490984840106136;  // std dev = 0.473, 543.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10772183054346506;  // std dev = 0.474, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.16109661861989802;  // std dev = 0.490, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11381347982514799;  // std dev = 12.066, 662.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.0940191136140217;  // std dev = 2.846, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else return 0.059880606400012686;  // std dev = 4.477, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1192884757287249;  // std dev = 4.645, 90.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08874305537433293;  // std dev = 0.467, 571.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.21165748121278566;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( acquired(D, A) )
%   | then return 0.09194806104075551;  // std dev = 5.170, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.10797903409066853;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.07499844210200199;  // std dev = 11.869, 644.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.08890311029206405;  // std dev = 2.774, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return 0.026848854807606775;  // std dev = 4.500, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07755782705918499;  // std dev = 11.930, 630.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.07740180156694092;  // std dev = 2.326, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.022644699664400872;  // std dev = 1.843, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.049844234890730234;  // std dev = 0.489, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05377149082872744;  // std dev = 0.470, 654.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.051784494056800766;  // std dev = 0.467, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.08236609568001699;  // std dev = 1.986, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.09780676687926382;  // std dev = 3.982, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.022555530212909052;  // std dev = 11.244, 588.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.21273269349077908;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20989420999165026;  // std dev = 1.986, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025750178747935587;  // std dev = 4.592, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.057617542141885116;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02385161115641377;  // std dev = 11.195, 577.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.958', 'seconds']
Parameter learned model CLL:-0.371747 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.489, 67, 44], 'false,true': [4.707, 72, 32], 'false,false': [0.472, 363, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.876, 52, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.665, 68, 32], 'false,false,false,false': [11.177, 389, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.484, 27, 8], 'true,false,false': [4.726, 74, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.681, 56, 36], 'false,false,false': [0.473, 359, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.474, 17, 9], 'true,false': [0.49, 51, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.066, 446, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.846, 25, 12], 'true,false': [4.477, 69, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.645, 54, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.467, 387, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'false,true': [5.17, 70, 44], 'false,false,true': [2.284, 15, 8], 'false,false,false': [11.869, 436, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.774, 22, 12], 'true,false': [4.5, 72, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.93, 410, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.326, 14, 9], 'true,false,true': [1.843, 11, 5], 'true,false,false': [0.489, 46, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 438, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.467, 83, 40], 'false,true,true,true': [1.986, 9, 7], 'false,true,true,false': [3.982, 35, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.244, 404, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.986, 7, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.592, 55, 35], 'false,true': [4.607, 63, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.195, 393, 184]}]
{'': [0.23926629332034827, 0.22170782985410853], 'true': [nan, 0.23926629332034827], 'false': [0.2130177514792913, 0.22322857935423365]}
{'': [0.24764006616147405, 0.21794230591738747], 'false': [nan, 0.21794230591738697], 'false,false': [nan, 0.21794230591738747], 'false,false,false': [0.21759999999999965, 0.21800084671168118]}
{'': [0.20438670981076137, 0.22614149889559293], 'false': [nan, 0.22614149889559293], 'false,false': [0.23818525519848696, 0.22403331874959356], 'false,false,true': [nan, 0.23818525519848696], 'true': [nan, 0.20438670981076165], 'true,false': [0.17632653061224496, 0.2107511569953727]}
{'': [0.2372506163584938, 0.21993974491463097], 'true': [0.224497495760732, 0.2404448666001625], 'false': [nan, 0.21993974491463097], 'false,false': [nan, 0.21993974491463097]}
{'': [0.21025977248186498, 0.2214160926494131], 'false': [0.2397329773300144, 0.21840198011906883], 'false,true': [nan, 0.23973297733001467], 'false,false': [nan, 0.21840198011906883], 'true': [0.2189453942322971, 0.2066249003128002]}
{'': [0.0, 0.2213373591067314], 'false': [0.23445643073443959, 0.21905862282891767], 'false,false': [0.22684310018903614, 0.21874309821317245], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.20929202362465332, 0.22593118384909439], 'false': [nan, 0.22593118384909938], 'false,false': [nan, 0.22593118384909439], 'false,false,false': [nan, 0.22593118384909439], 'true': [0.22627817867427347, 0.2025396798540002]}
{'': [0.23474032887572896, 0.22136629787156406], 'true': [0.23532158726951916, 0.23438651231357746], 'true,false': [0.21224287346287266, 0.23891966759002753], 'false': [nan, 0.22136629787156406], 'false,false': [nan, 0.22136629787156406]}
{'': [0.21848049020559523, 0.21944704459969414], 'false': [0.24752685450569284, 0.21500300800592761], 'false,true': [0.24752685450569284, nan], 'false,true,true': [0.24660595463073096, 0.2477093966090163], 'false,false': [nan, 0.21500300800592761]}
{'': [0.23891505242608216, 0.2182097311596468], 'true': [0.24188642606536045, 0.2343228430063896], 'true,true': [0.0, 0.2464976512504956], 'true,false': [nan, 0.2343228430063896], 'true,false,false': [nan, 0.2343228430063896], 'false': [0.22336682338313466, 0.21719946294855813], 'false,false': [nan, 0.21719946294855813]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 10.969
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then return 0.04419544672741935;  // std dev = 0.389, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   else if ( acquired(E, A) )
%   | then if ( companyceo(E, F), acquired(G, E) )
%   | | then if ( acquired(H, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( companyalsoknownas(E, I), companyceo(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.31968739663797313;  // std dev = 4.403, 78.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=36 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( acquired(A, M), companyceo(A, N) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.19084124279181594;  // std dev = 10.744, 520.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=173 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8173386242508754;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(A, D), companyalsoknownas(A, E) )
%   | then if ( countryhascompanyoffice(F, A), countryhascompanyoffice(F, E) )
%   | | then return -0.14731656889956488;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( countryhascompanyoffice(G, D), cityhascompanyoffice(H, A) )
%   | | | then return 0.2812548596718637;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.034501612918616996;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8116987472551142;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( acquired(A, J), countryhascompanyoffice(K, A) )
%   | | | then return 0.5161071624998443;  // std dev = 1.465, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.16652674275031637;  // std dev = 12.004, 668.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=225 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.7329733955793265;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6850456988590286;  // std dev = 0.225, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(A, E), cityhascompanyoffice(F, E) )
%   | then if ( acquired(E, G), companyceo(G, H) )
%   | | then return -0.1576578750754032;  // std dev = 0.139, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.30318363012601784;  // std dev = 1.031, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.035532133353842754;  // std dev = 1.781, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( companyceo(A, K), countryhascompanyoffice(L, A) )
%   | | | then return -0.16747728646102217;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08468662418113146;  // std dev = 2.652, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.6599281348440573;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.12048257953033253;  // std dev = 12.079, 701.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=222 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.6090218804033112;  // std dev = 0.247, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | else return -0.17060190162223446;  // std dev = 0.277, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( acquired(E, A), countryhascompanyoffice(F, E) )
%   | then if ( bankboughtbank(E, G) )
%   | | then return 0.5339072509842617;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( cityhascompanyoffice(H, E) )
%   | | | then return 0.2576879620733926;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.017331332788109284;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( companyalsoknownas(I, K) )
%   | | | then return 0.05692417924751891;  // std dev = 1.336, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.19546455750577707;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.0865096967307755;  // std dev = 3.230, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.12738372424230238;  // std dev = 10.881, 539.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=186 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then if ( cityhascompanyoffice(D, A), companyceo(E, C) )
%   | then return 0.2027791553725763;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.10251075522549528;  // std dev = 0.307, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else if ( acquired(F, A), countryhascompanyoffice(G, F) )
%   | then if ( countryhascompanyoffice(G, A) )
%   | | then return -0.2815679622103568;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( bankchiefexecutiveceo(F, H), companyceo(I, H) )
%   | | | then return -0.0943731957589717;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09119381220105931;  // std dev = 1.723, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( acquired(A, J), cityhascompanyoffice(K, J) )
%   | | then if ( companyalsoknownas(A, L), cityhascompanyoffice(M, L) )
%   | | | then return -0.1470148153416141;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.23924275920765106;  // std dev = 1.579, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( companyalsoknownas(A, N), companyceo(A, P) )
%   | | | then return -0.011579423915170887;  // std dev = 2.020, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | | else return 0.09403456712898393;  // std dev = 11.754, 692.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=235 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( acquired(A, F), companyalsoknownas(A, G) )
%   | | | then return 0.6688041298252093;  // std dev = 0.199, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.47687774636948516;  // std dev = 0.607, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.16344208235016178;  // std dev = 0.367, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( bankboughtbank(A, H), acquired(I, H) )
%   | | then if ( bankboughtbank(J, A) )
%   | | | then return -0.2058311420830201;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.029348401666153337;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( bankboughtbank(K, A), countryhascompanyoffice(L, K) )
%   | | | then return 0.002780775147963506;  // std dev = 2.051, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.09347820700067844;  // std dev = 11.294, 581.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=204 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( companyceo(C, E) )
%   | then if ( companyalsoknownas(C, F), companyceo(F, G) )
%   | | then return -0.060355335362179637;  // std dev = 0.353, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( acquired(H, C), companyalsoknownas(C, I) )
%   | | | then return 0.4322126662295706;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11822206155824035;  // std dev = 1.750, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else return 0.38286535252539977;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( cityhascompanyoffice(J, A) )
%   | then return 0.008569418986927238;  // std dev = 0.253, 143.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
%   | else if ( acquired(A, K), companyceo(A, L) )
%   | | then if ( companyalsoknownas(K, M) )
%   | | | then return -0.09300803444091846;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2290460971610687;  // std dev = 1.989, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( acquired(N, A), companyceo(N, P) )
%   | | | then return -0.05640798993009658;  // std dev = 1.891, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.06216217503763312;  // std dev = 10.898, 545.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=181 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.4457824365461594;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.2766876727905254;  // std dev = 0.248, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else return -0.13603754405978938;  // std dev = 0.284, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( companyalsoknownas(A, F), acquired(A, G) )
%   | then if ( acquired(H, A) )
%   | | then return 0.09953082544795115;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2046881140874248;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.43662306674003964;  // std dev = 0.000899, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.016663788046031094;  // std dev = 3.631, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.08977305704112065;  // std dev = 2.846, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.06377749353978497;  // std dev = 10.441, 487.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=169 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(E, A), companyceo(A, F) )
%   | then return 0.23122215212339556;  // std dev = 0.648, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.00878470861255367;  // std dev = 0.226, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return -0.16879625857982436;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( acquired(A, H), acquired(I, A) )
%   | then if ( cityhascompanyoffice(J, A), acquired(H, K) )
%   | | then if ( cityhascompanyoffice(L, I) )
%   | | | then return -0.04214077151424706;  // std dev = 0.460, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13300412227964467;  // std dev = 0.589, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.2219439199294091;  // std dev = 0.191, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | then return 0.2586632811437884;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(N, A), cityhascompanyoffice(P, N) )
%   | | | then return 0.11881065755674347;  // std dev = 2.310, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.04477857082335126;  // std dev = 11.283, 651.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=224 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.14866002465472228;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | | | then return 0.035079427022707985;  // std dev = 1.631, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.11582912543448691;  // std dev = 0.952, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( bankboughtbank(H, A), bankchiefexecutiveceo(H, I) )
%   | | then return 0.37324580761420645;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.008361944310605269;  // std dev = 0.367, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   else if ( companyalsoknownas(A, J), companyceo(A, K) )
%   | then return -0.052207526504717355;  // std dev = 0.196, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | then return 0.34642193934404786;  // std dev = 0.262, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( countryhascompanyoffice(M, A), bankboughtbank(N, A) )
%   | | | then return 0.16150167098203605;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03615521532135592;  // std dev = 10.858, 602.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=203 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.373', 'seconds']
Refined model CLL: -0.325314


******************************************
Best model found
******************************************
Results 

CLL : -0.324914 

AUC ROC : 0.702811 

AUC PR : 0.035412 

Precision : 0.072594 

Recall : 0.249035 

F1 : 0.112418 

Total Learning Time : 10.969 

Total Inference Time : 41.46572661399841 

Total revision time: 119.52054391860962
Best scored revision CLL: -0.325314


Results 

CLL : -0.324914 

AUC ROC : 0.702811 

AUC PR : 0.035412 

Precision : 0.072594 

Recall : 0.249035 

F1 : 0.112418 

Total Learning Time : 119.5679689502716 

Total Inference Time : 41.46572661399841 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.651
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19488362897706196;  // std dev = 0.473, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1979547603422294;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | else return 0.1868686582828988;  // std dev = 0.470, 578.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.16946694819885114;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.14761935682263946;  // std dev = 4.895, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.15697492997095974;  // std dev = 11.340, 588.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.1637573515557545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.21403003540189752;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return 0.18702273329734123;  // std dev = 4.672, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09763510786566565;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else return 0.14486326036742717;  // std dev = 0.472, 569.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.004795703673038071;  // std dev = 0.401, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0.10164926936131304;  // std dev = 0.464, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12605354337414737;  // std dev = 12.190, 663.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.03701430243532313;  // std dev = 2.555, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0.1436262247611544;  // std dev = 4.893, 101.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1163572409561368;  // std dev = 3.628, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10157763698891288;  // std dev = 0.472, 566.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.0769441747268346;  // std dev = 4.704, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.08226180402877044;  // std dev = 2.041, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else return 0.09842733246092387;  // std dev = 11.923, 623.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05955552160111424;  // std dev = 2.507, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else return 0.07589502027836437;  // std dev = 4.978, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05338573794972582;  // std dev = 11.910, 649.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08220295527691944;  // std dev = 1.799, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.2966745923203868;  // std dev = 1.903, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return -0.010701732110638015;  // std dev = 0.439, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05759676994043822;  // std dev = 0.474, 658.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.02353684938351048;  // std dev = 0.467, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.11440831926561762;  // std dev = 1.300, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -1.206018032595348E-5;  // std dev = 3.628, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04072670875012537;  // std dev = 11.240, 567.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.16843262879305987;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0717569528774869;  // std dev = 1.977, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06207847834762496;  // std dev = 4.214, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.02300957620495529;  // std dev = 4.803, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03517813713694368;  // std dev = 11.215, 562.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.694', 'seconds']
Parameter learned model CLL:-0.369846 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.473, 65, 33], 'false,true': [4.807, 68, 35], 'false,false': [0.47, 388, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.678, 65, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.895, 76, 35], 'false,false,false,false': [11.34, 398, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.778, 19, 13], 'true,false,false': [4.672, 58, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.769, 49, 20], 'false,false,false': [0.472, 379, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.401, 19, 5], 'true,false': [0.464, 61, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.19, 438, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.555, 24, 9], 'true,false': [4.893, 62, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.628, 39, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 376, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.704, 68, 33], 'false,false,true': [2.041, 25, 5], 'false,false,false': [11.923, 403, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.507, 21, 9], 'true,false': [4.978, 68, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.91, 439, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.799, 10, 5], 'true,false,true': [1.903, 6, 9], 'true,false,false': [0.439, 54, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 433, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.467, 96, 48], 'false,true,true,true': [1.3, 11, 2], 'false,true,true,false': [3.628, 49, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.24, 377, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 3, 0], 'true,true,false': [1.977, 20, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.214, 51, 28], 'false,true': [4.803, 71, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.215, 372, 190]}]
{'': [0.22334443981674446, 0.22123464456907996], 'true': [nan, 0.22334443981674446], 'false': [0.22433782637383498, 0.22066306677362862]}
{'': [0.22334443981674393, 0.218279798011663], 'false': [nan, 0.2182797980116625], 'false,false': [nan, 0.218279798011663], 'false,false,false': [0.21589156724291791, 0.21871673839604724]}
{'': [0.23477112265664662, 0.22083937051523797], 'true': [0.0, 0.23651257928268835], 'true,false': [0.2412109374999998, 0.23470921493814306], 'false': [nan, 0.22083937051523797], 'false,false': [0.2058391094307917, 0.22241715339401633], 'false,false,true': [nan, 0.2058391094307917], 'true,true': [0.0, nan]}
{'': [0.2053776228614832, 0.22412645033998965], 'false': [nan, 0.22412645033998965], 'false,false': [nan, 0.22412645033998965], 'true': [0.1610706124472235, 0.21491909599305725]}
{'': [0.2294875307172616, 0.2230266210537844], 'true': [0.19774435806695895, 0.23705994770806998], 'false': [0.22306585977334692, 0.22300191037471115], 'false,true': [nan, 0.22306585977334684], 'false,false': [nan, 0.22300191037471115]}
{'': [nan, 0.22468647217770926], 'false': [0.21912827845305227, 0.22552288603959392], 'false,false': [0.13888888888888876, 0.22819473357418218]}
{'': [0.22680506288445923, 0.21857977716133473], 'true': [0.2094547300926122, 0.2316111795696252], 'false': [nan, 0.21857977716133495], 'false,false': [nan, 0.21857977716133473], 'false,false,false': [nan, 0.21857977716133473]}
{'': [0.21465201020628188, 0.22489349028183925], 'false': [nan, 0.22489349028183925], 'false,false': [nan, 0.22489349028183925], 'true': [0.2157836775075908, 0.2142201112871689], 'true,false': [0.2413960603946372, 0.19253143178832802]}
{'': [0.21853317857592564, 0.21881465622881718], 'false': [0.18743429938049855, 0.22280700117266672], 'false,false': [nan, 0.22280700117266672], 'false,true': [0.18743429938049855, nan], 'false,true,true': [0.12999035958411695, 0.19645358153040296]}
{'': [0.20672656341407503, 0.22282975820046105], 'false': [0.21765989384679996, 0.22378136041843114], 'false,false': [nan, 0.22378136041843114], 'true': [0.14044659687135358, 0.22477735833850462], 'true,false': [nan, 0.22477735833850462], 'true,false,false': [nan, 0.22477735833850462], 'true,true': [-4.625929269271485e-18, 0.15629881139087323]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 48.089
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, E) )
%   | then return -0.030739953789376676;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( economicsectorcompany(B, C) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.00966408661466381;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | then return 0.03206197857777315;  // std dev = 0.379, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( bankboughtbank(I, A), cityhascompanyoffice(J, I) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( bankchiefexecutiveceo(A, L) )
%   | | | then return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.1685884955390681;  // std dev = 12.484, 728.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=226 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyceo(A, E), acquired(F, D) )
%   | | then return 0.7146723319344637;  // std dev = 0.289, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.8344608538016024;  // std dev = 0.121, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.16174459497034807;  // std dev = 0.112, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( acquired(A, G), acquired(G, H) )
%   | then if ( companyalsoknownas(A, I) )
%   | | then if ( companyalsoknownas(I, H) )
%   | | | then return -0.16363709100376797;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16051743280588865;  // std dev = 1.073, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.15272414307495263;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.8357185500147022;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( companyceo(A, K), companyalsoknownas(A, L) )
%   | | | then return 0.375195162471433;  // std dev = 1.646, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.15905252182290475;  // std dev = 10.986, 557.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=180 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.1424548656186029;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6978971474342228;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.12020150961056036;  // std dev = 3.124, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.041318143284922386;  // std dev = 3.338, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   else if ( companyalsoknownas(A, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.8134156750088831;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.0038469748680137446;  // std dev = 0.373, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | else if ( companyceo(A, H), acquired(I, A) )
%   | | then return 0.05761621632081268;  // std dev = 0.395, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0.23079472175431417;  // std dev = 1.906, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.15452468001636185;  // std dev = 10.764, 542.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=188 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.444, 772.000 (wgt'ed) examples reached here.  /* #neg=514 #pos=258 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(A, D) )
%   then if ( cityhascompanyoffice(E, D) )
%   | then return 0.41315292233526774;  // std dev = 0.678, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.6177509700536739;  // std dev = 0.292, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.5515992175590791;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0712455240778364;  // std dev = 2.505, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   else if ( countryhascompanyoffice(F, A), cityhascompanyoffice(G, A) )
%   | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | then return 0.6353985485933322;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.18174641964050894;  // std dev = 0.050, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then return -0.025701281819729856;  // std dev = 0.333, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( acquired(A, K), acquired(K, L) )
%   | | | then return -0.059902718326145174;  // std dev = 0.791, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10181175978427237;  // std dev = 11.920, 707.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=225 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), acquired(D, E) )
%   | then return 0.5875267039483628;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6595853866564938;  // std dev = 0.094, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | then if ( companyalsoknownas(F, H), acquired(I, H) )
%   | | then return 0.2992532987362353;  // std dev = 1.174, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.010337334584996208;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1541604341483944;  // std dev = 0.960, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | else if ( acquired(A, K), countryhascompanyoffice(L, K) )
%   | | then if ( companyceo(A, M) )
%   | | | then return 9.723357245404921E-4;  // std dev = 1.500, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.16842880864258866;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( companyalsoknownas(A, N), acquired(N, P) )
%   | | | then return 0.13359960195654863;  // std dev = 2.307, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.10356272869919533;  // std dev = 11.485, 652.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=221 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(D, A) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.4992581936211504;  // std dev = 0.200, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyceo(D, E), companyceo(A, F) )
%   | | then return -0.06983518021789066;  // std dev = 0.677, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( acquired(G, D), companyceo(G, H) )
%   | | | then return 0.009691819045772704;  // std dev = 0.751, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2522877235912766;  // std dev = 1.423, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( bankboughtbank(I, A), cityhascompanyoffice(J, I) )
%   | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | then return 0.5885630065800507;  // std dev = 0.113, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.19981888472395032;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | then return -0.00593752288554834;  // std dev = 0.358, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | else if ( acquired(A, N), economicsectorcompany(B, N) )
%   | | | then return 0.4271220439216619;  // std dev = 0.412, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.0788175244428792;  // std dev = 11.275, 635.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=209 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.2763700485722807;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5975123058428731;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then if ( acquired(A, G), companyalsoknownas(F, H) )
%   | | then return 0.3614569075855337;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.45592867022810507;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then if ( companyalsoknownas(A, J), companyceo(A, K) )
%   | | | then return 0.27300256352619157;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4615997622410147;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, L), acquired(L, M) )
%   | | | then return -0.11171470272482617;  // std dev = 1.124, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.0521360219660072;  // std dev = 11.762, 708.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=223 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.29378436950879877;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3550181575185745;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(A, F), acquired(F, E) )
%   | | then return 0.06144996246486396;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( acquired(G, E) )
%   | | | then return -0.19122043489572363;  // std dev = 0.165, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07518295196173709;  // std dev = 3.312, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | else if ( acquired(A, H), acquired(H, I) )
%   | | then if ( companyalsoknownas(A, J) )
%   | | | then return 0.0781112164389948;  // std dev = 0.794, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.16279974439310996;  // std dev = 0.198, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.03769041535723858;  // std dev = 3.657, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | | else return 0.06378969146499477;  // std dev = 10.687, 557.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.03415752070175648;  // std dev = 0.255, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( bankboughtbank(E, A) )
%   | | then return -0.14131129192127068;  // std dev = 0.264, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return 0.024679612520942886;  // std dev = 0.367, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   else if ( bankboughtbank(F, A) )
%   | then if ( cityhascompanyoffice(G, F), companyceo(A, H) )
%   | | then return 0.3009597014885757;  // std dev = 0.650, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( bankboughtbank(F, I), economicsectorcompany(B, I) )
%   | | | then return 0.5191035513874672;  // std dev = 0.296, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.25623758821020376;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return 0.011730795938491839;  // std dev = 0.339, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.3464248371781229;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02615961565412073;  // std dev = 10.508, 533.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=163 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.466', 'seconds']
Refined model CLL: -0.303178


******************************************
Best model found
******************************************
Results 

CLL : -0.303396 

AUC ROC : 0.711148 

AUC PR : 0.087995 

Precision : 0.198777 

Recall : 0.125 

F1 : 0.153483 

Total Learning Time : 48.089 

Total Inference Time : 35.11606979370117 

Total revision time: 151.54041217803956
Best scored revision CLL: -0.303178


Results 

CLL : -0.303396 

AUC ROC : 0.711148 

AUC PR : 0.087995 

Precision : 0.198777 

Recall : 0.125 

F1 : 0.153483 

Total Learning Time : 151.58783720970155 

Total Inference Time : 35.11606979370117 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.767
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.23024195835532496;  // std dev = 0.483, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.20508771060971503;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | else return 0.1863802276165146;  // std dev = 0.470, 588.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.16428984738587207;  // std dev = 4.676, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.119441698971705;  // std dev = 4.920, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | | else return 0.17917272964170328;  // std dev = 11.241, 559.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.7820343557391543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.12305017479389546;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.11213307918642017;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17805017479389557;  // std dev = 3.873, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | else return 0.13305701468638947;  // std dev = 0.469, 593.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08207267305045196;  // std dev = 0.455, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else return 0.02049266620092269;  // std dev = 0.430, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11622199452074079;  // std dev = 12.345, 691.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.11271889575412292;  // std dev = 3.140, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else return 0.07521657471678775;  // std dev = 4.434, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0971537479921427;  // std dev = 4.005, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10094520171715388;  // std dev = 0.472, 576.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0746222554434578;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.04450753289012555;  // std dev = 4.755, 110.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.1704424704252031;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else return 0.09318395282005582;  // std dev = 11.872, 625.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.1402395004423975;  // std dev = 2.918, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else return 0.04962010370917902;  // std dev = 4.426, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08600281424363186;  // std dev = 11.824, 611.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.025791223321523695;  // std dev = 2.520, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.07805850768378542;  // std dev = 2.013, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.0038846861410838725;  // std dev = 0.447, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05056054571614681;  // std dev = 0.472, 675.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.025226974989251933;  // std dev = 0.463, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.15293577384044385;  // std dev = 1.851, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.006011685577932035;  // std dev = 3.626, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.035993876012121964;  // std dev = 11.333, 577.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.5215960018344218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.13375748576779084;  // std dev = 2.144, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09220647219324307;  // std dev = 3.888, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.06977969258610535;  // std dev = 4.666, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03370267243964047;  // std dev = 11.288, 568.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '52.487', 'seconds']
Parameter learned model CLL:-0.373154 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.707, 1, 1], 'true,false': [0.483, 54, 32], 'false,true': [4.712, 64, 34], 'false,false': [0.47, 395, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.676, 65, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.92, 84, 34], 'false,false,false,false': [11.241, 366, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.332, 17, 8], 'true,false,false': [4.885, 80, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.873, 40, 24], 'false,false,false': [0.469, 400, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.455, 20, 9], 'true,false': [0.43, 74, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.345, 464, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.14, 28, 15], 'true,false': [4.434, 66, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.005, 49, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 383, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [4.755, 78, 32], 'false,false,true': [2.652, 17, 12], 'false,false,false': [11.872, 410, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.918, 21, 15], 'true,false': [4.426, 65, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.824, 394, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.52, 25, 9], 'true,false,true': [2.013, 12, 6], 'true,false,false': [0.447, 47, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.472, 448, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.463, 95, 43], 'false,true,true,true': [1.851, 8, 6], 'false,true,true,false': [3.626, 49, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.333, 384, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [2.144, 11, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.888, 41, 24], 'false,true': [4.666, 59, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.288, 375, 193]}]
{'': [0.23437500000000144, 0.22140647179321774], 'true': [0.25, 0.2336398053001637], 'false': [0.22657226155768576, 0.22049551112962465]}
{'': [0.22309079648493213, 0.22291868175143376], 'false': [nan, 0.22291868175143434], 'false,false': [nan, 0.22291868175143376], 'false,false,false': [0.20511347313990186, 0.22605534416491907]}
{'': [0.21246462104906685, 0.22116048288540957], 'false': [nan, 0.22116048288540957], 'false,false': [0.23437499999999944, 0.21953709522848477], 'false,false,true': [nan, 0.23437499999999944], 'true': [0.0, 0.2108064230398647], 'true,false': [0.21759999999999974, 0.20929516774392234], 'true,true': [0.0, nan]}
{'': [0.1906324974909857, 0.22053210158531028], 'false': [nan, 0.22053210158531028], 'false,false': [nan, 0.22053210158531028], 'true': [0.206705388534156, 0.1850103218459365]}
{'': [0.21575694817161148, 0.22245856444623968], 'false': [0.21976821582197043, 0.2227979118441325], 'false,false': [nan, 0.2227979118441325], 'false,true': [nan, 0.21976821582197015], 'true': [0.2292398183993031, 0.20914781983991523]}
{'': [0.24999999999999997, 0.2238542649211105], 'true': [nan, 0.24999999999999997], 'true,false': [nan, 0.24999999999999997], 'false': [0.20557297725776913, 0.22653824719215526], 'false,false': [0.2425683709869203, 0.22552977440567787]}
{'': [0.21950532732257996, 0.22883266244285827], 'false': [nan, 0.22883266244285883], 'false,false': [nan, 0.22883266244285827], 'false,false,false': [nan, 0.22883266244285827], 'true': [0.23660035793477308, 0.21059621005340676]}
{'': [0.20121976676841186, 0.2227562812958604], 'false': [nan, 0.2227562812958604], 'false,false': [nan, 0.2227562812958604], 'true': [0.1867062232301324, 0.20655651961658664], 'true,false': [0.225069535658041, 0.2002366863905322]}
{'': [0.21410131612943512, 0.2208519155017738], 'false': [0.20817140762419442, 0.22260602110359773], 'false,false': [nan, 0.22260602110359773], 'false,true': [0.20817140762419442, nan], 'false,true,true': [0.24464550202117166, 0.19618328681699246]}
{'': [0.23427899895018095, 0.22586881898584632], 'true': [0.23703175091081538, 0.23255810614455122], 'true,true': [0.0, 0.24198617049467255], 'true,false': [nan, 0.23255810614455122], 'true,false,false': [nan, 0.23255810614455122], 'false': [0.23413441783584163, 0.22433234973219535], 'false,false': [nan, 0.22433234973219535]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 11.843
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), cityhascompanyoffice(D, A) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.07653973969721349;  // std dev = 3.854, 87.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   | | | else return 0.1878019319449336;  // std dev = 11.836, 634.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=209 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), countryhascompanyoffice(E, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8123535177027378;  // std dev = 0.148, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( acquired(A, F) )
%   | then if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(H, F), countryhascompanyoffice(H, A) )
%   | | | then return 0.27882186030722783;  // std dev = 1.739, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.05093797133692993;  // std dev = 4.006, 98.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7531412270799964;  // std dev = 1.370, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.16021873944803136;  // std dev = 0.098, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( acquired(K, A), cityhascompanyoffice(L, K) )
%   | | | then return 0.27867393737167956;  // std dev = 2.046, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.16628624838825223;  // std dev = 10.651, 516.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=172 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0.8419118180915084;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6364286869092298;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(F, A), cityhascompanyoffice(G, A) )
%   | | | then return -0.10027706530942762;  // std dev = 0.838, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.07634723769397436;  // std dev = 4.350, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   else if ( companyalsoknownas(A, H) )
%   | then return 0.05115267198968204;  // std dev = 0.405, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6629784328499924;  // std dev = 1.034, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.15966388469242881;  // std dev = 0.202, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( acquired(K, A), companyceo(K, L) )
%   | | | then return 0.06088076497573621;  // std dev = 2.738, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.1569786638455463;  // std dev = 10.290, 487.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=170 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(D, C) )
%   then return 0.39046342559111036;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.6268683282099052;  // std dev = 0.432, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( economicsectorcompany(B, E) )
%   | | | then return 0.5814519644336684;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09036030856943018;  // std dev = 2.153, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( economicsectorcompany(B, G) )
%   | | | then return 0.6271636295438362;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0447699398141757;  // std dev = 3.106, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.12224689699719055;  // std dev = 3.026, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.11259534791082833;  // std dev = 11.189, 607.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=200 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.5574693287286743;  // std dev = 0.229, 59.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | else return -0.1725572084581991;  // std dev = 0.309, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( companyceo(A, E) )
%   | then if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.4891700130120111;  // std dev = 0.191, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.13133511370774975;  // std dev = 1.461, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.05174139583131553;  // std dev = 2.514, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | else if ( acquired(A, H), companyceo(H, I) )
%   | | then if ( bankboughtbank(J, H) )
%   | | | then return -0.18387826580976893;  // std dev = 0.679, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.118363638612879;  // std dev = 1.500, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( acquired(K, A), cityhascompanyoffice(L, K) )
%   | | | then return 0.18590019178192027;  // std dev = 2.069, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.10753034712900586;  // std dev = 10.480, 509.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=175 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.36070566171429447;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( countryhascompanyoffice(D, A) )
%   | | then return -0.0738894561909527;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( acquired(C, E), economicsectorcompany(B, E) )
%   | | | then return 0.5598694496299202;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1320776304406264;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   else if ( bankboughtbank(F, A) )
%   | then return -0.03549801324013421;  // std dev = 0.341, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( acquired(A, G) )
%   | | then if ( companyceo(G, H), cityhascompanyoffice(I, G) )
%   | | | then return 0.27208900005442355;  // std dev = 1.391, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08719155547548436;  // std dev = 3.058, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.08091424155527487;  // std dev = 2.797, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
%   | | | else return 0.0830511532714871;  // std dev = 10.234, 480.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=163 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C), acquired(A, D) )
%   then if ( cityhascompanyoffice(E, D) )
%   | then return 0.07881745660733108;  // std dev = 1.079, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.158155790621836;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else if ( acquired(F, A), companyalsoknownas(F, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.6003969614687245;  // std dev = 0.238, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( economicsectorcompany(B, F) )
%   | | | then return 0.46584141795686457;  // std dev = 0.287, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0896874403042796;  // std dev = 2.124, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | else if ( companyceo(A, H) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.07073146903133541;  // std dev = 2.375, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return -0.020002403968013976;  // std dev = 2.521, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.1485238716639618;  // std dev = 2.589, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0.06440592470838684;  // std dev = 10.627, 560.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=193 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( countryhascompanyoffice(E, A), acquired(F, D) )
%   | | then if ( companyceo(A, G) )
%   | | | then return 0.1784100466918947;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05444242456768156;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(A, H), acquired(A, I) )
%   | | | then return 0.526574367621415;  // std dev = 0.643, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.40597338695963087;  // std dev = 0.878, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else return -0.17089373976110228;  // std dev = 0.036, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | then return 0.45589946346535676;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.4694847613606581;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, L) )
%   | | | then return -0.00326635154386565;  // std dev = 3.030, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.06814875101638299;  // std dev = 10.419, 496.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=173 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.25222474224743485;  // std dev = 0.110, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | | then return -0.19743247967831276;  // std dev = 0.091, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( cityhascompanyoffice(E, C), companyceo(A, F) )
%   | | | then return 0.19966299489147232;  // std dev = 0.991, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.04786929864800884;  // std dev = 3.638, 120.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=26 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.3568652571151668;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyceo(A, H) )
%   | | then if ( bankchiefexecutiveceo(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.08254222322024334;  // std dev = 0.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.051959417145513526;  // std dev = 2.222, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.02249578668503404;  // std dev = 2.324, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | | else return 0.031167168468970136;  // std dev = 10.407, 505.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=166 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0.619487126423944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, F) )
%   | | | then return -0.011056479314565415;  // std dev = 0.679, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09358645880517545;  // std dev = 1.505, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.08295585737926474;  // std dev = 0.151, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else return 0.02667694520194579;  // std dev = 0.399, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else if ( bankboughtbank(H, A) )
%   | then return -0.13148860506412738;  // std dev = 0.300, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.22890824759228537;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( acquired(A, J) )
%   | | | then return -0.03341002851261124;  // std dev = 3.404, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return 0.01868867992184916;  // std dev = 10.433, 580.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=191 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.046', 'seconds']
Refined model CLL: -0.307602


******************************************
Best model found
******************************************
Results 

CLL : -0.307739 

AUC ROC : 0.746462 

AUC PR : 0.074296 

Precision : 0.069994 

Recall : 0.235521 

F1 : 0.107917 

Total Learning Time : 11.843 

Total Inference Time : 46.10567259788513 

Total revision time: 131.28935824394227
Best scored revision CLL: -0.307602


Results 

CLL : -0.307739 

AUC ROC : 0.746462 

AUC PR : 0.074296 

Precision : 0.069994 

Recall : 0.235521 

F1 : 0.107917 

Total Learning Time : 131.43337403297426 

Total Inference Time : 46.10567259788513 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.404
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2310302910317157;  // std dev = 0.484, 118.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.1813812583318342;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else return 0.2014325171890601;  // std dev = 0.475, 536.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.22763668252825078;  // std dev = 5.138, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.12289283759180436;  // std dev = 4.772, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | | | else return 0.1663635304077712;  // std dev = 11.065, 550.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.15261788966150258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.17366145263249566;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.09279821345252229;  // std dev = 4.814, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20179998077102376;  // std dev = 4.612, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
%   | | else return 0.13290820163532405;  // std dev = 0.469, 565.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.12439618679448058;  // std dev = 0.477, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0.13875356761220717;  // std dev = 0.486, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11842526169149063;  // std dev = 12.030, 654.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.08954716314572879;  // std dev = 2.847, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else return 0.12947373236287754;  // std dev = 4.265, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07123243273926398;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07963419844667231;  // std dev = 0.464, 585.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.12419362219289518;  // std dev = 5.110, 108.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.1485785188482941;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.09374095166325894;  // std dev = 11.698, 608.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.017558546649881067;  // std dev = 2.932, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else return 0.020276112598310705;  // std dev = 4.488, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06349225098701383;  // std dev = 12.060, 655.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.005569779410162438;  // std dev = 2.469, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.015435632817680045;  // std dev = 1.831, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.13194816374374466;  // std dev = 0.498, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04426400585293382;  // std dev = 0.467, 672.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.054603684157134263;  // std dev = 0.471, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.047276209880409543;  // std dev = 2.064, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.07670030267144357;  // std dev = 4.093, 68.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0466623043284063;  // std dev = 11.055, 548.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07614856048357241;  // std dev = 2.312, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.030762156419216015;  // std dev = 4.827, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.007287343635616034;  // std dev = 4.772, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.023453849539703493;  // std dev = 11.167, 571.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '3.074', 'seconds']
Parameter learned model CLL:-0.369195 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.484, 74, 44], 'false,true': [4.654, 67, 32], 'false,false': [0.475, 352, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.138, 66, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.772, 79, 32], 'false,false,false,false': [11.065, 366, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.225, 13, 8], 'true,false,false': [4.814, 84, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.612, 52, 36], 'false,false,false': [0.469, 381, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.477, 16, 9], 'true,false': [0.486, 57, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.03, 438, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.847, 26, 12], 'true,false': [4.265, 51, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.876, 70, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.464, 401, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.11, 64, 44], 'false,false,true': [2.225, 13, 8], 'false,false,false': [11.698, 400, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.932, 28, 12], 'true,false': [4.488, 69, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.06, 435, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.469, 19, 9], 'true,false,true': [1.831, 10, 5], 'true,false,false': [0.498, 36, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.467, 456, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.471, 80, 40], 'false,true,true,true': [2.064, 11, 7], 'false,true,true,false': [4.093, 39, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.055, 364, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.312, 13, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.827, 71, 35], 'false,true': [4.772, 79, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.167, 387, 184]}]
{'': [0.23303439022667988, 0.22445036890074033], 'true': [0.0, 0.2338408503303658], 'false': [0.2187531884501595, 0.22543996435732094]}
{'': [0.24000000000000044, 0.21995906815353655], 'false': [nan, 0.21995906815353894], 'false,false': [nan, 0.21995906815353655], 'false,false,false': [0.20517815112409754, 0.22262479338842425]}
{'': [0.2051235318221755, 0.2231423796552954], 'false': [nan, 0.2231423796552954], 'false,false': [0.24173553719008298, 0.21960686036494567], 'false,false,true': [nan, 0.24173553719008298], 'true': [0.0, 0.2061391417495451], 'true,false': [0.23582766439909328, 0.19976218787158126], 'true,true': [0.0, nan]}
{'': [0.23392269746969005, 0.2212781880785473], 'true': [0.22717077592098192, 0.23571341295156462], 'false': [nan, 0.2212781880785473], 'false,false': [nan, 0.2212781880785473]}
{'': [0.22510322349448902, 0.2169487863757897], 'true': [0.21327938053557638, 0.23027288970081916], 'false': [0.22432812242637146, 0.21560084739571975], 'false,true': [nan, 0.2243281224263714], 'false,false': [nan, 0.21560084739571975]}
{'': [nan, 0.22801824326997747], 'false': [0.24177079458104894, 0.22553686784305657], 'false,false': [0.23582766439909297, 0.2250810311585021]}
{'': [0.20978622116380408, 0.22204607904534968], 'false': [nan, 0.2220460790453498], 'false,false': [nan, 0.22204607904534968], 'false,false,false': [nan, 0.22204607904534968], 'true': [0.2149513609842574, 0.2076541103462061]}
{'': [0.240427411634754, 0.2180419686571632], 'true': [0.21773404375628796, 0.24545059412183654], 'true,false': [0.22346286783099142, 0.2479338842975208], 'false': [nan, 0.2180419686571632], 'false,false': [nan, 0.2180419686571632]}
{'': [0.22209620800842408, 0.22600738396453202], 'false': [0.24450367107538085, 0.22302733230326596], 'false,true': [0.24450367107538085, nan], 'false,true,true': [0.23671048126548877, 0.24638536507130174], 'false,false': [nan, 0.22302733230326596]}
{'': [0.22544227026134694, 0.21627767468967646], 'true': [0.24298309354061287, 0.21983720773239726], 'true,true': [nan, 0.24298309354061276], 'true,false': [nan, 0.21983720773239726], 'true,false,false': [nan, 0.21983720773239726], 'false': [0.20513112284092302, 0.21840198011906045], 'false,false': [nan, 0.21840198011906045]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 7.896
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.15162719596907648;  // std dev = 4.368, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return 0.12864073837819945;  // std dev = 0.444, 122.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   | else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | | then if ( acquired(G, I), countryhascompanyoffice(H, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4137044906550678;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.19670079419931222;  // std dev = 10.697, 511.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=173 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( companyceo(A, D) )
%   | then if ( cityhascompanyoffice(E, C) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.33867100894942304;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.6749025567259227;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyalsoknownas(A, G), acquired(A, H) )
%   | | then if ( companyceo(A, I), countryhascompanyoffice(J, G) )
%   | | | then return 0.161503234142202;  // std dev = 1.360, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.03114418119286175;  // std dev = 1.869, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.2862696068067575;  // std dev = 4.033, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   | | | else return 0.16514446846299624;  // std dev = 11.578, 607.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=201 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.13810202504785277;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return 0.0227051836591306;  // std dev = 0.377, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( cityhascompanyoffice(F, A), companyceo(A, G) )
%   | | | then return 0.42249101009013545;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.13739436627581683;  // std dev = 4.130, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   else if ( bankchiefexecutiveceo(A, H) )
%   | then return -0.05929084144862989;  // std dev = 0.339, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.7803418283616022;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.20134052991644524;  // std dev = 0.168, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( companyceo(A, K), cityhascompanyoffice(L, A) )
%   | | | then return 0.2723508041501017;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1454847873882877;  // std dev = 11.397, 592.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=202 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.519274752664466;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(D, A), bankboughtbank(D, E) )
%   | then return 0.5671076691323892;  // std dev = 0.966, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.11298027647425994;  // std dev = 0.464, 732.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=241 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.5844740790413763;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7773012675581312;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( countryhascompanyoffice(E, A) )
%   | then if ( acquired(A, F), bankboughtbank(G, F) )
%   | | then return 0.47887840921910385;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyalsoknownas(A, H), acquired(A, I) )
%   | | | then return -0.1100661275702556;  // std dev = 0.946, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.02024178207581814;  // std dev = 3.158, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( acquired(A, J), acquired(K, A) )
%   | | then if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.15492532226970157;  // std dev = 1.762, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.21092134145727978;  // std dev = 0.157, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.3886932952056534;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.07530651823076247;  // std dev = 12.003, 676.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=210 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( bankboughtbank(D, C), bankboughtbank(E, D) )
%   | then return 0.6436659938826174;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, F) )
%   | | then return -0.018328386723747467;  // std dev = 0.411, 93.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=22 */
%   | | else if ( countryhascompanyoffice(G, A), acquired(C, H) )
%   | | | then return -0.24988030806764025;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14262421070407214;  // std dev = 2.832, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | then return 0.3012405109733166;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( companyceo(A, J) )
%   | | then if ( bankboughtbank(K, A) )
%   | | | then return -0.0929801382116062;  // std dev = 1.087, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.062220914211412515;  // std dev = 2.686, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( acquired(L, A), bankboughtbank(L, M) )
%   | | | then return -0.06911596449823255;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.10148873895334307;  // std dev = 10.982, 545.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=192 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(D, A), acquired(C, E) )
%   | then return 0.4352273323552744;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( acquired(A, F), countryhascompanyoffice(G, A) )
%   | | then return -0.13916735049453047;  // std dev = 0.225, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else return 0.0631905897488798;  // std dev = 0.429, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else if ( acquired(H, A), cityhascompanyoffice(I, H) )
%   | then if ( companyalsoknownas(H, J), companyceo(J, K) )
%   | | then return -0.04833267667252101;  // std dev = 0.378, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( cityhascompanyoffice(I, L), economicsectorcompany(B, L) )
%   | | | then return 0.45177670735027614;  // std dev = 0.716, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.09258644254471994;  // std dev = 2.070, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( acquired(M, A), companyceo(M, N) )
%   | | then return -0.10393048209602321;  // std dev = 0.289, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( countryhascompanyoffice(P, A), bankchiefexecutiveceo(A, Q) )
%   | | | then return 0.18788096524162493;  // std dev = 1.395, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0484564302833314;  // std dev = 11.603, 636.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=204 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.3597004689367327;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5817435152817493;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( acquired(F, E) )
%   | | then return -0.24540003604070726;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(G, A), companyceo(E, H) )
%   | | | then return 0.34088362526675803;  // std dev = 0.850, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03550536409314413;  // std dev = 3.156, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.5795531527100315;  // std dev = 1.839, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return -0.2712714752495688;  // std dev = 0.252, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( acquired(A, K), companyalsoknownas(K, L) )
%   | | | then return 0.7011432023556606;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07523183746814473;  // std dev = 10.809, 530.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=193 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | then return 0.1475831655780846;  // std dev = 0.256, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24218140742957123;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.6121370474899618;  // std dev = 0.196, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(F, E), companyceo(A, G) )
%   | | | then return -0.19208952280212815;  // std dev = 0.668, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.018946362732173882;  // std dev = 4.398, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then if ( cityhascompanyoffice(I, H) )
%   | | | then return 0.4189825946677226;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.31321820698796166;  // std dev = 0.182, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankboughtbank(J, A), countryhascompanyoffice(K, J) )
%   | | | then return -0.03621664618692434;  // std dev = 1.623, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.04826599964424751;  // std dev = 11.010, 580.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=195 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C) )
%   then return -0.08352306148502298;  // std dev = 0.360, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   else if ( companyceo(A, D), acquired(A, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then if ( companyalsoknownas(A, G), companyalsoknownas(E, G) )
%   | | | then return 0.17836904011458507;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.004861350908868027;  // std dev = 2.196, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.28354321601577037;  // std dev = 1.019, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1268791437745875;  // std dev = 1.751, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then if ( acquired(A, K) )
%   | | | then return -0.2769551315869067;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.013096432188047747;  // std dev = 2.666, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return -0.012909697183297136;  // std dev = 2.485, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.024068489399904875;  // std dev = 11.098, 596.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=199 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.486', 'seconds']
Refined model CLL: -0.339964


******************************************
Best model found
******************************************
Results 

CLL : -0.339805 

AUC ROC : 0.710024 

AUC PR : 0.045484 

Precision : 0.030448 

Recall : 0.098456 

F1 : 0.046512 

Total Learning Time : 7.896 

Total Inference Time : 24.655072689056396 

Total revision time: 105.22606425285339
Best scored revision CLL: -0.339964


Results 

CLL : -0.339805 

AUC ROC : 0.710024 

AUC PR : 0.045484 

Precision : 0.030448 

Recall : 0.098456 

F1 : 0.046512 

Total Learning Time : 105.37008004188537 

Total Inference Time : 24.655072689056396 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.586
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.06648226843284567;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2314822684328444;  // std dev = 0.484, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.19148226843284427;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | else return 0.19265597735302895;  // std dev = 0.472, 568.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13142222304255713;  // std dev = 4.804, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.18674084476690264;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.16176203547506612;  // std dev = 11.294, 578.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.16768894238185444;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.24944000006935005;  // std dev = 2.712, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.1454226503188686;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1128761823800425;  // std dev = 3.731, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.14799849304358217;  // std dev = 0.473, 561.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.0687555841937982;  // std dev = 0.437, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.10971087974112415;  // std dev = 0.467, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11336443808564921;  // std dev = 12.292, 685.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.024013799441870886;  // std dev = 2.589, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else return 0.1307046967782428;  // std dev = 4.951, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06220240197706389;  // std dev = 3.762, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11053313931653341;  // std dev = 0.475, 551.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.0400093934918574;  // std dev = 4.844, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.057323233240906324;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return 0.07557044431547076;  // std dev = 12.128, 664.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.041928508537447555;  // std dev = 2.547, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0.11498618617985146;  // std dev = 4.863, 99.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056380271069836826;  // std dev = 11.914, 651.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.08207531589884647;  // std dev = 1.831, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.3863443438704432;  // std dev = 1.656, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.06394328540841344;  // std dev = 0.467, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0683008411079021;  // std dev = 0.476, 643.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.023558071541398943;  // std dev = 0.467, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.12007244844839168;  // std dev = 1.299, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.05533525535118412;  // std dev = 3.483, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.033046020974251106;  // std dev = 11.303, 580.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.059669183074121133;  // std dev = 1.992, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05910504415374673;  // std dev = 4.157, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.10296580292190682;  // std dev = 4.521, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.023333323221031845;  // std dev = 11.327, 585.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '54.304', 'seconds']
Parameter learned model CLL:-0.370266 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.99, 19, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.484, 47, 28], 'false,true': [4.83, 70, 35], 'false,false': [0.472, 378, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.804, 77, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 64, 35], 'false,false,false,false': [11.294, 388, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.712, 17, 13], 'true,false,false': [4.807, 68, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.731, 46, 20], 'false,false,false': [0.473, 371, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.437, 14, 5], 'true,false': [0.467, 58, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.292, 460, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.589, 26, 9], 'true,false': [4.951, 66, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.762, 50, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.475, 361, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.844, 83, 33], 'false,false,true': [2.018, 22, 5], 'false,false,false': [12.128, 444, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.547, 24, 9], 'true,false': [4.863, 60, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.914, 441, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.831, 11, 5], 'true,false,true': [1.656, 4, 9], 'true,false,false': [0.467, 40, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.476, 418, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.467, 96, 48], 'false,true,true,true': [1.299, 12, 2], 'false,true,true,false': [3.483, 38, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.303, 390, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.992, 21, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.157, 49, 28], 'false,true': [4.521, 50, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.327, 395, 190]}]
{'': [0.22222222222222363, 0.22255143742176164], 'false': [0.22222222222222365, 0.222612080936325], 'true': [0.16493055555555544, 0.23395555555555694], 'true,false': [nan, 0.23395555555555694]}
{'': [0.20978730678638255, 0.22189402143845052], 'false': [nan, 0.22189402143844905], 'false,false': [nan, 0.22189402143845052], 'false,false,false': [0.2285481073359868, 0.2206630667736321]}
{'': [0.22915390970848198, 0.22271220236922562], 'true': [0.0, 0.230921578935642], 'true,false': [0.24514670033474825, 0.22433782637383484], 'false': [nan, 0.22271220236922562], 'false,false': [0.21086486437610663, 0.2239761566593894], 'false,false,true': [nan, 0.21086486437610663], 'true,true': [0.0, nan]}
{'': [0.2136938776790082, 0.2205589334596057], 'false': [nan, 0.2205589334596057], 'false,false': [nan, 0.2205589334596057], 'true': [0.19058626351457308, 0.21849553026513474]}
{'': [0.22509880698328927, 0.2234740797301267], 'true': [0.19150513239838007, 0.2334509616179819], 'false': [0.2021366540357167, 0.22592152199762092], 'false,false': [nan, 0.22592152199762092], 'false,true': [nan, 0.20213665403571668]}
{'': [nan, 0.2170822238704698], 'false': [0.20225531369581876, 0.2194386918267878], 'false,false': [0.15089163237311395, 0.22153592503414712]}
{'': [0.2293010402203372, 0.2180512620669322], 'true': [0.19655477162311855, 0.2388821070204518], 'false': [nan, 0.21805126206693148], 'false,false': [nan, 0.2180512620669322], 'false,false,false': [nan, 0.2180512620669322]}
{'': [0.22847745720341486, 0.22704463039686257], 'true': [0.2095875625159437, 0.23238314830157947], 'true,false': [0.21099653876197402, 0.21832806664751483], 'false': [nan, 0.22704463039686257], 'false,false': [nan, 0.22704463039686257]}
{'': [0.2181264635475649, 0.2183595496425455], 'false': [0.20235521682929297, 0.22027348394768492], 'false,false': [nan, 0.22027348394768492], 'false,true': [0.20235521682929297, nan], 'false,true,true': [0.1204909616613137, 0.21666770811084]}
{'': [0.20899693227783833, 0.22268558202517372], 'false': [0.24044836157131103, 0.21930016801811986], 'false,false': [nan, 0.21930016801811986], 'true': [0.15260414775653725, 0.22447758140238555], 'true,false': [nan, 0.22447758140238555], 'true,false,false': [nan, 0.22447758140238555], 'true,true': [nan, 0.15260414775653725]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true


Refining candidate
***************************
Model training time 27.078
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.7581489350995123;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.10814893509951237;  // std dev = 0.433, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else if ( bankboughtbank(F, A), acquired(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4581489350995123;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.8318331456258272;  // std dev = 0.160, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( acquired(J, A) )
%   | | then return 0.13756069980539468;  // std dev = 0.449, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( countryhascompanyoffice(K, A), acquired(A, L) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.19075763075168214;  // std dev = 10.105, 460.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=153 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.772993067702313;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then if ( companyalsoknownas(D, F) )
%   | | | then return 0.4086172170504928;  // std dev = 0.980, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0031778477155205227;  // std dev = 1.536, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else return -0.15617993763982246;  // std dev = 0.031, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | then if ( cityhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | then return 0.8125703518515184;  // std dev = 0.168, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.16096438125729956;  // std dev = 0.091, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.8164796895678766;  // std dev = 0.140, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.029438331591384204;  // std dev = 3.260, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | | else return 0.16403374567755555;  // std dev = 11.450, 616.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=206 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), bankchiefexecutiveceo(A, F) )
%   | | then return 0.4883534041520096;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.737059013422703;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14483067706609815;  // std dev = 4.588, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.8092599410151872;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( companyceo(A, J) )
%   | | | then return 0.164555125022485;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.02536442811618344;  // std dev = 2.145, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( bankboughtbank(K, A), bankboughtbank(L, K) )
%   | | | then return -0.049319259466588605;  // std dev = 0.886, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.14394348661296566;  // std dev = 11.081, 585.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=198 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), companyalsoknownas(A, D) )
%   then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then return 0.5330998147641257;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, F), countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.7103540708488663;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18698046535683865;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.08374595511238636;  // std dev = 0.405, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( companyalsoknownas(A, I), countryhascompanyoffice(J, I) )
%   | then return -0.03452104249218415;  // std dev = 0.351, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( bankboughtbank(K, A) )
%   | | then if ( bankboughtbank(A, L) )
%   | | | then return -0.03227961857723797;  // std dev = 0.891, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.22495232702310458;  // std dev = 2.138, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.6513179137840892;  // std dev = 0.252, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.09069168141389654;  // std dev = 11.670, 690.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=211 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.6505120903346395;  // std dev = 0.309, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2083622991316757;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.7188376094804181;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then if ( acquired(A, H), companyceo(A, I) )
%   | | then return 0.6106160558155675;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.47944538494135935;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( acquired(J, A) )
%   | | then if ( companyalsoknownas(J, K), acquired(L, K) )
%   | | | then return 0.3018774508806059;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.033978236915044764;  // std dev = 3.224, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.09703963470386877;  // std dev = 4.504, 137.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=49 */
%   | | | else return 0.10581936650039653;  // std dev = 10.477, 500.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=169 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3848565217734288;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(A, E) )
%   | | then if ( companyalsoknownas(D, F) )
%   | | | then return -0.0035876432150635687;  // std dev = 1.246, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.279849110774353;  // std dev = 1.299, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( bankchiefexecutiveceo(A, G) )
%   | | | then return 0.18613724190495035;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04259421759704773;  // std dev = 2.664, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then if ( companyceo(A, I), companyalsoknownas(A, J) )
%   | | | then return 0.13826446815374932;  // std dev = 1.397, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.006896133497403607;  // std dev = 3.062, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( bankboughtbank(K, A) )
%   | | | then return 0.3377876259228454;  // std dev = 1.346, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.09477995150743514;  // std dev = 10.802, 566.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=197 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, A) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.4125066027206046;  // std dev = 0.236, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.40937986436272383;  // std dev = 0.212, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(C, F), acquired(C, G) )
%   | | | then return -0.08091187097945365;  // std dev = 0.828, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.06975544107626139;  // std dev = 2.413, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   else if ( bankboughtbank(H, A), cityhascompanyoffice(I, H) )
%   | then return 0.2449000363092284;  // std dev = 0.338, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( acquired(J, A), companyalsoknownas(J, K) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.5163834353605518;  // std dev = 0.484, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.00405995038134543;  // std dev = 1.702, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.010806512763916391;  // std dev = 3.984, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | | else return 0.038849409043487;  // std dev = 10.937, 591.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=180 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.30812800521575073;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.31487205762791015;  // std dev = 0.238, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | | | then return -0.16370092052464932;  // std dev = 0.626, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.005066458730954186;  // std dev = 4.303, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   else if ( acquired(H, A), companyceo(H, I) )
%   | then return -0.024670626301212546;  // std dev = 0.323, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.5643050506073041;  // std dev = 0.339, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14886340237907056;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.0715089091542214;  // std dev = 3.588, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return 0.04779483622820406;  // std dev = 10.331, 501.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=161 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.259155802970425;  // std dev = 0.072, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyceo(A, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.19743555629851636;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3618470664606704;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(G, A) )
%   | | | then return -0.09679224340415883;  // std dev = 1.297, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return -0.014688673554368906;  // std dev = 4.143, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | else if ( acquired(H, A), acquired(A, I) )
%   | | then if ( cityhascompanyoffice(J, A) )
%   | | | then return -0.010690785360029688;  // std dev = 0.555, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3060778812930413;  // std dev = 1.240, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.5927341597273843;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.028832515842553277;  // std dev = 11.027, 619.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=191 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.23872306934369267;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.332525481515658;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | | | then return 0.005163510443659924;  // std dev = 0.969, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.1325933977253541;  // std dev = 1.323, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return -0.13987468928473;  // std dev = 0.180, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | then if ( companyalsoknownas(A, K) )
%   | | | then return 0.22610429848542543;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44076688793661;  // std dev = 0.395, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(L, A), companyalsoknownas(L, L) )
%   | | | then return -0.1597184135256024;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.035469558400712586;  // std dev = 11.731, 709.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=236 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.844', 'seconds']
Refined model CLL: -0.316654


******************************************
Best model found
******************************************
Results 

CLL : -0.316933 

AUC ROC : 0.691042 

AUC PR : 0.053241 

Precision : 0.021952 

Recall : 0.107692 

F1 : 0.03647 

Total Learning Time : 27.078 

Total Inference Time : 59.84902763366699 

Total revision time: 154.10090872192382
Best scored revision CLL: -0.316654


Results 

CLL : -0.316933 

AUC ROC : 0.691042 

AUC PR : 0.053241 

Precision : 0.021952 

Recall : 0.107692 

F1 : 0.03647 

Total Learning Time : 154.2449245109558 

Total Inference Time : 59.84902763366699 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.602
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1134680840356819;  // std dev = 0.436, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.19478259846584758;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | else return 0.20969720468056433;  // std dev = 0.477, 549.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=193 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.1928088404483088;  // std dev = 4.622, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.20231154370337312;  // std dev = 4.630, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return 0.15394178205794692;  // std dev = 11.428, 597.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.30466482438017795;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.10982897547688708;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.11745941424942899;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1006404849349407;  // std dev = 4.133, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else return 0.162018941249679;  // std dev = 0.478, 545.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=193 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1323593068779699;  // std dev = 0.474, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else return 0.07349417512987792;  // std dev = 0.445, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1064889816937958;  // std dev = 12.381, 699.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=227 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.10625231522052939;  // std dev = 3.129, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else return 0.07097788844906316;  // std dev = 4.423, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12824943135976102;  // std dev = 3.959, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12967688459020046;  // std dev = 0.482, 526.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=193 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2052515869321918;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.05609794633946859;  // std dev = 4.755, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.17368244801361196;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else return 0.07136980770217545;  // std dev = 11.987, 649.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.07982327759674636;  // std dev = 3.069, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else return 0.09268705043344479;  // std dev = 4.276, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08005577945436552;  // std dev = 11.850, 616.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.2738119317606271;  // std dev = 1.967, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return 0.04765322450969336;  // std dev = 2.052, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return -0.021388527438751755;  // std dev = 0.425, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04624304853180725;  // std dev = 0.473, 673.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=227 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.01432355265748123;  // std dev = 0.461, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.0015338668630826345;  // std dev = 2.079, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.014401927807659465;  // std dev = 3.582, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02131458026595757;  // std dev = 11.433, 598.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.09241432603187545;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.05990897763491436;  // std dev = 2.389, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04965673975818589;  // std dev = 4.076, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   else if ( acquired(A, G) )
%   | then return 0.047435882901805115;  // std dev = 4.697, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03870786453180363;  // std dev = 11.247, 560.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '58.846', 'seconds']
Parameter learned model CLL:-0.370929 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [2.449, 18, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.436, 70, 24], 'false,true': [4.749, 67, 34], 'false,false': [0.477, 356, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.622, 61, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.63, 58, 34], 'false,false,false,false': [11.428, 404, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.373, 19, 8], 'true,false,false': [4.827, 74, 34], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.133, 60, 24], 'false,false,false': [0.478, 352, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.474, 17, 9], 'true,false': [0.445, 64, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.381, 472, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [3.129, 29, 15], 'true,false': [4.423, 65, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.959, 46, 24], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.482, 333, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'true': 'acquired(C, C)', 'true,false': 'acquired(C, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [4.755, 77, 32], 'false,false,true': [2.619, 16, 12], 'false,false,false': [11.987, 434, 215]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [3.069, 26, 15], 'true,false': [4.276, 52, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.85, 399, 217]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.967, 7, 9], 'true,false,true': [2.052, 14, 6], 'true,false,false': [0.425, 58, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.473, 446, 227]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.461, 96, 43], 'false,true,true,true': [2.079, 15, 6], 'false,true,true,false': [3.582, 45, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.433, 405, 193]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.816, 2, 1], 'true,true,false': [2.389, 20, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.076, 54, 24], 'false,true': [4.697, 64, 34], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.247, 367, 193]}]
{'': [0.1983471074380178, 0.2272686390532569], 'false': [0.223311440054898, 0.22796208373562427], 'true': [0.2222222222222223, 0.19013128112268093], 'true,false': [nan, 0.19013128112268093]}
{'': [0.22723283643344805, 0.2209399897226974], 'false': [nan, 0.22093998972269607], 'false,false': [nan, 0.2209399897226974], 'false,false,false': [0.2329867674858208, 0.21877113091981149]}
{'': [0.21532773308451159, 0.22577133145962802], 'false': [nan, 0.22577133145962802], 'false,false': [0.2033662266095833, 0.22872148809023232], 'true': [0.25, 0.21429407602724046], 'true,true': [0.25, nan], 'true,false': [0.20859801250779633, 0.21570644718792917], 'false,false,true': [nan, 0.2033662266095833]}
{'': [0.2049833822347627, 0.2193065151734812], 'false': [nan, 0.2193065151734812], 'false,false': [nan, 0.2193065151734812], 'true': [0.2248609735846789, 0.1983201707008237]}
{'': [0.2145512651955485, 0.23130138289801522], 'false': [0.2238726811358305, 0.23228975408058758], 'false,false': [nan, 0.23228975408058758], 'false,true': [nan, 0.2238726811358305], 'true': [0.22254820699361175, 0.21036814141155316]}
{'': [0.25, 0.2207009373992949], 'true': [nan, 0.25], 'true,false': [nan, 0.25], 'false': [0.20744766836830103, 0.2227820221641602], 'false,false': [0.24489795918367335, 0.22139492748266118]}
{'': [0.22898635708497225, 0.22795386936320394], 'true': [0.22970944535634158, 0.22855970374494178], 'false': [nan, 0.22795386936320441], 'false,false': [nan, 0.22795386936320394], 'false,false,false': [nan, 0.22795386936320394]}
{'': [0.2051273753582937, 0.2233203718911752], 'false': [nan, 0.2233203718911752], 'false,false': [nan, 0.2233203718911752], 'true': [0.24188934232711928, 0.18773494469358507], 'true,false': [0.21051194148563002, 0.18074792243767296]}
{'': [0.21231200296810301, 0.21682912649658428], 'false': [0.20427624148168522, 0.2185797698012362], 'false,false': [nan, 0.2185797698012362], 'false,true': [0.20427624148168522, nan], 'false,true,true': [0.20588469101554874, 0.20369869488894538]}
{'': [0.21350978083856637, 0.22575996333908965], 'false': [0.22509973174407566, 0.22586415816326696], 'false,false': [nan, 0.22586415816326696], 'true': [0.20572816364592056, 0.21298945077465467], 'true,false': [nan, 0.21298945077465467], 'true,false,false': [nan, 0.21298945077465467], 'true,true': [0.22222222222222224, 0.20385869169632811]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(D, C).;true;true
0;true,false;acquired(A, C).;true;true
0;false;acquired(E, F), acquired(A, F).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,true;acquired(C, E).;true;true
2;true,false;acquired(F, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(A, H).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;true;acquired(C, C).;true;true
5;true,false;acquired(C, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 9.429
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06648226843284567;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), bankchiefexecutiveceo(F, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.178148935099512;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   else if ( acquired(H, I), acquired(A, I) )
%   | then return 0.15639454913459863;  // std dev = 0.457, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | else if ( companyceo(A, J) )
%   | | then return 0.1308762078267851;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.237895770542549;  // std dev = 4.314, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | | | else return 0.20577873193923715;  // std dev = 10.023, 443.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=154 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then return 0.8182560434073274;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16105196291747131;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.5115913012565044;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(A, G), countryhascompanyoffice(H, A) )
%   | | | then return 0.035050256099500986;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.21822687613954794;  // std dev = 3.786, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   else if ( acquired(A, I), acquired(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A), acquired(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0.16812202225491665;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | | else return 0.17651356461507542;  // std dev = 11.237, 559.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=193 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return 0.2724023876843502;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.10724403322108583;  // std dev = 0.413, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( companyceo(A, G), cityhascompanyoffice(H, A) )
%   | | | then return 0.2612578308568716;  // std dev = 3.065, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.060266221398443294;  // std dev = 3.579, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A) )
%   | | then return 0.11544130212536959;  // std dev = 0.446, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else if ( bankchiefexecutiveceo(A, J), companyceo(K, J) )
%   | | | then return 0.4754757801417652;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14122611011090883;  // std dev = 11.255, 568.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=191 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), companyalsoknownas(E, F) )
%   | | then return 0.030670726255572506;  // std dev = 0.385, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.23414951751663113;  // std dev = 0.454, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, H), bankboughtbank(H, I) )
%   | | | then return 0.323944568307216;  // std dev = 1.554, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.20067700118961748;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.020732959029136643;  // std dev = 0.407, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   else if ( acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.1550408896405937;  // std dev = 4.408, 83.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
%   | | | else return 0.12587258227032916;  // std dev = 11.333, 572.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=196 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then if ( companyalsoknownas(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.736797157808594;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.27260254106773735;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.7510601712757223;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11538411796161568;  // std dev = 1.886, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else return 0.0935713211235442;  // std dev = 0.460, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( acquired(H, A) )
%   | then return 0.11449603174886382;  // std dev = 0.452, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | else if ( acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.12009971212286547;  // std dev = 4.640, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return 0.09747164154041858;  // std dev = 10.258, 470.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=159 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then if ( acquired(C, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.49464454663819235;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(D, A) )
%   | then return 0.07652592624477556;  // std dev = 0.436, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then if ( acquired(A, G), bankboughtbank(G, H) )
%   | | | then return -0.06262923065258816;  // std dev = 0.776, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12553335617288516;  // std dev = 2.315, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else return 0.0854109203193319;  // std dev = 0.475, 624.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=215 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | | then return 0.09861448838989101;  // std dev = 0.418, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.0022097910429480483;  // std dev = 0.403, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( acquired(A, G), companyceo(G, H) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.058879479260543266;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.18076809332396596;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.0937210250460563;  // std dev = 0.470, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   else if ( acquired(J, A), acquired(J, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05832488327389538;  // std dev = 11.946, 648.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=217 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.03103870878397868;  // std dev = 0.395, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then if ( cityhascompanyoffice(F, A) )
%   | | | then return -0.020076795508484197;  // std dev = 0.997, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3582185557897144;  // std dev = 1.193, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyceo(A, G), bankboughtbank(H, A) )
%   | | | then return 0.28860903982980673;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.012819743108927119;  // std dev = 3.261, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.07822153641423076;  // std dev = 5.523, 135.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=51 */
%   | | | else return 0.029383975594009952;  // std dev = 10.947, 558.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=176 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( companyceo(A, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6069107624235619;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.03411858909051938;  // std dev = 0.423, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | else if ( countryhascompanyoffice(F, A) )
%   | | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.6807219315214704;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2810657556685273;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.014950540863744085;  // std dev = 0.413, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   else if ( acquired(H, A) )
%   | then if ( acquired(H, I) )
%   | | then return 0.028018523963466806;  // std dev = 0.437, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05480545811122493;  // std dev = 0.477, 549.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=193 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.046513367253083256;  // std dev = 0.390, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(E, C), acquired(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.015024984297095803;  // std dev = 3.917, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   else if ( acquired(A, F) )
%   | then if ( bankboughtbank(A, G) )
%   | | then return 0.3267548063293831;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.11960958345782943;  // std dev = 2.260, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return -0.020866635790949998;  // std dev = 3.579, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else if ( acquired(J, A), acquired(J, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.030703837915410346;  // std dev = 0.473, 570.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=193 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '12.043', 'seconds']
Refined model CLL: -0.362687


******************************************
Best model found
******************************************
Results 

CLL : -0.362866 

AUC ROC : 0.560082 

AUC PR : 0.015089 

Precision : 0.144444 

Recall : 0.025097 

F1 : 0.042763 

Total Learning Time : 9.429 

Total Inference Time : 68.17488408088684 

Total revision time: 150.2276061592102
Best scored revision CLL: -0.362687


Results 

CLL : -0.362866 

AUC ROC : 0.560082 

AUC PR : 0.015089 

Precision : 0.144444 

Recall : 0.025097 

F1 : 0.042763 

Total Learning Time : 150.3289941368103 

Total Inference Time : 68.17488408088684 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 183219

Target test facts examples: 5307
Target test pos examples: 518
Target test neg examples: 366436

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.444
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.2981489350995126;  // std dev = 0.496, 100.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=44 */
%   else if ( acquired(D, E), acquired(A, E) )
%   | then return 0.2022349566048873;  // std dev = 4.581, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else return 0.1663566402921376;  // std dev = 0.462, 597.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=184 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.20431271795784225;  // std dev = 5.194, 114.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=44 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.15170578729194834;  // std dev = 4.665, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | | | else return 0.15947514897332285;  // std dev = 11.163, 570.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=184 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then if ( acquired(C, E) )
%   | | then return -0.14962588021039286;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.14905676299766873;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return 0.08289548216158696;  // std dev = 4.822, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14542039936130385;  // std dev = 4.800, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | | else return 0.13038545982019184;  // std dev = 0.465, 581.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=184 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.1556897976758176;  // std dev = 0.485, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else return 0.13207549069133132;  // std dev = 0.483, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12235974034806785;  // std dev = 12.041, 657.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=216 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09369059519442599;  // std dev = 2.836, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else return 0.0995554429169623;  // std dev = 4.345, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11717233525679815;  // std dev = 4.713, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1359502395345378;  // std dev = 0.481, 506.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=184 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.08416077272529261;  // std dev = 5.252, 118.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=44 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return 0.03484534876596224;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else return 0.08577055312753332;  // std dev = 11.744, 617.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=208 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.09195979703018921;  // std dev = 2.767, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return 0.029839648818629477;  // std dev = 4.447, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0650313046996166;  // std dev = 12.041, 649.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=220 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.03358478173667299;  // std dev = 2.526, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( acquired(A, E) )
%   | | then return -0.0730562829182604;  // std dev = 1.944, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.028816807180651362;  // std dev = 0.477, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03784571951947528;  // std dev = 0.465, 681.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.01373853323164376;  // std dev = 0.455, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0.044771988836688;  // std dev = 2.102, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.11486693531489205;  // std dev = 4.028, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.045451469221890084;  // std dev = 11.060, 549.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=184 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.172834502994176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.07918126047612552;  // std dev = 2.301, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040589472725102035;  // std dev = 4.640, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   else if ( acquired(A, G) )
%   | then return 0.08926156915008208;  // std dev = 4.513, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.00906293830183875;  // std dev = 11.282, 597.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=184 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '51.857', 'seconds']
Parameter learned model CLL:-0.367106 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(A, C)', 'false': 'acquired(D, E), acquired(A, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.496, 56, 44], 'false,true': [4.581, 61, 32], 'false,false': [0.462, 413, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [5.194, 70, 44], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.665, 68, 32], 'false,false,false,false': [11.163, 386, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,true': 'acquired(C, E)', 'true,false': 'acquired(F, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(G, A)', 'false,false,true': 'acquired(A, H)'}, {'true,true,true': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.256, 14, 8], 'true,false,false': [4.822, 85, 32], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.8, 64, 36], 'false,false,false': [0.465, 397, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.485, 14, 9], 'true,false': [0.483, 59, 35], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.041, 441, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.836, 24, 12], 'true,false': [4.345, 56, 28], 'false,true,true': [0.0, 0, 0], 'false,true,false': [4.713, 58, 36], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.481, 322, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [5.252, 74, 44], 'false,false,true': [2.407, 21, 8], 'false,false,false': [11.744, 409, 208]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.767, 22, 12], 'true,false': [4.447, 67, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.041, 429, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [2.526, 22, 9], 'true,false,true': [1.944, 16, 5], 'true,false,false': [0.477, 56, 30], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.465, 465, 216]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.455, 97, 40], 'false,true,true,true': [2.102, 12, 7], 'false,true,true,false': [4.028, 37, 29], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.06, 365, 184]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [2.301, 13, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.64, 57, 35], 'false,true': [4.513, 56, 32], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.282, 413, 184]}]
{'': [0.24529027297193465, 0.21504725897920837], 'true': [0.0, 0.24640000000000073], 'false': [0.22569083130997944, 0.21321571565252556]}
{'': [0.23663998992500068, 0.21846066288061938], 'false': [nan, 0.21846066288061947], 'false,false': [nan, 0.21846066288061938], 'false,false,false': [0.21760000000000093, 0.21860264696830756]}
{'': [0.20136074483760535, 0.2184836132798852], 'false': [nan, 0.2184836132798852], 'false,false': [0.23039999999999913, 0.2163994063295237], 'false,false,true': [nan, 0.23039999999999913], 'true': [0.0, 0.2044592186796797], 'true,false': [0.23140495867768596, 0.19869968587917308], 'true,true': [0.0, nan]}
{'': [0.23408499775860833, 0.2206721530877334], 'true': [0.23499192163291968, 0.2337534702004546], 'false': [nan, 0.2206721530877334], 'false,false': [nan, 0.2206721530877334]}
{'': [0.2243922426541906, 0.23222182081981713], 'false': [0.23632160484645381, 0.23140495867768845], 'false,true': [nan, 0.23632160484645393], 'false,false': [nan, 0.23140495867768845], 'true': [0.2234277996972486, 0.22479525641838038]}
{'': [nan, 0.22430003494644035], 'false': [0.23376613515770417, 0.22257086240010965], 'false,false': [0.19976218787158134, 0.22352648614626383]}
{'': [0.21341676405512472, 0.22339169031630499], 'false': [nan, 0.2233916903163043], 'false,false': [nan, 0.22339169031630499], 'false,false,false': [nan, 0.22339169031630499], 'true': [0.22513702264446678, 0.20820506739567834]}
{'': [0.21675240516456235, 0.2166122394301372], 'true': [0.20580280428461928, 0.21952072610953227], 'true,false': [0.1799365103045122, 0.22714981070849116], 'false': [nan, 0.2166122394301372], 'false,false': [nan, 0.2166122394301372]}
{'': [0.20699202217817364, 0.2259563547291105], 'false': [0.24367285284693235, 0.22282606892478765], 'false,true': [0.24367285284693235, nan], 'false,true,true': [0.23251480376283426, 0.24578675109336784], 'false,false': [nan, 0.22282606892478765]}
{'': [0.23389797572794815, 0.21627597527039388], 'true': [0.23278477406683065, 0.2340235421337578], 'true,false': [nan, 0.2340235421337578], 'true,false,false': [nan, 0.2340235421337578], 'true,true': [0.0, 0.2406045112461027], 'false': [0.23143151198948775, 0.21321571565251807], 'false,false': [nan, 0.21321571565251807]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(A, C).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true


Refining candidate
***************************
Model training time 9.577
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, D), companyceo(D, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.06648226843284567;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.22549587387502115;  // std dev = 4.772, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19361219388545076;  // std dev = 0.472, 626.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=210 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8255736356249056;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( cityhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then if ( acquired(F, E), companyalsoknownas(E, G) )
%   | | | then return 0.8269360343936044;  // std dev = 0.131, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6877853343446673;  // std dev = 1.601, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else return -0.1673955003102383;  // std dev = 0.107, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( bankboughtbank(H, A) )
%   | | then if ( bankchiefexecutiveceo(A, I) )
%   | | | then return -0.02423358049781236;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.37591772177851795;  // std dev = 1.649, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | | then return 0.2608455052549597;  // std dev = 2.123, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.1481818026186056;  // std dev = 11.341, 596.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=188 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.16086336639666626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return 0.054889111740924874;  // std dev = 0.371, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( acquired(A, F), bankboughtbank(G, F) )
%   | | | then return 0.4779248010014481;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.15566132374293867;  // std dev = 4.004, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.678945613764865;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( bankboughtbank(I, A), countryhascompanyoffice(J, A) )
%   | | then if ( countryhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.7573866147422589;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20906627359476324;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.05246008291262246;  // std dev = 3.732, 109.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   | | | else return 0.143791085751884;  // std dev = 10.820, 528.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=177 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(A, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.6848632665523064;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.08134018209032189;  // std dev = 0.378, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.14325734154047043;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.39922049515029323;  // std dev = 1.748, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | then if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | then return 0.6957098470484053;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.20796205031935777;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then return 0.02828879175368106;  // std dev = 0.407, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( acquired(A, K), acquired(L, A) )
%   | | | then return -0.0845234722704432;  // std dev = 1.016, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12129106356188891;  // std dev = 11.574, 641.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=218 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), acquired(A, D) )
%   then if ( cityhascompanyoffice(E, D) )
%   | then return -0.18680773141799145;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( countryhascompanyoffice(F, D), companyceo(A, G) )
%   | | then return 0.48009162567492103;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( companyceo(D, H), bankchiefexecutiveceo(I, H) )
%   | | | then return 0.39794113389552743;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10020928979913322;  // std dev = 1.382, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( companyalsoknownas(A, J) )
%   | then if ( economicsectorcompany(B, J) )
%   | | then return 0.501146178905237;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.01114551262807977;  // std dev = 0.353, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | else if ( acquired(A, K), countryhascompanyoffice(L, K) )
%   | | then return -0.09571387334426452;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.4218960984962254;  // std dev = 0.974, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.10034248950586365;  // std dev = 11.539, 638.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=214 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.6069691019620002;  // std dev = 0.288, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3366916556103626;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( acquired(F, G), acquired(G, H) )
%   | | | then return 0.5392600906024423;  // std dev = 1.052, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.642864741224715;  // std dev = 0.202, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.1789076105405981;  // std dev = 0.218, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( companyceo(A, I) )
%   | | then if ( companyalsoknownas(A, J) )
%   | | | then return -0.23230160710728176;  // std dev = 0.157, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.09105331229730608;  // std dev = 3.113, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | else if ( acquired(K, A), bankboughtbank(K, L) )
%   | | | then return 0.4699425549038567;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08203079552739269;  // std dev = 10.863, 546.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=185 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.3980351776220269;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | | then return -0.14482651485069015;  // std dev = 0.182, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( countryhascompanyoffice(G, A) )
%   | | | then return -0.03555054140707237;  // std dev = 2.162, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.06229732561051003;  // std dev = 3.146, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   else if ( acquired(A, H), cityhascompanyoffice(I, H) )
%   | then if ( acquired(H, J) )
%   | | then return 0.4144131873195722;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0991398306847306;  // std dev = 0.941, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return 0.02278140699605921;  // std dev = 0.286, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.06351424375630967;  // std dev = 2.459, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.06698178573492447;  // std dev = 10.603, 513.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=176 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then if ( acquired(C, E), economicsectorcompany(B, E) )
%   | then return 0.3130016300044162;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A) )
%   | | then if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.2329979787290343;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18710010888955317;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( cityhascompanyoffice(H, C) )
%   | | | then return -0.07886985299320196;  // std dev = 1.018, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.19683694149758707;  // std dev = 0.994, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | then return 0.3305158316698079;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyceo(A, J), companyalsoknownas(A, K) )
%   | | then return -0.08098989209115388;  // std dev = 0.238, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( acquired(L, A), companyceo(L, M) )
%   | | | then return -0.0812174138574889;  // std dev = 2.859, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | | else return 0.04165332238245532;  // std dev = 11.431, 663.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=217 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( bankboughtbank(D, A), acquired(D, E) )
%   | then return -0.13208946819917022;  // std dev = 0.290, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | then if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.017587021320616427;  // std dev = 0.972, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.18598630522290452;  // std dev = 1.416, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.057055996757010424;  // std dev = 0.372, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | then return 0.2522280189347656;  // std dev = 0.120, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then if ( countryhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.6120536325890049;  // std dev = 0.529, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2806279931551468;  // std dev = 0.247, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( bankboughtbank(L, A), countryhascompanyoffice(M, L) )
%   | | | then return -0.19465973994727687;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.045774395037930835;  // std dev = 10.826, 587.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=197 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return -0.17327881863549646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | | | then return 0.2534012879549669;  // std dev = 1.300, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.11348100102326183;  // std dev = 0.979, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( acquired(A, H) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.029521698859250833;  // std dev = 1.096, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.1791256154735482;  // std dev = 0.814, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.2028201222947798;  // std dev = 0.697, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.01835206359729789;  // std dev = 3.207, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   else if ( cityhascompanyoffice(K, A) )
%   | then return -0.014821894945236157;  // std dev = 0.286, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | else return 0.05966458043535139;  // std dev = 0.468, 502.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=183 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '10.793', 'seconds']
Refined model CLL: -0.324938


******************************************
Best model found
******************************************
Results 

CLL : -0.324505 

AUC ROC : 0.755295 

AUC PR : 0.099077 

Precision : 0.098397 

Recall : 0.260618 

F1 : 0.142857 

Total Learning Time : 9.577 

Total Inference Time : 37.397937059402466 

Total revision time: 113.86075768089295
Best scored revision CLL: -0.324938


Results 

CLL : -0.324505 

AUC ROC : 0.755295 

AUC PR : 0.099077 

Precision : 0.098397 

Recall : 0.260618 

F1 : 0.142857 

Total Learning Time : 113.96214565849304 

Total Inference Time : 37.397937059402466 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 183217

Target test facts examples: 5307
Target test pos examples: 520
Target test neg examples: 366438

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 7.657
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15922420391671543;  // std dev = 0.459, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then return 0.16516647895916003;  // std dev = 4.925, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | else return 0.19324593686317626;  // std dev = 0.472, 567.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=190 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then return 0.13826918516267028;  // std dev = 4.805, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   else if ( acquired(A, D), acquired(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0.13855484518323524;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.1611122291207184;  // std dev = 11.298, 579.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A) )
%   | | then return 0.3003222828626202;  // std dev = 2.597, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.16701879784274534;  // std dev = 4.770, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08863711041475936;  // std dev = 3.819, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else return 0.14033725464125157;  // std dev = 0.471, 574.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=190 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.029449488205499884;  // std dev = 0.420, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else return 0.11676162711208417;  // std dev = 0.470, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( acquired(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.142233000669329;  // std dev = 12.048, 634.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=225 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.05562356334710354;  // std dev = 2.526, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else return 0.13428610956987083;  // std dev = 4.948, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(F, E), acquired(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04569378083229081;  // std dev = 3.841, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else if ( acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09347852125306895;  // std dev = 0.471, 573.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=190 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then return 0.1311635134808136;  // std dev = 4.548, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | else if ( acquired(A, E), acquired(E, F) )
%   | | then return -0.005806979169987115;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.05745133307947063;  // std dev = 12.291, 702.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=220 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.023395278393468902;  // std dev = 2.536, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return 0.13811942573198277;  // std dev = 4.772, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   else if ( acquired(E, A), acquired(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05435400211056922;  // std dev = 11.956, 660.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.007277229552401782;  // std dev = 1.900, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then return 0.1466117921443375;  // std dev = 2.160, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.06048244197591182;  // std dev = 0.465, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A), acquired(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04608561680046513;  // std dev = 0.468, 692.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=225 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then return 0.10116716475605492;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=48 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(E, F) )
%   | | | then return -0.038210345052907276;  // std dev = 1.236, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0730087357893237;  // std dev = 3.451, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.024823749697888895;  // std dev = 11.438, 610.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=190 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E), acquired(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.023661926789920924;  // std dev = 1.830, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(F, C), acquired(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.01659497445919401;  // std dev = 4.449, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(A, G) )
%   | then return 0.019109713789287715;  // std dev = 4.803, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04813822043339071;  // std dev = 11.199, 559.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=190 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '55.002', 'seconds']
Parameter learned model CLL:-0.362675 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, C)', 'false': 'acquired(E, F), acquired(A, F)'}, {'true,true': [1.9, 13, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.459, 65, 28], 'false,true': [4.925, 79, 35], 'false,false': [0.472, 377, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'false': 'acquired(A, D), acquired(D, A)', 'false,false': 'acquired(E, A), acquired(F, E)', 'false,false,false': 'acquired(A, G)'}, {'true': [4.805, 77, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.944, 81, 35], 'false,false,false,false': [11.298, 389, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(D, A), acquired(A, D)', 'true,false': 'acquired(E, A)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A)', 'false,false,true': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.597, 14, 13], 'true,false,false': [4.77, 65, 35], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.819, 54, 20], 'false,false,false': [0.471, 384, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'false': 'acquired(E, A)', 'false,false': 'acquired(A, A)'}, {'true,true': [0.42, 16, 5], 'true,false': [0.47, 58, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [12.048, 409, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A)', 'false,true': 'acquired(F, E), acquired(E, F)', 'false,false': 'acquired(A, G)'}, {'true,true': [2.526, 22, 9], 'true,false': [4.948, 66, 39], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.841, 58, 20], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 383, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A), acquired(A, C)', 'false': 'acquired(D, A)', 'false,false': 'acquired(A, E), acquired(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [4.548, 57, 33], 'false,false,true': [1.952, 16, 5], 'false,false,false': [12.291, 482, 220]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'true': 'acquired(C, D)', 'false': 'acquired(E, A), acquired(E, E)', 'false,false': 'acquired(A, F)', 'false,false,false': 'acquired(A, G)'}, {'true,true': [2.536, 24, 9], 'true,false': [4.772, 55, 39], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.956, 450, 210]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,false': 'acquired(A, E)', 'false': 'acquired(A, A)', 'false,false': 'acquired(F, A), acquired(A, F)'}, {'true,true': [1.9, 15, 5], 'true,false,true': [2.16, 10, 9], 'true,false,false': [0.465, 41, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 467, 225]}]
['companyeconomicsector(A, B)', {'': 'acquired(A, C)', 'false': 'acquired(D, A)', 'false,true': 'acquired(D, E)', 'false,true,true': 'acquired(E, F)', 'false,false': 'acquired(G, A)'}, {'true': [0.485, 71, 48], 'false,true,true,true': [1.236, 7, 2], 'false,true,true,false': [3.451, 35, 18], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.438, 420, 190]}]
['companyeconomicsector(A, B)', {'': 'acquired(C, A)', 'true': 'acquired(D, C)', 'true,true': 'acquired(A, E), acquired(D, E)', 'true,false': 'acquired(A, C)', 'true,false,false': 'acquired(F, C), acquired(F, A)', 'false': 'acquired(A, G)', 'false,false': 'acquired(H, A), acquired(H, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.83, 12, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.449, 67, 28], 'false,true': [4.803, 68, 35], 'false,false,true': [0.0, 0, 0], 'false,false,false': [11.199, 369, 190]}]
{'': [0.20891161431702107, 0.22123464456907996], 'false': [0.21275777162203896, 0.2228070011726713], 'true': [0.20061728395061712, 0.2104289513238537], 'true,false': [nan, 0.2104289513238537]}
{'': [0.20991013200115893, 0.21890640443369155], 'false': [nan, 0.21890640443369372], 'false,false': [nan, 0.21890640443369155], 'false,false,false': [0.21068668252080994, 0.22046826014718207]}
{'': [0.23521985903258963, 0.21893216705791793], 'true': [nan, 0.23521985903258733], 'true,false': [0.24981994596582596, 0.22749999999999887], 'false': [nan, 0.21893216705791793], 'false,false': [0.1970922033667692, 0.2214425329917798], 'false,false,true': [nan, 0.1970922033667692]}
{'': [0.21346649582433394, 0.22894783188014955], 'false': [nan, 0.22894783188014955], 'false,false': [nan, 0.22894783188014955], 'true': [0.1763161639146963, 0.22104190530733298]}
{'': [0.22804023406407273, 0.21798746144491843], 'true': [0.20580780978471747, 0.2331936391202044], 'false': [0.18916433936778995, 0.22163744293071821], 'false,false': [nan, 0.22163744293071821], 'false,true': [nan, 0.1891643393677899]}
{'': [nan, 0.21660049928374414], 'false': [0.22982911448164245, 0.2143219310240743], 'false,false': [0.18140589569161011, 0.2151903692934179]}
{'': [0.23249180195778998, 0.2165762903211765], 'true': [0.19483500746015517, 0.24229178935381288], 'false': [nan, 0.2165762903211725], 'false,false': [nan, 0.2165762903211765], 'false,false,false': [nan, 0.2165762903211765]}
{'': [0.21710272374875225, 0.21928804228082635], 'false': [nan, 0.21928804228082635], 'false,false': [nan, 0.21928804228082635], 'true': [0.18050610696068928, 0.22478633522642943], 'true,false': [0.24567046153225647, 0.2163888888888887]}
{'': [0.23494568210259684, 0.21489669760208066], 'false': [0.21827633874693186, 0.214458478903521], 'false,true': [0.21827633874693186, nan], 'false,true,true': [0.1697243395157917, 0.2247254185795486], 'false,false': [nan, 0.214458478903521]}
{'': [0.20684206316654666, 0.22440783182536772], 'false': [0.2239252605087199, 0.22436564143099544], 'false,false': [nan, 0.22436564143099544], 'true': [0.19690500682846612, 0.20837428657248103], 'true,false': [nan, 0.20837428657248103], 'true,false,false': [nan, 0.20837428657248103], 'true,true': [nan, 0.19690500682846615]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
0;true;acquired(D, C).;true;true
0;true,false;acquired(A, C).;true;true
0;false;acquired(E, F), acquired(A, F).;true;true
1;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
1;false;acquired(A, D), acquired(D, A).;true;true
1;false,false;acquired(E, A), acquired(F, E).;true;true
1;false,false,false;acquired(A, G).;true;true
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;true;acquired(D, A), acquired(A, D).;true;true
2;true,false;acquired(E, A).;true;true
2;false;acquired(A, A).;true;true
2;false,false;acquired(F, A).;true;true
2;false,false,true;acquired(A, G).;true;true
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;true;acquired(D, C).;true;true
3;false;acquired(E, A).;true;true
3;false,false;acquired(A, A).;true;true
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;acquired(C, D).;true;true
4;false;acquired(E, A).;true;true
4;false,true;acquired(F, E), acquired(E, F).;true;true
4;false,false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- acquired(C, A), acquired(A, C).;true;true
5;false;acquired(D, A).;true;true
5;false,false;acquired(A, E), acquired(E, F).;true;true
6;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
6;true;acquired(C, D).;true;true
6;false;acquired(E, A), acquired(E, E).;true;true
6;false,false;acquired(A, F).;true;true
6;false,false,false;acquired(A, G).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
7;true;acquired(D, C).;true;true
7;true,false;acquired(A, E).;true;true
7;false;acquired(A, A).;true;true
7;false,false;acquired(F, A), acquired(A, F).;true;true
8;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
8;false;acquired(D, A).;true;true
8;false,true;acquired(D, E).;true;true
8;false,true,true;acquired(E, F).;true;true
8;false,false;acquired(G, A).;true;true
9;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
9;true;acquired(D, C).;true;true
9;true,true;acquired(A, E), acquired(D, E).;true;true
9;true,false;acquired(A, C).;true;true
9;true,false,false;acquired(F, C), acquired(F, A).;true;true
9;false;acquired(A, G).;true;true
9;false,false;acquired(H, A), acquired(H, H).;true;true


Refining candidate
***************************
Model training time 17.01
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 0.10814893509951236;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15922420391671543;  // std dev = 0.459, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   else if ( acquired(E, F), acquired(A, F) )
%   | then if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.12781185644782625;  // std dev = 0.444, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.2823913593419366;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.18921469473669625;  // std dev = 9.883, 441.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=146 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(A, D) )
%   | then if ( cityhascompanyoffice(E, D), cityhascompanyoffice(E, A) )
%   | | then return -0.03650615684997737;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | | then return 0.03764047248063222;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.487108813194205;  // std dev = 1.971, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( bankboughtbank(H, A), companyceo(A, I) )
%   | | then return -0.1623595275193678;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.10901781821389571;  // std dev = 0.444, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   else if ( acquired(A, J), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, M) )
%   | | | then return 0.1852721027538915;  // std dev = 4.573, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.17281192325080133;  // std dev = 10.938, 556.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), acquired(A, D) )
%   | then return -0.16054068769650484;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(E, A) )
%   | | then if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.7769698577091031;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03216049676792389;  // std dev = 2.270, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.6806105290716006;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1314044095907252;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A) )
%   | | then return 0.06639036303112236;  // std dev = 0.426, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.08774122982242481;  // std dev = 2.731, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.14968194089234588;  // std dev = 10.591, 518.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=179 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0.6768991008719261;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11206074293922973;  // std dev = 0.265, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.036084014414154236;  // std dev = 0.318, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.2849867385051046;  // std dev = 1.941, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1499101487029021;  // std dev = 3.389, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   else if ( acquired(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), acquired(I, J) )
%   | | | then return -0.05597570597079764;  // std dev = 1.718, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.12241733642482273;  // std dev = 11.665, 642.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=220 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then return 0.025894094407395294;  // std dev = 0.382, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.6534937598518898;  // std dev = 0.209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.5025604483189524;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.05775609662547308;  // std dev = 4.328, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   else if ( acquired(G, A) )
%   | then if ( acquired(H, G), acquired(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0438179487422101;  // std dev = 0.426, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | else if ( acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.21963678369631617;  // std dev = 2.549, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.08696439293439547;  // std dev = 10.634, 538.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=176 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(D, A) )
%   | then if ( companyceo(A, E) )
%   | | then if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | | then return 0.6334727881374478;  // std dev = 0.278, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12998433456190586;  // std dev = 1.555, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | | then return 0.6772907215604882;  // std dev = 0.456, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.008493822468717641;  // std dev = 3.392, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | else if ( acquired(A, H), acquired(H, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.5264876910796313;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09484904463667199;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( bankboughtbank(K, A) )
%   | | | then return 0.2695937892642667;  // std dev = 1.942, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.09164952078975598;  // std dev = 11.291, 602.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=212 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.12412009117055085;  // std dev = 0.409, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return -0.07297558274113373;  // std dev = 0.277, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.3393541621443547;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return 0.2167024744481946;  // std dev = 2.161, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.03428528583204778;  // std dev = 3.602, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else if ( acquired(I, A), acquired(I, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057750429542651;  // std dev = 11.258, 596.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=210 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return 9.011853071072859E-4;  // std dev = 0.345, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( acquired(A, E) )
%   | | then if ( companyalsoknownas(A, F), cityhascompanyoffice(G, A) )
%   | | | then return 0.3448782709209642;  // std dev = 0.793, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11368048924995589;  // std dev = 1.504, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.32160922228819133;  // std dev = 0.982, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06609844904299739;  // std dev = 3.147, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   else if ( acquired(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A), acquired(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.5926014650416311;  // std dev = 0.516, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.032006000813504326;  // std dev = 11.621, 671.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=218 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.31459477503101557;  // std dev = 0.196, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.3114904930228745;  // std dev = 0.144, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | | | then return -0.1369378416249601;  // std dev = 1.589, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.026603693383752222;  // std dev = 4.229, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   else if ( acquired(H, A) )
%   | then if ( acquired(H, I) )
%   | | then return -0.03371099864765515;  // std dev = 0.388, 88.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, K), companyceo(K, L) )
%   | | | then return -0.13104853115339515;  // std dev = 1.365, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.021179184396902577;  // std dev = 10.934, 583.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=187 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C) )
%   | then return -0.002471932014751758;  // std dev = 0.318, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( acquired(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(E, C), acquired(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05408375592080229;  // std dev = 3.841, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   else if ( acquired(A, F) )
%   | then if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.2145863997456137;  // std dev = 0.150, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.01943200920726348;  // std dev = 0.420, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | else if ( acquired(H, A), acquired(H, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.6120101274362093;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.035438990349864835;  // std dev = 10.766, 552.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=187 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '5.932', 'seconds']
Refined model CLL: -0.338613


******************************************
Best model found
******************************************
Results 

CLL : -0.338716 

AUC ROC : 0.649934 

AUC PR : 0.054973 

Precision : 0.359551 

Recall : 0.061538 

F1 : 0.10509 

Total Learning Time : 17.01 

Total Inference Time : 128.125474691391 

Total revision time: 211.89609021377564
Best scored revision CLL: -0.338613


Results 

CLL : -0.338716 

AUC ROC : 0.649934 

AUC PR : 0.054973 

Precision : 0.359551 

Recall : 0.061538 

F1 : 0.10509 

Total Learning Time : 211.99747819137573 

Total Inference Time : 128.125474691391 

