Starting experiment 27_nell_sports_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 146.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.122', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.978
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283913;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360625;  // std dev = 7.60e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.3080145779256145;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3088641813680305;  // std dev = 0.084, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.24516513890375152;  // std dev = 0.083, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.24583172113040133;  // std dev = 0.080, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.08759849467471469;  // std dev = 0.298, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21643442550149358;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2269162067012392;  // std dev = 0.000529, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08129400075886788;  // std dev = 0.284, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18197828798178733;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18954060605136655;  // std dev = 0.000518, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07369160224722934;  // std dev = 0.089, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06808505705710187;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15643719522734204;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16211994265678797;  // std dev = 0.000374, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13688380520258073;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14118477403726198;  // std dev = 0.000299, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06637292685524283;  // std dev = 0.299, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.655', 'seconds']
Refined model CLL: -0.065814


******************************************
Best model found
******************************************
Results 

CLL : -0.075373 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.978 

Total Inference Time : 1.2346270084381104 

Total revision time: 4.858679378509521
Best scored revision CLL: -0.065814


Results 

CLL : -0.075373 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.895158613204956 

Total Inference Time : 1.2346270084381104 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.791
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.199', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.873
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.3918725585172846;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3243883698324422;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.58e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25768124110897594;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21152961433989614;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109161;  // std dev = 5.77e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1783957322595404;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333707;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15372921905870215;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1347761432571885;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.615', 'seconds']
Refined model CLL: -0.065264


******************************************
Best model found
******************************************
Results 

CLL : -0.080827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.873 

Total Inference Time : 1.202906608581543 

Total revision time: 4.800304140090942
Best scored revision CLL: -0.065264


Results 

CLL : -0.080827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.836783374786377 

Total Inference Time : 1.202906608581543 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.857
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 491.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.185', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.737
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 4.71e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048802;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839116;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1254446385283918;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360689;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.10159632948783645;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926071;  // std dev = 9.42e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839679;  // std dev = 8.69e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109147;  // std dev = 4.94e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07324622576333684;  // std dev = 9.88e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420285;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06419184008202623;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.706', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.737 

Total Inference Time : 1.3468048572540283 

Total revision time: 5.91573228263855
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.952211517333985 

Total Inference Time : 1.3468048572540283 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.682
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.452, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.163', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.765
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10509000702839766;  // std dev = 0.236, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09239787710021721;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08493568994636538;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0808149341213461;  // std dev = 0.199, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07290825978081115;  // std dev = 2.47e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06813106823610514;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.11749045750050806;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.12834420514829578;  // std dev = 0.033, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.06393049568031572;  // std dev = 1.76e-05, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.948', 'seconds']
Refined model CLL: -0.064902


******************************************
Best model found
******************************************
Results 

CLL : -0.067065 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.765 

Total Inference Time : 1.0895450115203857 

Total revision time: 4.3978652687072755
Best scored revision CLL: -0.064902


Results 

CLL : -0.067065 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.43434450340271 

Total Inference Time : 1.0895450115203857 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.739
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.205', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.702
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.4997262021679603;  // std dev = 0.185, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.11362549092495926;  // std dev = 0.115, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10147690316227041;  // std dev = 6.83e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4241577551860988;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1774170929997792;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3252365329807285;  // std dev = 0.041, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15298935227712257;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09643347230026451;  // std dev = 0.272, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08480120356837867;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25826723092449916;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.132483581262709;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2119475883839973;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.116041777189736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07818217978845228;  // std dev = 0.014, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17870478334055148;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07572887339580492;  // std dev = 0.230, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06801782875396524;  // std dev = 4.34e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0.14206540954633598;  // std dev = 0.057, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13635678715644958;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14326988685644074;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06388492254874041;  // std dev = 0.005, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.707', 'seconds']
Refined model CLL: -0.066728


******************************************
Best model found
******************************************
Results 

CLL : -0.072383 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.702 

Total Inference Time : 1.074753999710083 

Total revision time: 4.382967248916626
Best scored revision CLL: -0.066728


Results 

CLL : -0.072383 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.41944648361206 

Total Inference Time : 1.074753999710083 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.74
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.153', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.872
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5122901261050012;  // std dev = 0.164, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42295714878447305;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17646067243440888;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926087;  // std dev = 6.58e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.30254442337179777;  // std dev = 0.088, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.31298622908129425;  // std dev = 0.086, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.77e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.22603461525428903;  // std dev = 0.116, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.2638883222778165;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21632273577319655;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2394139544920782;  // std dev = 0.000823, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08014009909988686;  // std dev = 0.160, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07315373411662733;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.16871918712237388;  // std dev = 0.071, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.16884602674623897;  // std dev = 0.068, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06834601210278463;  // std dev = 3.65e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.158481931612064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.13294445029118204;  // std dev = 0.095, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13972740712230572;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.254064156001532;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06632452001418425;  // std dev = 0.217, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.483', 'seconds']
Refined model CLL: -0.070724


******************************************
Best model found
******************************************
Results 

CLL : -0.10083 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.872 

Total Inference Time : 1.1210408210754395 

Total revision time: 4.653568756103516
Best scored revision CLL: -0.070724


Results 

CLL : -0.10083 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.724403392791748 

Total Inference Time : 1.1210408210754395 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.77
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.185', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.844
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.7194734122109542;  // std dev = 5.96e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.6772275096739875;  // std dev = 0.184, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5621842170692446;  // std dev = 0.038, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2220138245155835;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11335351878632685;  // std dev = 0.107, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10150170409066918;  // std dev = 1.49e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4226030656056372;  // std dev = 0.037, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18442697483864626;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.31812333823129263;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3030749673314753;  // std dev = 0.106, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.09618932868357456;  // std dev = 0.417, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2606067286345319;  // std dev = 0.040, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2067151511136945;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08547053191330052;  // std dev = 0.075, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2135950963187085;  // std dev = 0.035, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17510236983409475;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08248509281024691;  // std dev = 0.391, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17990960501697267;  // std dev = 0.030, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15017845012859252;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07597363616495859;  // std dev = 0.371, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06771887152679111;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15487695045163274;  // std dev = 0.027, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13408405268663265;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06356670958269987;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13567175668418385;  // std dev = 0.024, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1171697593552522;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.815', 'seconds']
Refined model CLL: -0.066086


******************************************
Best model found
******************************************
Results 

CLL : -0.075419 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.844 

Total Inference Time : 1.2095842361450195 

Total revision time: 4.774523414611816
Best scored revision CLL: -0.066086


Results 

CLL : -0.075419 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.845358051300049 

Total Inference Time : 1.2095842361450195 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.894
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 565.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 562.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 581.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.112', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.717
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.1418510649004882;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.12544463852839172;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360679;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783645;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.0926912761892607;  // std dev = 9.66e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 7.45e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 2.98e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07877675473109144;  // std dev = 5.77e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.07324622576333684;  // std dev = 9.42e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420293;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06419184008202625;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.842', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.717 

Total Inference Time : 1.3462538719177246 

Total revision time: 5.901662288665772
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.972496925354005 

Total Inference Time : 1.3462538719177246 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.69
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.142', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.774
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6490635746493423;  // std dev = 0.234, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.12544463852839147;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5595982547107538;  // std dev = 0.050, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22231675898246075;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360625;  // std dev = 6.66e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783613;  // std dev = 5.96e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.43369021461443497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3827456598652232;  // std dev = 0.139, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32845170711114335;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25652625465391504;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2632871981689631;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.24608326319495621;  // std dev = 0.078, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.08550169880433516;  // std dev = 0.028, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2151852885624009;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2548626460060478;  // std dev = 0.000384, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07905973149905407;  // std dev = 0.026, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18106725197625487;  // std dev = 0.000967, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20961388408400217;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07348896985389695;  // std dev = 0.025, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837328171648067;  // std dev = 3.41e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1557494514099182;  // std dev = 0.000858, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17682641740727273;  // std dev = 0.000520, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13634910246091286;  // std dev = 0.000768, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1526363902262999;  // std dev = 0.000267, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06432354257852108;  // std dev = 0.014, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.779', 'seconds']
Refined model CLL: -0.069016


******************************************
Best model found
******************************************
Results 

CLL : -0.07153 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.774 

Total Inference Time : 1.0559608936309814 

Total revision time: 4.351985229492188
Best scored revision CLL: -0.069016


Results 

CLL : -0.07153 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.42281986618042 

Total Inference Time : 1.0559608936309814 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.688
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.490, 113.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.178', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.742
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096535;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1764398631954873;  // std dev = 0.000152, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10258053455095295;  // std dev = 0.074, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3254106600776191;  // std dev = 0.000890, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1523002048254361;  // std dev = 0.000171, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09763674308194258;  // std dev = 0.455, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0847237972448749;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2583759398349642;  // std dev = 0.000777, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13369326057826297;  // std dev = 0.000128, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07838079762721704;  // std dev = 2.79e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2120182247892334;  // std dev = 0.000678, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11889790499464606;  // std dev = 0.000139, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07290262516727293;  // std dev = 1.83e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17875270857579512;  // std dev = 0.000595, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10698766273936287;  // std dev = 0.000133, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06812613340360209;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1539991036895927;  // std dev = 0.000528, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09721565316759333;  // std dev = 0.000116, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06392633845862097;  // std dev = 1.05e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1349862205456134;  // std dev = 0.000474, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08898511076173522;  // std dev = 0.000113, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.670', 'seconds']
Refined model CLL: -0.066341


******************************************
Best model found
******************************************
Results 

CLL : -0.078397 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.742 

Total Inference Time : 1.041466474533081 

Total revision time: 4.3185376453399655
Best scored revision CLL: -0.066341


Results 

CLL : -0.078397 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.389372282028198 

Total Inference Time : 1.041466474533081 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.707
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 145.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.104', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.81
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.3961504900129686;  // std dev = 0.111, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4029253059022001;  // std dev = 0.108, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32714819556783764;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.24488413029091338;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09418867580382652;  // std dev = 0.150, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08506813402574663;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2595601391652125;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20329804727920062;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07867660827600535;  // std dev = 4.08e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else return 0.2128529823073353;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07315934214314802;  // std dev = 3.94e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( female(A) )
%   | then return 0.15170987227614496;  // std dev = 0.097, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.1804621810810776;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835092163066396;  // std dev = 4.59e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.156135483787812;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.233275175213979;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412473138661913;  // std dev = 2.24e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.12566949507858302;  // std dev = 0.061, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12487273073939106;  // std dev = 0.059, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.707', 'seconds']
Refined model CLL: -0.071093


******************************************
Best model found
******************************************
Results 

CLL : -0.10168 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.81 

Total Inference Time : 1.1398324966430664 

Total revision time: 4.517501155853271
Best scored revision CLL: -0.071093


Results 

CLL : -0.10168 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.5609312458038325 

Total Inference Time : 1.1398324966430664 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.717
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.122', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.768
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 8.30e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360621;  // std dev = 8.43e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.24940347996003395;  // std dev = 0.337, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return -0.08681755536094472;  // std dev = 0.161, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07865834201811117;  // std dev = 5.58e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21071554342784166;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10673861878592547;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1777987007830079;  // std dev = 5.16e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0969804469623736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07311078056407783;  // std dev = 0.003, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15327634109362084;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08881298675763129;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06993134713055661;  // std dev = 0.187, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06401885322184889;  // std dev = 2.11e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1344225941055284;  // std dev = 6.66e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08188338901244273;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.673', 'seconds']
Refined model CLL: -0.064328


******************************************
Best model found
******************************************
Results 

CLL : -0.067995 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.768 

Total Inference Time : 1.2094078063964844 

Total revision time: 4.6349824523925784
Best scored revision CLL: -0.064328


Results 

CLL : -0.067995 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.67841254234314 

Total Inference Time : 1.2094078063964844 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.87
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 560.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 498.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.119', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048807;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.1254446385283918;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.11231637819360688;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.10159632948783645;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926071;  // std dev = 8.94e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109144;  // std dev = 5.77e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333682;  // std dev = 1.03e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0684269778442028;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202625;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.655', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.758 

Total Inference Time : 1.3321702480316162 

Total revision time: 5.857650020599365
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.901080110549927 

Total Inference Time : 1.3321702480316162 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.671
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.199', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.698
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12704342151046003;  // std dev = 0.154, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11215707604989875;  // std dev = 5.77e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1014650169017129;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09258131836225393;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0850912354617839;  // std dev = 1.87e-05, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07869662326649067;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07317670758048353;  // std dev = 3.33e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06836612385823483;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641381458490163;  // std dev = 2.11e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.748', 'seconds']
Refined model CLL: -0.065259


******************************************
Best model found
******************************************
Results 

CLL : -0.070476 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.698 

Total Inference Time : 1.0361402034759521 

Total revision time: 4.211532634735107
Best scored revision CLL: -0.065259


Results 

CLL : -0.070476 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.254962724685669 

Total Inference Time : 1.0361402034759521 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.717
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.141', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.767
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839144;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10277628056878267;  // std dev = 0.078, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09259209045180146;  // std dev = 3.33e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08510056692179341;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return 0.24777317748344863;  // std dev = 0.337, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07870446223569989;  // std dev = 2.89e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21098681425125518;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1065832764337205;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07318350868671696;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1779974596252114;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0968513537369759;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837207763396512;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15342698502307137;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08870413241238491;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414339937499224;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.13454011098182656;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11651256503742542;  // std dev = 0.060, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.737', 'seconds']
Refined model CLL: -0.065792


******************************************
Best model found
******************************************
Results 

CLL : -0.071664 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.767 

Total Inference Time : 1.0596346855163574 

Total revision time: 4.397429498672485
Best scored revision CLL: -0.065792


Results 

CLL : -0.071664 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.440859588623047 

Total Inference Time : 1.0596346855163574 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.742
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.067', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.974
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.02e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 7.30e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5589528166351133;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22401174204327354;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783666;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42018644508395947;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1894051004184929;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 3.94e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32252930401211116;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16167948051693745;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 4.94e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.24518383196976729;  // std dev = 0.074, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2404469261492043;  // std dev = 0.071, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.77e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.21512603242229922;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19803072772615593;  // std dev = 0.069, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.16730707575151005;  // std dev = 0.071, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.16698388369412917;  // std dev = 0.069, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return -0.21159112801255178;  // std dev = 0.479, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0681275403887735;  // std dev = 0.016, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.15752866336592153;  // std dev = 3.16e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.14348831123310293;  // std dev = 0.070, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0639903456157563;  // std dev = 0.013, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13810251794712589;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25989478351725864;  // std dev = 0.000946, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.552', 'seconds']
Refined model CLL: -0.069931


******************************************
Best model found
******************************************
Results 

CLL : -0.090969 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.974 

Total Inference Time : 1.2277941703796387 

Total revision time: 4.822300830841065
Best scored revision CLL: -0.069931


Results 

CLL : -0.090969 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.857027927398682 

Total Inference Time : 1.2277941703796387 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.787
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.456, 196.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.072', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.783
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7228448795989211;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2776677411735184;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5586775921668294;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22353911954883457;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4199788690477935;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18976165441573586;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3187221999106254;  // std dev = 3.65e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3001013277390133;  // std dev = 0.106, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.09331421576679458;  // std dev = 0.067, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08513621930268203;  // std dev = 4.83e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2593659506140422;  // std dev = 0.031, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.20937037192855903;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07873507950246927;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21271918322207464;  // std dev = 0.027, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1734561681065729;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321007146978696;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17926772535175642;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1505886436668468;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1543903886323687;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13189610153219175;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0685983951283759;  // std dev = 0.024, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06415172445350331;  // std dev = 3.73e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13529212147021724;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1185967433878871;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.720', 'seconds']
Refined model CLL: -0.067552


******************************************
Best model found
******************************************
Results 

CLL : -0.084628 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.783 

Total Inference Time : 1.2100934982299805 

Total revision time: 4.701705760955811
Best scored revision CLL: -0.067552


Results 

CLL : -0.084628 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.736432857513428 

Total Inference Time : 1.2100934982299805 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.913
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 502.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 562.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.063', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.77
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048807;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839172;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360692;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783656;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926074;  // std dev = 9.19e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2.11e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109146;  // std dev = 5.77e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333681;  // std dev = 1.07e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420275;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06419184008202625;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.851', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.77 

Total Inference Time : 1.3127362728118896 

Total revision time: 5.92935910987854
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.964086206436157 

Total Inference Time : 1.3127362728118896 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.746
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.154', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.698
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7278382077391181;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2721019171234156;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5636365315919819;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22087194744145391;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11361498869389917;  // std dev = 0.111, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42369456855112186;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18677476409176785;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10270870130950768;  // std dev = 0.103, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09248871255039853;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3249173198500626;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1579727908935907;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2580469779006176;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14086260029223815;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0869794195201726;  // std dev = 0.113, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2117906810591927;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12349094851195161;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08368646882715514;  // std dev = 0.371, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07264351045856185;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17858889497830974;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10966946035491183;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15387686617386626;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.099968963926195;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07391417747051506;  // std dev = 0.402, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13489218315082338;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09148819299862122;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06482245528742579;  // std dev = 0.082, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.861', 'seconds']
Refined model CLL: -0.066028


******************************************
Best model found
******************************************
Results 

CLL : -0.071003 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.698 

Total Inference Time : 1.041945457458496 

Total revision time: 4.314410203933716
Best scored revision CLL: -0.066028


Results 

CLL : -0.071003 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.349137300491333 

Total Inference Time : 1.041945457458496 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.721
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.133', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.8
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.12544463852839158;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 6.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.5640419417450248;  // std dev = 6.66e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.49012604213803823;  // std dev = 0.216, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4286142315286048;  // std dev = 0.032, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3318217251976116;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3282559082526895;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.26249371754983836;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09625902950061957;  // std dev = 0.207, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08490713356139695;  // std dev = 4.34e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.2566736953065715;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.24352628623342507;  // std dev = 0.097, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07853831704388801;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21509907473450132;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25576641936940314;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1810077285227228;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21059409197004772;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0764237181944365;  // std dev = 0.242, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13840768221350536;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.14465449071999165;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07413130643396527;  // std dev = 0.319, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06347869604567348;  // std dev = 3.33e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.13534334039329424;  // std dev = 2.24e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11261752323530465;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.707', 'seconds']
Refined model CLL: -0.07124


******************************************
Best model found
******************************************
Results 

CLL : -0.082325 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.8 

Total Inference Time : 1.0375034809112549 

Total revision time: 4.398632141113281
Best scored revision CLL: -0.07124


Results 

CLL : -0.082325 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.433359237670898 

Total Inference Time : 1.0375034809112549 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.74
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 148.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.137', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.805
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360621;  // std dev = 7.88e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 5.48e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.14e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0.24920106723689517;  // std dev = 0.337, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4.94e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.18885482813927715;  // std dev = 0.080, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.2107492095705297;  // std dev = 3.65e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0.17401826752832456;  // std dev = 0.303, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.83e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.13574863613980728;  // std dev = 0.077, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.15378957842814878;  // std dev = 3.16e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13710176820597791;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1685377076599391;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.538', 'seconds']
Refined model CLL: -0.068041


******************************************
Best model found
******************************************
Results 

CLL : -0.090087 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.805 

Total Inference Time : 1.1539263725280762 

Total revision time: 4.585461540222168
Best scored revision CLL: -0.068041


Results 

CLL : -0.090087 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.658682270050049 

Total Inference Time : 1.1539263725280762 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.77
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 194.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.451, 204.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.190', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.899
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1123163781936062;  // std dev = 9.42e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.37032177382684195;  // std dev = 0.149, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32428660457303404;  // std dev = 0.038, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1448694862206794;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.96e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2576164516720433;  // std dev = 0.033, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12827758998633637;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.77e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21148668916208488;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1147623823234332;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0732462257633371;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1783660465934187;  // std dev = 0.025, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10259918100346441;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1537078870646501;  // std dev = 0.022, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09213591404618957;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06842697784420265;  // std dev = 4.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.29283549280043947;  // std dev = 0.550, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407643588023115;  // std dev = 0.012, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13476030641285322;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08642888621437429;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.843', 'seconds']
Refined model CLL: -0.065639


******************************************
Best model found
******************************************
Results 

CLL : -0.078324 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.899 

Total Inference Time : 1.2852745056152344 

Total revision time: 4.828354209899903
Best scored revision CLL: -0.065639


Results 

CLL : -0.078324 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.901574939727784 

Total Inference Time : 1.2852745056152344 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.94
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 561.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 572.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 505.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.085', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.914
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048813;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839177;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1123163781936069;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783645;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926065;  // std dev = 1.03e-07, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839679;  // std dev = 8.69e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109146;  // std dev = 5.58e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333688;  // std dev = 1.10e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420282;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.06419184008202623;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.765', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.914 

Total Inference Time : 1.2776694297790527 

Total revision time: 6.082729724884033
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.155950454711914 

Total Inference Time : 1.2776694297790527 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.69
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.194', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.783
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783619;  // std dev = 4.94e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 1.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.36e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.0787767547310917;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.2013271735767641;  // std dev = 0.548, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07303843529164628;  // std dev = 0.011, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.068175508078576;  // std dev = 0.013, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06403566981312653;  // std dev = 0.010, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.4308311100870033;  // std dev = 0.449, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.807', 'seconds']
Refined model CLL: -0.064941


******************************************
Best model found
******************************************
Results 

CLL : -0.069477 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.783 

Total Inference Time : 1.050642967224121 

Total revision time: 4.393633316040039
Best scored revision CLL: -0.064941


Results 

CLL : -0.069477 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.46685404586792 

Total Inference Time : 1.050642967224121 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.7
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.177', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.734
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5598005837456403;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22343297936263143;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4208208179387581;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18757682217460817;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.49e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.28789727469266424;  // std dev = 0.132, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.31902768869856146;  // std dev = 2.98e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26055163926889285;  // std dev = 0.043, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20958604708543574;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08656054987415078;  // std dev = 0.126, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07867696953302611;  // std dev = 4.94e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21355919651022795;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.172523301335632;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07315965558248799;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17988517890291938;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14785403904193323;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835119602874537;  // std dev = 4.01e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15485967421070918;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13348723872459972;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641249735187911;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13565912795095741;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11925005037914131;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.756', 'seconds']
Refined model CLL: -0.067326


******************************************
Best model found
******************************************
Results 

CLL : -0.078942 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.734 

Total Inference Time : 1.0629420280456543 

Total revision time: 4.27908752822876
Best scored revision CLL: -0.067326


Results 

CLL : -0.078942 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.352308258056641 

Total Inference Time : 1.0629420280456543 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.765
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 144.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.183', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.719
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11596821539206896;  // std dev = 0.330, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1012634944309015;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09241252651113349;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.2940406779118005;  // std dev = 0.102, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08494812825130617;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25781441143658534;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12127094823352005;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07857353273883579;  // std dev = 4.21e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21162374403878265;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10932023387772043;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0730699027219226;  // std dev = 6.99e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.17644045926694674;  // std dev = 3.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16238071837829324;  // std dev = 0.068, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06827261681720918;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15500711906124567;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11559183978129338;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06405562976621959;  // std dev = 3.33e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0.13159413708972628;  // std dev = 0.237, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.635', 'seconds']
Refined model CLL: -0.066768


******************************************
Best model found
******************************************
Results 

CLL : -0.086068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.719 

Total Inference Time : 1.1315202713012695 

Total revision time: 4.519257577896118
Best scored revision CLL: -0.066768


Results 

CLL : -0.086068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.5636098709106445 

Total Inference Time : 1.1315202713012695 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.755
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.453, 201.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.115', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.85
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 7.15e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10585199396884389;  // std dev = 0.479, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09233399633088821;  // std dev = 7.60e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08488144772421988;  // std dev = 8.16e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07851625096090765;  // std dev = 4.71e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07302019247299697;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06822909020169307;  // std dev = 4.08e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06401721496210387;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.575', 'seconds']
Refined model CLL: -0.064758


******************************************
Best model found
******************************************
Results 

CLL : -0.077595 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.85 

Total Inference Time : 1.2389106750488281 

Total revision time: 4.801924924850464
Best scored revision CLL: -0.064758


Results 

CLL : -0.077595 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.846277217864991 

Total Inference Time : 1.2389106750488281 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.87
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.133', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.673
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.14185106490048816;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.1254446385283918;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.27e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.11231637819360685;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783653;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 7.74e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109144;  // std dev = 5.77e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333688;  // std dev = 1.12e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.89e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06842697784420285;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202625;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.637', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.673 

Total Inference Time : 1.285369634628296 

Total revision time: 5.724668996810913
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.76902128982544 

Total Inference Time : 1.285369634628296 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.682
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.135', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.732
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7278382077391181;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.271203790061412;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5737936432122233;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.516766882707981;  // std dev = 0.180, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.11231637819360625;  // std dev = 6.14e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4317447452930656;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3263949648974606;  // std dev = 0.000461, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 4.47e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3303769176819534;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25898430092723557;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26175676436512907;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21255524846681734;  // std dev = 0.000453, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21439830602761006;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1792503633990642;  // std dev = 0.000365, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07840692373626088;  // std dev = 0.030, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17321685055691902;  // std dev = 0.331, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.07500072311235034;  // std dev = 0.151, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06833876539459548;  // std dev = 1.67e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15627234312544322;  // std dev = 0.000861, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1782316853407441;  // std dev = 0.000297, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13675567634329938;  // std dev = 0.000770, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15354555147407253;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06645869035886343;  // std dev = 0.175, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.712', 'seconds']
Refined model CLL: -0.068827


******************************************
Best model found
******************************************
Results 

CLL : -0.071368 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.732 

Total Inference Time : 1.013214349746704 

Total revision time: 4.289519752502441
Best scored revision CLL: -0.068827


Results 

CLL : -0.071368 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.3338720455169675 

Total Inference Time : 1.013214349746704 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.682
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0.172, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.12544463852839147;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.5313155975153315;  // std dev = 0.157, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5302641642534084;  // std dev = 0.160, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.43230067646393433;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3258254138256286;  // std dev = 0.000463, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33075527047043496;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.258658499967183;  // std dev = 0.000404, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09318161880139472;  // std dev = 0.041, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851465475890272;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2620141336967852;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21221736442311187;  // std dev = 0.000352, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21457927484689493;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17883525153699317;  // std dev = 0.000379, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08309460529627422;  // std dev = 0.436, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07292309147161434;  // std dev = 7.45e-09, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1806248960081936;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15416256111121657;  // std dev = 0.000301, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06814405771305433;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15541527194382854;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13494775857196212;  // std dev = 0.000261, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13608912682354657;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.06421062523382652;  // std dev = 0.013, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.758', 'seconds']
Refined model CLL: -0.067923


******************************************
Best model found
******************************************
Results 

CLL : -0.077766 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.751 

Total Inference Time : 1.0118730068206787 

Total revision time: 4.281370552062988
Best scored revision CLL: -0.067923


Results 

CLL : -0.077766 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.3257228450775145 

Total Inference Time : 1.0118730068206787 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.083', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.837
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3840226219875909;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32451270300900087;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14394089573434304;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( female(A) )
%   | then return 0.25445052676958047;  // std dev = 3.33e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.2479708403149959;  // std dev = 0.069, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.75e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21271251553047127;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15823259207742077;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1792626497450538;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1382785066666879;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1543864174256475;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12332750090828672;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13286890782618418;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12935753786648638;  // std dev = 0.044, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06467852975694253;  // std dev = 0.044, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.507', 'seconds']
Refined model CLL: -0.067409


******************************************
Best model found
******************************************
Results 

CLL : -0.090516 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.837 

Total Inference Time : 1.1681015491485596 

Total revision time: 4.647181880950928
Best scored revision CLL: -0.067409


Results 

CLL : -0.090516 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.681062114715576 

Total Inference Time : 1.1681015491485596 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.754
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.145', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.943
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839136;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783631;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333713;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 5.58e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.703', 'seconds']
Refined model CLL: -0.063764


******************************************
Best model found
******************************************
Results 

CLL : -0.067327 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.943 

Total Inference Time : 1.360185146331787 

Total revision time: 4.954392644882202
Best scored revision CLL: -0.063764


Results 

CLL : -0.067327 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.988272878646851 

Total Inference Time : 1.360185146331787 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.887
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 499.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 553.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.153', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.812
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.14185106490048804;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.12544463852839183;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360682;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783644;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.09269127618926068;  // std dev = 9.88e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07877675473109146;  // std dev = 5.16e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333682;  // std dev = 1.05e-07, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420279;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202625;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.828', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.812 

Total Inference Time : 1.3728151321411133 

Total revision time: 6.0571652641296385
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.091045497894287 

Total Inference Time : 1.3728151321411133 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.696
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.216', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.737
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048768;  // std dev = 6.14e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5182729470274015;  // std dev = 0.153, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.11231637819360625;  // std dev = 5.87e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.424349574097243;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17522745731868572;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3253554830570242;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15339263567492836;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2583415807337103;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13389599206549385;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08507349671256771;  // std dev = 0.010, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21199595280347422;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11897560156727822;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07867381296558618;  // std dev = 0.009, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1787376321912745;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10667641409809796;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07660990151638568;  // std dev = 0.246, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06822648782454707;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15398849548407023;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09728050898700716;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13497850731113192;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08830801158459332;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0639135879289806;  // std dev = 0.009, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.796', 'seconds']
Refined model CLL: -0.065727


******************************************
Best model found
******************************************
Results 

CLL : -0.068557 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.737 

Total Inference Time : 1.0690085887908936 

Total revision time: 4.2819067554473875
Best scored revision CLL: -0.065727


Results 

CLL : -0.068557 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.315786989212036 

Total Inference Time : 1.0690085887908936 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.742
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.453, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.188', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.729
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360624;  // std dev = 6.66e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.96e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( female(A) )
%   | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.39494358791282524;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32554308224152206;  // std dev = 0.000692, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14377393675322553;  // std dev = 0.000127, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.47e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25846615296743364;  // std dev = 0.000604, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1269677572619645;  // std dev = 0.000136, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21208180454103082;  // std dev = 0.000527, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1135699603190128;  // std dev = 7.73e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08256477591393332;  // std dev = 0.369, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07298950558712597;  // std dev = 1.29e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1787992400561357;  // std dev = 0.000463, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10262860471951964;  // std dev = 7.07e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06820221879673306;  // std dev = 3.87e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1540343361621669;  // std dev = 0.000411, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09356157102389781;  // std dev = 6.91e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.12575576739979322;  // std dev = 0.044, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12546384680950212;  // std dev = 0.045, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.06399349797605332;  // std dev = 3.33e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return -0.15367476686964515;  // std dev = 0.401, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.804', 'seconds']
Refined model CLL: -0.065688


******************************************
Best model found
******************************************
Results 

CLL : -0.072264 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.729 

Total Inference Time : 1.0553231239318848 

Total revision time: 4.396137519836426
Best scored revision CLL: -0.065688


Results 

CLL : -0.072264 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.430017753601074 

Total Inference Time : 1.0553231239318848 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.806
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.219', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.918
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12704342151046;  // std dev = 0.154, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1121570760498987;  // std dev = 7.45e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10146501690171293;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3840226219875909;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09258131836225404;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3245127030090011;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14514807692715978;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08509142327410485;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2577676588070853;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1264977649033056;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07869660964944758;  // std dev = 5.58e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21159156694190884;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11232240049552028;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07317669576623392;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1784417364672162;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10315031845329276;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14269001705825501;  // std dev = 0.046, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1475836252036694;  // std dev = 0.045, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06836611351583088;  // std dev = 2.47e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(B) )
%   | | then return -0.06836611351583097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.22603866849875218;  // std dev = 0.546, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06376986625338564;  // std dev = 0.017, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1357998424373964;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10664101225226873;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.652', 'seconds']
Refined model CLL: -0.065461


******************************************
Best model found
******************************************
Results 

CLL : -0.078436 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.918 

Total Inference Time : 1.1538968086242676 

Total revision time: 4.809174798965454
Best scored revision CLL: -0.065461


Results 

CLL : -0.078436 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.882353328704834 

Total Inference Time : 1.1538968086242676 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.752
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.116', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.911
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926104;  // std dev = 2.79e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0787767547310916;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.71e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.696', 'seconds']
Refined model CLL: -0.064896


******************************************
Best model found
******************************************
Results 

CLL : -0.077589 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.911 

Total Inference Time : 1.2052223682403564 

Total revision time: 4.76952232170105
Best scored revision CLL: -0.064896


Results 

CLL : -0.077589 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.84270085144043 

Total Inference Time : 1.2052223682403564 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.91
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.112', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.837
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1418510649004881;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.1254446385283918;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360675;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783648;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.09269127618926064;  // std dev = 1.13e-07, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 2.98e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.0787767547310915;  // std dev = 4.47e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333695;  // std dev = 1.00e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420278;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202597;  // std dev = 1.13e-07, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.680', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.837 

Total Inference Time : 1.2446370124816895 

Total revision time: 5.9266700954437255
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.999848625183105 

Total Inference Time : 1.2446370124816895 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.703
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.169', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.717
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.99e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10442454463971924;  // std dev = 0.236, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09245369825420989;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08498261058804701;  // std dev = 2.58e-05, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07860342807768167;  // std dev = 1.71e-05, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0730959994209932;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06829486407343464;  // std dev = 3.45e-05, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407583034936158;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.920', 'seconds']
Refined model CLL: -0.064701


******************************************
Best model found
******************************************
Results 

CLL : -0.068191 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.717 

Total Inference Time : 1.0107746124267578 

Total revision time: 4.291172904968262
Best scored revision CLL: -0.064701


Results 

CLL : -0.068191 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.3643514347076415 

Total Inference Time : 1.0107746124267578 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.71
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.227', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.831
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2720508519423756;  // std dev = 0.000393, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1271668852487622;  // std dev = 0.146, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.563756614304969;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2215033270313458;  // std dev = 0.000271, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11646162370942408;  // std dev = 0.231, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1010620275112741;  // std dev = 4.83e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( female(A) )
%   | then return 0.39815682120396906;  // std dev = 0.122, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.397487850598403;  // std dev = 0.124, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09224373024766051;  // std dev = 3.94e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.33066835200590344;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25324199294471866;  // std dev = 9.13e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08480479218200294;  // std dev = 2.79e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.24211540897525463;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2622001328826667;  // std dev = 4.71e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07845039271195699;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( female(A) )
%   | then return 0.19813884256548442;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.21471002294505084;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07296303372609972;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18333485316558068;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2960400938410489;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06817903725257438;  // std dev = 3.33e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15746099505500466;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.23517068075536895;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1376796287903647;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19417393250984138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06397303684923104;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return -0.14973913723534715;  // std dev = 0.470, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.836', 'seconds']
Refined model CLL: -0.069656


******************************************
Best model found
******************************************
Results 

CLL : -0.08335 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.831 

Total Inference Time : 1.012336254119873 

Total revision time: 4.361720195770264
Best scored revision CLL: -0.069656


Results 

CLL : -0.08335 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.434898725509644 

Total Inference Time : 1.012336254119873 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.79
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.456, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.070', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.82
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5589528166351133;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22751829855267264;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42018644508395947;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18771709256690333;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926089;  // std dev = 6.58e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3225293040121112;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16007619048841873;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2564148646873781;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13940276395445547;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2106368336489599;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12377767417662307;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07921370773266025;  // std dev = 0.047, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1696696157172142;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.17561513658839592;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.07361553398730261;  // std dev = 0.044, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837560082281759;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15388764244809722;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12974736398337017;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414650816163789;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.12811880905527387;  // std dev = 0.047, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13286680981170787;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.749', 'seconds']
Refined model CLL: -0.067431


******************************************
Best model found
******************************************
Results 

CLL : -0.088751 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.82 

Total Inference Time : 1.181628942489624 

Total revision time: 4.712578163146973
Best scored revision CLL: -0.067431


Results 

CLL : -0.088751 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.755799636840821 

Total Inference Time : 1.181628942489624 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.745
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.161', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.885
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839683;  // std dev = 5.27e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.96e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333713;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420265;  // std dev = 5.05e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.674', 'seconds']
Refined model CLL: -0.063734


******************************************
Best model found
******************************************
Results 

CLL : -0.067052 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.885 

Total Inference Time : 1.222944736480713 

Total revision time: 4.759111289978027
Best scored revision CLL: -0.063734


Results 

CLL : -0.067052 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.802332763671875 

Total Inference Time : 1.222944736480713 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.914
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 562.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.118', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.673
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048816;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.12544463852839172;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.11231637819360679;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783645;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.0926912761892607;  // std dev = 1.01e-07, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839679;  // std dev = 8.94e-08, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07877675473109147;  // std dev = 4.47e-08, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07324622576333685;  // std dev = 9.06e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420289;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202623;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.684', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.673 

Total Inference Time : 1.3601179122924805 

Total revision time: 5.8865285987854
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.929750072479248 

Total Inference Time : 1.3601179122924805 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.702
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.490, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.286', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.857
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7278382077391181;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27479629830942615;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5636365315919818;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22352888605339757;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360625;  // std dev = 5.87e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42369456855112186;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1857684122955877;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783619;  // std dev = 5.16e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926105;  // std dev = 2.11e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.3340364301804386;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2951633227662558;  // std dev = 0.111, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2254099039994101;  // std dev = 0.129, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2478669662928077;  // std dev = 0.078, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.08556637666084187;  // std dev = 0.035, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21783512858993687;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.24759399309268082;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07910925715285531;  // std dev = 0.033, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0731977646778495;  // std dev = 3.65e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18300004770430459;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2028486601891108;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15720864186817218;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17337010050784943;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06892705091984344;  // std dev = 0.054, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412184821115326;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1374836876247515;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14991109052583157;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.742', 'seconds']
Refined model CLL: -0.068716


******************************************
Best model found
******************************************
Results 

CLL : -0.070784 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.857 

Total Inference Time : 1.009805679321289 

Total revision time: 4.377727254867554
Best scored revision CLL: -0.068716


Results 

CLL : -0.070784 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.4209487285614015 

Total Inference Time : 1.009805679321289 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.73
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.166', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.951
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6490635746493422;  // std dev = 0.234, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.49273565792236806;  // std dev = 0.212, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.5726784193282051;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.43167584737340625;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.32597185115301414;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33033052181758155;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2590634637413717;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.2853766066780534;  // std dev = 0.472, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11658943404690589;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2617254918733062;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21290167716667213;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.08518475138839678;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( female(B) )
%   | | then return -0.08033562196210664;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.25320816198200313;  // std dev = 0.431, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07774082533030403;  // std dev = 0.038, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0.21437648890816952;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0730865832156161;  // std dev = 0.012, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18047692275199592;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.212350603188082;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835548373091045;  // std dev = 0.011, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15530351744526144;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17911294016557336;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06389564483551051;  // std dev = 0.018, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.11331727405437039;  // std dev = 0.079, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.1354297251451522;  // std dev = 2.24e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.720', 'seconds']
Refined model CLL: -0.070371


******************************************
Best model found
******************************************
Results 

CLL : -0.086912 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.951 

Total Inference Time : 1.0927443504333496 

Total revision time: 4.571582084655762
Best scored revision CLL: -0.070371


Results 

CLL : -0.086912 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.614803558349609 

Total Inference Time : 1.0927443504333496 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.749
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.177', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.987
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892609;  // std dev = 6.14e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3226656447235075;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14575992670235408;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2565060528356364;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12922163826599053;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.58e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21070011188095536;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11498866886721008;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333717;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17778780568298055;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10345127640367804;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15326835568158467;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09447934644556488;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06842697784420265;  // std dev = 5.05e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.2414912210548716;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06703892723257224;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13441655241826592;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08657835957586231;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06391905844642402;  // std dev = 0.016, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.606', 'seconds']
Refined model CLL: -0.064527


******************************************
Best model found
******************************************
Results 

CLL : -0.072353 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.987 

Total Inference Time : 1.1884002685546875 

Total revision time: 4.868040977478028
Best scored revision CLL: -0.064527


Results 

CLL : -0.072353 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.902252136230469 

Total Inference Time : 1.1884002685546875 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.735
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.111', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.935
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839133;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360622;  // std dev = 7.30e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3915580884760029;  // std dev = 0.113, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3244336656668728;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1442304002780887;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926089;  // std dev = 6.66e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2577121574311515;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12823548518889455;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839683;  // std dev = 5.37e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.32e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21155144297487793;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11325648078772284;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1736160256181871;  // std dev = 0.281, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return -0.07322563325758644;  // std dev = 0.002, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842829051951677;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else return 0.14524790764437975;  // std dev = 0.381, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419299825522812;  // std dev = 2.11e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13634287933278258;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13591023821578185;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.678', 'seconds']
Refined model CLL: -0.066651


******************************************
Best model found
******************************************
Results 

CLL : -0.070501 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.935 

Total Inference Time : 1.2223484516143799 

Total revision time: 4.830976648330688
Best scored revision CLL: -0.066651


Results 

CLL : -0.070501 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.86518780708313 

Total Inference Time : 1.2223484516143799 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.892
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 569.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.218', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.041
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1418510649004881;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.1254446385283918;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.11231637819360683;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783656;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926067;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839679;  // std dev = 8.16e-08, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 2.98e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109144;  // std dev = 5.96e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333681;  // std dev = 1.04e-07, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06842697784420274;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06419184008202623;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.013', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.041 

Total Inference Time : 1.373096227645874 

Total revision time: 6.274240167617798
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.308451326370239 

Total Inference Time : 1.373096227645874 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.696
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.229', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.75
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360625;  // std dev = 5.58e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.49e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0.24068896623085617;  // std dev = 0.069, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5.05e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21216854723771023;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10591057226219647;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17886271898981196;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09629197949880108;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07347440154289611;  // std dev = 0.023, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06841243427376405;  // std dev = 1.83e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15408239781669852;  // std dev = 2.11e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08823220835134969;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417900812340342;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13505114194206855;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08138729064121918;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.679', 'seconds']
Refined model CLL: -0.067023


******************************************
Best model found
******************************************
Results 

CLL : -0.0749 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.75 

Total Inference Time : 1.011617660522461 

Total revision time: 4.230812211990356
Best scored revision CLL: -0.067023


Results 

CLL : -0.0749 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.265023370742798 

Total Inference Time : 1.011617660522461 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.101', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.67
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11652292483993677;  // std dev = 0.330, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10121302193325114;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09237024361290994;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08491222654916529;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07854269220047083;  // std dev = 1.05e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07304313926851665;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0682491830046456;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06403494839041995;  // std dev = 3.87e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.761', 'seconds']
Refined model CLL: -0.065708


******************************************
Best model found
******************************************
Results 

CLL : -0.077998 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.67 

Total Inference Time : 1.0370526313781738 

Total revision time: 4.28079107093811
Best scored revision CLL: -0.065708


Results 

CLL : -0.077998 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.315002229690552 

Total Inference Time : 1.0370526313781738 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.741
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 148.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.149', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.939
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926078;  // std dev = 7.88e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3226656447235075;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1452115082211118;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.05e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2565060528356363;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1272106736558308;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.91e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( female(A) )
%   | then return 0.21229707551885643;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19838531256731592;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333718;  // std dev = 2.98e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1786051597395684;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13709803692018588;  // std dev = 0.000475, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.15419945257245044;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.14440887940879468;  // std dev = 0.049, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06858324667307565;  // std dev = 0.011, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06418245345776998;  // std dev = 5.05e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.11623633740918515;  // std dev = 0.069, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.1357469147556446;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.590', 'seconds']
Refined model CLL: -0.068197


******************************************
Best model found
******************************************
Results 

CLL : -0.08875 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.939 

Total Inference Time : 1.1014435291290283 

Total revision time: 4.735942773818969
Best scored revision CLL: -0.068197


Results 

CLL : -0.08875 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.810597591400146 

Total Inference Time : 1.1014435291290283 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.73
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.228', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.96
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12689400254017288;  // std dev = 0.154, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11217195573441746;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10584397089485839;  // std dev = 0.383, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09222536108179172;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08763156679263671;  // std dev = 0.340, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07823177443767619;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07277325019609623;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07183728383618766;  // std dev = 0.430, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06359738683438736;  // std dev = 9.65e-05, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.786', 'seconds']
Refined model CLL: -0.063546


******************************************
Best model found
******************************************
Results 

CLL : -0.069621 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.96 

Total Inference Time : 1.186018943786621 

Total revision time: 4.759055318832397
Best scored revision CLL: -0.063546


Results 

CLL : -0.069621 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.833710136413574 

Total Inference Time : 1.186018943786621 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.909
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 559.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.123', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.896
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048813;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839183;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360686;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.21e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783642;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926083;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926044;  // std dev = 1.56e-07, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839685;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109146;  // std dev = 4.71e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07324622576333681;  // std dev = 1.08e-07, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420271;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06842697784420286;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06419184008202623;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.853', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.896 

Total Inference Time : 1.3251113891601562 

Total revision time: 6.080966882705688
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.155621700286865 

Total Inference Time : 1.3251113891601562 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.236', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.738
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.18567129640871377;  // std dev = 0.416, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08509972879530302;  // std dev = 0.007, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08441818134628169;  // std dev = 0.409, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07280638990706514;  // std dev = 0.006, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08621393187196422;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06832815388879532;  // std dev = 0.018, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07965977724867426;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641105146194293;  // std dev = 0.017, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.866', 'seconds']
Refined model CLL: -0.065642


******************************************
Best model found
******************************************
Results 

CLL : -0.070484 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.738 

Total Inference Time : 1.0227043628692627 

Total revision time: 4.285955060958862
Best scored revision CLL: -0.065642


Results 

CLL : -0.070484 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.360609878540039 

Total Inference Time : 1.0227043628692627 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.105', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.92
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3992583584932079;  // std dev = 0.120, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3915063391118073;  // std dev = 0.122, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.10335314554168984;  // std dev = 0.111, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09254363434123093;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3286668580785434;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.24408153139551933;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.24320304844696375;  // std dev = 0.092, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2385258733976442;  // std dev = 0.094, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.08561185452754894;  // std dev = 0.049, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862910678610888;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.216903288020942;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.24277775525982356;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18232026975467816;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20158230473770763;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07348309369983587;  // std dev = 0.028, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06829161281999921;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15669537448046042;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17144060209194398;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407239398776189;  // std dev = 3.80e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13708454886071622;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14860158608035318;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.833', 'seconds']
Refined model CLL: -0.068455


******************************************
Best model found
******************************************
Results 

CLL : -0.081449 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.92 

Total Inference Time : 1.0578722953796387 

Total revision time: 4.513922401428223
Best scored revision CLL: -0.068455


Results 

CLL : -0.081449 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.5885772190094 

Total Inference Time : 1.0578722953796387 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.739
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.129', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.811
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783626;  // std dev = 4.71e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926092;  // std dev = 5.96e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.67e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.2316993464344629;  // std dev = 0.086, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.50e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21164644374469174;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1072898933709188;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 4.71e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17848122480991635;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0969271099584347;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 5.11e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.14670747624299454;  // std dev = 0.045, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14426867238142352;  // std dev = 0.043, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13580233340608291;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10168182224403323;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06452958766907137;  // std dev = 0.037, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.579', 'seconds']
Refined model CLL: -0.065297


******************************************
Best model found
******************************************
Results 

CLL : -0.076095 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.811 

Total Inference Time : 1.1651461124420166 

Total revision time: 4.645703840255737
Best scored revision CLL: -0.065297


Results 

CLL : -0.076095 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.687820959091186 

Total Inference Time : 1.1651461124420166 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.754
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.170', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.92
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( female(A) )
%   | then return 0.6792392193186044;  // std dev = 0.180, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6978088468073818;  // std dev = 0.134, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5622849568829554;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2225299538298789;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42266728282135424;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18711266746387525;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926086;  // std dev = 6.91e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3242095382494578;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16005872727791515;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.257558468865857;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13907461334556448;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08581695298425658;  // std dev = 0.055, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787308874591021;  // std dev = 5.87e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2114425006857019;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1237447671942404;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1783316040508401;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11103075014819844;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07320643463403959;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.24662340088467993;  // std dev = 0.601, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07320643463403946;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06804251453369203;  // std dev = 0.017, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15368041656943726;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10087012449875092;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0640155268066292;  // std dev = 0.014, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13473793553048774;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09169770630929962;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.490', 'seconds']
Refined model CLL: -0.066225


******************************************
Best model found
******************************************
Results 

CLL : -0.081631 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.92 

Total Inference Time : 1.2143616676330566 

Total revision time: 4.769396518707275
Best scored revision CLL: -0.066225


Results 

CLL : -0.081631 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.811513637542724 

Total Inference Time : 1.2143616676330566 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.917
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 489.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.101', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.017
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048807;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.1254446385283918;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360689;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783645;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.0926912761892607;  // std dev = 9.42e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839679;  // std dev = 8.69e-08, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109143;  // std dev = 4.21e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07324622576333682;  // std dev = 1.00e-07, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.69e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06842697784420297;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202623;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.630', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.017 

Total Inference Time : 1.3536765575408936 

Total revision time: 6.280510648727417
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.322627767562866 

Total Inference Time : 1.3536765575408936 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.713
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.298', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.607
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283915;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 6.99e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109175;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.818', 'seconds']
Refined model CLL: -0.065366


******************************************
Best model found
******************************************
Results 

CLL : -0.070786 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.607 

Total Inference Time : 1.0080699920654297 

Total revision time: 4.185177869796753
Best scored revision CLL: -0.065366


Results 

CLL : -0.070786 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.227294988632202 

Total Inference Time : 1.0080699920654297 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.761
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.113', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.94
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return 0.7781489350995119;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7275794276357729;  // std dev = 0.053, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2773546687097689;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( female(A) )
%   | then return 0.5100543534805054;  // std dev = 0.214, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.5533638936342218;  // std dev = 4.21e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4314822514036807;  // std dev = 0.101, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3285974934834909;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.20448288549958998;  // std dev = 0.175, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09224991060525402;  // std dev = 0.018, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3302832805587648;  // std dev = 0.091, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2542980948766926;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2733785355968452;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.22903581487631874;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.08668724257531146;  // std dev = 0.160, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2160068325727491;  // std dev = 0.045, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25904710525578;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.07835129721701332;  // std dev = 0.014, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return -0.3507929538522166;  // std dev = 0.297, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17107492937055754;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.15857296776007015;  // std dev = 0.080, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07383268141384788;  // std dev = 0.101, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06804337459822127;  // std dev = 0.012, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15840745009279997;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.23789976068803423;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0639143354875712;  // std dev = 0.010, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( female(A) )
%   | then return 0.1282779583291145;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.13436761824294766;  // std dev = 1.83e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.768', 'seconds']
Refined model CLL: -0.072426


******************************************
Best model found
******************************************
Results 

CLL : -0.087723 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.94 

Total Inference Time : 1.0482001304626465 

Total revision time: 4.554622674942017
Best scored revision CLL: -0.072426


Results 

CLL : -0.087723 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.596739793777466 

Total Inference Time : 1.0482001304626465 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.77
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.092', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.958
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839136;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5122901261050012;  // std dev = 0.164, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.11342956678662582;  // std dev = 0.143, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10149476879104227;  // std dev = 5.58e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42295714878447305;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17750876730361914;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09260623373285157;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else return 0.324414616953793;  // std dev = 0.035, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08511257189964709;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2577031480569358;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20112803627864081;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07871477196701464;  // std dev = 5.77e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2115474869248389;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17124825759409606;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1726550181085006;  // std dev = 0.326, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.07326732737541687;  // std dev = 0.009, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837513813188782;  // std dev = 5.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15449154715098762;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16932156239678076;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414609989407465;  // std dev = 4.08e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( female(A) )
%   | then return 0.13276172912613093;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.11957728499456856;  // std dev = 0.069, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.572', 'seconds']
Refined model CLL: -0.067892


******************************************
Best model found
******************************************
Results 

CLL : -0.082313 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.958 

Total Inference Time : 1.2043488025665283 

Total revision time: 4.842312887191772
Best scored revision CLL: -0.067892


Results 

CLL : -0.082313 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.87517960357666 

Total Inference Time : 1.2043488025665283 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 151.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 150.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.077', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.844
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360621;  // std dev = 8.02e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 5.16e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.07877675473109158;  // std dev = 5.96e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return -0.23079846052895683;  // std dev = 0.372, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07306197363755679;  // std dev = 0.014, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06843872387956734;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0641258647022138;  // std dev = 0.009, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.793', 'seconds']
Refined model CLL: -0.064088


******************************************
Best model found
******************************************
Results 

CLL : -0.070235 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.844 

Total Inference Time : 1.2698192596435547 

Total revision time: 4.7765342903137205
Best scored revision CLL: -0.064088


Results 

CLL : -0.070235 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.809401006698608 

Total Inference Time : 1.2698192596435547 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.868
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 505.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.124', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.623
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1418510649004881;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839177;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360688;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.21e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783644;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.09269127618926067;  // std dev = 1.05e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 7.45e-08, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109144;  // std dev = 4.47e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333682;  // std dev = 1.02e-07, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420285;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202607;  // std dev = 9.06e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.743', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.623 

Total Inference Time : 1.305227518081665 

Total revision time: 5.71840888595581
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.751275602340698 

Total Inference Time : 1.305227518081665 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.7
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.199', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.821
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7238029642622229;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839152;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5596216259491705;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360632;  // std dev = 3.65e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4206820609332964;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892609;  // std dev = 6.05e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3228638891111306;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2566420402033797;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839679;  // std dev = 2.58e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4.59e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21079656375474343;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1778587889729286;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1533223623704497;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06842697784420267;  // std dev = 3.33e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.14670063196995226;  // std dev = 0.350, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13445882503297682;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.901', 'seconds']
Refined model CLL: -0.064882


******************************************
Best model found
******************************************
Results 

CLL : -0.068942 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.821 

Total Inference Time : 1.014050006866455 

Total revision time: 4.314179512023926
Best scored revision CLL: -0.064882


Results 

CLL : -0.068942 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.347046228408813 

Total Inference Time : 1.014050006866455 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.717
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.196', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.771
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 4.71e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.30506575340243475;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5.27e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07291862722429457;  // std dev = 0.019, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06844786347617138;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0642102671720224;  // std dev = 3.16e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.794', 'seconds']
Refined model CLL: -0.065676


******************************************
Best model found
******************************************
Results 

CLL : -0.076901 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.771 

Total Inference Time : 1.047821044921875 

Total revision time: 4.408634269714355
Best scored revision CLL: -0.065676


Results 

CLL : -0.076901 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.441500986099243 

Total Inference Time : 1.047821044921875 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.805
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.453, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.174', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.869
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360622;  // std dev = 7.15e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3840226219875909;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926089;  // std dev = 6.50e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32451270300900087;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14549298583939313;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25776765880708535;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12739033252885307;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2115915669419088;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1133256183123816;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.1658863597436778;  // std dev = 0.052, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.18080791987543945;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15438501112975844;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12040698018252126;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06884232202225403;  // std dev = 0.050, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.12548445372473607;  // std dev = 0.045, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12822195763675626;  // std dev = 0.044, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06464111990509887;  // std dev = 0.048, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.649', 'seconds']
Refined model CLL: -0.066689


******************************************
Best model found
******************************************
Results 

CLL : -0.083145 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.869 

Total Inference Time : 1.1777949333190918 

Total revision time: 4.7751543273925785
Best scored revision CLL: -0.066689


Results 

CLL : -0.083145 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.850238775253296 

Total Inference Time : 1.1777949333190918 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.773
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.456, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.155', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.886
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.88e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892609;  // std dev = 6.32e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( female(A) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3101117670742672;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25649560408049205;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12265186948386074;  // std dev = 0.000933, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08552190042326484;  // std dev = 0.037, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21069227696279214;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11009577158213177;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07907296717049529;  // std dev = 0.034, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17778177306264567;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09976317776323232;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07351548098695754;  // std dev = 0.032, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06836946319806715;  // std dev = 3.33e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15326359023527855;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0910199910507416;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13441270173788442;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08385514113644743;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06438183415177753;  // std dev = 0.027, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.614', 'seconds']
Refined model CLL: -0.064632


******************************************
Best model found
******************************************
Results 

CLL : -0.069087 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.886 

Total Inference Time : 1.240955114364624 

Total revision time: 4.845120748519897
Best scored revision CLL: -0.064632


Results 

CLL : -0.069087 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.920205196380615 

Total Inference Time : 1.240955114364624 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.928
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 561.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.130', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.042
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048807;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839186;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360679;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3.33e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783653;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109144;  // std dev = 4.71e-08, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333684;  // std dev = 9.54e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420271;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06419184008202625;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.848', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.042 

Total Inference Time : 1.317122459411621 

Total revision time: 6.229521245956421
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.304605693817138 

Total Inference Time : 1.317122459411621 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.691
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.455, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.213', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.938
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6953328964755449;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.12726913204910506;  // std dev = 0.154, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5598641698241229;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22383029944136945;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11213460224350764;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1014464893365536;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( female(A) )
%   | then return 0.36583632659139614;  // std dev = 0.168, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4048928606101126;  // std dev = 0.101, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09256580210953255;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.32858636160864635;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then return -0.09256580210953247;  // std dev = 1.67e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.25541849247291465;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2605389472417809;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21067290282150994;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08541334043077578;  // std dev = 0.031, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07866100983989854;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.21354191985552506;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then return -0.07866100983989864;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.17755047873943527;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17986730109455643;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15328081323270665;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.073145808215644;  // std dev = 1.97e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.07314580821564402;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.16004980107713795;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07314580821564402;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15484269229969677;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13408085921442012;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06833907332265729;  // std dev = 3.65e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.17300062367359215;  // std dev = 0.363, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06354976070664083;  // std dev = 0.019, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1356435257941587;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11926290492551146;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.942', 'seconds']
Refined model CLL: -0.067175


******************************************
Best model found
******************************************
Results 

CLL : -0.071014 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.938 

Total Inference Time : 2.1359405517578125 

Total revision time: 5.581701807022094
Best scored revision CLL: -0.067175


Results 

CLL : -0.071014 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.656786254882812 

Total Inference Time : 2.1359405517578125 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.246
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.075', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 4.252
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 8.02e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0.172, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.12544463852839147;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5642259338261039;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2212320784334731;  // std dev = 0.000289, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.67e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.424117037535467;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18549089791916515;  // std dev = 0.000283, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926104;  // std dev = 2.79e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( female(A) )
%   | then return 0.32502788508067487;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.30430534605402976;  // std dev = 0.099, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.83e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.2581151412473582;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.24212145919187208;  // std dev = 0.095, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21499070242766768;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2532860833097347;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07927408058789719;  // std dev = 0.048, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321247384339964;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18092708196526558;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20426462264746312;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06839743336173829;  // std dev = 1.97e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1556447881661149;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17358185483804012;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06416577232235954;  // std dev = 2.74e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( female(A) )
%   | then return 0.12211165453215561;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12611124644242092;  // std dev = 0.058, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.302', 'seconds']
Refined model CLL: -0.069441


******************************************
Best model found
******************************************
Results 

CLL : -0.079561 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.252 

Total Inference Time : 2.130723476409912 

Total revision time: 9.20606860923767
Best scored revision CLL: -0.069441


Results 

CLL : -0.079561 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.281153057098388 

Total Inference Time : 2.130723476409912 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.305
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 145.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.225', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.431
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048785;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.02e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.11231637819360622;  // std dev = 8.56e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.420321573071679;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1801079003716468;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32261875832735304;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15333279686030724;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2564745572796132;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.135767236626696;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08762662367728251;  // std dev = 0.270, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07859972784490749;  // std dev = 3.65e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21067817195119232;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1197873303340286;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07309263382003278;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17777190945790197;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10772126880184123;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06829251913311012;  // std dev = 1.29e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1532564260131574;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09832105297687334;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407319380774297;  // std dev = 5.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( female(A) )
%   | then return 0.13306685636404122;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12817579206116775;  // std dev = 0.040, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.959', 'seconds']
Refined model CLL: -0.065304


******************************************
Best model found
******************************************
Results 

CLL : -0.074314 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.431 

Total Inference Time : 2.516340732574463 

Total revision time: 9.032322107315064
Best scored revision CLL: -0.065304


Results 

CLL : -0.074314 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.141506849288941 

Total Inference Time : 2.516340732574463 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.448
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 151.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.273', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.376
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926087;  // std dev = 6.99e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.24940347996003395;  // std dev = 0.337, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return -0.08518475138839683;  // std dev = 5.16e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21071554342784166;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10673861878592546;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.07877675473109158;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return -0.2656408259612299;  // std dev = 0.458, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333711;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1777987007830079;  // std dev = 5.16e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09698044696237361;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.34e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15327634109362084;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0888129867576313;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1344225941055284;  // std dev = 6.66e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08188338901244276;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06406371956107461;  // std dev = 0.012, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.304', 'seconds']
Refined model CLL: -0.065267


******************************************
Best model found
******************************************
Results 

CLL : -0.075302 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 3.376 

Total Inference Time : 2.4371674060821533 

Total revision time: 9.078443883895874
Best scored revision CLL: -0.065267


Results 

CLL : -0.075302 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 9.18762862586975 

Total Inference Time : 2.4371674060821533 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.523
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 563.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.104', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 5.579
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048818;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.12544463852839172;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.67e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.11231637819360683;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783645;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926067;  // std dev = 1.03e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109146;  // std dev = 5.96e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333696;  // std dev = 1.00e-07, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420287;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202625;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.193', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.579 

Total Inference Time : 2.644303321838379 

Total revision time: 11.641964437484742
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.751149179458618 

Total Inference Time : 2.644303321838379 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.165
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.455, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.305', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.203
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11652292483993675;  // std dev = 0.330, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10121302193325114;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09236988259368512;  // std dev = 3.19e-05, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08491195380226797;  // std dev = 2.96e-05, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07854273806850619;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19372802283455617;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07304317907383566;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17887066640612576;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09403305803145982;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15408856733441173;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08674656388606232;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0684560624312786;  // std dev = 0.018, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06402258314283961;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13505605529953993;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07972157284003066;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.824', 'seconds']
Refined model CLL: -0.066389


******************************************
Best model found
******************************************
Results 

CLL : -0.072832 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.203 

Total Inference Time : 1.4915921688079834 

Total revision time: 7.530126541137696
Best scored revision CLL: -0.066389


Results 

CLL : -0.072832 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 7.639311283111573 

Total Inference Time : 1.4915921688079834 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.836
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.263', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.707
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.24099070115457757;  // std dev = 0.068, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2403741123974075;  // std dev = 0.069, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.27e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.1988657297159949;  // std dev = 0.064, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2122211807872589;  // std dev = 2.36e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1798615833344776;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12700995390502326;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.34e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1548383656072516;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11379530238889209;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13564015500048862;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10261848985754678;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.785', 'seconds']
Refined model CLL: -0.068199


******************************************
Best model found
******************************************
Results 

CLL : -0.086943 

AUC ROC : 0.993093 

AUC PR : 0.649298 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.707 

Total Inference Time : 1.057948112487793 

Total revision time: 4.429919736862183
Best scored revision CLL: -0.068199


Results 

CLL : -0.086943 

AUC ROC : 0.993093 

AUC PR : 0.649298 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.53910447883606 

Total Inference Time : 1.057948112487793 

Starting experiment 27_nell_sports_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.754
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.153', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.924
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6649625702277708;  // std dev = 0.208, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.5274062676284647;  // std dev = 0.145, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.542554446845563;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3721040565134661;  // std dev = 0.192, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.4339714052757597;  // std dev = 5.96e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.10384529961366912;  // std dev = 0.222, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09250231186909431;  // std dev = 3.16e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3343076529184647;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4238997725098825;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0850243557366674;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2644308542712966;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.32399060127109747;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0786390084255752;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21627803980249355;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25784003316843074;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0731267181890856;  // std dev = 5.27e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( female(A) )
%   | then return 0.18359936061135007;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1671370599107165;  // std dev = 0.071, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06832236046857458;  // std dev = 3.07e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15724455495560372;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.24187880361145772;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06409952806960993;  // std dev = 2.79e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.12581820393020215;  // std dev = 0.063, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12589738788373922;  // std dev = 0.061, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.568', 'seconds']
Refined model CLL: -0.070438


******************************************
Best model found
******************************************
Results 

CLL : -0.091286 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.924 

Total Inference Time : 1.1896638870239258 

Total revision time: 4.837788608551025
Best scored revision CLL: -0.070438


Results 

CLL : -0.091286 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.873082187652588 

Total Inference Time : 1.1896638870239258 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.728
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 148.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.111', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.811
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0953885877261713;  // std dev = 0.344, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08497478951077281;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07859643435451795;  // std dev = 3.65e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07308977590938136;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06829001691721295;  // std dev = 3.33e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407098560298426;  // std dev = 1.05e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.674', 'seconds']
Refined model CLL: -0.064188


******************************************
Best model found
******************************************
Results 

CLL : -0.07204 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.811 

Total Inference Time : 1.1939098834991455 

Total revision time: 4.674032176971435
Best scored revision CLL: -0.064188


Results 

CLL : -0.07204 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.709325756072998 

Total Inference Time : 1.1939098834991455 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.926
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 570.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.097', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.714
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048802;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.1254446385283918;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.11231637819360689;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783656;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926061;  // std dev = 5.16e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839679;  // std dev = 8.16e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109147;  // std dev = 5.77e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333684;  // std dev = 9.77e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420285;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06419184008202623;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.755', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.714 

Total Inference Time : 1.3589084148406982 

Total revision time: 5.981499090194703
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.016792669296265 

Total Inference Time : 1.3589084148406982 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.722
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.131', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.676
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 8.02e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109169;  // std dev = 3.49e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.2124409433723604;  // std dev = 0.278, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06831844032532305;  // std dev = 0.008, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06419836037462633;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return -0.13440752357225122;  // std dev = 0.191, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.683', 'seconds']
Refined model CLL: -0.064285


******************************************
Best model found
******************************************
Results 

CLL : -0.066077 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.676 

Total Inference Time : 1.0534191131591797 

Total revision time: 4.266308305740356
Best scored revision CLL: -0.064285


Results 

CLL : -0.066077 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.301601884841919 

Total Inference Time : 1.0534191131591797 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.691
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 115.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.699
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12905119548794156;  // std dev = 0.217, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11195730183260362;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10420026221593721;  // std dev = 0.271, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09220034609852239;  // std dev = 5.05e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08476794580282922;  // std dev = 2.11e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1977354460340511;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.19721273866020397;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.0784166538747342;  // std dev = 0.000128, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07293569495628284;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( female(A) )
%   | then return 0.1788553498439941;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1561602578231098;  // std dev = 0.076, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1540768185233459;  // std dev = 2.11e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1349881352875041;  // std dev = 0.073, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.06834987371351237;  // std dev = 0.016, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13504679346403445;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11820060387570448;  // std dev = 0.073, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.06412626766050994;  // std dev = 0.015, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.844', 'seconds']
Refined model CLL: -0.067915


******************************************
Best model found
******************************************
Results 

CLL : -0.076589 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.699 

Total Inference Time : 1.112325668334961 

Total revision time: 4.354529037475586
Best scored revision CLL: -0.067915


Results 

CLL : -0.076589 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.389822616577148 

Total Inference Time : 1.112325668334961 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.748
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 148.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.186', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.839
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048785;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.02e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926087;  // std dev = 6.99e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32462383836920533;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.144338816810601;  // std dev = 0.000132, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( female(A) )
%   | then return 0.23139196814088933;  // std dev = 0.098, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.25772578944486574;  // std dev = 4.47e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6.23e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21379475213459712;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15739137254088692;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then return 0.17445493691418748;  // std dev = 0.317, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.07324622576333707;  // std dev = 4.83e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 4.53e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1557179719716235;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15977307039537175;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13632504880452243;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13914122736824283;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06484654511183398;  // std dev = 0.076, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.600', 'seconds']
Refined model CLL: -0.067491


******************************************
Best model found
******************************************
Results 

CLL : -0.091528 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.839 

Total Inference Time : 1.1634070873260498 

Total revision time: 4.663718091964721
Best scored revision CLL: -0.067491


Results 

CLL : -0.091528 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.732119190216064 

Total Inference Time : 1.1634070873260498 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.725
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.116', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.785
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( female(A) )
%   | then return 0.6792392193186044;  // std dev = 0.180, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.7194734122109548;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.88e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( female(A) )
%   | then return 0.5278590498094256;  // std dev = 0.167, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.535292469174516;  // std dev = 0.124, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42642785421602697;  // std dev = 0.042, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.3346818020605652;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3267729525442718;  // std dev = 0.038, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.26468335609806426;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09469118409517739;  // std dev = 0.171, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2593105325284697;  // std dev = 0.033, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2151250316058381;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08502903118227965;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07864302414854409;  // std dev = 1.83e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2126807568791066;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18219068001156608;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07313020257272564;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17924000715649943;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1535008575866849;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06832541100070338;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1543696705456435;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13737485096335797;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13527615915732832;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12189118914151592;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06487405797084196;  // std dev = 0.077, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.672', 'seconds']
Refined model CLL: -0.067797


******************************************
Best model found
******************************************
Results 

CLL : -0.086186 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.785 

Total Inference Time : 1.2521920204162598 

Total revision time: 4.696798334121704
Best scored revision CLL: -0.067797


Results 

CLL : -0.086186 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.765199432373047 

Total Inference Time : 1.2521920204162598 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.947
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.069', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.68
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048827;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839186;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360672;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783644;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.09269127618926061;  // std dev = 4.71e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 7.74e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109164;  // std dev = 4.47e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return -0.07877675473109146;  // std dev = 5.37e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333682;  // std dev = 1.05e-07, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420278;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202625;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.178', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.68 

Total Inference Time : 1.3236072063446045 

Total revision time: 5.937633897781373
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.0060349960327155 

Total Inference Time : 1.3236072063446045 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.698
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.151', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.791
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839147;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.36e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109165;  // std dev = 4.34e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.16318856866146558;  // std dev = 0.057, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.59e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15411033681817593;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08512453698824377;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13507299608787554;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07940147030433949;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.624', 'seconds']
Refined model CLL: -0.067146


******************************************
Best model found
******************************************
Results 

CLL : -0.075887 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.791 

Total Inference Time : 0.9906775951385498 

Total revision time: 4.3235563411712645
Best scored revision CLL: -0.067146


Results 

CLL : -0.075887 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.391957439422607 

Total Inference Time : 0.9906775951385498 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.696
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.452, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.145', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.83
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5647693869513566;  // std dev = 0.064, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.4318113584286167;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11521530298825862;  // std dev = 0.312, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10133203695995027;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42457668605792065;  // std dev = 0.064, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3304529407229293;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09246994230358571;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3255375143675475;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2681673231144323;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2584820415048294;  // std dev = 0.050, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21780335688620625;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08930895599774127;  // std dev = 0.253, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07830362630935278;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2121048716681651;  // std dev = 0.044, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17814864384753032;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1732032913480528;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15672708482436384;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.07283563251379552;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return -0.20770535064517895;  // std dev = 0.467, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15588028448282462;  // std dev = 0.042, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17495879256821958;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06806745729488207;  // std dev = 2.58e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return -0.1436647714175712;  // std dev = 0.458, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06343828935363786;  // std dev = 0.020, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13645599171999942;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1511248114781967;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.797', 'seconds']
Refined model CLL: -0.067471


******************************************
Best model found
******************************************
Results 

CLL : -0.078201 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.83 

Total Inference Time : 1.0356011390686035 

Total revision time: 4.366376615524292
Best scored revision CLL: -0.067471


Results 

CLL : -0.078201 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.434777713775635 

Total Inference Time : 1.0356011390686035 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.753
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.102', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.807
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0.152, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5589621067898783;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.224243700503811;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 8.43e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4201923719708212;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18765160463932937;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878362;  // std dev = 5.27e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926087;  // std dev = 6.83e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.322532696983738;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16095942628028212;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2564168067742908;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13987823413551953;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08509240207724524;  // std dev = 0.007, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787834568715933;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2106379795157359;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12464954636305475;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07325203980994395;  // std dev = 4.59e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17774281225591368;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11120735136407005;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684320669602012;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15323460523003574;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1006817014517653;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419633019411021;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( female(A) )
%   | then return 0.12461619092131314;  // std dev = 0.042, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1283991992594095;  // std dev = 0.041, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.708', 'seconds']
Refined model CLL: -0.065375


******************************************
Best model found
******************************************
Results 

CLL : -0.073042 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.807 

Total Inference Time : 1.1787972450256348 

Total revision time: 4.673206624984742
Best scored revision CLL: -0.065375


Results 

CLL : -0.073042 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.714738903045655 

Total Inference Time : 1.1787972450256348 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.718
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.146', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.803
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839144;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 1.00e-07, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926083;  // std dev = 7.45e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.66e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.41e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0732462257633371;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.37e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.617', 'seconds']
Refined model CLL: -0.064161


******************************************
Best model found
******************************************
Results 

CLL : -0.070922 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.803 

Total Inference Time : 1.2019741535186768 

Total revision time: 4.620771022796631
Best scored revision CLL: -0.064161


Results 

CLL : -0.070922 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.662303300857544 

Total Inference Time : 1.2019741535186768 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.897
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.102', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.803
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.1418510649004882;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.1254446385283919;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.48e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360689;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783653;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.09269127618926065;  // std dev = 2.11e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109146;  // std dev = 6.32e-08, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333689;  // std dev = 1.10e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420286;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202625;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.701', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.803 

Total Inference Time : 1.2965171337127686 

Total revision time: 5.913464975357056
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.954997253417969 

Total Inference Time : 1.2965171337127686 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.665
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.450, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.218', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.625
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.83e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839679;  // std dev = 2.36e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4.83e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420265;  // std dev = 4.59e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.736', 'seconds']
Refined model CLL: -0.064979


******************************************
Best model found
******************************************
Results 

CLL : -0.069074 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.625 

Total Inference Time : 1.099294900894165 

Total revision time: 4.253885545730591
Best scored revision CLL: -0.064979


Results 

CLL : -0.069074 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.295417823791504 

Total Inference Time : 1.099294900894165 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.697
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.152', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.717
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5218721313019431;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5205060705143248;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11377513609489273;  // std dev = 0.116, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1014632594279467;  // std dev = 5.37e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.43418861374273976;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.5659328213765763;  // std dev = 0.000637, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09257984655176155;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( female(A) )
%   | then return 0.33169604960580057;  // std dev = 4.71e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.299475608267411;  // std dev = 0.154, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26603350635598505;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.5080239770084394;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08606363127072451;  // std dev = 0.083, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2174039721103695;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.374883338710127;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08063648752455274;  // std dev = 0.110, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07297835230586278;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1826863039481689;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2948412454815902;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06819245193380598;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1569722634990954;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.23914430135541856;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0639848773771777;  // std dev = 4.65e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13730021990626912;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19687491732994855;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.618', 'seconds']
Refined model CLL: -0.069181


******************************************
Best model found
******************************************
Results 

CLL : -0.078546 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.717 

Total Inference Time : 1.0150930881500244 

Total revision time: 4.262126649856567
Best scored revision CLL: -0.069181


Results 

CLL : -0.078546 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.30365892791748 

Total Inference Time : 1.0150930881500244 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.72
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.089', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.726
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1123163781936062;  // std dev = 8.69e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32267004080584744;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1449914684235334;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.2548002479810061;  // std dev = 3.33e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.23323056283598936;  // std dev = 0.095, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21286636227173958;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1595055324942449;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333714;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17937506508429157;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14042129343456064;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.83e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15447141738802986;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12347781513408725;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( female(A) )
%   | then return 0.12426899251714218;  // std dev = 0.045, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12937279197720047;  // std dev = 0.044, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.693', 'seconds']
Refined model CLL: -0.067106


******************************************
Best model found
******************************************
Results 

CLL : -0.086899 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.726 

Total Inference Time : 1.1543776988983154 

Total revision time: 4.523639579772949
Best scored revision CLL: -0.067106


Results 

CLL : -0.086899 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.556172033309936 

Total Inference Time : 1.1543776988983154 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.769
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.089', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839133;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1123163781936062;  // std dev = 9.06e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926083;  // std dev = 7.45e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20486730088060975;  // std dev = 0.286, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return -0.07877675473109158;  // std dev = 6.66e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0732462257633372;  // std dev = 2.58e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1778103199603904;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09498632348745861;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.27e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15328514845384864;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08712910640543758;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13442946530360178;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08044378451625535;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641701399153408;  // std dev = 0.002, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.661', 'seconds']
Refined model CLL: -0.064288


******************************************
Best model found
******************************************
Results 

CLL : -0.066841 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.758 

Total Inference Time : 1.2139458656311035 

Total revision time: 4.656507780075073
Best scored revision CLL: -0.064288


Results 

CLL : -0.066841 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.689040233612061 

Total Inference Time : 1.2139458656311035 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.891
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 563.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.076', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.689
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.14185106490048813;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839186;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360686;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.65e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.10159632948783655;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926064;  // std dev = 2.98e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839679;  // std dev = 8.16e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.07877675473109146;  // std dev = 4.71e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333682;  // std dev = 1.04e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420274;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06419184008202625;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.915', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.689 

Total Inference Time : 1.2966301441192627 

Total revision time: 5.781477527618408
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.814009981155396 

Total Inference Time : 1.2966301441192627 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.683
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 115.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 115.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.158', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.68
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( female(A) )
%   | then return 0.6490635746493423;  // std dev = 0.234, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6953328964755449;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5640959877885925;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.223303442425469;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11348466308025743;  // std dev = 0.110, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42403320864421895;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18696972975410686;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10254902382994183;  // std dev = 0.102, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251437947814075;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16019319165727403;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09356321362008702;  // std dev = 0.095, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08495180782763764;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25819923624222;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13918811436257264;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21189676799320312;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1238818522625352;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08179787239602598;  // std dev = 0.150, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07285476515509456;  // std dev = 3.65e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17866576425598205;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10855831030366934;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06808421544530821;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0.1484868178989491;  // std dev = 0.248, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06388933443169058;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13557394204508855;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11389697104003581;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.658', 'seconds']
Refined model CLL: -0.068284


******************************************
Best model found
******************************************
Results 

CLL : -0.075027 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.68 

Total Inference Time : 1.0199391841888428 

Total revision time: 4.233026588439941
Best scored revision CLL: -0.068284


Results 

CLL : -0.075027 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.265559041976928 

Total Inference Time : 1.0199391841888428 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.7
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.189', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12711218636990385;  // std dev = 0.154, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11215022877453527;  // std dev = 6.99e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10145937202308875;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0925764631704306;  // std dev = 1.14e-05, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08508742046117829;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( female(A) )
%   | then return 0.24099070115457757;  // std dev = 0.068, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2403741123974075;  // std dev = 0.069, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07869317198858167;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21216850307792076;  // std dev = 0.000346, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10591968578280503;  // std dev = 4.77e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1788626871388217;  // std dev = 0.000304, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09630403267988322;  // std dev = 4.65e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07343179767818633;  // std dev = 0.023, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06834706698190375;  // std dev = 2.98e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.15404308339128023;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1339293980038427;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412132998646315;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13621312364861454;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10021196965969047;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.667', 'seconds']
Refined model CLL: -0.0659


******************************************
Best model found
******************************************
Results 

CLL : -0.072426 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.76 

Total Inference Time : 1.0998785495758057 

Total revision time: 4.409570178985596
Best scored revision CLL: -0.0659


Results 

CLL : -0.072426 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.442102632522583 

Total Inference Time : 1.0998785495758057 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.747
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.199', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.912
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6861400788776212;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.4990655373816411;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.11565763546569378;  // std dev = 0.322, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10129176356187489;  // std dev = 5.58e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.3817992984440243;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4394598406190492;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09243620733432446;  // std dev = 4.94e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3322142194989575;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.666730462688661;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08496823421992009;  // std dev = 5.37e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2630096650917987;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.5120120931797223;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07859080354892253;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.19110866393240897;  // std dev = 0.111, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.21788433732707455;  // std dev = 4.94e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07308488976944516;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18266029915773827;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.43178353225171257;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15695161417685788;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3303267816027556;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06982678736673717;  // std dev = 0.141, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06397486698864772;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1372834684951915;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26162231932762847;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.731', 'seconds']
Refined model CLL: -0.070472


******************************************
Best model found
******************************************
Results 

CLL : -0.095827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.912 

Total Inference Time : 1.138354778289795 

Total revision time: 4.740026554107666
Best scored revision CLL: -0.070472


Results 

CLL : -0.095827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.809017976760864 

Total Inference Time : 1.138354778289795 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.721
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 148.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.040', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.806
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 5.58e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.50e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109154;  // std dev = 7.15e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333714;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.48e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.22593242939557334;  // std dev = 0.396, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.798', 'seconds']
Refined model CLL: -0.06398


******************************************
Best model found
******************************************
Results 

CLL : -0.070388 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.806 

Total Inference Time : 1.1312425136566162 

Total revision time: 4.582631160736084
Best scored revision CLL: -0.06398


Results 

CLL : -0.070388 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.651622583389282 

Total Inference Time : 1.1312425136566162 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.845
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.061', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.086
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048813;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.12544463852839177;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360682;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783655;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109144;  // std dev = 4.71e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333684;  // std dev = 9.77e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420287;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06419184008202623;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.846', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.086 

Total Inference Time : 1.334580898284912 

Total revision time: 6.1548545417785645
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.223845964431763 

Total Inference Time : 1.334580898284912 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.7
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.225', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.64
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10456595539731336;  // std dev = 0.236, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09244183372528524;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08497301114356562;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07859490679418775;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0730881474192697;  // std dev = 2.65e-05, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0682882864972263;  // std dev = 3.50e-05, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407001373834502;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.914', 'seconds']
Refined model CLL: -0.064667


******************************************
Best model found
******************************************
Results 

CLL : -0.068057 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.64 

Total Inference Time : 1.0894339084625244 

Total revision time: 4.220817174911499
Best scored revision CLL: -0.064667


Results 

CLL : -0.068057 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.289808597564697 

Total Inference Time : 1.0894339084625244 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.7
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.140', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.786
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0.172, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5227462394421615;  // std dev = 0.156, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5644182891835959;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.11355285780743701;  // std dev = 0.108, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10148352599378344;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42487765855860843;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.33267647064713807;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.30170228472691;  // std dev = 0.118, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2995568625327449;  // std dev = 0.120, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.09819711032189446;  // std dev = 0.422, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08466954358122544;  // std dev = 2.58e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26341137497743133;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3254702788906114;  // std dev = 0.000500, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07833417506171411;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2155611709303858;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25841657423919684;  // std dev = 0.000617, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07286215297404625;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18134150847570124;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21204687437486971;  // std dev = 0.000381, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06809068624508037;  // std dev = 2.36e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.1421929777081472;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.14121752388399364;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06389504684501456;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13819742982410493;  // std dev = 0.000725, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20060285892054028;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.679', 'seconds']
Refined model CLL: -0.070151


******************************************
Best model found
******************************************
Results 

CLL : -0.084803 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.786 

Total Inference Time : 1.0602176189422607 

Total revision time: 4.381663738250732
Best scored revision CLL: -0.070151


Results 

CLL : -0.084803 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.45065516090393 

Total Inference Time : 1.0602176189422607 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.784
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.151', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.775
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 6.66e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10574193368054198;  // std dev = 0.479, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09234322072466544;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( female(A) )
%   | then return 0.29220128692915576;  // std dev = 0.105, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.3207118471601495;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08488928064028023;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.24702185158466877;  // std dev = 0.071, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2425527238837125;  // std dev = 0.068, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21380604818251323;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15081823275158662;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07923944331752998;  // std dev = 0.073, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18006083111818946;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then return -0.07297754753685572;  // std dev = 2.11e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( female(B) )
%   | | then return -0.07297754753685581;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.206260835881762;  // std dev = 0.523, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15498937699871504;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1559467158425827;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06828476379109633;  // std dev = 0.053, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06356019521559622;  // std dev = 0.018, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.135757966369649;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1342552578140913;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.617', 'seconds']
Refined model CLL: -0.066144


******************************************
Best model found
******************************************
Results 

CLL : -0.080099 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.775 

Total Inference Time : 1.1709644794464111 

Total revision time: 4.663302644729614
Best scored revision CLL: -0.066144


Results 

CLL : -0.080099 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.705483421325684 

Total Inference Time : 1.1709644794464111 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.736
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 149.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.456, 196.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.085', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.841
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.8081489350995117;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.45e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7260120165429667;  // std dev = 0.036, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2771999294446886;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5618228849272727;  // std dev = 0.045, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22115649980203567;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11334605209979037;  // std dev = 0.116, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10150238504784827;  // std dev = 6.66e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42233856271809256;  // std dev = 0.044, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18389058572643383;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3239968564449996;  // std dev = 0.040, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16058332578250353;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09245145497478234;  // std dev = 0.018, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08513053608746071;  // std dev = 5.37e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( female(A) )
%   | then return 0.2511817990502917;  // std dev = 2.98e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.24078352649783757;  // std dev = 0.087, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21354403347728254;  // std dev = 0.037, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1688361991637021;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07886720718436449;  // std dev = 0.010, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17987268738369977;  // std dev = 0.032, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1497534728973169;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07548163596274572;  // std dev = 0.228, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06823805392046028;  // std dev = 4.08e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1548492954296721;  // std dev = 0.028, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1302407869483142;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06402512619949022;  // std dev = 5.53e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.13104312038285487;  // std dev = 1.97e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.1254320661560084;  // std dev = 0.055, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.799', 'seconds']
Refined model CLL: -0.067386


******************************************
Best model found
******************************************
Results 

CLL : -0.074642 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.841 

Total Inference Time : 1.1921322345733643 

Total revision time: 4.70029626083374
Best scored revision CLL: -0.067386


Results 

CLL : -0.074642 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.7424770374298095 

Total Inference Time : 1.1921322345733643 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.841
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 574.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 502.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 564.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.121', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.752
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048816;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283913;  // std dev = 3.65e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.12544463852839202;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.16e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360689;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783628;  // std dev = 1.83e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.10159632948783656;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926061;  // std dev = 6.66e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.29e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 2.79e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109147;  // std dev = 5.37e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.073246225763337;  // std dev = 9.19e-08, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420262;  // std dev = 2.47e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420275;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06419184008202623;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.921', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.752 

Total Inference Time : 1.323988914489746 

Total revision time: 5.878330057144165
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.920510833740234 

Total Inference Time : 1.323988914489746 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.687
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.157', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.858
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360628;  // std dev = 4.94e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783619;  // std dev = 4.94e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 1.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.08518475138839679;  // std dev = 2.79e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.18167293710881494;  // std dev = 0.167, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07850043614063817;  // std dev = 0.011, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07288392328944719;  // std dev = 0.012, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06772974635997596;  // std dev = 0.018, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06375449137957352;  // std dev = 0.015, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.684', 'seconds']
Refined model CLL: -0.064845


******************************************
Best model found
******************************************
Results 

CLL : -0.069664 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.858 

Total Inference Time : 1.024052381515503 

Total revision time: 4.3686122131347656
Best scored revision CLL: -0.064845


Results 

CLL : -0.069664 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.410792989730835 

Total Inference Time : 1.024052381515503 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.699
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.153', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.77
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39494358791282524;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926104;  // std dev = 2.79e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.30124353217113947;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3052409552430507;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.24165462734408757;  // std dev = 0.090, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.08608758138570177;  // std dev = 0.051, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787112603870279;  // std dev = 6.32e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2168198035718724;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2272638753113585;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.073189406707671;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( female(A) )
%   | then return 0.1511899450866238;  // std dev = 0.101, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.18367453674279777;  // std dev = 2.79e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837724078357406;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15866495383917778;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21590422561002326;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414795522180192;  // std dev = 2.47e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( female(A) )
%   | then return 0.13942484617587866;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.12382493986584282;  // std dev = 0.065, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.555', 'seconds']
Refined model CLL: -0.071515


******************************************
Best model found
******************************************
Results 

CLL : -0.085234 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.77 

Total Inference Time : 1.0319242477416992 

Total revision time: 4.366294044494628
Best scored revision CLL: -0.071515


Results 

CLL : -0.085234 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.408474821090698 

Total Inference Time : 1.0319242477416992 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.694
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.080', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.888
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7229317860663925;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2771874682044849;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283911;  // std dev = 7.45e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 7.15e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5587683352894274;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22461617452963217;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4200507783505748;  // std dev = 0.030, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18894113604605986;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 4.59e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3224383362993442;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16122137355814342;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.50e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2563534564295983;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1405917162795146;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.66e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2105938702902365;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12444748842011832;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17771086697110158;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11183962859659113;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 5.11e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( female(A) )
%   | then return 0.141922709086639;  // std dev = 0.047, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14680525785818277;  // std dev = 0.046, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13539082898827184;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11505869346083393;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.536', 'seconds']
Refined model CLL: -0.065576


******************************************
Best model found
******************************************
Results 

CLL : -0.075377 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.888 

Total Inference Time : 1.2001841068267822 

Total revision time: 4.691475612640381
Best scored revision CLL: -0.065576


Results 

CLL : -0.075377 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.7235514945983885 

Total Inference Time : 1.2001841068267822 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.792
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.062', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.843
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839108;  // std dev = 7.45e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3915580884760029;  // std dev = 0.113, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32443366566687276;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14491959396749005;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09316882523803106;  // std dev = 0.050, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08514754416957086;  // std dev = 1.49e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25771215743115156;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12700069628949287;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07874480462068809;  // std dev = 5.48e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21155144297487796;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11451286573735617;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321850846776967;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1784117334876524;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10254575185236467;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06840271584341125;  // std dev = 1.49e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15374135172545825;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09451872464778584;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13478561152576163;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08639218140152277;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06457564690437465;  // std dev = 0.036, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.540', 'seconds']
Refined model CLL: -0.064914


******************************************
Best model found
******************************************
Results 

CLL : -0.070823 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.843 

Total Inference Time : 1.2302985191345215 

Total revision time: 4.776207218170166
Best scored revision CLL: -0.064914


Results 

CLL : -0.070823 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.808283100128174 

Total Inference Time : 1.2302985191345215 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.909
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 560.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.120', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.707
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.1418510649004881;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1254446385283918;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.27e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.11231637819360675;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.10159632948783645;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926065;  // std dev = 1.12e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109148;  // std dev = 4.21e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333689;  // std dev = 1.08e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420286;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202625;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.902', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.707 

Total Inference Time : 1.316605567932129 

Total revision time: 5.891455474853515
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.923531356811523 

Total Inference Time : 1.316605567932129 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.682
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.232', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.896
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2977450069740712;  // std dev = 0.095, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.09748406073665554;  // std dev = 0.462, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25848879320571094;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12242803918677134;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.08481199957962987;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.14088889507777458;  // std dev = 0.148, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07786796905158806;  // std dev = 0.012, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21209850925152862;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10908603376623142;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17881193697079678;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09841354634933877;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.0725860918788002;  // std dev = 0.010, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.22857753384341906;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0677620363363543;  // std dev = 0.010, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15404426101635063;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08546088704153884;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06349146437193023;  // std dev = 0.012, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13502163231076864;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08326028596593531;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.652', 'seconds']
Refined model CLL: -0.066104


******************************************
Best model found
******************************************
Results 

CLL : -0.071842 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.896 

Total Inference Time : 0.9980998039245605 

Total revision time: 4.403060129165649
Best scored revision CLL: -0.066104


Results 

CLL : -0.071842 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.435136011123657 

Total Inference Time : 0.9980998039245605 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.682
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.155', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.703
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360626;  // std dev = 5.37e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.22794368305285861;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.08518475138839678;  // std dev = 3.49e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.20101442123055688;  // std dev = 0.064, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1959730369802116;  // std dev = 0.065, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.07877675473109162;  // std dev = 4.83e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.20381288232120254;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07281121495591991;  // std dev = 0.016, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( female(A) )
%   | then return 0.18239982434709962;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.15355857925082808;  // std dev = 0.085, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0681782794630897;  // std dev = 0.013, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15718616231612248;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14619564680202657;  // std dev = 0.000678, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13746561585392378;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12887396256112402;  // std dev = 0.000609, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0635872074513321;  // std dev = 0.019, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.824', 'seconds']
Refined model CLL: -0.066974


******************************************
Best model found
******************************************
Results 

CLL : -0.075958 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.703 

Total Inference Time : 1.0934770107269287 

Total revision time: 4.292466411590576
Best scored revision CLL: -0.066974


Results 

CLL : -0.075958 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.324542293548584 

Total Inference Time : 1.0934770107269287 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.715
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.090', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.772
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6576593444229818;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.7261516513800753;  // std dev = 1.26e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.12684467352925488;  // std dev = 0.148, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11217686847540155;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5703098264298314;  // std dev = 0.065, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.42503938812009834;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10148133341962053;  // std dev = 5.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4287343343290554;  // std dev = 0.065, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3344532317767287;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09259498257611304;  // std dev = 4.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3283570551267405;  // std dev = 0.058, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2581694046434199;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851030218110919;  // std dev = 4.34e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.2674703282758051;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.22325757221662776;  // std dev = 0.116, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07870657048113833;  // std dev = 3.80e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21606929194553398;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25708544577390974;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18171299084226972;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21259327562299812;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07345331612464497;  // std dev = 0.031, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835661094108465;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15623758322628314;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.178913595145224;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412975168007941;  // std dev = 3.16e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13672906361701992;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15377454996264628;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.530', 'seconds']
Refined model CLL: -0.067145


******************************************
Best model found
******************************************
Results 

CLL : -0.083671 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.772 

Total Inference Time : 1.1598718166351318 

Total revision time: 4.514194261550903
Best scored revision CLL: -0.067145


Results 

CLL : -0.083671 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.583944808959961 

Total Inference Time : 1.1598718166351318 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.708
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 151.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 149.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.107', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.846
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.02e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.5219822959992896;  // std dev = 0.146, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42284704801847406;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17798639929627394;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10221439498196935;  // std dev = 0.074, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09263931021001266;  // std dev = 2.36e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32433529852025506;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15337564486527488;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2348957220570218;  // std dev = 0.083, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.24977554438450847;  // std dev = 0.062, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.08570104733935897;  // std dev = 0.056, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.21164021150323237;  // std dev = 2.58e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.20502616700349757;  // std dev = 0.060, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else if ( actor(A) )
%   | then return -0.07869824003881593;  // std dev = 3.41e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.16680042368870943;  // std dev = 0.483, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08928501358679748;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07304929131648395;  // std dev = 0.008, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1809084522539644;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1949342198086579;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15562997126443615;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16714588487159915;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0685896760317829;  // std dev = 0.034, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06389842337148083;  // std dev = 0.010, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13625648531447662;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14693624745725573;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.637', 'seconds']
Refined model CLL: -0.067897


******************************************
Best model found
******************************************
Results 

CLL : -0.080261 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.846 

Total Inference Time : 1.1900508403778076 

Total revision time: 4.678207973480225
Best scored revision CLL: -0.067897


Results 

CLL : -0.080261 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.7479585208892825 

Total Inference Time : 1.1900508403778076 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.915
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.082', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.775
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048827;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839188;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.11231637819360679;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783644;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926065;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 7.74e-08, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109147;  // std dev = 5.77e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.0732462257633369;  // std dev = 1.07e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06842697784420283;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202623;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.019', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.775 

Total Inference Time : 1.3308990001678467 

Total revision time: 5.959710779190063
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.029461326599121 

Total Inference Time : 1.3308990001678467 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.733
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.450, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.173', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.694
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10480980054559283;  // std dev = 0.272, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09568849303559984;  // std dev = 0.256, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0847020082162653;  // std dev = 1.05e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08158815428941377;  // std dev = 0.231, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07266867291378441;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06792119621121388;  // std dev = 1.29e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.14045658943045564;  // std dev = 0.051, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06374540099252633;  // std dev = 3.49e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.12358488983634593;  // std dev = 0.049, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.941', 'seconds']
Refined model CLL: -0.066148


******************************************
Best model found
******************************************
Results 

CLL : -0.069674 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.694 

Total Inference Time : 1.0864944458007812 

Total revision time: 4.320614292144775
Best scored revision CLL: -0.066148


Results 

CLL : -0.069674 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.390364839553833 

Total Inference Time : 1.0864944458007812 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.675
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.456, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.134', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.722
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.4997262021679603;  // std dev = 0.185, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 5.05e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4241577551860989;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17579911354404382;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.29946023219340584;  // std dev = 0.095, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3314783453462027;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.49e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.260181630767456;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19687315709763106;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2113531159075697;  // std dev = 2.11e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19870529176395096;  // std dev = 0.078, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.0799047497515085;  // std dev = 0.087, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07316969293870203;  // std dev = 1.29e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18089364909780367;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19853833104995214;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835998308129561;  // std dev = 2.47e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1556194099072653;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16763380265152025;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13624869596382289;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14780173088501797;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06471427409130343;  // std dev = 0.049, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.641', 'seconds']
Refined model CLL: -0.069153


******************************************
Best model found
******************************************
Results 

CLL : -0.08628 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.722 

Total Inference Time : 1.0039408206939697 

Total revision time: 4.193157836914063
Best scored revision CLL: -0.069153


Results 

CLL : -0.08628 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.26290838432312 

Total Inference Time : 1.0039408206939697 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.763
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.125', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.819
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5122901261050012;  // std dev = 0.164, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.11231637819360628;  // std dev = 6.14e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42295714878447305;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17646067243440888;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892608;  // std dev = 7.60e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.324414616953793;  // std dev = 0.035, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1517970188416099;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.23949254292097094;  // std dev = 0.072, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.24855138030949306;  // std dev = 0.071, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.08508792360924786;  // std dev = 0.010, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07878378190429357;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.19731676037332374;  // std dev = 0.070, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20390036242304307;  // std dev = 0.068, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07325232177129354;  // std dev = 2.98e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.181992910215979;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1935877570344234;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15644885462762478;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16586808834142117;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06843231376366735;  // std dev = 5.11e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641965479471185;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13689329566013614;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14439829526237719;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.587', 'seconds']
Refined model CLL: -0.066979


******************************************
Best model found
******************************************
Results 

CLL : -0.083476 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.819 

Total Inference Time : 1.1486449241638184 

Total revision time: 4.642396194458008
Best scored revision CLL: -0.066979


Results 

CLL : -0.083476 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.68584464263916 

Total Inference Time : 1.1486449241638184 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.706
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.178', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.963
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.88e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 8.69e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783635;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926097;  // std dev = 4.83e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.14e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.07324622576333709;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return -0.1759328075072652;  // std dev = 0.356, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06842697784420265;  // std dev = 5.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return -0.11618227663790452;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.17444636424083435;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0557256461971616;  // std dev = 1.32e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.631', 'seconds']
Refined model CLL: -0.063247


******************************************
Best model found
******************************************
Results 

CLL : -0.067161 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.963 

Total Inference Time : 1.3094563484191895 

Total revision time: 4.945307582855225
Best scored revision CLL: -0.063247


Results 

CLL : -0.067161 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.988756031036377 

Total Inference Time : 1.3094563484191895 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.896
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 569.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 580.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.083', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.899
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1418510649004883;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839188;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360683;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.10159632948783642;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.09269127618926062;  // std dev = 4.21e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.07877675473109143;  // std dev = 3.65e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07324622576333678;  // std dev = 1.12e-07, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06842697784420275;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.668', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.899 

Total Inference Time : 1.2903046607971191 

Total revision time: 6.04792444229126
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.091372890472412 

Total Inference Time : 1.2903046607971191 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.691
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.169', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.878
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839147;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878362;  // std dev = 4.71e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09347221693322973;  // std dev = 0.073, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08512391370760766;  // std dev = 2.11e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872451199653226;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07320082830232327;  // std dev = 7.63e-06, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06838724116649707;  // std dev = 7.17e-06, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06415684388121728;  // std dev = 3.49e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.732', 'seconds']
Refined model CLL: -0.064208


******************************************
Best model found
******************************************
Results 

CLL : -0.065767 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.878 

Total Inference Time : 1.1145853996276855 

Total revision time: 4.51093959236145
Best scored revision CLL: -0.064208


Results 

CLL : -0.065767 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.5543880405426025 

Total Inference Time : 1.1145853996276855 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.665
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.171', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.783
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.02e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.4997262021679603;  // std dev = 0.185, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4241577551860988;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17525978705879872;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3252365329807286;  // std dev = 0.041, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1518306971524631;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.23679603343828182;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.24656692476591272;  // std dev = 0.080, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.0857332971946574;  // std dev = 0.045, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07873695542268423;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( female(A) )
%   | then return 0.1806648252905026;  // std dev = 0.103, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.21869120182872456;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.16674604723377426;  // std dev = 0.075, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.16723838869124158;  // std dev = 0.077, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.07321169892918619;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.1715069324968432;  // std dev = 0.241, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15936080011924586;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22150628530373298;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06859894684680483;  // std dev = 0.060, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06349132651969293;  // std dev = 0.018, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( female(A) )
%   | then return 0.12519196624016457;  // std dev = 0.065, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.13960192828842863;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.862', 'seconds']
Refined model CLL: -0.072258


******************************************
Best model found
******************************************
Results 

CLL : -0.090635 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.783 

Total Inference Time : 1.0600430965423584 

Total revision time: 4.335526035308838
Best scored revision CLL: -0.072258


Results 

CLL : -0.090635 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.378974483489991 

Total Inference Time : 1.0600430965423584 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.715
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.450, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.104', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.821
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.1123163781936062;  // std dev = 8.30e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4203215730716789;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17901759729244054;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7.30e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32261875832735293;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1542000488327032;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2564745572796134;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1338425023803411;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08509739153378477;  // std dev = 0.010, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21067817195119234;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1200139713646132;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08131428469238634;  // std dev = 0.257, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17608771177113447;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1608633378561112;  // std dev = 0.070, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.07298670392749386;  // std dev = 0.009, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06828746752151281;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15451243691483454;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12342418225226698;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06406873575262284;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13538700706934942;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11217672119995925;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.772', 'seconds']
Refined model CLL: -0.065117


******************************************
Best model found
******************************************
Results 

CLL : -0.0718 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.821 

Total Inference Time : 1.1813862323760986 

Total revision time: 4.64911388015747
Best scored revision CLL: -0.065117


Results 

CLL : -0.0718 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.683025823593139 

Total Inference Time : 1.1813862323760986 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.79
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.099', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.808
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7.30e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.32e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0.20486730088060975;  // std dev = 0.286, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1778103199603904;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09498632348745861;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07347750339870007;  // std dev = 0.022, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06841223658601779;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15328514845384864;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08712910640543758;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417883369910736;  // std dev = 5.27e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13442946530360178;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08044378451625535;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.562', 'seconds']
Refined model CLL: -0.066305


******************************************
Best model found
******************************************
Results 

CLL : -0.08504 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.808 

Total Inference Time : 1.1923868656158447 

Total revision time: 4.684099863052368
Best scored revision CLL: -0.066305


Results 

CLL : -0.08504 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.718011806488037 

Total Inference Time : 1.1923868656158447 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.913
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 568.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.122', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.677
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048813;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.12544463852839188;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 5.05e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.11231637819360665;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783645;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926071;  // std dev = 9.42e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.08518475138839679;  // std dev = 8.16e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109166;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109143;  // std dev = 3.94e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.0732462257633369;  // std dev = 1.05e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420286;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202623;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.759', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.677 

Total Inference Time : 1.2772104740142822 

Total revision time: 5.821040239334106
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.854952182769775 

Total Inference Time : 1.2772104740142822 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.723
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.491, 111.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.450, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.178', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.852
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1270600754998566;  // std dev = 0.154, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11215541769188046;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1014636497601611;  // std dev = 4.08e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09257952434693931;  // std dev = 3.44e-05, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09013017490742145;  // std dev = 0.365, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07833089581432277;  // std dev = 2.10e-05, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0728593256270634;  // std dev = 1.97e-05, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06808846160883772;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.13329932901786573;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06808846160883768;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06377078772887985;  // std dev = 0.006, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.738', 'seconds']
Refined model CLL: -0.064413


******************************************
Best model found
******************************************
Results 

CLL : -0.067731 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.852 

Total Inference Time : 1.072213888168335 

Total revision time: 4.494625282287598
Best scored revision CLL: -0.064413


Results 

CLL : -0.067731 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.528537225723267 

Total Inference Time : 1.072213888168335 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.643
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.239', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.646
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.127148835773014;  // std dev = 0.154, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11377665616964606;  // std dev = 0.143, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096535;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1764838121062648;  // std dev = 0.000176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10130785747433413;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09244968862716524;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.30537927164368894;  // std dev = 0.095, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.30477475438915486;  // std dev = 0.097, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.262290051680609;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19587074648563813;  // std dev = 0.000256, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08718028663239696;  // std dev = 0.190, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07844140927278671;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21477323854035144;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1669807816437101;  // std dev = 0.000218, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07295523647838123;  // std dev = 3.16e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18076650239188458;  // std dev = 0.000901, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14500717057456544;  // std dev = 0.000184, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0681722089711843;  // std dev = 7.45e-09, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.15540578362080693;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1320234666614675;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06396700973496769;  // std dev = 4.08e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0.1375432394440102;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.744', 'seconds']
Refined model CLL: -0.068945


******************************************
Best model found
******************************************
Results 

CLL : -0.078274 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.646 

Total Inference Time : 1.0594642162322998 

Total revision time: 4.206601823806762
Best scored revision CLL: -0.068945


Results 

CLL : -0.078274 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.240513767242431 

Total Inference Time : 1.0594642162322998 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.703
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 145.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.129', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.853
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3961504900129686;  // std dev = 0.111, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.39757469628932474;  // std dev = 0.107, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.10371749085174863;  // std dev = 0.237, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32522178073986396;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.24697167455230815;  // std dev = 0.000216, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09456632996610634;  // std dev = 0.223, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08487384889201782;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.22651390496680063;  // std dev = 0.117, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.2581157202968918;  // std dev = 3.33e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07850972281593649;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21451865972255738;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.24607541389798665;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07301452692978465;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18058199651451043;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2024210091948135;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06822412919043776;  // std dev = 2.11e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15538375023400577;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17012622218069215;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06401283640084011;  // std dev = 4.01e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1360652139146569;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15023524681872114;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.602', 'seconds']
Refined model CLL: -0.066512


******************************************
Best model found
******************************************
Results 

CLL : -0.078698 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.853 

Total Inference Time : 1.1807315349578857 

Total revision time: 4.653219228744507
Best scored revision CLL: -0.066512


Results 

CLL : -0.078698 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.723517900466919 

Total Inference Time : 1.1807315349578857 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.718
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.086', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.779
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11510895958066594;  // std dev = 0.331, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10134172141119552;  // std dev = 7.45e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0924780541704404;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08500376206735799;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.238964766666733;  // std dev = 0.072, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.24644514016031302;  // std dev = 0.054, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862132024628642;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21163864006243802;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1064568824176225;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07311137014840942;  // std dev = 2.58e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1784749035958679;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09642043832174055;  // std dev = 0.000652, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06830892325329606;  // std dev = 1.83e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1537887556182001;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08864184982305898;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06408767021141219;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13482226576899947;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08173725132835785;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.602', 'seconds']
Refined model CLL: -0.065438


******************************************
Best model found
******************************************
Results 

CLL : -0.077435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.779 

Total Inference Time : 1.1493418216705322 

Total revision time: 4.523208400726318
Best scored revision CLL: -0.065438


Results 

CLL : -0.077435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.59350707244873 

Total Inference Time : 1.1493418216705322 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.895
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 501.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.076', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.722
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1418510649004882;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839183;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1123163781936069;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.10159632948783656;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839679;  // std dev = 7.60e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109144;  // std dev = 5.37e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.07324622576333693;  // std dev = 1.02e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420287;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202623;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.833', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.722 

Total Inference Time : 1.2607049942016602 

Total revision time: 5.829371349334717
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.899670021057129 

Total Inference Time : 1.2607049942016602 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.69
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.152', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.67
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11627253515860755;  // std dev = 0.330, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10123580189319087;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09238932772311888;  // std dev = 2.11e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08492843083799448;  // std dev = 5.48e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07855614796167655;  // std dev = 4.02e-05, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07305525079404579;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0682592339464512;  // std dev = 4.74e-05, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06404434094953938;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.18340182784068063;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06404434094953947;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.762', 'seconds']
Refined model CLL: -0.064846


******************************************
Best model found
******************************************
Results 

CLL : -0.069448 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.67 

Total Inference Time : 1.0489521026611328 

Total revision time: 4.227418050765991
Best scored revision CLL: -0.064846


Results 

CLL : -0.069448 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.297716722488403 

Total Inference Time : 1.0489521026611328 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.685
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.127', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.763
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 8.30e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283915;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3027377983188709;  // std dev = 0.084, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.09269127618926105;  // std dev = 1.49e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.23939784421226817;  // std dev = 0.076, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.25860338548311673;  // std dev = 2.58e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.19721302000555974;  // std dev = 0.073, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.21217851467674187;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( female(A) )
%   | then return 0.1524492293131781;  // std dev = 0.098, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.17887001302815797;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 4.01e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15696918513100905;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20238786216269342;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13729815582365867;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17576877536186522;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06488339603872582;  // std dev = 0.063, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.694', 'seconds']
Refined model CLL: -0.068565


******************************************
Best model found
******************************************
Results 

CLL : -0.077447 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.763 

Total Inference Time : 1.0749437808990479 

Total revision time: 4.39266519355774
Best scored revision CLL: -0.068565


Results 

CLL : -0.077447 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.462963865280152 

Total Inference Time : 1.0749437808990479 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.776
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.208', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.801
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.45e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.88e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783665;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0926912761892609;  // std dev = 6.14e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08821312856215713;  // std dev = 0.329, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07855726259584732;  // std dev = 4.08e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.073055783639451;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0.1727045201398631;  // std dev = 0.248, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06826025441758325;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15331310511358096;  // std dev = 4.71e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08586855531125158;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06404471950224801;  // std dev = 3.41e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( female(A) )
%   | then return 0.13445127562726086;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12065676697268189;  // std dev = 0.053, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.597', 'seconds']
Refined model CLL: -0.065039


******************************************
Best model found
******************************************
Results 

CLL : -0.075238 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.801 

Total Inference Time : 1.1512625217437744 

Total revision time: 4.598860837936401
Best scored revision CLL: -0.065039


Results 

CLL : -0.075238 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.641041614532471 

Total Inference Time : 1.1512625217437744 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.762
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 199.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.147', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.964
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283911;  // std dev = 7.60e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11359853291235207;  // std dev = 0.143, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10147936120251028;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0925932346222165;  // std dev = 9.78e-06, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08510154385008564;  // std dev = 9.06e-06, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07870537902519174;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07318404602824666;  // std dev = 1.79e-05, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06837268230008502;  // std dev = 1.19e-05, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414403477023269;  // std dev = 5.11e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.12409708650350923;  // std dev = 0.043, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.726', 'seconds']
Refined model CLL: -0.064398


******************************************
Best model found
******************************************
Results 

CLL : -0.068895 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.964 

Total Inference Time : 1.220200538635254 

Total revision time: 4.837593246459961
Best scored revision CLL: -0.064398


Results 

CLL : -0.068895 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.87977402305603 

Total Inference Time : 1.220200538635254 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.913
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 501.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 568.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 559.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.078', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.795
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048816;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.12544463852839186;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.11231637819360685;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.10159632948783663;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926065;  // std dev = 7.30e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 7.45e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 7.60e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07877675473109146;  // std dev = 4.47e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.0732462257633368;  // std dev = 1.10e-07, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420262;  // std dev = 2.36e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420289;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202625;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.687', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.795 

Total Inference Time : 1.3400497436523438 

Total revision time: 6.002581174850464
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.044761951446533 

Total Inference Time : 1.3400497436523438 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.735
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.225', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11551173574226112;  // std dev = 0.331, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10130504584051062;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09244733344585064;  // std dev = 4.34e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08497768048134623;  // std dev = 2.11e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07859891759626339;  // std dev = 3.33e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07309035315820334;  // std dev = 8.70e-05, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06829200393044664;  // std dev = 1.83e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.2749607670773814;  // std dev = 0.506, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06828029928003454;  // std dev = 5.23e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06390366550388858;  // std dev = 0.011, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.720', 'seconds']
Refined model CLL: -0.065573


******************************************
Best model found
******************************************
Results 

CLL : -0.072893 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.751 

Total Inference Time : 1.018071174621582 

Total revision time: 4.349174438476562
Best scored revision CLL: -0.065573


Results 

CLL : -0.072893 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.391355215072632 

Total Inference Time : 1.018071174621582 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.691
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.146', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.842
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.83e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 5.05e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4209731337415501;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17639591428470983;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3230626689993596;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15296899411636744;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 4.59e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.23777917369620907;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.24251838303721582;  // std dev = 0.080, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109165;  // std dev = 4.28e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21367967456737022;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16525111292707828;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17996850197070116;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14389736771066441;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.01e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15491957187232613;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12778223881026085;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return 0.11436400590448387;  // std dev = 0.068, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.1371600137155582;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.557', 'seconds']
Refined model CLL: -0.06882


******************************************
Best model found
******************************************
Results 

CLL : -0.08402 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.842 

Total Inference Time : 0.9673123359680176 

Total revision time: 4.356076725006103
Best scored revision CLL: -0.06882


Results 

CLL : -0.08402 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.398257501602172 

Total Inference Time : 0.9673123359680176 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.74
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.084', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.799
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.12544463852839144;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5589528166351133;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2275182985526726;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.40222915980107427;  // std dev = 0.113, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3964196755045949;  // std dev = 0.109, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926083;  // std dev = 7.45e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32712411224979604;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25701025716290643;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.75e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2595448893167925;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21067074013353176;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.99e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21284293503034282;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17751246621769987;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0.17355264104026338;  // std dev = 0.328, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1552163862446876;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17587057861628452;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06842697784420265;  // std dev = 4.71e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.19532139493799933;  // std dev = 0.567, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1359346838428997;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1543363128325577;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06403830278839348;  // std dev = 0.014, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.545', 'seconds']
Refined model CLL: -0.066794


******************************************
Best model found
******************************************
Results 

CLL : -0.081053 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.799 

Total Inference Time : 1.1707775592803955 

Total revision time: 4.618272985458374
Best scored revision CLL: -0.066794


Results 

CLL : -0.081053 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.651467288970947 

Total Inference Time : 1.1707775592803955 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.762
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.100', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.903
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11325297917213518;  // std dev = 0.115, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10151087358118474;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09261972003751026;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08512401898477838;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07872447081388573;  // std dev = 1.57e-05, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0732008687997206;  // std dev = 1.47e-05, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0683873892383539;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06415678628563048;  // std dev = 1.54e-05, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.772', 'seconds']
Refined model CLL: -0.063906


******************************************
Best model found
******************************************
Results 

CLL : -0.068866 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.903 

Total Inference Time : 1.1523396968841553 

Total revision time: 4.729718246459961
Best scored revision CLL: -0.063906


Results 

CLL : -0.068866 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.762912549972534 

Total Inference Time : 1.1523396968841553 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.85
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.159', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.759
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048824;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839188;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.11231637819360685;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783653;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.07877675473109146;  // std dev = 5.58e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.0732462257633369;  // std dev = 1.06e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.79e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06842697784420272;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06419184008202625;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.619', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.759 

Total Inference Time : 1.2828264236450195 

Total revision time: 5.803956302642822
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.8371506061553955 

Total Inference Time : 1.2828264236450195 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.667
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.149', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.778
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 8.02e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5182729470274015;  // std dev = 0.153, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.11389448669167569;  // std dev = 0.114, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10145237893462261;  // std dev = 1.05e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.424349574097243;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17643314500592217;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092570734509217;  // std dev = 4.59e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3253554830570242;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15478592602527327;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08508243925893925;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.2529965708103909;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.24885850728252484;  // std dev = 0.065, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2134174286038374;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16554814738515608;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.07868889404561649;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.16310822022511332;  // std dev = 0.292, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0786888940456164;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07292454756141334;  // std dev = 0.011, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1797776433285418;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1444127378048386;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0681949963918743;  // std dev = 0.009, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15477576054304276;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12626616729780393;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13559200874098026;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11228500905701853;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06403688589472362;  // std dev = 0.009, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.911', 'seconds']
Refined model CLL: -0.067562


******************************************
Best model found
******************************************
Results 

CLL : -0.072281 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.778 

Total Inference Time : 1.0397191047668457 

Total revision time: 4.3258598518371585
Best scored revision CLL: -0.067562


Results 

CLL : -0.072281 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.359054155349732 

Total Inference Time : 1.0397191047668457 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.69
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.795
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.83e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22751829855267272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3668859871670617;  // std dev = 0.168, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32615227413661707;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25847149548705506;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.09269127618926108;  // std dev = 1.49e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return -0.3913445566737646;  // std dev = 0.339, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.71e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25888939321515586;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21209041415424942;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5.48e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2123850283359892;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1757046047747818;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17902426376011812;  // std dev = 0.025, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15727446214590257;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1542067687443314;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13163822939220277;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13514949586998568;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11864253309954866;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.599', 'seconds']
Refined model CLL: -0.06794


******************************************
Best model found
******************************************
Results 

CLL : -0.082355 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.795 

Total Inference Time : 0.9930393695831299 

Total revision time: 4.276882991790771
Best scored revision CLL: -0.06794


Results 

CLL : -0.082355 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.310077295303344 

Total Inference Time : 0.9930393695831299 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.732
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.452, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.191', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.95
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360621;  // std dev = 7.88e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14652771257609323;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.48e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12913526897575123;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.50e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.19814869475215086;  // std dev = 0.060, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1989226294775098;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333713;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17873583379517957;  // std dev = 0.000425, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13715814989519842;  // std dev = 7.48e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.77e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( female(A) )
%   | then return 0.15403853813353507;  // std dev = 3.16e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1447482491674058;  // std dev = 0.049, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( female(A) )
%   | then return 0.11611190279798445;  // std dev = 0.069, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.13601465490437414;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.594', 'seconds']
Refined model CLL: -0.068396


******************************************
Best model found
******************************************
Results 

CLL : -0.091103 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.95 

Total Inference Time : 1.1424272060394287 

Total revision time: 4.725396949768067
Best scored revision CLL: -0.068396


Results 

CLL : -0.091103 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.796730119705201 

Total Inference Time : 1.1424272060394287 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.725
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.067', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.859
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1015963294878364;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926089;  // std dev = 6.50e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839682;  // std dev = 5.96e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109157;  // std dev = 6.75e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0761162199408427;  // std dev = 0.277, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06824425729546117;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06403049783282827;  // std dev = 1.09e-05, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.605', 'seconds']
Refined model CLL: -0.06371


******************************************
Best model found
******************************************
Results 

CLL : -0.068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.859 

Total Inference Time : 1.2539620399475098 

Total revision time: 4.7265542831420895
Best scored revision CLL: -0.06371


Results 

CLL : -0.068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.797887453079223 

Total Inference Time : 1.2539620399475098 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.83
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 557.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.051', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.83
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.1418510649004881;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839183;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360686;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783644;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.09269127618926064;  // std dev = 1.12e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109146;  // std dev = 5.77e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333688;  // std dev = 8.30e-08, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420282;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202625;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.624', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.83 

Total Inference Time : 1.3416147232055664 

Total revision time: 5.924197587966919
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.995530757904053 

Total Inference Time : 1.3416147232055664 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.711
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.217', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.773
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 6.83e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.27e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109165;  // std dev = 4.94e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07594499495757136;  // std dev = 0.239, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06825514577974563;  // std dev = 2.36e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06404021087949027;  // std dev = 4.65e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.846', 'seconds']
Refined model CLL: -0.064357


******************************************
Best model found
******************************************
Results 

CLL : -0.066774 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.773 

Total Inference Time : 1.0555362701416016 

Total revision time: 4.391399415969849
Best scored revision CLL: -0.064357


Results 

CLL : -0.066774 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.462732585906982 

Total Inference Time : 1.0555362701416016 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.693
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.451, 158.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.153', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.59
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839144;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 5.05e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3.07e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0.14793579644284752;  // std dev = 0.219, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13456598397997804;  // std dev = 3.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07848065397292985;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06435238855271058;  // std dev = 0.014, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.816', 'seconds']
Refined model CLL: -0.0649


******************************************
Best model found
******************************************
Results 

CLL : -0.069426 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.59 

Total Inference Time : 1.0530848503112793 

Total revision time: 4.171548374176026
Best scored revision CLL: -0.0649


Results 

CLL : -0.069426 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.2428815441131595 

Total Inference Time : 1.0530848503112793 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.739
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.084', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.957
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.74e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5589528166351133;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22576502029797307;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11323799355647875;  // std dev = 0.115, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10151224037364413;  // std dev = 1.49e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4201864450839595;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18721689958554746;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09262086458756812;  // std dev = 7.15e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.3259443606855043;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.30326819368135394;  // std dev = 0.087, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22657972194519407;  // std dev = 0.118, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.2573037594017356;  // std dev = 1.49e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then return -0.08512499046025632;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.17023122083010703;  // std dev = 0.466, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08512499046025619;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07860136485305635;  // std dev = 0.008, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21436701544566597;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2544936780143993;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07301299594955922;  // std dev = 0.011, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.169599566649221;  // std dev = 0.072, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.17774500723093448;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06836740679486317;  // std dev = 0.005, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1561833592481953;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.23811845672963003;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.12767681545466328;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12293126139142416;  // std dev = 0.060, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06494207554150228;  // std dev = 0.101, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.664', 'seconds']
Refined model CLL: -0.070353


******************************************
Best model found
******************************************
Results 

CLL : -0.092802 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.957 

Total Inference Time : 1.2129924297332764 

Total revision time: 4.806648870468139
Best scored revision CLL: -0.070353


Results 

CLL : -0.092802 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.848517795562744 

Total Inference Time : 1.2129924297332764 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.705
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.489, 146.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 152.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.067', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.815
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1123163781936062;  // std dev = 8.30e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926092;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0790246950670901;  // std dev = 0.028, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07322939705251398;  // std dev = 2.98e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06841224716618029;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417884303422143;  // std dev = 2.79e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.739', 'seconds']
Refined model CLL: -0.063487


******************************************
Best model found
******************************************
Results 

CLL : -0.064906 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.815 

Total Inference Time : 1.2435543537139893 

Total revision time: 4.704635400772094
Best scored revision CLL: -0.063487


Results 

CLL : -0.064906 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.746504325866699 

Total Inference Time : 1.2435543537139893 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.924
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 553.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 564.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 557.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.057', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.707
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048816;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.1254446385283919;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.48e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360689;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783644;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926065;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109146;  // std dev = 4.94e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0732462257633369;  // std dev = 1.05e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420285;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202623;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.689', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.707 

Total Inference Time : 1.3226032257080078 

Total revision time: 5.870683628082276
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.91255255317688 

Total Inference Time : 1.3226032257080078 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.688
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.239', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.666
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1270770800995562;  // std dev = 0.154, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11215372444316588;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10146225385152736;  // std dev = 5.67e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09257887034069472;  // std dev = 1.12e-05, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08508946955589841;  // std dev = 4.08e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07869493177694052;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07317500293215673;  // std dev = 2.10e-05, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06836463405114186;  // std dev = 1.97e-05, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06413703876348212;  // std dev = 2.69e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.729', 'seconds']
Refined model CLL: -0.064731


******************************************
Best model found
******************************************
Results 

CLL : -0.068142 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.666 

Total Inference Time : 0.9959943294525146 

Total revision time: 4.161577133178711
Best scored revision CLL: -0.064731


Results 

CLL : -0.068142 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.2034460582733155 

Total Inference Time : 0.9959943294525146 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.704
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.114', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.765
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5019518115510934;  // std dev = 0.181, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.11231637819360625;  // std dev = 6.32e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42418082192032025;  // std dev = 0.044, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17806242465406433;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783617;  // std dev = 5.48e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926105;  // std dev = 2.11e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3252508712446577;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15232885923671488;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 3.16e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2582762131756402;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13500989165306757;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 4.94e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21195344357465137;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11880809648002988;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1787087680670475;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10692284367025004;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07677632021612453;  // std dev = 0.270, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06820229547408554;  // std dev = 1.97e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.14686119776595322;  // std dev = 0.050, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.13954907178144382;  // std dev = 0.051, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06399356565380189;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13620771448090868;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11269414142854547;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.660', 'seconds']
Refined model CLL: -0.065908


******************************************
Best model found
******************************************
Results 

CLL : -0.071424 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.765 

Total Inference Time : 1.018212080001831 

Total revision time: 4.350632566452026
Best scored revision CLL: -0.065908


Results 

CLL : -0.071424 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.39250149154663 

Total Inference Time : 1.018212080001831 

Starting experiment 27_nell_sports_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.817
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.097', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.853
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.74e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7229317860663925;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2738483486199243;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 9.42e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( female(A) )
%   | then return 0.5265406234092549;  // std dev = 0.145, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5365442513859435;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783665;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0.4266505949769514;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.37e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.324257980635447;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.28046075197956766;  // std dev = 0.186, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26434570848559974;  // std dev = 0.049, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.5042479917241611;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.77e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0.2162264005390901;  // std dev = 0.043, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 7.45e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.18183237916495298;  // std dev = 0.037, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.4381721150928522;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15633086543520805;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then return -0.06842697784420267;  // std dev = 3.87e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.32541964446504773;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1368037510055052;  // std dev = 0.030, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.365231061782114;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06537869472780769;  // std dev = 0.196, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.820', 'seconds']
Refined model CLL: -0.073676


******************************************
Best model found
******************************************
Results 

CLL : -0.106714 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.853 

Total Inference Time : 1.1038966178894043 

Total revision time: 4.654596490859985
Best scored revision CLL: -0.073676


Results 

CLL : -0.106714 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.690090818405151 

Total Inference Time : 1.1038966178894043 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.803
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.180', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.817
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892608;  // std dev = 7.60e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.24940347996003395;  // std dev = 0.337, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return -0.08518475138839682;  // std dev = 5.67e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21071554342784166;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10673861878592547;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109157;  // std dev = 6.50e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333718;  // std dev = 2.98e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( female(A) )
%   | then return 0.17779870078300813;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.16405974339573892;  // std dev = 0.060, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.58e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1544501383576429;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11260385186992536;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13533778653410822;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10158110107555614;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.18719441445520107;  // std dev = 0.426, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.612', 'seconds']
Refined model CLL: -0.065759


******************************************
Best model found
******************************************
Results 

CLL : -0.073983 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.817 

Total Inference Time : 1.1830050945281982 

Total revision time: 4.729680414199829
Best scored revision CLL: -0.065759


Results 

CLL : -0.073983 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.765174741744995 

Total Inference Time : 1.1830050945281982 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.921
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.045', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.768
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6.32e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return -0.14185106490048802;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839116;  // std dev = 6.66e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839188;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360635;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.11231637819360697;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783644;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926064;  // std dev = 7.88e-08, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.29e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.25e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109147;  // std dev = 5.58e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333681;  // std dev = 1.07e-07, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420262;  // std dev = 2.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420289;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202625;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.872', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.768 

Total Inference Time : 1.3470499515533447 

Total revision time: 5.940999616622925
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.976493944168091 

Total Inference Time : 1.3470499515533447 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.705
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.202', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.624
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839147;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08286590619955914;  // std dev = 0.292, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07704239253889517;  // std dev = 0.279, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06792603772923654;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06374935132513512;  // std dev = 2.97e-05, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.640', 'seconds']
Refined model CLL: -0.064247


******************************************
Best model found
******************************************
Results 

CLL : -0.067155 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.624 

Total Inference Time : 1.0357739925384521 

Total revision time: 4.171867374420167
Best scored revision CLL: -0.064247


Results 

CLL : -0.067155 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.207361701965333 

Total Inference Time : 1.0357739925384521 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.704
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.175', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.819
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7237223348029782;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2783538432817608;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5595550873766879;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2222304782563247;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42064336728739343;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18785217862525666;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.298114240085249;  // std dev = 0.096, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.30658905500995987;  // std dev = 0.099, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.09269127618926104;  // std dev = 2.36e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.208612375430313;  // std dev = 0.518, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08508691181331858;  // std dev = 0.009, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26057196692855067;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20736916539173456;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07854817963888613;  // std dev = 0.011, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( female(A) )
%   | then return 0.21069255365479922;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1996968790427282;  // std dev = 0.079, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07317701970458058;  // std dev = 0.007, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18111797383717906;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20333996288756992;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1390601040638669;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.15888237852295017;  // std dev = 2.79e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then return -0.06845220088543427;  // std dev = 1.97e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.20530738030476905;  // std dev = 0.620, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06364671661682139;  // std dev = 0.027, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13719719799975158;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1958048707047927;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.836', 'seconds']
Refined model CLL: -0.069894


******************************************
Best model found
******************************************
Results 

CLL : -0.085174 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.819 

Total Inference Time : 1.0356476306915283 

Total revision time: 4.409388301849365
Best scored revision CLL: -0.069894


Results 

CLL : -0.085174 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.444882629394531 

Total Inference Time : 1.0356476306915283 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.737
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.143', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.93
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11340318876303133;  // std dev = 0.115, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.101497174322752;  // std dev = 5.37e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09260818151373913;  // std dev = 8.30e-06, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08511428694480896;  // std dev = 7.52e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07871624481133055;  // std dev = 5.77e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07319373111275686;  // std dev = 3.49e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06838102635228858;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06415129549746544;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5.16e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.632', 'seconds']
Refined model CLL: -0.063911


******************************************
Best model found
******************************************
Results 

CLL : -0.070322 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.93 

Total Inference Time : 1.1679308414459229 

Total revision time: 4.74731702041626
Best scored revision CLL: -0.063911


Results 

CLL : -0.070322 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.819666091918945 

Total Inference Time : 1.1679308414459229 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.783
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.456, 196.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 193.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.128', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.012
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.02e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926079;  // std dev = 7.60e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0787767547310916;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07561356624091327;  // std dev = 0.281, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06827622646293398;  // std dev = 3.73e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06667177883829532;  // std dev = 0.257, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.807', 'seconds']
Refined model CLL: -0.063509


******************************************
Best model found
******************************************
Results 

CLL : -0.067166 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.012 

Total Inference Time : 1.2604904174804688 

Total revision time: 4.9449648094177245
Best scored revision CLL: -0.063509


Results 

CLL : -0.067166 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.01731388092041 

Total Inference Time : 1.2604904174804688 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.879
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 493.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.111', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.697
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048813;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.1254446385283919;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360675;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783655;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926068;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109144;  // std dev = 6.50e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07324622576333692;  // std dev = 1.04e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420279;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06419184008202623;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.683', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.697 

Total Inference Time : 1.2913341522216797 

Total revision time: 5.809318328857422
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.881667400360108 

Total Inference Time : 1.2913341522216797 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.665
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.492, 109.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.455, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.203', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.692
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048768;  // std dev = 5.96e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10362342493459038;  // std dev = 0.110, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09252093896379843;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0850401687597848;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07865259005334237;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0731385026765918;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06833267756255436;  // std dev = 2.11e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641086323535829;  // std dev = 2.98e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.641', 'seconds']
Refined model CLL: -0.064734


******************************************
Best model found
******************************************
Results 

CLL : -0.068239 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.692 

Total Inference Time : 1.0091540813446045 

Total revision time: 4.212465173721314
Best scored revision CLL: -0.064734


Results 

CLL : -0.068239 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.284814245223999 

Total Inference Time : 1.0091540813446045 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.69
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.143', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.697
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.27e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0.24777317748344863;  // std dev = 0.337, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109175;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21098681425125518;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1065832764337205;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1779974596252114;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0968513537369759;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.21e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15342698502307137;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08870413241238491;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13454011098182664;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08179044035098694;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.739', 'seconds']
Refined model CLL: -0.066202


******************************************
Best model found
******************************************
Results 

CLL : -0.077406 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.697 

Total Inference Time : 1.0107052326202393 

Total revision time: 4.264087354660035
Best scored revision CLL: -0.066202


Results 

CLL : -0.077406 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.33643642616272 

Total Inference Time : 1.0107052326202393 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.77
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.490, 139.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.147', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.039
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.6837591264966687;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6861400788776212;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.4952016730461797;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.5302483330805658;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43623175000539727;  // std dev = 0.034, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.562069669616017;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1060829655133869;  // std dev = 0.464, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09231464079108122;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.333440402033267;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.428608102406936;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2638445003160142;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.32590084967333643;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.08486501155900841;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return -0.1924729110365811;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21586818570377073;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25646645107752575;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07850213057830478;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return -0.12400810700519671;  // std dev = 0.290, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07250139658155032;  // std dev = 0.023, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18156721672147502;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21192147700858527;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06795002317904912;  // std dev = 0.016, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15612812941509027;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17722241549483117;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13664437154617728;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15121808288302432;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06405418315548682;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.15086651340529972;  // std dev = 0.523, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.055464917539235235;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.760', 'seconds']
Refined model CLL: -0.066723


******************************************
Best model found
******************************************
Results 

CLL : -0.084235 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 2.039 

Total Inference Time : 1.2622909545898438 

Total revision time: 5.05984924697876
Best scored revision CLL: -0.066723


Results 

CLL : -0.084235 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 5.101887687683106 

Total Inference Time : 1.2622909545898438 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.737
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.080', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.862
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283911;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.56e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926096;  // std dev = 5.05e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.08518475138839682;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.19990150298317252;  // std dev = 0.513, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07808692238453561;  // std dev = 0.024, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07298388561759525;  // std dev = 0.016, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06814622194856966;  // std dev = 0.015, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.14168531629677716;  // std dev = 0.048, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1348512434819696;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07822962103439367;  // std dev = 0.000979, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06409685305989798;  // std dev = 0.014, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.728', 'seconds']
Refined model CLL: -0.064826


******************************************
Best model found
******************************************
Results 

CLL : -0.073907 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.862 

Total Inference Time : 1.240581750869751 

Total revision time: 4.775100730895996
Best scored revision CLL: -0.064826


Results 

CLL : -0.073907 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.817139171600342 

Total Inference Time : 1.240581750869751 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.927
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 493.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.182', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.706
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048813;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.12544463852839186;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360682;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.08e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783655;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.0926912761892606;  // std dev = 4.71e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.73e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.07877675473109146;  // std dev = 5.96e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07324622576333686;  // std dev = 1.12e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420275;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06419184008202623;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.887', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.706 

Total Inference Time : 1.316765546798706 

Total revision time: 5.864988906860352
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.907027347564697 

Total Inference Time : 1.316765546798706 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.654
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.150', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.809
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048768;  // std dev = 6.99e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11389448669167566;  // std dev = 0.114, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10145237893462258;  // std dev = 2.11e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09486378209920382;  // std dev = 0.191, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08490396877732821;  // std dev = 1.11e-05, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07853573016047498;  // std dev = 3.94e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07303637354178977;  // std dev = 3.63e-05, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0682436963789448;  // std dev = 2.44e-05, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06403033447931773;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.918', 'seconds']
Refined model CLL: -0.064285


******************************************
Best model found
******************************************
Results 

CLL : -0.066486 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.809 

Total Inference Time : 1.0636942386627197 

Total revision time: 4.389266193389893
Best scored revision CLL: -0.064285


Results 

CLL : -0.066486 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.431304634094238 

Total Inference Time : 1.0636942386627197 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.747
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.451, 158.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.450, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.139', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.692
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926098;  // std dev = 4.08e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.58e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( female(A) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19721273866020397;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17799391831638384;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09494589390666815;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14262151250930205;  // std dev = 0.048, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.14378849629935742;  // std dev = 0.049, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06862158450336926;  // std dev = 0.018, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06418015080860771;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13573379559977702;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09878970995207352;  // std dev = 0.000909, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.607', 'seconds']
Refined model CLL: -0.067237


******************************************
Best model found
******************************************
Results 

CLL : -0.08122 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.692 

Total Inference Time : 1.0289249420166016 

Total revision time: 4.307008613586426
Best scored revision CLL: -0.067237


Results 

CLL : -0.08122 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.3490470542907715 

Total Inference Time : 1.0289249420166016 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.769
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.110', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.782
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.88e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0.152, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5625484866787079;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22225846378857395;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42286166607897535;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1864157124434571;  // std dev = 0.000249, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10236833915569271;  // std dev = 0.085, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926263708947417;  // std dev = 4.59e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3243398217334601;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15966479386844218;  // std dev = 0.000234, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851296641002997;  // std dev = 1.83e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2576462788968525;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13944754687756775;  // std dev = 0.000296, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872945020738974;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else return 0.20562397147861985;  // std dev = 0.332, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07320518773088724;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17923950993260926;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14760522303347703;  // std dev = 0.000277, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06839105530519361;  // std dev = 4.53e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.154367614672341;  // std dev = 0.000982, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12999764389470755;  // std dev = 0.000186, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13527340118470985;  // std dev = 0.000880, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11598868442316558;  // std dev = 0.000168, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06470790714061476;  // std dev = 0.061, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.691', 'seconds']
Refined model CLL: -0.066347


******************************************
Best model found
******************************************
Results 

CLL : -0.08478 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.782 

Total Inference Time : 1.1769979000091553 

Total revision time: 4.640436292648316
Best scored revision CLL: -0.066347


Results 

CLL : -0.08478 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.674112201690674 

Total Inference Time : 1.1769979000091553 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.756
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.489, 147.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.154', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.822
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11363382157433588;  // std dev = 0.143, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10147614358166969;  // std dev = 4.21e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.301025984143511;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3101117670742672;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.09537229630042765;  // std dev = 0.224, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0848830095832691;  // std dev = 3.80e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2577919767226333;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12194722762095622;  // std dev = 0.000793, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2116067015298542;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10933238151834308;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08151703925810579;  // std dev = 0.274, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1784515485991677;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09930547580917566;  // std dev = 0.000970, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07279728474339163;  // std dev = 0.002, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06805387740057435;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15377108476673124;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09065103937163246;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06386255122723017;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13480850140319003;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08348137525164309;  // std dev = 0.000761, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.735', 'seconds']
Refined model CLL: -0.064461


******************************************
Best model found
******************************************
Results 

CLL : -0.069763 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.822 

Total Inference Time : 1.2094814777374268 

Total revision time: 4.686831405639649
Best scored revision CLL: -0.064461


Results 

CLL : -0.069763 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.720507314682007 

Total Inference Time : 1.2094814777374268 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.891
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 565.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 569.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.104', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.85
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048813;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839186;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.48e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360688;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.10159632948783655;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926062;  // std dev = 2.98e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 7.30e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 2.98e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109146;  // std dev = 5.77e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333681;  // std dev = 1.10e-07, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420267;  // std dev = 2.98e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202625;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.628', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.85 

Total Inference Time : 1.363161325454712 

Total revision time: 6.047411027908325
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.081086936950683 

Total Inference Time : 1.363161325454712 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.709
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.247', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.663
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839152;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360622;  // std dev = 6.99e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0851847513883968;  // std dev = 3.33e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4.71e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20270886337490787;  // std dev = 0.321, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17812608963509935;  // std dev = 3.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1535244589450687;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420267;  // std dev = 3.94e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1346161384288524;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419184008202618;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202625;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.897', 'seconds']
Refined model CLL: -0.064048


******************************************
Best model found
******************************************
Results 

CLL : -0.064909 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.663 

Total Inference Time : 1.0420551300048828 

Total revision time: 4.227922937393188
Best scored revision CLL: -0.064048


Results 

CLL : -0.064909 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.261598846435547 

Total Inference Time : 1.0420551300048828 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.489, 114.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.491, 111.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.101', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.492735657922368;  // std dev = 0.212, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4253364582513309;  // std dev = 0.051, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.33569312521394123;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10260987721121327;  // std dev = 0.079, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3260416092053615;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2643704410357834;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09340339082366263;  // std dev = 0.073, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08505036966601301;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( female(A) )
%   | then return 0.24494364569392782;  // std dev = 0.095, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.25268052043260614;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07866135131713238;  // std dev = 5.05e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21404254372717552;  // std dev = 0.040, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25936334715469106;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18023906670983275;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21468728640372967;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07505848027372156;  // std dev = 0.150, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06821767399128409;  // std dev = 6.23e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15512772222512458;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18070920475919006;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06400713902351228;  // std dev = 1.29e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( female(A) )
%   | then return 0.11676161720680377;  // std dev = 0.078, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.1316490018494747;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.787', 'seconds']
Refined model CLL: -0.069187


******************************************
Best model found
******************************************
Results 

CLL : -0.077857 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.758 

Total Inference Time : 1.0699574947357178 

Total revision time: 4.352568277359008
Best scored revision CLL: -0.069187


Results 

CLL : -0.077857 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.386244186401367 

Total Inference Time : 1.0699574947357178 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.102', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.883
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11513262552462407;  // std dev = 0.331, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10133956613669441;  // std dev = 8.69e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09247624888475352;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08500222943213843;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862000382231217;  // std dev = 3.16e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07311022786929106;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06830745248494402;  // std dev = 6.00e-05, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5.16e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06408629970767658;  // std dev = 5.65e-05, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.744', 'seconds']
Refined model CLL: -0.064384


******************************************
Best model found
******************************************
Results 

CLL : -0.07646 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.883 

Total Inference Time : 1.1747243404388428 

Total revision time: 4.768101152420044
Best scored revision CLL: -0.064384


Results 

CLL : -0.07646 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.837495025634766 

Total Inference Time : 1.1747243404388428 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.782
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.492, 142.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.189', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.994
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10369871951224498;  // std dev = 0.237, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09251461736366305;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08750888902596755;  // std dev = 0.303, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07846888918167055;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0729790875292266;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06819229329537393;  // std dev = 6.70e-05, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06398549371676504;  // std dev = 4.08e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.695', 'seconds']
Refined model CLL: -0.063916


******************************************
Best model found
******************************************
Results 

CLL : -0.070189 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.994 

Total Inference Time : 1.197660207748413 

Total revision time: 4.905114866256714
Best scored revision CLL: -0.063916


Results 

CLL : -0.070189 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.974508739471435 

Total Inference Time : 1.197660207748413 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.896
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 564.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.089', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.743
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048816;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839183;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360679;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783644;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.09269127618926071;  // std dev = 9.66e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.08518475138839679;  // std dev = 8.16e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109144;  // std dev = 6.32e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.0732462257633369;  // std dev = 1.06e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420275;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202625;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.868', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.743 

Total Inference Time : 1.3417351245880127 

Total revision time: 5.887442888259887
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.956836761474609 

Total Inference Time : 1.3417351245880127 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.686
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.268', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.828
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5182729470274015;  // std dev = 0.153, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.424349574097243;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.176390084731378;  // std dev = 0.008, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32535548305702416;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1523806988367774;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09343157989023256;  // std dev = 0.058, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08512707848581245;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2583415807337102;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13264251771857982;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872722978900532;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21199595280347422;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11941780497463204;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17873763219127453;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10765830687193487;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07320326137741041;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.22355838114544102;  // std dev = 0.368, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07320326137741039;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15398849548407023;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09643209617654928;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0685150833788755;  // std dev = 0.040, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0639589140068132;  // std dev = 0.012, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13497850731113195;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08835045749322468;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.781', 'seconds']
Refined model CLL: -0.066479


******************************************
Best model found
******************************************
Results 

CLL : -0.071749 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.828 

Total Inference Time : 1.051509141921997 

Total revision time: 4.3896906986236575
Best scored revision CLL: -0.066479


Results 

CLL : -0.071749 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.459084571838379 

Total Inference Time : 1.051509141921997 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.685
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.231', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.807
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360621;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 4.21e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 4.94e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.19395211248634886;  // std dev = 0.074, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17822835905257434;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3.49e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15360214715884965;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.12552757280846946;  // std dev = 0.040, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12693102088567362;  // std dev = 0.041, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.706', 'seconds']
Refined model CLL: -0.064626


******************************************
Best model found
******************************************
Results 

CLL : -0.067593 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.807 

Total Inference Time : 1.0278372764587402 

Total revision time: 4.341817991256714
Best scored revision CLL: -0.064626


Results 

CLL : -0.067593 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.4112118644714355 

Total Inference Time : 1.0278372764587402 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.123', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.929
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1156395500442073;  // std dev = 0.331, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10129340992117268;  // std dev = 8.16e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0924375864453406;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3226656447235074;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1460670410518497;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08496940511786139;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2565060528356364;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12835853708755207;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.20065997567502084;  // std dev = 0.060, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.19839213598778377;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.0789719184652891;  // std dev = 0.036, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07306001650811828;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17943211789263272;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13631452537545818;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15451357624017553;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1219120940348786;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06826396066675036;  // std dev = 1.49e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.27256412167261157;  // std dev = 0.500, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07492486104959117;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0639521818789025;  // std dev = 0.011, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13538725823095027;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10882085827613952;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.798', 'seconds']
Refined model CLL: -0.065383


******************************************
Best model found
******************************************
Results 

CLL : -0.078066 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.929 

Total Inference Time : 1.2223243713378906 

Total revision time: 4.847763647079468
Best scored revision CLL: -0.065383


Results 

CLL : -0.078066 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.8904052867889405 

Total Inference Time : 1.2223243713378906 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.731
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.135', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.877
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 7.30e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3915580884760029;  // std dev = 0.113, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3244336656668728;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14459797024576942;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09316436216280885;  // std dev = 0.050, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08514789183234843;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25771215743115156;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1275430021719217;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2115514429748779;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1134643371835048;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07920488220683544;  // std dev = 0.039, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07318757400816514;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1784117334876524;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10262196296161537;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15374135172545836;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09310647958287566;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06869786868484877;  // std dev = 0.032, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412719813394731;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13478561152576152;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0863579028553611;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.682', 'seconds']
Refined model CLL: -0.064604


******************************************
Best model found
******************************************
Results 

CLL : -0.068044 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.877 

Total Inference Time : 1.2557268142700195 

Total revision time: 4.803740461349487
Best scored revision CLL: -0.064604


Results 

CLL : -0.068044 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.84638210105896 

Total Inference Time : 1.2557268142700195 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.89
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 561.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.054', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.723
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.14185106490048827;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.12544463852839183;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360688;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.10159632948783644;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.73e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.07877675473109146;  // std dev = 4.94e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07324622576333681;  // std dev = 1.06e-07, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420283;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06419184008202623;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.636', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.723 

Total Inference Time : 1.3621008396148682 

Total revision time: 5.952199542999267
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.99484118270874 

Total Inference Time : 1.3621008396148682 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.675
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.157', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.708
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6725335205032132;  // std dev = 0.194, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.12544463852839147;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5640998419850813;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22548224881846063;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4240364826145079;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1832023974177818;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10146810256883589;  // std dev = 0.010, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251461643698349;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15841430901236905;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0934222712081465;  // std dev = 0.075, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2582008967053958;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13936274050615158;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08504536647793717;  // std dev = 0.008, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07874313312313921;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21189794942821216;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12304689530197573;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321705837433881;  // std dev = 3.57e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17866662855448956;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11076128650274193;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15393520897931798;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09960323759986169;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06976182998969481;  // std dev = 0.130, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13493730059313827;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09134797829094138;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06383474624389557;  // std dev = 0.015, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.718', 'seconds']
Refined model CLL: -0.065505


******************************************
Best model found
******************************************
Results 

CLL : -0.066974 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.708 

Total Inference Time : 1.0146656036376953 

Total revision time: 4.2497285442352295
Best scored revision CLL: -0.065505


Results 

CLL : -0.066974 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.292370183944702 

Total Inference Time : 1.0146656036376953 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.180', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.773
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27210466248799287;  // std dev = 0.000311, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 5.48e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5637566143049694;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22154091710140764;  // std dev = 0.000342, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4237655664118663;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18577799161392974;  // std dev = 0.000327, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10135390778803623;  // std dev = 0.021, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09271166577127299;  // std dev = 2.11e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32495345812550414;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15920585792864436;  // std dev = 0.000280, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.24135022395637198;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.24097210541128739;  // std dev = 0.081, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.08495491404317669;  // std dev = 0.022, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07880955358209724;  // std dev = 4.83e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21463354492798278;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17055875373844673;  // std dev = 0.000339, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07327467787410108;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18066451816091952;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14771086106902143;  // std dev = 0.000302, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684518819117698;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15544520992769753;  // std dev = 0.000964, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13010795763420818;  // std dev = 0.000324, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06421381250612603;  // std dev = 2.47e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1361124205707311;  // std dev = 0.000863, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11599393843492864;  // std dev = 0.000201, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.715', 'seconds']
Refined model CLL: -0.066639


******************************************
Best model found
******************************************
Results 

CLL : -0.074154 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.773 

Total Inference Time : 1.0859613418579102 

Total revision time: 4.442406248092651
Best scored revision CLL: -0.066639


Results 

CLL : -0.074154 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.485047887802124 

Total Inference Time : 1.0859613418579102 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.100', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.018
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.88e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.5315206219270028;  // std dev = 0.124, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( female(A) )
%   | then return 0.4233239441278265;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.38420571078685073;  // std dev = 0.147, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926083;  // std dev = 7.30e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32894239765877653;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2432613613777793;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.77e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2607853332898647;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20292229547875387;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.77e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2137177568235041;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1695833496712366;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333717;  // std dev = 3.16e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1799973454315559;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14796949920036648;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 5.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15494205145171863;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13197469353400187;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12445062951143453;  // std dev = 0.047, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1294318052895424;  // std dev = 0.045, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.27514694746114393;  // std dev = 0.517, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07676601048269462;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.695', 'seconds']
Refined model CLL: -0.066676


******************************************
Best model found
******************************************
Results 

CLL : -0.081406 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 2.018 

Total Inference Time : 1.1630091667175293 

Total revision time: 4.881615522384643
Best scored revision CLL: -0.066676


Results 

CLL : -0.081406 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.913701179504394 

Total Inference Time : 1.1630091667175293 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.446, 212.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 151.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.074', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.057
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.74e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.6792392193186044;  // std dev = 0.180, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.6978088468073818;  // std dev = 0.134, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5622849568829554;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22172781439066966;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11473848221089077;  // std dev = 0.156, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10137546635300683;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42266728282135424;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18702368658070237;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32420953824945786;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16042057362037343;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09324248456212436;  // std dev = 0.083, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08497050242660369;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2575584688658564;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13941602170037054;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2114425006857021;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12359790808226334;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07972896373400806;  // std dev = 0.092, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07300964517305064;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17833160405084006;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11142887278082426;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06821985446189059;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1536804165694373;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10002854700973098;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13473793553048774;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09163406110451179;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06492473731284447;  // std dev = 0.067, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.692', 'seconds']
Refined model CLL: -0.065578


******************************************
Best model found
******************************************
Results 

CLL : -0.076158 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 2.057 

Total Inference Time : 1.1892597675323486 

Total revision time: 4.941759529113769
Best scored revision CLL: -0.065578


Results 

CLL : -0.076158 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.97384518623352 

Total Inference Time : 1.1892597675323486 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.846
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 582.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 584.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 565.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 566.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.127', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.727
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048816;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839188;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360676;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783655;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926064;  // std dev = 2.11e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109144;  // std dev = 6.14e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333689;  // std dev = 1.10e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420283;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06419184008202625;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.667', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.727 

Total Inference Time : 1.287358045578003 

Total revision time: 5.827685163497925
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.859770820617676 

Total Inference Time : 1.287358045578003 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.672
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.489, 114.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.152', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.678
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5408515929432428;  // std dev = 0.097, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.11368782962645227;  // std dev = 0.115, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10147121930174019;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42104770526022717;  // std dev = 7.30e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17851455070811847;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09258651258092682;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32310875557213287;  // std dev = 1.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15381874450080454;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08509583228959564;  // std dev = 5.77e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25680710261018963;  // std dev = 5.96e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13484561892400784;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21091189342722136;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11987409107934319;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0826803887466083;  // std dev = 0.336, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17794257056890841;  // std dev = 2.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10779187779675078;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07686338822609629;  // std dev = 0.322, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15338538666419135;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0978549537744248;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07482408852323932;  // std dev = 0.435, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13450766241584441;  // std dev = 3.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08954982935635424;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06315954150679895;  // std dev = 0.010, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.682', 'seconds']
Refined model CLL: -0.065191


******************************************
Best model found
******************************************
Results 

CLL : -0.068243 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.678 

Total Inference Time : 0.9834825992584229 

Total revision time: 4.171569442749023
Best scored revision CLL: -0.065191


Results 

CLL : -0.068243 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.203655099868774 

Total Inference Time : 0.9834825992584229 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.699
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.494, 106.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.170', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.697
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.723722334802978;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27762959511266594;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5595550873766879;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22550688879469427;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11336636433764245;  // std dev = 0.108, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10150053259384245;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4206433672873935;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18812535668896826;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3228445275748305;  // std dev = 0.032, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16145204115597278;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09351440735228453;  // std dev = 0.080, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23611503682639842;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2608730134792928;  // std dev = 2.98e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.08591831505192317;  // std dev = 0.075, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07859473003163339;  // std dev = 1.05e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21217711160665575;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17297833326077217;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17886941477909507;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14921672416653145;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07371470198207332;  // std dev = 0.055, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15408775019587423;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1312475705365349;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06886001896780637;  // std dev = 0.052, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1350555082771817;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11747645763240565;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06453180258544974;  // std dev = 0.049, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.863', 'seconds']
Refined model CLL: -0.066432


******************************************
Best model found
******************************************
Results 

CLL : -0.074096 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.697 

Total Inference Time : 1.0702629089355469 

Total revision time: 4.317882629394531
Best scored revision CLL: -0.066432


Results 

CLL : -0.074096 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.349968286514282 

Total Inference Time : 1.0702629089355469 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.785
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.084', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.831
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0.152, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.1270770800995562;  // std dev = 0.154, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11215372444316593;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5625484866787079;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22237444301884268;  // std dev = 0.000284, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1014622538515275;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4228616660789754;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18631678461876786;  // std dev = 0.000334, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09257900442198698;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3243398217334601;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.159775007826261;  // std dev = 0.000220, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08508945911777067;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2576462788968526;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1393719287833961;  // std dev = 0.000209, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20562789095638215;  // std dev = 0.332, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.07851217506098666;  // std dev = 0.020, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07318762728391245;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17923893332843255;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1475992181237046;  // std dev = 0.000277, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837568307460985;  // std dev = 4.34e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15436717830002086;  // std dev = 0.000982, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13003083473942165;  // std dev = 0.000208, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414658073864656;  // std dev = 3.33e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.11806813538606602;  // std dev = 0.064, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.13515960123818893;  // std dev = 2.79e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.532', 'seconds']
Refined model CLL: -0.066915


******************************************
Best model found
******************************************
Results 

CLL : -0.082623 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.831 

Total Inference Time : 1.1552271842956543 

Total revision time: 4.69203120803833
Best scored revision CLL: -0.066915


Results 

CLL : -0.082623 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.7615357074737545 

Total Inference Time : 1.1552271842956543 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.781
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.181', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.945
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.74e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7227526655679379;  // std dev = 0.034, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.27862462084199524;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5586014731493508;  // std dev = 0.042, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22454508043799298;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11329549998478128;  // std dev = 0.115, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41993450091658796;  // std dev = 0.042, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18869956611803654;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10327607408057417;  // std dev = 0.150, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09246790861468504;  // std dev = 4.59e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3223645077900535;  // std dev = 0.038, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16149187709150362;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25630610591991515;  // std dev = 0.033, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14161800936832902;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08580282582580606;  // std dev = 0.083, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07855543877179387;  // std dev = 5.58e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21056226661469699;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12599650359853992;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17768885587629565;  // std dev = 0.025, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1112037048465614;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07713085898929463;  // std dev = 0.433, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1531947165675431;  // std dev = 0.022, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10167854729682346;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06855251359355417;  // std dev = 0.063, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06378203064337035;  // std dev = 3.33e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else return 0.12684197407336745;  // std dev = 0.314, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.596', 'seconds']
Refined model CLL: -0.066265


******************************************
Best model found
******************************************
Results 

CLL : -0.076068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.945 

Total Inference Time : 1.2437670230865479 

Total revision time: 4.89073126411438
Best scored revision CLL: -0.066265


Results 

CLL : -0.076068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.960235763549805 

Total Inference Time : 1.2437670230865479 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.863
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 553.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 562.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 500.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.077', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.832
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1418510649004881;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839186;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360683;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5.05e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.10159632948783655;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926062;  // std dev = 4.21e-08, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839679;  // std dev = 7.88e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109146;  // std dev = 5.37e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333693;  // std dev = 1.03e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420271;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.833', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.832 

Total Inference Time : 1.2973592281341553 

Total revision time: 5.963241405487061
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.032745904922486 

Total Inference Time : 1.2973592281341553 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.723
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.248', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.687
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109166;  // std dev = 4.21e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.1709145966522136;  // std dev = 0.437, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06801730769416614;  // std dev = 0.015, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06337266466934845;  // std dev = 0.018, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.789', 'seconds']
Refined model CLL: -0.065125


******************************************
Best model found
******************************************
Results 

CLL : -0.071028 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.687 

Total Inference Time : 1.0757646560668945 

Total revision time: 4.311788473129273
Best scored revision CLL: -0.065125


Results 

CLL : -0.071028 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.381292972564697 

Total Inference Time : 1.0757646560668945 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.72
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.202', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.84
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11231637819360625;  // std dev = 6.50e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096535;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1765013916705758;  // std dev = 0.000193, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3053793662389928;  // std dev = 0.095, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32554637253445756;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.092616761432916;  // std dev = 0.006, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.260333963951397;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19910237768028985;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08506480050768639;  // std dev = 0.008, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07879086844855009;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2133980314985637;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16712199264091768;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07325846921327325;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0.1797623727954679;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06843769465012205;  // std dev = 3.49e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.15597566704898158;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.12645273198282259;  // std dev = 0.090, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06420129544420045;  // std dev = 4.53e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13713629045275733;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19011311129751218;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.707', 'seconds']
Refined model CLL: -0.069021


******************************************
Best model found
******************************************
Results 

CLL : -0.077543 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.84 

Total Inference Time : 1.0346763134002686 

Total revision time: 4.489169416427613
Best scored revision CLL: -0.069021


Results 

CLL : -0.077543 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.558673915863038 

Total Inference Time : 1.0346763134002686 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.756
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.086', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.841
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.88e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0.152, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5625484866787079;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2224904222491114;  // std dev = 0.000402, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783665;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4228616660789754;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18632970219456854;  // std dev = 0.000374, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.32456812351307923;  // std dev = 4.21e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3079947661373385;  // std dev = 0.087, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.09341338825282232;  // std dev = 0.067, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08512849526957669;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.259249800360034;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20684144985879094;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872844646520864;  // std dev = 2.11e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21263435285680035;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17460451062136687;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.179203776987912;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15085093770677854;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0734981062983545;  // std dev = 0.032, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15434074002532924;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06868794693101671;  // std dev = 0.031, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13525257817915853;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15161066750237207;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06442264837165604;  // std dev = 0.029, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.732', 'seconds']
Refined model CLL: -0.067077


******************************************
Best model found
******************************************
Results 

CLL : -0.083974 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.841 

Total Inference Time : 1.1750032901763916 

Total revision time: 4.711148139953613
Best scored revision CLL: -0.067077


Results 

CLL : -0.083974 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.752415058135986 

Total Inference Time : 1.1750032901763916 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.772
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 200.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.090', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.816
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 8.30e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 7.30e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7.30e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0876168891010135;  // std dev = 0.269, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08097774434202748;  // std dev = 0.256, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07293234461464133;  // std dev = 4.71e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06815216138229792;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06394931394879214;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.754', 'seconds']
Refined model CLL: -0.063772


******************************************
Best model found
******************************************
Results 

CLL : -0.069141 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.816 

Total Inference Time : 1.253103256225586 

Total revision time: 4.766409814834595
Best scored revision CLL: -0.063772


Results 

CLL : -0.069141 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.807676733016968 

Total Inference Time : 1.253103256225586 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.882
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 582.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.185', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.766
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048816;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839186;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360635;  // std dev = 1.83e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.11231637819360688;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783653;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926068;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109146;  // std dev = 6.99e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333689;  // std dev = 1.08e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420264;  // std dev = 1.49e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.06842697784420296;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.843', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.766 

Total Inference Time : 1.279360294342041 

Total revision time: 5.862584827423095
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.903851745605468 

Total Inference Time : 1.279360294342041 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.739
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.445, 165.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.447, 163.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.231', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.726
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839144;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360625;  // std dev = 5.67e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783619;  // std dev = 5.16e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839679;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109162;  // std dev = 4.94e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333707;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420267;  // std dev = 3.87e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06594159731127822;  // std dev = 0.155, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.825', 'seconds']
Refined model CLL: -0.064105


******************************************
Best model found
******************************************
Results 

CLL : -0.06554 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.726 

Total Inference Time : 1.0882067680358887 

Total revision time: 4.369255151748657
Best scored revision CLL: -0.064105


Results 

CLL : -0.06554 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.41052206993103 

Total Inference Time : 1.0882067680358887 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.681
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.716
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 8.02e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.67e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3.65e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.80e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32312954980851977;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1458566349960015;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2568227591154234;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12824507535552582;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09028139745672546;  // std dev = 0.431, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0784076792828143;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21092383299689546;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11472401575290268;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17795188175934626;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10384438849319491;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07292595925702253;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.2314227742774598;  // std dev = 0.388, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1533928161523777;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09388617284333738;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.06814656926030961;  // std dev = 2.69e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(B) )
%   | | then return -0.05874480701579343;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.20273452557562766;  // std dev = 0.353, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06289050199874757;  // std dev = 0.037, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1345137147105611;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08631983346245727;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.873', 'seconds']
Refined model CLL: -0.064506


******************************************
Best model found
******************************************
Results 

CLL : -0.069846 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.716 

Total Inference Time : 1.027097225189209 

Total revision time: 4.246276781082154
Best scored revision CLL: -0.064506


Results 

CLL : -0.069846 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.287543699264527 

Total Inference Time : 1.027097225189209 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.734
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 146.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.220', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.902
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.19e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7.22e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3226700408058473;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14509388470037068;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25650891042196106;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12865141376491487;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.58e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21070204388169222;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11423641602768526;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17778916794127833;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10325317802880583;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07348390058070399;  // std dev = 0.029, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1532693528839755;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09476668877369877;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.0684118288819242;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return -0.24912226166551318;  // std dev = 0.443, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13337497266283815;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12801319034059108;  // std dev = 0.040, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.0638219255366439;  // std dev = 0.025, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.602', 'seconds']
Refined model CLL: -0.064898


******************************************
Best model found
******************************************
Results 

CLL : -0.074081 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.902 

Total Inference Time : 1.1802849769592285 

Total revision time: 4.735726676940918
Best scored revision CLL: -0.064898


Results 

CLL : -0.074081 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.7684377059936525 

Total Inference Time : 1.1802849769592285 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.745
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 149.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.088', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.822
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926085;  // std dev = 7.15e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.77e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109162;  // std dev = 5.48e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 4.08e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420268;  // std dev = 4.53e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.558', 'seconds']
Refined model CLL: -0.064293


******************************************
Best model found
******************************************
Results 

CLL : -0.072119 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.822 

Total Inference Time : 1.1616272926330566 

Total revision time: 4.6726032180786135
Best scored revision CLL: -0.064293


Results 

CLL : -0.072119 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.705314247131348 

Total Inference Time : 1.1616272926330566 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.926
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 559.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.098', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.65
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048818;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839183;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1123163781936069;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783653;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926061;  // std dev = 4.21e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109146;  // std dev = 5.77e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333682;  // std dev = 9.66e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.69e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.0684269778442028;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06419184008202623;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.987', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.65 

Total Inference Time : 1.3294181823730469 

Total revision time: 5.85140135383606
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.8841123828887945 

Total Inference Time : 1.3294181823730469 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.698
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.149', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.624
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360625;  // std dev = 6.66e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.05e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109169;  // std dev = 4.08e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420268;  // std dev = 3.33e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.20010459010723386;  // std dev = 0.471, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.625', 'seconds']
Refined model CLL: -0.065232


******************************************
Best model found
******************************************
Results 

CLL : -0.070781 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.624 

Total Inference Time : 1.1192131042480469 

Total revision time: 4.261272880554199
Best scored revision CLL: -0.065232


Results 

CLL : -0.070781 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.293983909606934 

Total Inference Time : 1.1192131042480469 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.653
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.148', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.792
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7781489350995119;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7275794276357728;  // std dev = 0.053, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2699535241914567;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839155;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.60e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( female(A) )
%   | then return 0.5401836982111107;  // std dev = 0.158, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5193314675864417;  // std dev = 0.160, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return 0.40719251156428865;  // std dev = 0.152, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3913730263671451;  // std dev = 0.155, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3375545567489196;  // std dev = 0.032, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.4182523082414338;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2666409616209538;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3218529674739297;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4.59e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21783114611540527;  // std dev = 0.025, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25678325373779687;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18299815892250823;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21210034077686934;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1600132631290584;  // std dev = 2.79e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.12634159719339247;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.07347510345574554;  // std dev = 0.391, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06388925920258938;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13909161662581845;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19963635803883906;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.667', 'seconds']
Refined model CLL: -0.069309


******************************************
Best model found
******************************************
Results 

CLL : -0.079315 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.792 

Total Inference Time : 1.030503511428833 

Total revision time: 4.3130613040924075
Best scored revision CLL: -0.069309


Results 

CLL : -0.079315 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.345772333145142 

Total Inference Time : 1.030503511428833 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.725
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 148.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.083', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.864
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783663;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926092;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( female(A) )
%   | then return 0.3059474498976706;  // std dev = 0.077, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3069317430485025;  // std dev = 0.074, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.37e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2578909301127837;  // std dev = 0.000704, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12186004358812756;  // std dev = 8.60e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.66e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2116763282995728;  // std dev = 0.000614, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10945369572146217;  // std dev = 8.58e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17850243629129353;  // std dev = 0.000540, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0991836206210214;  // std dev = 7.62e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1538095697038244;  // std dev = 0.000479, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0906877649880215;  // std dev = 9.94e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06863157758060315;  // std dev = 0.022, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417955061641994;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1348384663178547;  // std dev = 0.000429, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08351941273612656;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.682', 'seconds']
Refined model CLL: -0.065709


******************************************
Best model found
******************************************
Results 

CLL : -0.085611 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.864 

Total Inference Time : 1.153552532196045 

Total revision time: 4.694958461761475
Best scored revision CLL: -0.065709


Results 

CLL : -0.085611 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.765449298858643 

Total Inference Time : 1.153552532196045 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.8
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.129', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.917
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.88e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0983512085945812;  // std dev = 0.484, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08742080982921875;  // std dev = 0.328, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0782056374449312;  // std dev = 4.34e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.072750556076487;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14221191352520066;  // std dev = 0.047, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.14707281101834074;  // std dev = 0.218, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.06799234032961803;  // std dev = 6.73e-05, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1348621910143218;  // std dev = 0.002, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07841826432257874;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06380821563028122;  // std dev = 6.34e-05, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.690', 'seconds']
Refined model CLL: -0.06434


******************************************
Best model found
******************************************
Results 

CLL : -0.070676 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.917 

Total Inference Time : 1.2448813915252686 

Total revision time: 4.841336004257203
Best scored revision CLL: -0.06434


Results 

CLL : -0.070676 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.911826841354371 

Total Inference Time : 1.2448813915252686 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.845
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 493.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 569.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 559.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.177', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.669
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048813;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.12544463852839186;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.11231637819360679;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783656;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926065;  // std dev = 2.11e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109146;  // std dev = 5.96e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333688;  // std dev = 1.11e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420274;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06419184008202623;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.609', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.669 

Total Inference Time : 1.3080289363861084 

Total revision time: 5.78032571220398
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.850816549301148 

Total Inference Time : 1.3080289363861084 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.675
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.174', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.822
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10415084639921447;  // std dev = 0.236, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09247666574380214;  // std dev = 4.83e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08500258333376642;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862030779876748;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07310988786968173;  // std dev = 3.20e-05, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.14045658943045564;  // std dev = 0.051, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.06830796330438932;  // std dev = 2.14e-05, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.12934278524227547;  // std dev = 0.036, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.06408660704837875;  // std dev = 2.84e-05, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.767', 'seconds']
Refined model CLL: -0.066336


******************************************
Best model found
******************************************
Results 

CLL : -0.069685 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.822 

Total Inference Time : 1.0288636684417725 

Total revision time: 4.357959768295288
Best scored revision CLL: -0.066336


Results 

CLL : -0.069685 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.428450605392456 

Total Inference Time : 1.0288636684417725 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.734
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.072', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.813
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.1135163981973465;  // std dev = 0.115, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10148685059777823;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096535;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1764838121062648;  // std dev = 0.000176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09259960284317709;  // std dev = 3.49e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3254106600776191;  // std dev = 0.000890, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1523179524165701;  // std dev = 0.000135, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08510694355763467;  // std dev = 4.34e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( female(A) )
%   | then return 0.24193045667016277;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.24144815065005962;  // std dev = 0.080, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07870993843857034;  // std dev = 4.08e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.18436116983685302;  // std dev = 0.103, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.21496436929695092;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07318825980096652;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.16954526443806253;  // std dev = 0.075, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.18090601581788276;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15837015444469668;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22296975147154044;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06910545161511926;  // std dev = 0.065, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06410330683926617;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13838518558423687;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18713674773885056;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.734', 'seconds']
Refined model CLL: -0.069275


******************************************
Best model found
******************************************
Results 

CLL : -0.080365 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.813 

Total Inference Time : 1.033677339553833 

Total revision time: 4.443874666213989
Best scored revision CLL: -0.069275


Results 

CLL : -0.080365 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.514365503311157 

Total Inference Time : 1.033677339553833 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.799
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.118', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.002
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 3.94e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 5.77e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.19945291311954882;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20013989995374792;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( female(A) )
%   | then return 0.16884878151164862;  // std dev = 0.051, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14630913247197544;  // std dev = 0.135, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.87e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15665493802417219;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10858182681046619;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.12730374970918804;  // std dev = 0.044, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13042697958202312;  // std dev = 0.042, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.543', 'seconds']
Refined model CLL: -0.066248


******************************************
Best model found
******************************************
Results 

CLL : -0.080477 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 2.002 

Total Inference Time : 1.1564853191375732 

Total revision time: 4.842608572006226
Best scored revision CLL: -0.066248


Results 

CLL : -0.080477 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.882143617630005 

Total Inference Time : 1.1564853191375732 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.768
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.071', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.816
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048785;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.60e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783627;  // std dev = 3.94e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926104;  // std dev = 2.98e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5.58e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.37e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.510', 'seconds']
Refined model CLL: -0.06432


******************************************
Best model found
******************************************
Results 

CLL : -0.072371 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.816 

Total Inference Time : 1.1430974006652832 

Total revision time: 4.633643754959106
Best scored revision CLL: -0.06432


Results 

CLL : -0.072371 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.673178800582885 

Total Inference Time : 1.1430974006652832 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.927
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 570.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 507.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 561.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.065', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.809
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048807;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.1254446385283918;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.11231637819360682;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783655;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926065;  // std dev = 2.11e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839679;  // std dev = 9.19e-08, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109146;  // std dev = 6.32e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.0732462257633369;  // std dev = 1.06e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420279;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202625;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.678', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.809 

Total Inference Time : 1.3276896476745605 

Total revision time: 6.00999754524231
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.0495325908660895 

Total Inference Time : 1.3276896476745605 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.73
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.164', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.609
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11636902679190028;  // std dev = 0.330, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10122702273572867;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09238197298448725;  // std dev = 3.16e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08492218599713358;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07855102425197276;  // std dev = 1.89e-05, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07305057910941398;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06825569735812732;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06403979955466038;  // std dev = 5.27e-05, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.770', 'seconds']
Refined model CLL: -0.064928


******************************************
Best model found
******************************************
Results 

CLL : -0.069302 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.609 

Total Inference Time : 0.962679386138916 

Total revision time: 4.148779644012452
Best scored revision CLL: -0.064928


Results 

CLL : -0.069302 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.188314689636231 

Total Inference Time : 0.962679386138916 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.7
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.131', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.829
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7237321131963372;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2742774069952776;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5595631808348953;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22377528193765675;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11365318402060462;  // std dev = 0.116, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42064809292947564;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18731364024269936;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10271255178440385;  // std dev = 0.107, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0924851835154037;  // std dev = 4.71e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.30705457939865444;  // std dev = 0.097, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.31819217291754653;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08500981463289488;  // std dev = 4.83e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.24409307019927728;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.23318686988217244;  // std dev = 0.095, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21552597648146044;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.24905239080630115;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08124018020063967;  // std dev = 0.213, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18131804996289233;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2086324336529802;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07772987013201733;  // std dev = 0.434, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06785429278061182;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( female(A) )
%   | then return 0.15863530373843127;  // std dev = 3.16e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1387488299155507;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06368631911756877;  // std dev = 4.41e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1373152503407826;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19616043142493306;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.737', 'seconds']
Refined model CLL: -0.069862


******************************************
Best model found
******************************************
Results 

CLL : -0.084827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.829 

Total Inference Time : 1.025376558303833 

Total revision time: 4.371548608779907
Best scored revision CLL: -0.069862


Results 

CLL : -0.084827 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 4.411083654403686 

Total Inference Time : 1.025376558303833 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.457, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.455, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.108', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.027
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783665;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926074;  // std dev = 8.30e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32462383836920533;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14428540127792927;  // std dev = 0.000167, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2578398244093115;  // std dev = 0.000884, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1273478796031307;  // std dev = 0.000119, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08559115684811716;  // std dev = 0.042, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07874726653797327;  // std dev = 4.59e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21164029700091821;  // std dev = 0.000771, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.113885432830571;  // std dev = 0.000125, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07322064427599001;  // std dev = 4.21e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17847605702524816;  // std dev = 0.000678, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10292231593998331;  // std dev = 0.000102, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06840458543655271;  // std dev = 4.28e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0.14944737959919355;  // std dev = 0.245, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1353301926570736;  // std dev = 0.000541, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10728220973592839;  // std dev = 0.000137, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06460525824758595;  // std dev = 0.047, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.566', 'seconds']
Refined model CLL: -0.06621


******************************************
Best model found
******************************************
Results 

CLL : -0.085295 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 2.027 

Total Inference Time : 1.1790013313293457 

Total revision time: 4.861869394302368
Best scored revision CLL: -0.06621


Results 

CLL : -0.085295 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.895897924423218 

Total Inference Time : 1.1790013313293457 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.691
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.100', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.836
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10253306324199049;  // std dev = 0.106, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09261252730353921;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08511791386992766;  // std dev = 6.91e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07988385920165592;  // std dev = 0.139, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07311747445946064;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06831426762032139;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0640920620562382;  // std dev = 2.59e-05, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.615', 'seconds']
Refined model CLL: -0.063595


******************************************
Best model found
******************************************
Results 

CLL : -0.066514 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.836 

Total Inference Time : 1.20829176902771 

Total revision time: 4.686633159637451
Best scored revision CLL: -0.063595


Results 

CLL : -0.066514 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.720661689758301 

Total Inference Time : 1.20829176902771 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.908
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 560.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 565.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.073', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.634
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048816;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839188;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360682;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783626;  // std dev = 2.36e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.10159632948783645;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926061;  // std dev = 4.71e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.08518475138839679;  // std dev = 9.19e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109166;  // std dev = 3.80e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.07877675473109147;  // std dev = 6.50e-08, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333686;  // std dev = 1.13e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420279;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202625;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.623', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.634 

Total Inference Time : 1.3528478145599365 

Total revision time: 5.858018581390381
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.89204711151123 

Total Inference Time : 1.3528478145599365 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.684
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.488, 115.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.487, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.698
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783617;  // std dev = 5.05e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926105;  // std dev = 1.05e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08746306649220559;  // std dev = 0.211, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07861157376882251;  // std dev = 3.94e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07534398020010911;  // std dev = 0.189, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06815904321834475;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06395538853622512;  // std dev = 1.05e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.089', 'seconds']
Refined model CLL: -0.06414


******************************************
Best model found
******************************************
Results 

CLL : -0.066068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.698 

Total Inference Time : 1.081681251525879 

Total revision time: 4.3111284084320065
Best scored revision CLL: -0.06414


Results 

CLL : -0.066068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.345156938552856 

Total Inference Time : 1.081681251525879 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.742
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.177', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.682
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.6778067455442877;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5700153174995702;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.42540025601606724;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11375250899141243;  // std dev = 0.108, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10146532232487339;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4284802740776495;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3309194106967442;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3281639542333625;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.26354326185414073;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09479130042742084;  // std dev = 0.187, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08491976851726063;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2602552710098982;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21073409979719146;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07854917110120431;  // std dev = 2.79e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.17885573615824185;  // std dev = 0.107, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.2164845462819294;  // std dev = 2.58e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07304876177606062;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18209321155244568;  // std dev = 0.000514, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21160622378224675;  // std dev = 0.000172, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06825410610133681;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1565238968730301;  // std dev = 0.000456, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17845110928357646;  // std dev = 0.000185, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13695117751486666;  // std dev = 0.000408, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15374835612859492;  // std dev = 0.000109, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06879106144534074;  // std dev = 0.380, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.692', 'seconds']
Refined model CLL: -0.067458


******************************************
Best model found
******************************************
Results 

CLL : -0.075657 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.682 

Total Inference Time : 1.0596284866333008 

Total revision time: 4.326695417404174
Best scored revision CLL: -0.067458


Results 

CLL : -0.075657 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.360723947525024 

Total Inference Time : 1.0596284866333008 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.717
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.113', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.865
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 7.88e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.80e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3226700408058475;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14545234166930132;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.2410839443842183;  // std dev = 0.071, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.24525236948962062;  // std dev = 0.069, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21291523690058517;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15784721696456178;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07877675473109157;  // std dev = 6.50e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( female(B) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.2223997352773275;  // std dev = 0.498, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.1670748602970308;  // std dev = 0.059, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1697515559484509;  // std dev = 0.057, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07287188242711756;  // std dev = 0.018, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1439556654628862;  // std dev = 0.059, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14608367531525454;  // std dev = 0.057, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06845084411327658;  // std dev = 3.80e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return -0.176123799807108;  // std dev = 0.515, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1259170375089337;  // std dev = 0.059, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13825357201525887;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.06461674262599884;  // std dev = 0.066, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.642', 'seconds']
Refined model CLL: -0.069056


******************************************
Best model found
******************************************
Results 

CLL : -0.08682 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.865 

Total Inference Time : 1.206204891204834 

Total revision time: 4.656080467224121
Best scored revision CLL: -0.069056


Results 

CLL : -0.08682 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.7260889835357665 

Total Inference Time : 1.206204891204834 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.723
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.456, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.485, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.124', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.961
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283911;  // std dev = 7.30e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360622;  // std dev = 8.16e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3101117670742672;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.09269127618926097;  // std dev = 4.71e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.37e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.256495604080492;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12246150735387018;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21069227696279214;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10989780671465155;  // std dev = 0.000949, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07875399330458661;  // std dev = 0.003, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324777085165833;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1777817730626457;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09963123167440958;  // std dev = 0.000853, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842833028626222;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15326359023527855;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09121939814957218;  // std dev = 0.000963, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419303334138152;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13441270173788442;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0836078792128972;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.668', 'seconds']
Refined model CLL: -0.064801


******************************************
Best model found
******************************************
Results 

CLL : -0.070446 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.961 

Total Inference Time : 1.262582778930664 

Total revision time: 4.856478437423706
Best scored revision CLL: -0.064801


Results 

CLL : -0.070446 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.926486953735352 

Total Inference Time : 1.262582778930664 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.855
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.100', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 2.735
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048813;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839177;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360686;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783644;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.09269127618926065;  // std dev = 1.12e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839679;  // std dev = 8.69e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109146;  // std dev = 5.58e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333678;  // std dev = 1.11e-07, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420267;  // std dev = 2.98e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06842697784420282;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202625;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.636', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.735 

Total Inference Time : 1.3333261013031006 

Total revision time: 5.890516843795776
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.960525360107422 

Total Inference Time : 1.3333261013031006 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.683
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.147', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.775
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926108;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.08518475138839682;  // std dev = 4.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.15212556959852583;  // std dev = 0.142, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07871460970627471;  // std dev = 0.005, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07320395539207969;  // std dev = 0.004, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.16318856866146558;  // std dev = 0.057, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1541103368181759;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08528016482877523;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06853861586372739;  // std dev = 0.018, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06403923258836916;  // std dev = 0.007, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13507299608787554;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07888284432089834;  // std dev = 0.000926, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.722', 'seconds']
Refined model CLL: -0.066112


******************************************
Best model found
******************************************
Results 

CLL : -0.071564 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.775 

Total Inference Time : 1.044560194015503 

Total revision time: 4.311249073028565
Best scored revision CLL: -0.066112


Results 

CLL : -0.071564 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 4.38125758934021 

Total Inference Time : 1.044560194015503 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 0.68
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.188', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 1.727
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283915;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.66e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.3759847910666182;  // std dev = 0.141, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 3.65e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3253700295257571;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14345713937355503;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25835378550072335;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12855910555991673;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08990773688221379;  // std dev = 0.470, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0784346842180481;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21200594223203958;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11514479194866152;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07294939933959003;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17874581992873967;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1031272099536162;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06816709715830321;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15399527496299015;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09338595837579264;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13498419120132477;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08658831581249166;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06423643983932971;  // std dev = 0.026, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.592', 'seconds']
Refined model CLL: -0.065803


******************************************
Best model found
******************************************
Results 

CLL : -0.075291 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.727 

Total Inference Time : 1.93733811378479 

Total revision time: 5.137355262756348
Best scored revision CLL: -0.065803


Results 

CLL : -0.075291 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 5.207363779067993 

Total Inference Time : 1.93733811378479 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.544
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.450, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.460, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.804', 'seconds']
Parameter learned model CLL:-0.182942 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.372
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3840226219875909;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.10581466357865961;  // std dev = 0.479, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32451270300900087;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14445825910269305;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09233712497987295;  // std dev = 5.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08488410443648423;  // std dev = 1.49e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.24074271591917615;  // std dev = 0.071, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2479727352070725;  // std dev = 0.069, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07851853331981479;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.213810274346653;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15637313440114298;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07302217323649346;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.1780568923350817;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1713331965563912;  // std dev = 0.057, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06823082463881563;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1557166553459528;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1596908582201617;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06401874575825856;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13632421076546983;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1394080308704031;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.087', 'seconds']
Refined model CLL: -0.066744


******************************************
Best model found
******************************************
Results 

CLL : -0.084009 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.372 

Total Inference Time : 2.45862078666687 

Total revision time: 9.260440937042237
Best scored revision CLL: -0.066744


Results 

CLL : -0.084009 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 9.35525952911377 

Total Inference Time : 2.45862078666687 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.365
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.455, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.483, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.225', 'seconds']
Parameter learned model CLL:-0.182969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.45
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.28052658778904566;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839136;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.69e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22751829855267267;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.19001757973666863;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16247682877816097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09251215267994572;  // std dev = 0.016, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08519871121789531;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1415603370161833;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12521447261805546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07861952466707589;  // std dev = 0.017, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07326811325390711;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11213012484583171;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10144279806637811;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07274900086020905;  // std dev = 0.329, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.063950685527094;  // std dev = 3.07e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09256271073551903;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.809', 'seconds']
Refined model CLL: -0.064751


******************************************
Best model found
******************************************
Results 

CLL : -0.069119 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.45 

Total Inference Time : 2.6900360584259033 

Total revision time: 9.352366867065431
Best scored revision CLL: -0.064751


Results 

CLL : -0.069119 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.447185459136964 

Total Inference Time : 2.6900360584259033 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.546
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 569.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.475, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.982', 'seconds']
Parameter learned model CLL:-0.239083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 5.564
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048804;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.12544463852839186;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360676;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783656;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926071;  // std dev = 1.01e-07, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839678;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839678;  // std dev = 1.10e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 3.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.07877675473109146;  // std dev = 5.96e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333688;  // std dev = 1.11e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.69e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.06842697784420279;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202625;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.132', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.564 

Total Inference Time : 2.7350804805755615 

Total revision time: 11.78432689666748
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.879145488739013 

Total Inference Time : 2.7350804805755615 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.14
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.413', 'seconds']
Parameter learned model CLL:-0.194816 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.215
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6953328964755449;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5598641698241228;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2247083944678702;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11343745965049373;  // std dev = 0.110, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4208613677068212;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18675625403425558;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10270291330848587;  // std dev = 0.102, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09250410033362219;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3229846247414577;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16057825206251408;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08502587403022846;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2567238229237953;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1400941199581536;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21085394775195027;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12405250316162504;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07947652661591076;  // std dev = 0.067, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07307119119945245;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17790063013250085;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11158914987316897;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15335394006466901;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10026380493380789;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06894604618213251;  // std dev = 0.055, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06401633047528023;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13448336589878201;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09225048651002869;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.472', 'seconds']
Refined model CLL: -0.067186


******************************************
Best model found
******************************************
Results 

CLL : -0.074031 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.215 

Total Inference Time : 2.098512887954712 

Total revision time: 8.087981681823731
Best scored revision CLL: -0.067186


Results 

CLL : -0.074031 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 8.182800273895264 

Total Inference Time : 2.098512887954712 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;athleteledsportsteam(C, E).;true;true
0;true,true;teamplaysagainstteam(A, F).;false;true
0;true,true,false;athleteplaysforteam(C, E), teamalsoknownas(E, G).;false;false
0;true,false;athleteplaysforteam(H, A), teamplaysinleague(A, I).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;true;false
0;false,false,true;teamplaysagainstteam(A, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
1;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
1;true,true;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,true,true;athleteledsportsteam(C, G).;false;false
1;true,true,false;teamalsoknownas(H, A), teamplaysinleague(A, I).;false;false
1;true,false;teamalsoknownas(A, J).;false;true
1;true,false,false;teamplaysagainstteam(K, A), athleteplaysinleague(C, L).;false;false
1;false;teamalsoknownas(M, A), teamplaysagainstteam(A, N).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, E).;true;true
2;true,true;teamalsoknownas(E, F), teamplaysagainstteam(E, A).;false;true
2;true,true,false;teamalsoknownas(G, E), teamplaysagainstteam(A, G).;false;false
2;true,false;teamplaysagainstteam(H, A), athleteledsportsteam(C, I).;true;true
2;true,false,true;teamalsoknownas(J, H).;false;false
2;true,false,false;teamplaysinleague(A, K), teamalsoknownas(L, A).;false;false
2;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteledsportsteam(C, D), teamalsoknownas(E, A).;true;true
3;true,true;teamalsoknownas(F, E), teamalsoknownas(F, A).;false;true
3;true,true,false;teamalsoknownas(A, E), teamplaysinleague(E, G).;false;false
3;true,false;athleteplaysforteam(C, H).;true;true
3;true,false,true;athleteledsportsteam(I, A), athleteplaysforteam(I, A).;false;false
3;true,false,false;athleteplaysinleague(C, J), teamplaysagainstteam(K, A).;false;false
3;false;teamplaysagainstteam(A, L), teamalsoknownas(M, A).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteledsportsteam(C, D).;true;true
4;true,true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
4;true,true,true;athleteplaysforteam(F, D).;false;false
4;true,true,false;teamalsoknownas(A, G), teamalsoknownas(G, H).;false;false
4;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;false;true
4;true,false,false;teamalsoknownas(K, A), teamalsoknownas(A, K).;false;false
4;false;teamplaysinleague(A, L).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamalsoknownas(E, A), teamalsoknownas(F, E).;false;true
5;true,false;athleteledsportsteam(C, G).;true;false
5;true,false,true;athleteplaysforteam(H, A), teamplaysinleague(A, D).;false;false
5;false;teamalsoknownas(I, A), athleteplaysforteam(J, I).;true;true
5;false,true;teamplaysagainstteam(K, A), teamplaysagainstteam(K, I).;false;true
5;false,true,false;athleteledsportsteam(J, L).;false;false
5;false,false;teamplaysinleague(A, M), athleteplayssport(N, B).;false;false
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;athleteplayssport(D, B), athleteplaysinleague(D, E).;true;false
6;true,true;teamplaysagainstteam(F, A), teamalsoknownas(C, F).;true;false
6;true,true,true;teamalsoknownas(C, A), athleteledsportsteam(G, F).;false;false
6;false;athleteplayssport(H, B).;true;false
6;false,true;athleteplaysforteam(H, I), athleteledsportsteam(J, I).;true;true
6;false,true,true;athleteplaysforteam(K, A), teamplaysagainstteam(A, I).;false;false
6;false,true,false;teamplaysagainstteam(L, A), athleteplaysinleague(H, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
7;true;athleteplaysforteam(C, E), teamplaysagainstteam(E, A).;false;true
7;true,false;teamalsoknownas(F, A), athleteplaysforteam(G, F).;false;true
7;true,false,false;teamplaysagainstteam(A, H), teamplaysinleague(H, D).;false;false
7;false;athleteplayssport(I, B).;true;true
7;false,true;teamplaysinleague(A, J).;true;false
7;false,true,true;athleteplaysforteam(I, K), athleteledsportsteam(L, K).;false;false
7;false,false;teamplaysinleague(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;teamplaysagainstteam(A, D), teamplaysagainstteam(D, A).;true;true
8;true,true;athleteplaysforteam(C, D), athleteledsportsteam(C, E).;true;true
8;true,true,true;athleteplaysinleague(C, F), teamplaysinleague(D, F).;false;false
8;true,true,false;teamalsoknownas(D, G), athleteledsportsteam(H, D).;false;false
8;true,false;athleteledsportsteam(C, I).;true;true
8;true,false,true;teamplaysinleague(A, J).;false;false
8;true,false,false;athleteplaysinleague(C, K).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
9;true;athleteplaysforteam(C, A), teamalsoknownas(E, A).;true;true
9;true,true;teamplaysinleague(A, D).;false;false
9;true,false;teamplaysagainstteam(A, F), teamalsoknownas(A, F).;true;true
9;true,false,true;teamalsoknownas(F, G).;false;false
9;true,false,false;teamplaysagainstteam(H, A).;false;false
9;false;teamplaysagainstteam(I, A), athleteplayssport(J, B).;false;true
9;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false


Model training time 1.28
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.454, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.444, 167.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   return 0;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.268', 'seconds']
Parameter learned model CLL:-0.191257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
['workedunder(A, B)', {}, {}]
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision


Refining candidate
***************************
Model training time 3.381
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5598005837456402;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22547563895765207;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.39959947387070693;  // std dev = 0.122, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4164356134251186;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then return -0.10159632948783616;  // std dev = 5.27e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.26225234851685136;  // std dev = 0.394, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09183615799710387;  // std dev = 0.027, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3258222388403144;  // std dev = 0.038, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25783069554188787;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08512399709445685;  // std dev = 0.012, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25866502845508543;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2138095668723104;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07856713065688535;  // std dev = 0.015, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21222720364745282;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15003459982918382;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07301832755717678;  // std dev = 0.014, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17890895144676225;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15839293996331896;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06799605485593467;  // std dev = 0.019, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( female(A) )
%   | then return 0.14527933360469536;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1506538538556126;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06398823430155047;  // std dev = 0.015, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.12697424976787056;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.11967659253219189;  // std dev = 0.060, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.516', 'seconds']
Refined model CLL: -0.070916


******************************************
Best model found
******************************************
Results 

CLL : -0.088576 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.381 

Total Inference Time : 1.4901955127716064 

Total revision time: 7.798182474136352
Best scored revision CLL: -0.070916


Results 

CLL : -0.088576 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 7.893001066207885 

Total Inference Time : 1.4901955127716064 

