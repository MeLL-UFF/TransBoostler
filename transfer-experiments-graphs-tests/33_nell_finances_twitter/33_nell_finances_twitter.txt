Starting experiment 33_nell_finances_twitter 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 6.193
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 373.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 394.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.18322633448031408;  // std dev = 8.418, 323.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=105 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1624967611864685;  // std dev = 3.822, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.16043665462547227;  // std dev = 8.412, 322.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16531991633600857;  // std dev = 0.470, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.14968146815236488;  // std dev = 8.333, 310.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=105 */
%   else if ( follows(E, D) )
%   | then return 0.16932121688041088;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.13695296901854717;  // std dev = 8.261, 300.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=105 */
%   else if ( follows(D, E) )
%   | then return 0.1363162766577696;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.08127306850342692;  // std dev = 0.466, 330.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07595292648855025;  // std dev = 0.464, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.099256440416718;  // std dev = 0.477, 299.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03616458543847549;  // std dev = 0.453, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.04754964877226476;  // std dev = 0.465, 398.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.045070220025054994;  // std dev = 9.236, 389.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.219', 'seconds']
Parameter learned model CLL:-0.346107 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.418, 218, 105], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.822, 48, 21], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.412, 217, 105], 'true,false': [0.0, 0, 0], 'false': [0.47, 43, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.333, 205, 105], 'false,true': [3.678, 38, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.261, 195, 105], 'false,true': [3.695, 39, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.466, 225, 105], 'true,false': [0.0, 0, 0], 'false': [0.464, 46, 21]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.477, 194, 105], 'true,false': [0.0, 0, 0], 'false': [0.453, 52, 21]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.465, 272, 126], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [9.236, 263, 126], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2181122448979618, nan], 'true': [0.2194020837926196, 0.21172022684310035], 'true,false': [nan, 0.21172022684310035]}
{'': [0.21975425330812454, 0.22045898437500033], 'true': [0.21975425330812454, nan]}
{'': [0.22398543184183317, 0.22924446997989104], 'false': [0.22924446997989104, nan]}
{'': [0.22750000000000392, 0.22749999999999934], 'false': [0.22749999999999934, nan]}
{'': [0.21694214876032908, 0.21519269325016765], 'true': [0.21694214876032908, nan]}
{'': [0.22784980033780483, 0.20491649465190476], 'true': [0.22784980033780483, nan]}
{'': [0.2164270795079375, nan]}
{'': [0.21928836649549657, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 226.06
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(D, A), follows(C, A) )
%   | then if ( tweets(C, E), tweets(D, F) )
%   | | then if ( tweets(C, F) )
%   | | | then return 0.19344305274657242;  // std dev = 6.155, 170.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=57 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, D), follows(D, C) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( follows(G, A), follows(D, G) )
%   | | then if ( follows(A, D), follows(G, D) )
%   | | | then return 0.1340110040650296;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.1642713840791042;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return 0.13351125394009208;  // std dev = 0.447, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( tweets(D, C), follows(D, E) )
%   | then return 0.137722118842902;  // std dev = 0.460, 266.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=81 */
%   | else if ( tweets(D, C), follows(F, A) )
%   | | then return 0.08701996656373881;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.3391457716957447;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( follows(G, A), follows(A, H) )
%   | then if ( tweets(G, I), follows(A, G) )
%   | | then if ( follows(G, H), tweets(H, J) )
%   | | | then return 0.20303550456422229;  // std dev = 3.081, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.4313105401198123;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5036195578700232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.15288007360931777;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( tweets(A, M) )
%   | | | then return 0.18893320515303744;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.17444045152984902;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( tweets(G, E), follows(G, A) )
%   | | | then return 0.11336454433563474;  // std dev = 7.150, 243.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=73 */
%   | | | else return 0.25140367417925885;  // std dev = 1.500, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.15546813781730914;  // std dev = 3.587, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.1620291626101491;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( follows(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, J) )
%   | | | then return 0.09359664609314386;  // std dev = 2.917, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.14438824567730807;  // std dev = 2.444, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then return 0.12484011791116331;  // std dev = 0.472, 271.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=91 */
%   | | else if ( tweets(A, F), follows(A, G) )
%   | | | then return 0.25569894500832846;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.11258530048129096;  // std dev = 2.461, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then if ( tweets(I, H), follows(A, I) )
%   | | then if ( follows(I, J), follows(A, J) )
%   | | | then return 0.29647038972057377;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11788879346862684;  // std dev = 2.313, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.011869202918810301;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.27136085369937213;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.22231824009615356;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E), tweets(A, F) )
%   | then if ( follows(E, A), tweets(E, G) )
%   | | then return 0.09279707624358083;  // std dev = 0.468, 221.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=71 */
%   | | else if ( follows(H, A), follows(I, H) )
%   | | | then return 0.21179055739684474;  // std dev = 1.658, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0815100487117647;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.07219000907590702;  // std dev = 0.465, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   else if ( follows(J, D) )
%   | then if ( follows(A, K), follows(K, L) )
%   | | then if ( follows(A, L), tweets(A, M) )
%   | | | then return 0.11919888394177747;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2543851310629762;  // std dev = 1.999, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( tweets(A, N) )
%   | | | then return 0.06091183118399373;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.10791939871974464;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.08019024567226954;  // std dev = 0.472, 275.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=91 */
%   | else if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.10380356649158819;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.1299884322893127;  // std dev = 1.710, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.06584465624006415;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( follows(G, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(A, K) )
%   | | | then return 0.10491788556303827;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.08397405136078251;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.18616792296760531;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.19600867372775513;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(F, A) )
%   | | | then return 0.0783589248180631;  // std dev = 6.903, 213.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=72 */
%   | | | else return -0.007401707102672435;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.1243274377402619;  // std dev = 3.436, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.09996004128702417;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(A, J), tweets(H, J) )
%   | | then if ( follows(A, I) )
%   | | | then return -0.028009622130136434;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.20830925357695085;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.0287694099210062;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else return 0.011391650220117724;  // std dev = 0.463, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.061657400192330555;  // std dev = 7.125, 226.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=77 */
%   | | | else return 0.00869693600496602;  // std dev = 3.122, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( follows(A, G), tweets(A, H) )
%   | | | then return -0.04950593809122598;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.0696459898699236;  // std dev = 2.393, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, I) )
%   | then if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(A, K), follows(K, J) )
%   | | | then return -0.04487970691971197;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07521213672523333;  // std dev = 1.900, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.009806560639343983;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return -0.03561199767215886;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(A, E), follows(E, F) )
%   | then if ( follows(E, A) )
%   | | then if ( follows(F, A), follows(A, F) )
%   | | | then return 0.00855216444867104;  // std dev = 6.472, 199.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=60 */
%   | | | else return 0.07517286017121678;  // std dev = 4.428, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.025487135171732712;  // std dev = 2.803, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.08305803207202742;  // std dev = 1.763, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then return 0.20328099294174776;  // std dev = 0.500, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.015439964372276807;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.08305729332185988;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(G, A), tweets(F, E) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.006518333328169813;  // std dev = 7.010, 235.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=70 */
%   | | | else return 0.2098442915588651;  // std dev = 1.720, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( follows(F, H), tweets(F, E) )
%   | | | then return -0.052568062378763776;  // std dev = 2.246, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.058721507051040456;  // std dev = 2.073, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.04703794938937296;  // std dev = 3.534, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.46538405399165345;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(A, L) )
%   | | | then return -0.01788974050244832;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.032273004887233024;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13', 'minutes', 'and', '39.749', 'seconds']
Refined model CLL: -0.379115


******************************************
Best model found
******************************************
Results 

CLL : -0.342232 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 226.06 

Total Inference Time : 372.31184220314026 

Total revision time: 623.205198266983
Best scored revision CLL: -0.346107


Results 

CLL : -0.342232 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 623.239445903778 

Total Inference Time : 372.31184220314026 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 8.04
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 493.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.18842416445730692;  // std dev = 8.505, 327.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=108 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17602972980149936;  // std dev = 5.722, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.16090278280171222;  // std dev = 8.524, 330.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.149067441218843;  // std dev = 0.464, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.13057677329147824;  // std dev = 8.567, 337.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=108 */
%   else if ( follows(E, D) )
%   | then return 0.09782511699288886;  // std dev = 5.862, 169.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.11158578416917221;  // std dev = 8.555, 335.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=108 */
%   else if ( follows(D, E) )
%   | then return 0.12066890889909351;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.0993035849287111;  // std dev = 0.470, 328.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07840728381021478;  // std dev = 0.458, 160.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=48 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.09053921918051669;  // std dev = 0.473, 319.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08037775505058228;  // std dev = 0.465, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.07870221274725868;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.05883330523844302;  // std dev = 10.186, 466.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.043', 'seconds']
Parameter learned model CLL:-0.345418 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.505, 219, 108], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.722, 103, 48], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.524, 222, 108], 'true,false': [0.0, 0, 0], 'false': [0.464, 105, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.567, 229, 108], 'false,true': [5.862, 121, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.555, 227, 108], 'false,true': [5.704, 101, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.47, 220, 108], 'true,false': [0.0, 0, 0], 'false': [0.458, 112, 48]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.473, 211, 108], 'true,false': [0.0, 0, 0], 'false': [0.465, 104, 48]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.473, 304, 156], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [10.186, 310, 156], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21984909227779922, nan], 'true': [0.22119350223045423, 0.21683259506162092], 'true,false': [nan, 0.21683259506162092]}
{'': [0.22016528925620124, 0.21530180699730875], 'true': [0.22016528925620124, nan]}
{'': [0.21777069446768013, 0.20335422429186722], 'false': [0.20335422429186722, nan]}
{'': [0.21845399866339696, 0.21836854195756886], 'false': [0.21836854195756886, nan]}
{'': [0.2208506841165998, 0.20999999999999944], 'true': [0.2208506841165998, nan]}
{'': [0.2239364786116486, 0.2160664819944593], 'true': [0.2239364786116486, nan]}
{'': [0.22402687141893957, nan]}
{'': [0.22264635426238483, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 166.175
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(D, E), tweets(E, F) )
%   | | | then return 0.1894372786577956;  // std dev = 6.009, 163.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=54 */
%   | | | else return 0.08542166237223955;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else return 0.1308762078267851;  // std dev = 0.445, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(G, H), tweets(G, C) )
%   | | | then return 0.20597502205603316;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.21712329407387132;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( follows(A, J), follows(J, A) )
%   | then return 0.20814893509951235;  // std dev = 0.477, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else return 0.13087620782678508;  // std dev = 0.445, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D) )
%   | then return 0.17170683544231646;  // std dev = 0.473, 362.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=122 */
%   | else return 0.06182826744745849;  // std dev = 0.426, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   else if ( tweets(A, E), follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( tweets(F, E) )
%   | | | then return 0.32961154394193704;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.07961154394193726;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.07961154394193726;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.17479229827352702;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24145896494019375;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.20810380147211915;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.19145896494019374;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, A) )
%   | | | then return 0.11128234038808253;  // std dev = 6.897, 226.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=68 */
%   | | | else return 0.14779794522153344;  // std dev = 3.775, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.16334873192312407;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.24238742815955464;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.15378417317791895;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.19725100694545827;  // std dev = 4.093, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.12284894500035037;  // std dev = 7.641, 262.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=88 */
%   | | | else return 0.0036438490085337182;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( follows(A, G), follows(G, A) )
%   | | | then return 0.13744833629076408;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.3479977223064815;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then return 0.09938108996266003;  // std dev = 0.467, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.10404472897672236;  // std dev = 0.466, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.47043963182854537;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15094126218943874;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E), follows(E, A) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then return 0.04457592864904696;  // std dev = 0.447, 250.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=69 */
%   | | else return 0.0842152758472491;  // std dev = 0.460, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( follows(G, A), follows(H, G) )
%   | | then if ( follows(G, I), follows(H, I) )
%   | | | then return 0.11148913145736992;  // std dev = 3.793, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return -0.026429879849151194;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.25981604559555804;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(J, D) )
%   | then if ( follows(A, K), follows(K, L) )
%   | | then if ( tweets(A, M), follows(A, L) )
%   | | | then return 0.1915632891292256;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.09848964014893082;  // std dev = 3.997, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | else return 0.013569466381094313;  // std dev = 0.437, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(F, A), follows(F, D) )
%   | | then return 0.07556787667865052;  // std dev = 0.465, 212.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=67 */
%   | | else if ( tweets(G, E), follows(G, A) )
%   | | | then return 0.2331128278250694;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.11149939693925513;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( tweets(A, H) )
%   | | then return 0.11482409548494919;  // std dev = 0.488, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.10719263983920323;  // std dev = 3.082, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.05250031789931541;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( follows(J, K) )
%   | then if ( follows(A, L), tweets(A, M) )
%   | | then return 0.09820008687890257;  // std dev = 0.481, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else return 0.05753855465319795;  // std dev = 0.461, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.110383086757566;  // std dev = 5.696, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
%   | | | else return 0.07382764501840298;  // std dev = 4.529, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.0884067393291627;  // std dev = 3.653, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return -0.07705133629703022;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(J, I), tweets(I, H) )
%   | | | then return 0.030434738278324054;  // std dev = 3.312, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.14430426577356212;  // std dev = 1.294, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.17907124090866075;  // std dev = 0.492, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.042019649483797966;  // std dev = 0.462, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.04918219875410984;  // std dev = 7.071, 229.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=74 */
%   | | | else return -0.026579665641329388;  // std dev = 2.423, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( follows(G, A), tweets(G, H) )
%   | | | then return 0.012204712655085336;  // std dev = 4.092, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | | else return -0.15774333644922514;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, I) )
%   | then return 0.005172311272575897;  // std dev = 0.457, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(A, K) )
%   | | | then return 0.09910066551083853;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.3140129462125929;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.007055225054596213;  // std dev = 0.450, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(A, E), follows(E, A) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.0479133968812327;  // std dev = 5.224, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.004815149959262567;  // std dev = 4.478, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.07597119843716033;  // std dev = 2.401, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.09421544103929799;  // std dev = 1.551, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( follows(H, A), follows(I, H) )
%   | | then if ( tweets(A, J), tweets(I, J) )
%   | | | then return -0.04113260776818091;  // std dev = 3.685, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 1.0044409011622839E-4;  // std dev = 1.874, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.02411978575403261;  // std dev = 4.272, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return -0.009585588438411409;  // std dev = 4.040, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), follows(A, F) )
%   | then if ( follows(E, F), follows(G, E) )
%   | | then if ( follows(A, G), follows(F, G) )
%   | | | then return 0.04640866196258588;  // std dev = 5.637, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
%   | | | else return 0.11706434851333439;  // std dev = 4.286, 76.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=31 */
%   | | else if ( tweets(A, H), tweets(E, H) )
%   | | | then return -0.03150322787777141;  // std dev = 2.686, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.38861792551916485;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return -0.04403743862273206;  // std dev = 3.174, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.003096403796225241;  // std dev = 4.200, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.005835485505260788;  // std dev = 3.103, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.1442921339920944;  // std dev = 2.618, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '6.541', 'seconds']
Refined model CLL: -0.373873


******************************************
Best model found
******************************************
Results 

CLL : -0.349828 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 166.175 

Total Inference Time : 596.9910223484039 

Total revision time: 799.6325219535828
Best scored revision CLL: -0.345418


Results 

CLL : -0.349828 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 799.6667695903778 

Total Inference Time : 596.9910223484039 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 5.864
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.471, 380.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.465, 397.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.19685861251886377;  // std dev = 8.333, 310.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=105 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18627393509951193;  // std dev = 3.756, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.17671927462823267;  // std dev = 8.298, 305.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15700498213883568;  // std dev = 0.468, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.1386217083031562;  // std dev = 8.373, 316.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=105 */
%   else if ( follows(E, D) )
%   | then return 0.19284884240976766;  // std dev = 3.603, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.11292825715390829;  // std dev = 8.393, 319.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=105 */
%   else if ( follows(D, E) )
%   | then return 0.0885155015350955;  // std dev = 3.810, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.11170666910228058;  // std dev = 0.476, 302.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10282158362773758;  // std dev = 0.473, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.06341695866506457;  // std dev = 0.467, 328.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058511569036417;  // std dev = 0.464, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.06042183241817735;  // std dev = 0.470, 383.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.04254926330699825;  // std dev = 9.235, 390.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.858', 'seconds']
Parameter learned model CLL:-0.348371 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.333, 205, 105], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.756, 43, 21], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.298, 200, 105], 'true,false': [0.0, 0, 0], 'false': [0.468, 44, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.373, 211, 105], 'false,true': [3.603, 34, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.393, 214, 105], 'false,true': [3.81, 47, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.476, 197, 105], 'true,false': [0.0, 0, 0], 'false': [0.473, 41, 21]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.467, 223, 105], 'true,false': [0.0, 0, 0], 'false': [0.464, 46, 21]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.47, 257, 126], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [9.235, 264, 126], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.223397866681921, nan], 'true': [0.22398543184183364, 0.2204589843750001], 'true,false': [nan, 0.2204589843750001]}
{'': [0.2257457672668665, 0.2186982248520711], 'true': [0.2257457672668665, nan]}
{'': [0.22186949206857545, 0.23603305785123943], 'false': [0.23603305785123943, nan]}
{'': [0.2208115093208596, 0.21345155709342592], 'false': [0.21345155709342592, nan]}
{'': [0.22679926319021185, 0.22398543184183084], 'true': [0.22679926319021185, nan]}
{'': [0.21764388756692554, 0.2151926932501672], 'true': [0.21764388756692554, nan]}
{'': [0.22077699911706314, nan]}
{'': [0.21868037344635405, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 179.411
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(C, D) )
%   | then return 0.18188994229375563;  // std dev = 0.468, 278.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=90 */
%   | else if ( tweets(A, E) )
%   | | then return 0.3126943896449669;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( tweets(A, F) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17393840878372283;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2391013160518933;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.17393840878372288;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( follows(C, E), tweets(D, F) )
%   | | then if ( follows(A, E), follows(E, G) )
%   | | | then return 0.19200038206952014;  // std dev = 7.125, 221.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=79 */
%   | | | else return 0.04506063451057746;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( follows(C, D) )
%   | | | then return 0.16786765205443707;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.37998886417564903;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( tweets(A, H), follows(C, A) )
%   | | then if ( tweets(C, H) )
%   | | | then return 0.05096763262991331;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.06567351498285456;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(C, I), follows(A, I) )
%   | | | then return 0.07034191257490599;  // std dev = 1.739, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.19241440885484187;  // std dev = 3.473, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   else return 0.10234433942304051;  // std dev = 0.447, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(G, A), follows(G, F) )
%   | | | then return 0.13835989777395788;  // std dev = 6.935, 216.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=72 */
%   | | | else return 0.30765764809390594;  // std dev = 1.580, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.18234805268218537;  // std dev = 3.436, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.1600663009270592;  // std dev = 2.423, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( follows(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1876816523922189;  // std dev = 2.710, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.034791670341635196;  // std dev = 2.628, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.10777990980334909;  // std dev = 7.651, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
%   | | | else return 0.03354237026396674;  // std dev = 2.573, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else return 0.232043909652149;  // std dev = 0.497, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H) )
%   | | then if ( follows(H, G) )
%   | | | then return 0.28310059720902037;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08058582453825712;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( tweets(A, I), tweets(G, I) )
%   | | | then return 0.2766006938487187;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3722159737083392;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.10555820411766907;  // std dev = 0.465, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E), follows(E, A) )
%   | then if ( follows(F, A), follows(F, E) )
%   | | then if ( follows(E, F), tweets(F, G) )
%   | | | then return 0.07745281431980412;  // std dev = 6.364, 188.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=59 */
%   | | | else return 0.20421418455937712;  // std dev = 1.511, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(H, E), tweets(H, I) )
%   | | | then return 0.14102804375800898;  // std dev = 4.075, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return -0.03143734498138214;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, J), tweets(A, K) )
%   | | then return 0.2130723367043106;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.13223450088565877;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10755646411479912;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   else if ( follows(M, D) )
%   | then return 0.05878512609769157;  // std dev = 0.454, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( tweets(E, F), follows(E, D) )
%   | | then if ( tweets(D, F), follows(E, A) )
%   | | | then return 0.06394162044638746;  // std dev = 7.008, 227.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=72 */
%   | | | else return 0.10966895254800309;  // std dev = 3.701, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | else return -0.05895066395445654;  // std dev = 0.398, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0.026536015902429762;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else if ( follows(G, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.05087345080344124;  // std dev = 1.671, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.4037975262335026;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.01810961813021343;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.09039680943389201;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then return 0.04784317811624516;  // std dev = 0.467, 241.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=77 */
%   | | else return 0.09181012046698978;  // std dev = 0.482, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( tweets(A, I), tweets(G, I) )
%   | | then if ( follows(H, G) )
%   | | | then return 0.0309488711259061;  // std dev = 1.933, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.09788419308388635;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.09219945454357643;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09509131309705277;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.2066775689309121;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.07422389853242661;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.05655912345078665;  // std dev = 7.322, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | | else return -0.04097029405353157;  // std dev = 1.726, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0.09831061370958771;  // std dev = 0.488, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, G) )
%   | then if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.15002471089300176;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.0755360022691896;  // std dev = 1.847, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.02572693992418657;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then return -0.02000701907577686;  // std dev = 0.466, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.015423723395482591;  // std dev = 0.427, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), follows(A, E) )
%   | then if ( follows(F, A), follows(F, E) )
%   | | then if ( tweets(A, G), follows(E, F) )
%   | | | then return 0.06455717543351265;  // std dev = 5.773, 147.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=51 */
%   | | | else return 0.2110383448692495;  // std dev = 2.388, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( follows(A, H), follows(H, E) )
%   | | | then return 0.009134009627657272;  // std dev = 3.318, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.07174496292088149;  // std dev = 2.691, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J), tweets(J, I) )
%   | | | then return 0.0890949036023991;  // std dev = 3.022, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return -0.018611734981484603;  // std dev = 2.518, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return -0.11537008430141102;  // std dev = 1.803, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.047498516600373464;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A) )
%   | then if ( follows(E, F), follows(A, F) )
%   | | then if ( tweets(A, G), follows(H, E) )
%   | | | then return 0.02054294050631323;  // std dev = 6.940, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
%   | | | else return 0.06963832393526208;  // std dev = 3.358, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | else if ( follows(A, E) )
%   | | | then return -0.0688041803939809;  // std dev = 2.278, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.038355207203134976;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(A, K), tweets(I, K) )
%   | | | then return 0.046178149399718385;  // std dev = 2.039, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.12335800456350204;  // std dev = 1.778, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( tweets(A, L) )
%   | | | then return -0.09738937138147377;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.011155786231870489;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10', 'minutes', 'and', '33.795', 'seconds']
Refined model CLL: -0.39184


******************************************
Best model found
******************************************
Results 

CLL : -0.346488 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 179.411 

Total Inference Time : 557.6171855926514 

Total revision time: 760.2552281856537
Best scored revision CLL: -0.348371


Results 

CLL : -0.346488 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 760.3362976551056 

Total Inference Time : 557.6171855926514 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 7.762
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 483.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 457.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.18345013991878592;  // std dev = 8.536, 332.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=108 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1869160583871839;  // std dev = 5.676, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.15864308790119866;  // std dev = 8.542, 333.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1435165303759594;  // std dev = 0.462, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.16415348872544033;  // std dev = 8.360, 306.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=108 */
%   else if ( follows(E, D) )
%   | then return 0.16593280223732265;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.12333978753119715;  // std dev = 8.452, 319.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=108 */
%   else if ( follows(D, E) )
%   | then return 0.14465500150395708;  // std dev = 5.550, 134.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.13821974892598676;  // std dev = 0.484, 288.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0728355664556744;  // std dev = 0.463, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.0937766219109419;  // std dev = 0.479, 303.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05145239255753696;  // std dev = 0.460, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.07395089491108418;  // std dev = 0.477, 447.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.019521798422734528;  // std dev = 10.380, 503.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.860', 'seconds']
Parameter learned model CLL:-0.354276 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.536, 224, 108], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.676, 98, 48], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.542, 225, 108], 'true,false': [0.0, 0, 0], 'false': [0.462, 107, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.36, 198, 108], 'false,true': [5.573, 88, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.452, 211, 108], 'false,true': [5.55, 86, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.484, 180, 108], 'true,false': [0.0, 0, 0], 'false': [0.463, 106, 48]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.479, 195, 108], 'true,false': [0.0, 0, 0], 'false': [0.46, 110, 48]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.477, 291, 156], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [10.38, 347, 156], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21984909227779922, nan], 'true': [0.21948033096240602, 0.2206793019328212], 'true,false': [nan, 0.2206793019328212]}
{'': [0.21913805697589667, 0.21377731529656574], 'true': [0.21913805697589667, nan]}
{'': [0.22837370242214453, 0.2283737024221437], 'false': [0.2283737024221437, nan]}
{'': [0.22393647861164523, 0.22989529962129693], 'false': [0.22989529962129693, nan]}
{'': [0.23437500000000167, 0.21453870804520195], 'true': [0.23437500000000167, nan]}
{'': [0.2293892755612197, 0.2115045665758693], 'true': [0.2293892755612197, nan]}
{'': [0.22705457028411868, nan]}
{'': [0.21419752322944463, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 226.13
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), follows(E, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(D, A), tweets(D, C) )
%   | | | then return 0.23314893509951196;  // std dev = 5.123, 112.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=42 */
%   | | | else return 0.18018283340459712;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( follows(D, F), follows(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.14386322081379782;  // std dev = 0.452, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( follows(I, A), follows(H, A) )
%   | | then return 0.2265699877310913;  // std dev = 0.482, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( follows(J, A), follows(A, I) )
%   | | | then return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.27481560176617903;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else return 0.19148226843284444;  // std dev = 0.471, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(D, A), follows(A, C) )
%   | then return 0.17923325727930364;  // std dev = 0.477, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
%   | else return 0.1291022056855069;  // std dev = 0.459, 179.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=54 */
%   else if ( tweets(A, E) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then if ( tweets(F, E), follows(G, F) )
%   | | | then return 0.18549681212893537;  // std dev = 3.429, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.3397187297348978;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.10889332691488919;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.21018953020584374;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.2879673079836216;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.4998721578982152;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27070549123154836;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.13454695542276102;  // std dev = 7.414, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | | else return -0.017212488751483887;  // std dev = 2.373, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.15551302689467666;  // std dev = 3.250, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.24305571168441306;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, I) )
%   | | | then return 0.13378338872679826;  // std dev = 4.113, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.12195395638333872;  // std dev = 3.894, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( tweets(E, F), tweets(A, F) )
%   | | | then return 0.14080939106416626;  // std dev = 6.570, 188.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=67 */
%   | | | else return 0.0742861323732247;  // std dev = 3.226, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.24771584463125634;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.15410852226791416;  // std dev = 3.470, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, I) )
%   | then if ( follows(I, J), follows(A, J) )
%   | | then return 0.12576349390860558;  // std dev = 0.478, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else return 0.07939352029271651;  // std dev = 0.458, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | else if ( tweets(A, K) )
%   | | then return 0.19670737600169869;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.27133386315977;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E), tweets(A, F) )
%   | then if ( follows(G, A), follows(G, E) )
%   | | then if ( tweets(E, F), follows(E, A) )
%   | | | then return 0.06502129208582004;  // std dev = 5.502, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.12122345622754847;  // std dev = 3.842, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.18935494098670494;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.17160796937008524;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.04627644999162558;  // std dev = 0.453, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   else if ( follows(H, D) )
%   | then if ( tweets(A, I) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.06378831425785875;  // std dev = 3.662, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.17249641864012272;  // std dev = 1.898, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.037843159039800484;  // std dev = 0.462, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(D, A) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.05334166273029509;  // std dev = 7.149, 239.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=74 */
%   | | | else return 0.24405452144609696;  // std dev = 2.004, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return -0.0249542650595754;  // std dev = 0.449, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( follows(A, F) )
%   | | then return 0.13996854132432776;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.08797393180053638;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.11307260276783238;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( follows(H, I) )
%   | then if ( follows(A, J), tweets(A, K) )
%   | | then return 0.06936313900126456;  // std dev = 0.461, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | else return 0.040297058496114584;  // std dev = 0.464, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.09074378840382175;  // std dev = 6.899, 207.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=74 */
%   | | | else return 0.004091345387726849;  // std dev = 2.352, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else return 0.022341570220949184;  // std dev = 0.454, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, G), tweets(A, H) )
%   | then return 0.05996255185917052;  // std dev = 0.464, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, K), follows(K, I) )
%   | | | then return 0.062250802886626544;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.17422958899714885;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.08602481034344626;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03558922912160207;  // std dev = 2.450, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, G) )
%   | | | then return 0.06312136156906621;  // std dev = 6.932, 211.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=74 */
%   | | | else return 0.10270441735935963;  // std dev = 3.169, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else return 0.011719064180309801;  // std dev = 0.452, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, H) )
%   | then if ( follows(H, I), follows(A, I) )
%   | | then if ( follows(I, J), follows(A, J) )
%   | | | then return 0.14724482182133555;  // std dev = 2.742, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.44897651860093496;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(H, K), follows(K, H) )
%   | | | then return -0.011483420972409106;  // std dev = 3.418, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.09947249988294746;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return -0.03900681046840499;  // std dev = 0.440, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(F, G), tweets(F, E) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.039468445488833576;  // std dev = 7.650, 263.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=88 */
%   | | | else return -0.09387887537762883;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.08585046539033035;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1455609813017893;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( follows(I, A), follows(A, J) )
%   | | then if ( follows(A, I), follows(J, I) )
%   | | | then return 0.24637146532117746;  // std dev = 2.179, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.12276332796409566;  // std dev = 1.717, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( follows(K, A) )
%   | | | then return 0.09865635686942059;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.05754455270851583;  // std dev = 4.111, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(E, G), follows(A, G) )
%   | | then if ( tweets(G, F), follows(G, E) )
%   | | | then return 0.010853904733640394;  // std dev = 6.640, 202.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=65 */
%   | | | else return 0.12256529287643617;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( follows(A, H), tweets(H, F) )
%   | | | then return -0.10317264778358426;  // std dev = 2.640, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.01855422781125892;  // std dev = 3.475, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(I, J), follows(A, J) )
%   | | | then return 0.04359256237171668;  // std dev = 3.273, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.06385114355069174;  // std dev = 3.663, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.3676065704495845;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06101135067415851;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33', 'minutes', 'and', '6.566', 'seconds']
Refined model CLL: -0.390367


******************************************
Best model found
******************************************
Results 

CLL : -0.359394 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 226.13 

Total Inference Time : 2369.586578130722 

Total revision time: 2631.504669944763
Best scored revision CLL: -0.354276


Results 

CLL : -0.359394 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2631.585739414215 

Total Inference Time : 2369.586578130722 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 7.072
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.472, 376.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.17252019258453924;  // std dev = 8.485, 334.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=105 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17158177092040747;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.14925694092352632;  // std dev = 8.491, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17466251420097365;  // std dev = 0.473, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.1403909616394831;  // std dev = 8.412, 322.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=105 */
%   else if ( follows(E, D) )
%   | then return 0.15483806438264724;  // std dev = 3.711, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.11822012940466628;  // std dev = 8.412, 322.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=105 */
%   else if ( follows(D, E) )
%   | then return 0.10872969211596593;  // std dev = 3.770, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.0940811114713755;  // std dev = 0.467, 326.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.170620832596065;  // std dev = 0.491, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.081100112680331;  // std dev = 0.469, 322.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13111468733518078;  // std dev = 0.489, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.04887190235609832;  // std dev = 0.464, 401.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.03961813116757917;  // std dev = 9.297, 400.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.436', 'seconds']
Parameter learned model CLL:-0.340147 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.485, 229, 105], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.797, 46, 21], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.491, 230, 105], 'true,false': [0.0, 0, 0], 'false': [0.473, 41, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.412, 217, 105], 'false,true': [3.711, 40, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.412, 217, 105], 'false,true': [3.77, 44, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.467, 221, 105], 'true,false': [0.0, 0, 0], 'false': [0.491, 31, 21]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.469, 217, 105], 'true,false': [0.0, 0, 0], 'false': [0.489, 32, 21]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.464, 275, 126], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [9.297, 274, 126], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21548373455389216, nan], 'true': [0.21554196995231287, 0.2151926932501672], 'true,false': [nan, 0.2151926932501672]}
{'': [0.21519269325017004, 0.22398543184183115], 'true': [0.21519269325017004, nan]}
{'': [0.2197542533081309, 0.2257457672668639], 'false': [0.2257457672668639, nan]}
{'': [0.2197542533081295, 0.21869822485207083], 'false': [0.21869822485207083, nan]}
{'': [0.21834656931010066, 0.24075443786982287], 'true': [0.21834656931010066, nan]}
{'': [0.21975425330812498, 0.2392310430758271], 'true': [0.21975425330812498, nan]}
{'': [0.21552593278072818, nan]}
{'': [0.21608805740660714, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 205.147
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), tweets(A, E) )
%   | then if ( follows(C, D), follows(D, C) )
%   | | then if ( tweets(C, F), tweets(D, F) )
%   | | | then return 0.17706785401843256;  // std dev = 6.339, 185.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=59 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tweets(D, E), follows(C, A) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.20814893509951232;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( follows(G, C), tweets(G, H) )
%   | | then if ( follows(C, G), follows(C, A) )
%   | | | then return 0.19814893509951237;  // std dev = 3.350, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.16895974591032317;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0.3025933795439568;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), tweets(D, C) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( tweets(E, C), follows(A, E) )
%   | | | then return 0.19156530599316166;  // std dev = 5.372, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | | | else return 0.12496599436383811;  // std dev = 3.236, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else return 0.09528288948882586;  // std dev = 0.451, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | else if ( follows(F, A) )
%   | | then if ( follows(A, G), follows(G, F) )
%   | | | then return 0.5004248663280226;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.330876375566975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.13260838962413374;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.23631209332783748;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(J, A) )
%   | then return 0.1234105108482598;  // std dev = 0.454, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else return 0.15774066475640885;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F), tweets(E, G) )
%   | | | then return 0.11540256665690207;  // std dev = 7.668, 277.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=85 */
%   | | | else return 0.24343328915574916;  // std dev = 2.479, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else return 0.1907557425999697;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( follows(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.16014495573993415;  // std dev = 2.686, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.16633967689231768;  // std dev = 2.534, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, G) )
%   | | | then return 0.057027544740048494;  // std dev = 7.436, 276.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=76 */
%   | | | else return 0.15749239616636945;  // std dev = 2.346, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.21890489081030648;  // std dev = 0.495, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(A, J), tweets(H, J) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.1672080830474243;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.12554141638075772;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.36065985332437006;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( tweets(A, K) )
%   | | then return 0.137172760438802;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.07271828028893397;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then if ( follows(F, E), tweets(F, G) )
%   | | | then return 0.11557106797670101;  // std dev = 7.088, 224.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=76 */
%   | | | else return -0.04271771898180514;  // std dev = 1.970, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( tweets(A, H), tweets(E, H) )
%   | | | then return 0.10596869438335399;  // std dev = 2.532, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.2393732334861415;  // std dev = 1.744, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0.05578844027835956;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   else if ( follows(I, D) )
%   | then if ( follows(A, J), follows(J, K) )
%   | | then return 0.059734262451530434;  // std dev = 0.459, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.32003915254920623;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.2031315253285075;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, A), follows(A, D) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then return 0.08778042575827115;  // std dev = 0.472, 248.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=83 */
%   | | else if ( follows(D, F), follows(F, A) )
%   | | | then return -0.0074734622353589825;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3958050572736804;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.047039745733558694;  // std dev = 0.457, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   else if ( follows(G, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.07140630235586454;  // std dev = 1.643, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.1106527230124385;  // std dev = 2.095, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.1282197991158943;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11213105658630612;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, A) )
%   | | | then return 0.07681897437234757;  // std dev = 6.899, 207.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=72 */
%   | | | else return 0.12393897019338977;  // std dev = 2.817, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( follows(A, G), follows(G, A) )
%   | | | then return 0.020203469224200157;  // std dev = 3.615, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.014443546083412065;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then return 0.030067092391312243;  // std dev = 0.456, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return -0.011245129941260304;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.18893071833219763;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.030623508170476092;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( tweets(F, E), follows(F, A) )
%   | | | then return 0.08331827903992194;  // std dev = 7.182, 222.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=81 */
%   | | | else return 0.010343901124574152;  // std dev = 1.596, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( follows(A, G), follows(G, A) )
%   | | | then return 0.03629198789380349;  // std dev = 3.551, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return -0.15536841868386067;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(A, J), follows(A, I) )
%   | | then return 0.2329949359459895;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.00744584259241409;  // std dev = 0.458, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( tweets(A, K) )
%   | | then return -0.03435096636991551;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.20855069763915957;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(F, G) )
%   | | then if ( tweets(F, E), follows(G, A) )
%   | | | then return 0.06911088463757063;  // std dev = 6.318, 174.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=62 */
%   | | | else return -0.026287436099826034;  // std dev = 3.958, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.020746741952152054;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33231159443632946;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return -0.016236486582979787;  // std dev = 3.401, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.10842947045151458;  // std dev = 1.960, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( follows(A, L) )
%   | | | then return -0.12201914640342756;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return -0.05282989879635752;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(G, A), follows(G, E) )
%   | | then if ( follows(A, G), tweets(A, F) )
%   | | | then return 0.06258949763384822;  // std dev = 5.738, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | | else return 0.00860046811722165;  // std dev = 3.714, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( follows(A, H), follows(E, H) )
%   | | | then return 0.022561452534050352;  // std dev = 4.045, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return -0.0748233319201665;  // std dev = 2.299, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return -0.09608966954783311;  // std dev = 1.767, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.05062791247433108;  // std dev = 2.297, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.032574693295462726;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.02369784852655285;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31', 'minutes', 'and', '37.991', 'seconds']
Refined model CLL: -0.392199


******************************************
Best model found
******************************************
Results 

CLL : -0.345109 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 205.147 

Total Inference Time : 1302.5633969306946 

Total revision time: 1534.067909854889
Best scored revision CLL: -0.340147


Results 

CLL : -0.345109 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1534.1727220001221 

Total Inference Time : 1302.5633969306946 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 7.731
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 439.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.479, 437.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.17957750652808033;  // std dev = 8.561, 336.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=108 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19857446701440637;  // std dev = 5.627, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.17025711528905604;  // std dev = 8.472, 322.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18004361569701516;  // std dev = 0.476, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.17488874940763438;  // std dev = 8.282, 296.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=108 */
%   else if ( follows(E, D) )
%   | then return 0.1298792903580256;  // std dev = 5.695, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.11914468154929567;  // std dev = 8.459, 320.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=108 */
%   else if ( follows(D, E) )
%   | then return 0.12972515678799326;  // std dev = 5.606, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.09499448425923625;  // std dev = 0.472, 323.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09042266367888598;  // std dev = 0.470, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.08146584967148635;  // std dev = 0.473, 319.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039333004771707335;  // std dev = 0.456, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.06486876643306537;  // std dev = 0.472, 466.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.04632924051736322;  // std dev = 10.231, 474.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.341', 'seconds']
Parameter learned model CLL:-0.351259 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.561, 228, 108], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.627, 93, 48], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.472, 214, 108], 'true,false': [0.0, 0, 0], 'false': [0.476, 90, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.282, 188, 108], 'false,true': [5.695, 100, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.459, 212, 108], 'false,true': [5.606, 91, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.472, 215, 108], 'true,false': [0.0, 0, 0], 'false': [0.47, 98, 48]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.473, 211, 108], 'true,false': [0.0, 0, 0], 'false': [0.456, 115, 48]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.472, 310, 156], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [10.231, 318, 156], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22008623076619102, nan], 'true': [0.21811224489796133, 0.22453598913535608], 'true,false': [nan, 0.22453598913535608]}
{'': [0.22290806681840739, 0.2268431001890384], 'true': [0.22290806681840739, nan]}
{'': [0.23173849525201126, 0.2191380569758951], 'false': [0.2191380569758951, nan]}
{'': [0.22359374999999923, 0.22607525490399047], 'false': [0.22607525490399047, nan]}
{'': [0.22256515446328193, 0.22067930193282087], 'true': [0.22256515446328193, nan]}
{'': [0.22393647861164692, 0.20776092438556154], 'true': [0.22393647861164692, nan]}
{'': [0.22278376396603253, nan]}
{'': [0.22083408972307544, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 227.555
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( follows(E, C), follows(A, E) )
%   | | then if ( tweets(A, F), tweets(D, F) )
%   | | | then return 0.30133075328132963;  // std dev = 4.660, 88.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=39 */
%   | | | else return 0.20597502205603407;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( follows(D, C) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( follows(G, C), tweets(C, H) )
%   | | then return 0.1438632208137967;  // std dev = 0.452, 133.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( follows(A, I), tweets(A, J) )
%   | then return 0.12737970433028126;  // std dev = 0.444, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | else if ( tweets(A, K) )
%   | | then return 0.2581489350995123;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.16481560176617832;  // std dev = 0.461, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E), tweets(D, C) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( tweets(E, F), tweets(D, F) )
%   | | | then return 0.16197291368967093;  // std dev = 6.316, 179.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=60 */
%   | | | else return 0.32247860007919493;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.3937715603278498;  // std dev = 1.492, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.20256326089365922;  // std dev = 3.815, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | else return 0.3401968721896325;  // std dev = 0.498, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( follows(G, A) )
%   | then return 0.11266845787989499;  // std dev = 0.452, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return 0.1550604303243393;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.24596952123343022;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.17611003294744074;  // std dev = 0.475, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(F, A), follows(G, F) )
%   | | | then return 0.15101001626071997;  // std dev = 7.564, 250.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=88 */
%   | | | else return 0.04326314068066455;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.1177340910754327;  // std dev = 3.133, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.05879897534771588;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( follows(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.17510652247896455;  // std dev = 4.580, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   | | | else return 0.09135706338502524;  // std dev = 3.269, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.1037623058883114;  // std dev = 6.736, 206.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=68 */
%   | | | else return 0.18007104041755698;  // std dev = 2.948, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else return 0.06747391660308648;  // std dev = 0.453, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, G), follows(A, H) )
%   | then return 0.09845686457543389;  // std dev = 0.464, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(J, I), follows(A, J) )
%   | | | then return 0.09437050750664867;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.17540794467683976;  // std dev = 2.451, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.18149228732799125;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3250655856724643;  // std dev = 2.053, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( tweets(A, E) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then if ( follows(A, G), tweets(F, E) )
%   | | | then return 0.09059758260006766;  // std dev = 6.563, 192.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=65 */
%   | | | else return 0.23648425174835064;  // std dev = 2.183, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.09171524371491019;  // std dev = 0.467, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else return 0.06735385724402587;  // std dev = 0.458, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else if ( follows(H, D) )
%   | then if ( tweets(A, I) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.1368450546303932;  // std dev = 3.643, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.24892585284300228;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.06364459062080759;  // std dev = 3.307, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.08936133236496466;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(A, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then return 0.031422676212456674;  // std dev = 0.458, 228.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=68 */
%   | | else return 0.08494090836305213;  // std dev = 0.470, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | else if ( follows(A, F) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.09143585303421602;  // std dev = 2.705, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.15664805559675998;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.2863217849591871;  // std dev = 1.231, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( follows(H, I) )
%   | then if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(A, K), follows(K, L) )
%   | | | then return 0.15147486016266487;  // std dev = 2.900, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.023788948547770323;  // std dev = 3.676, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else return 0.0040709904613079285;  // std dev = 0.453, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, F), tweets(A, G) )
%   | | | then return 0.06442556467739202;  // std dev = 7.007, 218.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=74 */
%   | | | else return 0.11112209980049494;  // std dev = 3.253, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else return 0.0034944209497947787;  // std dev = 0.440, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, H), follows(H, I) )
%   | then return -4.242560745858263E-4;  // std dev = 0.446, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | else if ( tweets(A, J) )
%   | | then if ( follows(A, K) )
%   | | | then return 0.06472473421751175;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09844306719408688;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.04532497017197199;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.025305990724148603;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(F, G) )
%   | | | then return 0.054115152892533915;  // std dev = 6.996, 216.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=74 */
%   | | | else return 0.01639496413540194;  // std dev = 3.397, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.07122610704548182;  // std dev = 3.110, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.166094775225655;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, I) )
%   | then if ( follows(I, J), tweets(A, K) )
%   | | then return 0.016183375189399565;  // std dev = 0.453, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( follows(I, L) )
%   | | | then return 0.17779033602106797;  // std dev = 2.770, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.04123482850197479;  // std dev = 1.640, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return -0.028083927914237347;  // std dev = 0.442, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E), follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(A, G), tweets(F, E) )
%   | | | then return -0.01882117143238194;  // std dev = 5.479, 147.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=42 */
%   | | | else return 0.04390083041605326;  // std dev = 3.405, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | else if ( follows(H, F) )
%   | | | then return 0.0901415502186801;  // std dev = 4.258, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.3206221730162951;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(I, A), follows(A, I) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return 0.11073798326359174;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.14514167215689727;  // std dev = 1.979, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.07443486605133291;  // std dev = 4.010, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.03535158844862787;  // std dev = 4.237, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(A, E), follows(E, A) )
%   | then if ( tweets(A, F), tweets(E, F) )
%   | | then if ( follows(A, G), follows(G, E) )
%   | | | then return 0.05758935544178621;  // std dev = 6.059, 160.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=57 */
%   | | | else return 0.08785239174537925;  // std dev = 2.445, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.1637412002117534;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 9.46391580362182E-5;  // std dev = 3.076, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | else if ( follows(I, A), follows(A, J) )
%   | | then if ( follows(K, I), follows(K, J) )
%   | | | then return -0.08121991205272402;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.1809490607545933;  // std dev = 1.548, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( follows(A, L) )
%   | | | then return -0.012971335103857614;  // std dev = 5.125, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | | | else return 0.04490347779867272;  // std dev = 4.342, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20', 'minutes', 'and', '45.800', 'seconds']
Refined model CLL: -0.374504


******************************************
Best model found
******************************************
Results 

CLL : -0.354637 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 227.555 

Total Inference Time : 1418.3888432979584 

Total revision time: 1686.375279651642
Best scored revision CLL: -0.351259


Results 

CLL : -0.354637 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1686.480091796875 

Total Inference Time : 1418.3888432979584 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 6.244
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 363.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.474, 369.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.16788344837384567;  // std dev = 8.513, 339.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=105 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284524;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.16979271219799072;  // std dev = 8.367, 315.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15138730941336725;  // std dev = 0.466, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.13298876011428432;  // std dev = 8.443, 327.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=105 */
%   else if ( follows(E, D) )
%   | then return 0.15535568301225058;  // std dev = 3.711, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.11281651740996086;  // std dev = 8.437, 326.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=105 */
%   else if ( follows(D, E) )
%   | then return 0.1194668505476933;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.12738250414634367;  // std dev = 0.479, 295.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.161588929601958;  // std dev = 0.489, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.09248129582382238;  // std dev = 0.475, 305.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06844595363534665;  // std dev = 0.471, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.06649784523630649;  // std dev = 0.473, 373.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.06379240507726171;  // std dev = 9.062, 362.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.200', 'seconds']
Parameter learned model CLL:-0.359876 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.513, 234, 105], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.742, 42, 21], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.367, 210, 105], 'true,false': [0.0, 0, 0], 'false': [0.466, 45, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.443, 222, 105], 'false,true': [3.711, 40, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.437, 221, 105], 'false,true': [3.742, 42, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.479, 190, 105], 'true,false': [0.0, 0, 0], 'false': [0.489, 32, 21]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.475, 200, 105], 'true,false': [0.0, 0, 0], 'false': [0.471, 42, 21]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.473, 247, 126], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [9.062, 236, 126], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.21519269325016963, nan], 'true': [0.21379904456104815, 0.22222222222222235], 'true,false': [nan, 0.22222222222222235]}
{'': [0.2222222222222206, 0.21694214876033022], 'true': [0.2222222222222206, nan]}
{'': [0.21799511825603982, 0.22574576726686402], 'false': [0.22574576726686402, nan]}
{'': [0.21834656931009674, 0.22222222222222274], 'false': [0.22222222222222274, nan]}
{'': [0.2292444699798887, 0.23923104307582804], 'true': [0.2292444699798887, nan]}
{'': [0.22574576726686416, 0.22222222222222174], 'true': [0.22574576726686416, nan]}
{'': [0.22386106122257504, nan]}
{'': [0.22683357236452006, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 152.187
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(E, A), tweets(E, D) )
%   | | then if ( follows(C, F) )
%   | | | then return 0.18685263880321742;  // std dev = 6.904, 216.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=71 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | else if ( follows(H, C), tweets(H, I) )
%   | | then if ( follows(H, A), follows(C, A) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1273797043302816;  // std dev = 3.917, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return 0.08672036367094095;  // std dev = 0.420, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, C), tweets(D, E) )
%   | then if ( follows(D, A), tweets(A, E) )
%   | | then if ( tweets(C, F), follows(A, D) )
%   | | | then return 0.22040251955901502;  // std dev = 5.312, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | | else return 0.14634789771027457;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.13155199971104467;  // std dev = 0.460, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | else if ( follows(D, A) )
%   | | then return 0.19508727137971102;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.40730977271732105;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.34851303975532383;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( tweets(A, H) )
%   | then return 0.1385548759483581;  // std dev = 0.462, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.21692486198490857;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.12763914769919435;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.15204248926915867;  // std dev = 7.364, 239.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=83 */
%   | | | else return 0.0841470756309189;  // std dev = 2.417, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.006335596234517819;  // std dev = 2.168, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.16809822985279702;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( follows(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, I) )
%   | | | then return 0.121106118099004;  // std dev = 2.866, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.19585910830332098;  // std dev = 2.368, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(F, A), tweets(F, G) )
%   | | | then return 0.1121341467881004;  // std dev = 7.769, 273.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=90 */
%   | | | else return -0.11478562339076885;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.023979418170224163;  // std dev = 0.423, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(J, I), follows(A, J) )
%   | | | then return 0.2840342589186489;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11961181722062518;  // std dev = 2.004, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.2840342589186489;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.05172520354621859;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.14692723183368278;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( tweets(A, E), follows(A, F) )
%   | then if ( follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.08113759893717364;  // std dev = 6.097, 170.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=55 */
%   | | | else return 0.10781456995591898;  // std dev = 3.356, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( follows(H, A), follows(F, H) )
%   | | | then return 0.014141795858822921;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23302428695164265;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( follows(A, I), follows(I, A) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.13096565150909675;  // std dev = 3.293, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.2787341553611725;  // std dev = 1.010, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.18126641703157523;  // std dev = 0.488, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else if ( follows(K, D) )
%   | then return 0.058225388632530566;  // std dev = 0.458, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D) )
%   | then if ( follows(D, E), follows(A, E) )
%   | | then if ( follows(E, F) )
%   | | | then return 0.07301863903563316;  // std dev = 7.407, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | | else return 0.31559058193608486;  // std dev = 1.496, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.01226239789451237;  // std dev = 0.437, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else return 0.12220504390836599;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   else if ( follows(G, H) )
%   | then if ( tweets(A, I) )
%   | | then if ( tweets(J, I), follows(A, J) )
%   | | | then return 0.005148516204588316;  // std dev = 2.832, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.10804713662164263;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.25949004503302536;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04412196923315118;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.05977885176767995;  // std dev = 6.637, 200.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=66 */
%   | | | else return 0.14834326921900925;  // std dev = 2.544, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else return 0.03821694791470333;  // std dev = 0.465, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then return 0.07961475667287828;  // std dev = 0.470, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.0831246504492023;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then if ( follows(A, L) )
%   | | | then return 0.0423051552975412;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10897182196420782;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.10317269769333928;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.05296804233755906;  // std dev = 7.410, 246.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=83 */
%   | | | else return 0.033475397647142656;  // std dev = 2.368, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return 0.028189907749198266;  // std dev = 3.005, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.04863615830158352;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, I), follows(I, J) )
%   | then if ( tweets(A, K) )
%   | | then return -0.004116318467242695;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.11860963033789096;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( tweets(A, L) )
%   | | then return 0.1468543472272593;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.016118578858144175;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), follows(A, E) )
%   | then if ( follows(F, A), follows(F, E) )
%   | | then if ( tweets(F, G), follows(E, F) )
%   | | | then return 0.013830034220169173;  // std dev = 6.376, 190.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=59 */
%   | | | else return -0.06683077984865009;  // std dev = 1.772, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( follows(H, E), tweets(H, I) )
%   | | | then return 0.05153640170607502;  // std dev = 4.215, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return -0.1528757088828409;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( follows(A, J) )
%   | | then if ( tweets(A, K), tweets(J, K) )
%   | | | then return 0.06471667467949516;  // std dev = 3.209, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.034597193885392265;  // std dev = 2.739, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else return 0.12236763735158322;  // std dev = 0.490, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), tweets(A, F) )
%   | then if ( tweets(E, F) )
%   | | then if ( follows(A, G), follows(G, E) )
%   | | | then return 0.04202239055367634;  // std dev = 6.450, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
%   | | | else return 0.017158936078634647;  // std dev = 3.505, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else if ( follows(E, H), follows(H, A) )
%   | | | then return -0.006196696183009147;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11692660359822492;  // std dev = 1.539, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(J, K), follows(J, I) )
%   | | | then return 0.09011938489800048;  // std dev = 4.219, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.3553189533364691;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.05638577348365581;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.006016056179333577;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '12.340', 'seconds']
Refined model CLL: -0.377865


******************************************
Best model found
******************************************
Results 

CLL : -0.360462 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 152.187 

Total Inference Time : 344.532838344574 

Total revision time: 520.1486880836487
Best scored revision CLL: -0.359876


Results 

CLL : -0.360462 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 520.2296373901368 

Total Inference Time : 344.532838344574 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 7.487
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.470, 472.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 444.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.1864164123031562;  // std dev = 8.517, 329.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=108 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21635789032339345;  // std dev = 5.550, 134.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.18229542293709486;  // std dev = 8.389, 310.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.156250323481142;  // std dev = 0.469, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.12197075207573978;  // std dev = 8.602, 343.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=108 */
%   else if ( follows(E, D) )
%   | then return 0.12022009071233827;  // std dev = 5.739, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.162398911903669;  // std dev = 8.216, 288.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=108 */
%   else if ( follows(D, E) )
%   | then return 0.11807397609297539;  // std dev = 5.667, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.14743682715067477;  // std dev = 0.487, 278.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0782679649107191;  // std dev = 0.463, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.05048328449501637;  // std dev = 0.466, 338.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08105089424642616;  // std dev = 0.470, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.07032249323605924;  // std dev = 0.475, 453.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.047687115098080796;  // std dev = 10.179, 464.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.711', 'seconds']
Parameter learned model CLL:-0.359646 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.517, 221, 108], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.55, 86, 48], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.389, 202, 108], 'true,false': [0.0, 0, 0], 'false': [0.469, 99, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.602, 235, 108], 'false,true': [5.739, 105, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.216, 180, 108], 'false,true': [5.667, 97, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.487, 170, 108], 'true,false': [0.0, 0, 0], 'false': [0.463, 106, 48]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.466, 230, 108], 'true,false': [0.0, 0, 0], 'false': [0.47, 98, 48]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.475, 297, 156], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [10.179, 308, 156], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22340916830325586, nan], 'true': [0.22050794061400245, 0.22989529962129715], 'true,false': [nan, 0.22989529962129715]}
{'': [0.22701352757544785, 0.21990837151187173], 'true': [0.22701352757544785, nan]}
{'': [0.21572644051372908, 0.21530180699730792], 'false': [0.21530180699730792, nan]}
{'': [0.23437500000000291, 0.22145065398335245], 'false': [0.22145065398335245, nan]}
{'': [0.23756534340872912, 0.21453870804520037], 'true': [0.23756534340872912, nan]}
{'': [0.21742936171702706, 0.22067930193282081], 'true': [0.21742936171702706, nan]}
{'': [0.22574686652768008, nan]}
{'': [0.22331864091285808, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 178.121
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), tweets(A, E) )
%   | then return 0.15576798271856132;  // std dev = 0.457, 252.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=75 */
%   | else if ( follows(F, A) )
%   | | then return 0.24797944357408774;  // std dev = 0.488, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | else return 0.15814893509951156;  // std dev = 0.458, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( follows(A, G) )
%   | then if ( tweets(A, H) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( follows(I, A), tweets(A, J) )
%   | | then if ( follows(I, K), follows(K, A) )
%   | | | then return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(L, A) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(A, D) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then if ( follows(D, A), follows(E, D) )
%   | | | then return 0.22062973306715528;  // std dev = 5.263, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | | else return 0.17964198917703822;  // std dev = 3.799, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else if ( follows(C, A), follows(D, A) )
%   | | | then return 0.5881099664528215;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2629906673478666;  // std dev = 3.861, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | else if ( tweets(A, F), follows(C, A) )
%   | | then return 0.0860749366111102;  // std dev = 0.439, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( follows(C, G), follows(G, C) )
%   | | | then return 0.23666831848171174;  // std dev = 3.285, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.1887982935810174;  // std dev = 2.236, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   else if ( tweets(A, H) )
%   | then return 0.13950736669553937;  // std dev = 0.461, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else return 0.2140208778816595;  // std dev = 0.485, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F), tweets(A, G) )
%   | | | then return 0.13249754596011235;  // std dev = 6.660, 201.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=66 */
%   | | | else return 0.08542626877396672;  // std dev = 4.043, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.14966755654485858;  // std dev = 3.239, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.38571020687210256;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.13654157093069486;  // std dev = 3.720, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.18377698068977508;  // std dev = 4.090, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then return 0.10058198869392732;  // std dev = 0.466, 280.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=89 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.1390540317773848;  // std dev = 3.209, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.08872575696762439;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, H) )
%   | then if ( follows(H, I), follows(A, I) )
%   | | then if ( follows(I, J) )
%   | | | then return 0.0843874110491565;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.2676489962203705;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(H, K), tweets(A, L) )
%   | | | then return 0.15147972673669632;  // std dev = 2.510, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.20746460398835878;  // std dev = 2.478, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else return 0.09707392220951049;  // std dev = 0.468, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E), tweets(A, F) )
%   | then return 0.07558129197369967;  // std dev = 0.465, 243.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=76 */
%   | else if ( tweets(A, G) )
%   | | then return 0.1795037861485195;  // std dev = 0.492, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.14870716652436364;  // std dev = 2.923, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.11192913985080036;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( follows(I, D) )
%   | then if ( tweets(A, J), follows(A, K) )
%   | | then if ( follows(K, L), tweets(K, J) )
%   | | | then return 0.11846258929546506;  // std dev = 3.391, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.2927052125383881;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( follows(A, M) )
%   | | | then return 0.05172536835688163;  // std dev = 3.323, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.09974357052842492;  // std dev = 2.686, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(A, D) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.10036939142385438;  // std dev = 6.201, 169.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=59 */
%   | | | else return 0.022611057638050002;  // std dev = 2.585, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return 0.06699854121687027;  // std dev = 3.641, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.14221489707677062;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.012358099839015965;  // std dev = 0.459, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else if ( follows(I, J) )
%   | then if ( follows(A, K), tweets(A, L) )
%   | | then return 0.01827725730701268;  // std dev = 0.462, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | else if ( tweets(A, M) )
%   | | | then return 0.31754373993299445;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.12113705181028489;  // std dev = 3.741, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.060021356370281775;  // std dev = 0.471, 326.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( tweets(E, G), tweets(A, G) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.13566789891296155;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.07354405292395198;  // std dev = 2.561, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return 0.02262208158822722;  // std dev = 0.466, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.10620731953003715;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04508897994510746;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.21888726424291027;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11907339087474812;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), follows(E, A) )
%   | | | then return 0.09230171183186882;  // std dev = 5.647, 136.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=51 */
%   | | | else return 0.04676059124116483;  // std dev = 5.088, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | else return -0.033530546109501194;  // std dev = 0.449, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, G) )
%   | then if ( follows(A, H), follows(G, H) )
%   | | then if ( tweets(A, I) )
%   | | | then return -0.0322287149048515;  // std dev = 2.583, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.09001017171987669;  // std dev = 2.076, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( follows(G, J), tweets(A, K) )
%   | | | then return 0.1670521470900597;  // std dev = 2.328, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.10869005927314163;  // std dev = 2.495, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else return -0.02460314515803811;  // std dev = 0.457, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E) )
%   | then if ( follows(A, F), follows(F, G) )
%   | | then if ( follows(A, G), follows(G, F) )
%   | | | then return 0.04793175312009193;  // std dev = 6.554, 192.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=65 */
%   | | | else return -0.020372640113301557;  // std dev = 4.518, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | else if ( follows(H, A), tweets(H, E) )
%   | | | then return 0.012691110410589714;  // std dev = 3.235, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.009103476611001035;  // std dev = 2.107, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.05331856442568352;  // std dev = 3.013, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.1677511959539582;  // std dev = 1.430, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.058463874555573926;  // std dev = 3.129, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.020708937268874416;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then if ( follows(E, G), follows(F, G) )
%   | | | then return 0.054094868661644833;  // std dev = 6.696, 195.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=70 */
%   | | | else return -0.0888766526887034;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(E, H), follows(A, H) )
%   | | | then return 0.22465577171406706;  // std dev = 2.299, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.1218279319126461;  // std dev = 3.895, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), tweets(A, K) )
%   | | | then return -0.04113366530348091;  // std dev = 2.596, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.04095802208925844;  // std dev = 3.886, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | else if ( tweets(A, L), follows(A, M) )
%   | | | then return -0.19833590342097596;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.023501786972621213;  // std dev = 3.009, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7', 'minutes', 'and', '1.652', 'seconds']
Refined model CLL: -0.394426


******************************************
Best model found
******************************************
Results 

CLL : -0.36417 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 178.121 

Total Inference Time : 735.0739917755127 

Total revision time: 949.5444647865295
Best scored revision CLL: -0.359646


Results 

CLL : -0.36417 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 949.6254140930175 

Total Inference Time : 735.0739917755127 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 6.274
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.475, 368.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.466, 395.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.19685861251886377;  // std dev = 8.333, 310.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=105 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23314893509951187;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.1565310536203395;  // std dev = 8.425, 324.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16066757255144187;  // std dev = 0.471, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.14493947161531315;  // std dev = 8.353, 313.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=105 */
%   else if ( follows(E, D) )
%   | then return 0.09083451511644013;  // std dev = 3.868, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.10721696955215712;  // std dev = 8.443, 327.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=105 */
%   else if ( follows(D, E) )
%   | then return 0.10658867494946161;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.0847572366502573;  // std dev = 0.465, 331.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07442735140780585;  // std dev = 0.460, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.07917535816244937;  // std dev = 0.469, 321.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0748194613247892;  // std dev = 0.466, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.09069282693668593;  // std dev = 0.478, 357.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.021642011757335697;  // std dev = 9.380, 418.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.570', 'seconds']
Parameter learned model CLL:-0.341722 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.333, 205, 105], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.623, 35, 21], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.425, 219, 105], 'true,false': [0.0, 0, 0], 'false': [0.471, 42, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.353, 208, 105], 'false,true': [3.868, 52, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.443, 222, 105], 'false,true': [3.784, 45, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.465, 226, 105], 'true,false': [0.0, 0, 0], 'false': [0.46, 48, 21]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.469, 216, 105], 'true,false': [0.0, 0, 0], 'false': [0.466, 45, 21]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.478, 231, 126], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [9.38, 292, 126], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.2257457672668665, nan], 'true': [0.22398543184183364, 0.234375], 'true,false': [nan, 0.234375]}
{'': [0.21905006858710838, 0.22222222222222218], 'true': [0.21905006858710838, nan]}
{'': [0.22292766079066006, 0.20491649465190478], 'false': [0.20491649465190478, nan]}
{'': [0.2179951182560361, 0.21694214876033055], 'false': [0.21694214876033055, nan]}
{'': [0.21659167039366406, 0.21172022684309985], 'true': [0.21659167039366406, nan]}
{'': [0.22010655952485184, 0.21694214876033047], 'true': [0.22010655952485184, nan]}
{'': [0.22851519188374406, nan]}
{'': [0.2104739273090964, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 161.971
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, E), follows(E, A) )
%   | then if ( tweets(C, F), follows(C, A) )
%   | | then if ( follows(E, C), follows(A, E) )
%   | | | then return 0.1869160583871839;  // std dev = 5.676, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
%   | | | else return 0.25814893509951226;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.14386322081379807;  // std dev = 0.452, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else return 0.14564893509951235;  // std dev = 0.453, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   else if ( follows(G, A) )
%   | then if ( follows(H, G), follows(A, H) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( follows(A, I), follows(G, I) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2285193054698827;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else return 0.16849376268571928;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, D), tweets(C, E) )
%   | then if ( follows(D, A), tweets(D, F) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.17115562816640134;  // std dev = 5.636, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
%   | | | else return 0.13756630015275143;  // std dev = 2.641, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( follows(D, A), follows(C, D) )
%   | | | then return 0.33447330169604017;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.17672173360035698;  // std dev = 3.445, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | else if ( tweets(A, G), follows(A, C) )
%   | | then if ( tweets(C, G) )
%   | | | then return 0.29859445973534576;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.5061449091749651;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, C), tweets(D, H) )
%   | | | then return 0.1033543056658568;  // std dev = 1.452, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2236512211090073;  // std dev = 2.799, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   else return 0.11323729499329689;  // std dev = 0.446, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( tweets(F, E) )
%   | | | then return 0.13073970925327774;  // std dev = 7.167, 234.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=76 */
%   | | | else return -0.07415022187981064;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( follows(A, G), follows(G, A) )
%   | | | then return 0.11882610875852521;  // std dev = 3.607, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.09858559624624649;  // std dev = 2.496, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( follows(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.10482064186111248;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.13393263790346308;  // std dev = 2.623, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(F, A), follows(G, F) )
%   | | | then return 0.1428736324740625;  // std dev = 7.338, 234.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=84 */
%   | | | else return -0.05331792102768527;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.1035161426322693;  // std dev = 3.600, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.06823078608748723;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, I) )
%   | then if ( follows(A, J), follows(J, K) )
%   | | then return 0.09359425035785678;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0.13665428674523017;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( follows(A, L), follows(L, M) )
%   | | then return 0.30430926148884313;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.19968652688833685;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E) )
%   | then if ( follows(E, F), follows(A, F) )
%   | | then if ( follows(F, E) )
%   | | | then return 0.09483304006902732;  // std dev = 7.271, 239.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=79 */
%   | | | else return 0.2971287286837546;  // std dev = 1.884, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0.016833502286402624;  // std dev = 0.445, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else return 0.19589623818112992;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else if ( follows(G, D) )
%   | then if ( tweets(A, H) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.12626675387297256;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.18083292179291585;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return -0.01726220238034066;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11872399241215069;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( tweets(A, F), follows(E, A) )
%   | | | then return 0.10125416117325771;  // std dev = 5.713, 142.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=51 */
%   | | | else return 0.05250030267201042;  // std dev = 4.270, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | else return 0.01789304701767434;  // std dev = 0.458, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | else return -0.007217971844614664;  // std dev = 0.440, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   else if ( follows(G, H) )
%   | then if ( tweets(A, I) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.11926114704681406;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.0016759189817069954;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(A, L), follows(L, M) )
%   | | | then return 0.2551741496149982;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.14382134099497634;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( tweets(E, F) )
%   | | | then return 0.06227937603936634;  // std dev = 7.705, 267.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=89 */
%   | | | else return -0.10161462476625724;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.3723437487493244;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04076556986112393;  // std dev = 2.473, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, I), follows(I, J) )
%   | then if ( tweets(A, K) )
%   | | then return 0.06972965665334091;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else return 0.2050009660978442;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(A, L) )
%   | | then return 0.056331891787636076;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.0488040399106794;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( tweets(E, F) )
%   | | | then return 0.08834843169025924;  // std dev = 7.472, 240.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=89 */
%   | | | else return -0.06719693442242726;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.045078129755461306;  // std dev = 0.439, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( tweets(A, I) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.2364195417529693;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11141954175296931;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( follows(A, H) )
%   | | | then return -0.006009055420249987;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05362810303929762;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.024008768192493167;  // std dev = 0.436, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A) )
%   | then if ( follows(A, E), tweets(E, F) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.05563679445300547;  // std dev = 6.585, 188.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=68 */
%   | | | else return 0.027763103253182226;  // std dev = 3.791, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | else if ( tweets(A, G), follows(H, E) )
%   | | | then return 0.0709762186750818;  // std dev = 2.875, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.42562602920409254;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.12036213245829401;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03300880836506383;  // std dev = 2.415, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.10614469353101312;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.06333739947400394;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), follows(A, E) )
%   | then if ( tweets(A, F) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.00685124063626962;  // std dev = 6.073, 167.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=55 */
%   | | | else return 0.05986509575755795;  // std dev = 3.291, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( tweets(E, H) )
%   | | | then return 0.08945475423863924;  // std dev = 3.344, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return -0.1407124962304072;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), tweets(A, K) )
%   | | | then return -0.08572835563148828;  // std dev = 2.278, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.020457578739028714;  // std dev = 2.464, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( follows(L, A), follows(A, M) )
%   | | | then return -0.05335327060643076;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -5.115484798327438E-4;  // std dev = 3.562, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8', 'minutes', 'and', '55.820', 'seconds']
Refined model CLL: -0.386653


******************************************
Best model found
******************************************
Results 

CLL : -0.339243 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 161.971 

Total Inference Time : 411.4811270236969 

Total revision time: 598.45171916008
Best scored revision CLL: -0.341722


Results 

CLL : -0.339243 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 598.5547887039185 

Total Inference Time : 411.4811270236969 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 7.655
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.469, 478.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.21224729575524617;  // std dev = 8.352, 305.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=108 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16782635445435126;  // std dev = 5.756, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.18673533290598582;  // std dev = 8.337, 303.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2056979581130434;  // std dev = 0.483, 130.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.11538875865492369;  // std dev = 8.613, 345.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=108 */
%   else if ( follows(E, D) )
%   | then return 0.14437976204293726;  // std dev = 5.637, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.09644984577467079;  // std dev = 8.613, 345.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=108 */
%   else if ( follows(D, E) )
%   | then return 0.12566348093863972;  // std dev = 5.616, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.09486163237391919;  // std dev = 0.470, 329.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11362504363078008;  // std dev = 0.478, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.06684085296844529;  // std dev = 0.466, 340.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08975629612921229;  // std dev = 0.477, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.06433837223968929;  // std dev = 0.471, 470.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.06404704169748551;  // std dev = 10.105, 453.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.600', 'seconds']
Parameter learned model CLL:-0.353728 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.352, 197, 108], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.756, 107, 48], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.337, 195, 108], 'true,false': [0.0, 0, 0], 'false': [0.483, 82, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.613, 237, 108], 'false,true': [5.637, 94, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.613, 237, 108], 'false,true': [5.616, 92, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.47, 221, 108], 'true,false': [0.0, 0, 0], 'false': [0.478, 88, 48]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.466, 232, 108], 'true,false': [0.0, 0, 0], 'false': [0.477, 89, 48]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.471, 314, 156], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [10.105, 297, 156], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22412098298677055, nan], 'true': [0.2287127116366593, 0.21377731529656693], 'true,false': [nan, 0.21377731529656693]}
{'': [0.229389275561219, 0.232899408284023], 'true': [0.229389275561219, nan]}
{'': [0.21504725897920515, 0.22376512596707077], 'false': [0.22376512596707077, nan]}
{'': [0.2150472589792071, 0.22530612244897913], 'false': [0.22530612244897913, nan]}
{'': [0.22050794061399676, 0.22837370242214458], 'true': [0.22050794061399676, nan]}
{'': [0.21674740484429075, 0.22760935585273595], 'true': [0.21674740484429075, nan]}
{'': [0.2214452815621926, nan]}
{'': [0.22542480733659134, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 194.657
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D), follows(C, E) )
%   | then if ( follows(E, A), follows(E, C) )
%   | | then if ( tweets(C, F), tweets(E, F) )
%   | | | then return 0.15323090231262784;  // std dev = 6.170, 183.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=54 */
%   | | | else return 0.08037115732173443;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( follows(C, A) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.15444523139580787;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | else return 0.13814893509951115;  // std dev = 0.449, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   else if ( follows(G, A) )
%   | then if ( tweets(A, H) )
%   | | then if ( follows(G, I), follows(I, A) )
%   | | | then return 0.1914822684328457;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.17243464938522662;  // std dev = 0.464, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.14271804813913652;  // std dev = 0.461, 219.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=67 */
%   | else return 0.18457529583002089;  // std dev = 0.477, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   else if ( follows(A, E), tweets(A, F) )
%   | then if ( follows(E, G), tweets(E, F) )
%   | | then if ( follows(G, E) )
%   | | | then return 0.308877594572744;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.5049560259452935;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.08993708733917753;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return 0.15866814820784614;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.18664017617987408;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1691691765222244;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.24760054907124432;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), follows(E, A) )
%   | | | then return 0.20445567700464937;  // std dev = 5.592, 132.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=51 */
%   | | | else return 0.13869942452216813;  // std dev = 5.038, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.1760911564052721;  // std dev = 3.192, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.5423373954231904;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, I) )
%   | | | then return 0.1998109593543967;  // std dev = 3.865, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | | else return 0.10059484965089603;  // std dev = 4.045, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E), follows(A, F) )
%   | | then if ( follows(G, A), follows(G, F) )
%   | | | then return 0.1403713544417712;  // std dev = 6.575, 189.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=67 */
%   | | | else return 0.30132152963220005;  // std dev = 2.063, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return 0.07004886818155547;  // std dev = 0.457, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.08483046710097823;  // std dev = 2.456, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.15329496671240125;  // std dev = 2.704, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.06449674994938016;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( follows(A, K) )
%   | | then return 0.1408326655197216;  // std dev = 0.474, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else return 0.15076356184236292;  // std dev = 0.482, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E), follows(E, F) )
%   | then if ( follows(F, A), follows(E, A) )
%   | | then if ( tweets(E, G), tweets(F, G) )
%   | | | then return 0.08368767949662773;  // std dev = 5.711, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
%   | | | else return -0.002043058098801206;  // std dev = 1.516, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( follows(F, A), tweets(A, H) )
%   | | | then return 0.23351791300692004;  // std dev = 2.909, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.09141129510998884;  // std dev = 3.821, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | else if ( follows(A, I) )
%   | | then return -0.044029402719192354;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.08950808572635147;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.025455763736705807;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( follows(K, D) )
%   | then return 0.05688637694979972;  // std dev = 0.460, 159.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(D, A), follows(A, D) )
%   | then return 0.07182168405122039;  // std dev = 0.474, 245.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=82 */
%   | else if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F), tweets(A, G) )
%   | | | then return 0.41056877046072576;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.18160494942564645;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.10088575909439676;  // std dev = 3.234, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return -0.019892812309943046;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( follows(I, J) )
%   | then if ( tweets(A, K) )
%   | | then return 0.06300857963046418;  // std dev = 0.467, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.18794225161251832;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.09492387712224211;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(A, F), follows(A, E) )
%   | | | then return 0.09626839005494012;  // std dev = 6.601, 188.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=69 */
%   | | | else return 0.04136585047442087;  // std dev = 4.998, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
%   | | else return -0.06788321882664074;  // std dev = 0.437, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, G), follows(A, H) )
%   | then return -0.0310796342861068;  // std dev = 0.436, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(I, J), follows(A, J) )
%   | | | then return 0.06770687330376675;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.157452844054259;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.24539358680487888;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.030819863421051676;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(E, G), follows(A, G) )
%   | | | then return 0.04395164869441492;  // std dev = 6.591, 193.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=66 */
%   | | | else return -0.06136439611963081;  // std dev = 2.745, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( follows(A, H), follows(H, A) )
%   | | | then return 0.045074839969284915;  // std dev = 3.107, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.08927791583249595;  // std dev = 3.361, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, I) )
%   | then if ( tweets(A, J), follows(I, K) )
%   | | then return -0.005306950315703211;  // std dev = 0.448, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( follows(I, L) )
%   | | | then return 0.10846839496317522;  // std dev = 2.901, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.17398637858156868;  // std dev = 1.484, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.026434317485182428;  // std dev = 0.440, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E), follows(F, A) )
%   | then if ( follows(G, F), tweets(F, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.036519008077981446;  // std dev = 6.638, 196.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=67 */
%   | | | else return -0.047846287609481786;  // std dev = 3.768, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | else if ( follows(A, F) )
%   | | | then return 0.03672359560620734;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.45007505521317975;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( follows(A, H), follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.13828066226300317;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.17919371924065017;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.027016277462267937;  // std dev = 4.798, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return 0.12833052827890448;  // std dev = 3.219, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E) )
%   | then if ( follows(A, F), follows(G, A) )
%   | | then if ( follows(H, G), follows(H, A) )
%   | | | then return 0.05726717433540584;  // std dev = 5.429, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
%   | | | else return -0.02018964653881365;  // std dev = 4.539, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.07120210400263284;  // std dev = 3.659, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.10027210169145394;  // std dev = 3.316, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(K, A) )
%   | | | then return 0.06001118626683033;  // std dev = 2.640, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.029964614732822577;  // std dev = 3.434, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | else if ( follows(L, A) )
%   | | | then return -0.10062514553534287;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.023907944476882124;  // std dev = 2.525, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24', 'minutes', 'and', '21.487', 'seconds']
Refined model CLL: -0.389157


******************************************
Best model found
******************************************
Results 

CLL : -0.351974 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 194.657 

Total Inference Time : 1885.3968408107758 

Total revision time: 2115.1233570213317
Best scored revision CLL: -0.353728


Results 

CLL : -0.351974 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2115.22642656517 

Total Inference Time : 1885.3968408107758 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 6.319
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.477, 359.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.473, 374.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.19148226843284236;  // std dev = 8.367, 315.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=105 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23314893509951187;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.1927945323274406;  // std dev = 8.200, 292.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15545923921810856;  // std dev = 0.470, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.12478902453094798;  // std dev = 8.449, 328.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=105 */
%   else if ( follows(E, D) )
%   | then return 0.1539853782718003;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.10938266534781135;  // std dev = 8.418, 323.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=105 */
%   else if ( follows(D, E) )
%   | then return 0.04781008829870277;  // std dev = 3.917, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.07959791207802833;  // std dev = 0.464, 334.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08840933983193504;  // std dev = 0.466, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.10179654045345284;  // std dev = 0.477, 299.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034208829949209596;  // std dev = 0.449, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.05859012664842415;  // std dev = 0.468, 388.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.04015859981463999;  // std dev = 9.274, 396.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.808', 'seconds']
Parameter learned model CLL:-0.343796 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.367, 210, 105], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.623, 35, 21], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.2, 187, 105], 'true,false': [0.0, 0, 0], 'false': [0.47, 43, 21]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.449, 223, 105], 'false,true': [3.695, 39, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.418, 218, 105], 'false,true': [3.917, 57, 21], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.464, 229, 105], 'true,false': [0.0, 0, 0], 'false': [0.466, 45, 21]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.477, 194, 105], 'true,false': [0.0, 0, 0], 'false': [0.449, 54, 21]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.468, 262, 126], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [9.274, 270, 126], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.22427910288359118, nan], 'true': [0.22222222222222435, 0.234375], 'true,false': [nan, 0.234375]}
{'': [0.23028476261962674, 0.22045898437499997], 'true': [0.23028476261962674, nan]}
{'': [0.217643887566924, 0.22749999999999973], 'false': [0.22749999999999973, nan]}
{'': [0.219402083792616, 0.19674556213017697], 'false': [0.19674556213017697, nan]}
{'': [0.21554196995230784, 0.21694214876033013], 'true': [0.21554196995230784, nan]}
{'': [0.22784980033780222, 0.20159999999999934], 'true': [0.22784980033780222, nan]}
{'': [0.2193419087095205, nan]}
{'': [0.21717293945960542, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 250.138
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(E, C), follows(E, A) )
%   | then if ( tweets(E, D), follows(C, E) )
%   | | then return 0.18787866482924337;  // std dev = 0.470, 185.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=61 */
%   | | else if ( follows(C, E) )
%   | | | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0.13165320860378457;  // std dev = 0.446, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   else if ( tweets(A, F) )
%   | then if ( follows(A, G), follows(G, H) )
%   | | then if ( tweets(G, F), follows(A, H) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.22178529873587596;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.35814893509951234;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then return 0.18208042450327333;  // std dev = 0.477, 194.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=68 */
%   | else return 0.12064169922551504;  // std dev = 0.452, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   else if ( follows(E, A), follows(F, E) )
%   | then if ( follows(A, G), tweets(A, H) )
%   | | then return 0.4127838524741703;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(F, A) )
%   | | | then return 0.2547583292208678;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.1746886143789322;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(J, I), follows(A, J) )
%   | | | then return 0.45946085024371547;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16042015439326246;  // std dev = 2.578, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.19258789115538322;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.20874113578563494;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( tweets(E, G), follows(E, A) )
%   | | | then return 0.13400064419426533;  // std dev = 7.749, 271.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=89 */
%   | | | else return 0.06035761386953047;  // std dev = 2.274, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else return 0.22227655082499015;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( follows(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.11923402694012619;  // std dev = 2.703, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.2405127616833873;  // std dev = 2.330, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then return 0.12276170247230127;  // std dev = 0.472, 285.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=96 */
%   | | else return 0.06513251993501834;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, G) )
%   | then if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return -0.03224713055055105;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2007851740588928;  // std dev = 1.842, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.09195068004150038;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( follows(A, J), follows(J, K) )
%   | | then if ( follows(A, K) )
%   | | | then return 0.05050755604359359;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30050755604359364;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04539007990548778;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( tweets(A, E) )
%   | then if ( tweets(F, E), follows(F, A) )
%   | | then if ( follows(A, G), follows(F, G) )
%   | | | then return 0.1222027700148856;  // std dev = 6.487, 183.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=66 */
%   | | | else return 0.060237854236570215;  // std dev = 3.220, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return 0.2234719326201678;  // std dev = 0.496, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.18564838224446148;  // std dev = 0.489, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   else if ( follows(H, D) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(A, K), tweets(I, K) )
%   | | | then return 0.039924759691619745;  // std dev = 2.177, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.15928210423621203;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.008048556579860085;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.020553154047482165;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( tweets(A, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), tweets(E, D) )
%   | | | then return 0.0555872889748034;  // std dev = 6.503, 194.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=62 */
%   | | | else return 0.14680273303366387;  // std dev = 2.903, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else if ( follows(A, G) )
%   | | | then return -0.03742647448297609;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04065688984072248;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else return 0.12895408643081707;  // std dev = 0.491, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   else if ( follows(H, I) )
%   | then return 0.06239806238798651;  // std dev = 0.472, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then return 0.037369959651972484;  // std dev = 0.465, 289.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=91 */
%   | | else if ( follows(A, F), follows(F, G) )
%   | | | then return 0.34462990764151924;  // std dev = 1.345, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1530505650057099;  // std dev = 2.267, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, H), follows(H, I) )
%   | then if ( tweets(A, J), tweets(H, J) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return -0.04763386653315259;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2687331030866328;  // std dev = 1.480, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.038792465237845256;  // std dev = 0.435, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( tweets(A, K) )
%   | | then return 0.09128330971902031;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.13212048876788016;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, E), follows(E, A) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.04975621716941119;  // std dev = 7.167, 230.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=77 */
%   | | | else return -0.012298082405697772;  // std dev = 3.194, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else return -0.04444375271569601;  // std dev = 0.455, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(A, H), follows(H, G) )
%   | | then return -0.07284795205849161;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, H) )
%   | | | then return 0.04714252933839084;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06995908616989557;  // std dev = 2.069, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( tweets(A, I) )
%   | | then return 0.15363034004485818;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.050273692506537744;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), follows(F, E) )
%   | then if ( tweets(A, G), follows(A, E) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.03469607301106982;  // std dev = 6.468, 190.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=62 */
%   | | | else return 0.11824654620003212;  // std dev = 2.431, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( follows(A, H), tweets(A, I) )
%   | | | then return 0.3182689670438867;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11141502970378453;  // std dev = 4.053, 68.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=28 */
%   | else if ( tweets(A, J) )
%   | | then if ( follows(K, A) )
%   | | | then return -0.11959890923006347;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.01021995642559394;  // std dev = 2.795, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( follows(A, L), follows(L, M) )
%   | | | then return -0.014821720049969445;  // std dev = 1.486, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.06311864673193333;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(A, E), follows(E, A) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( tweets(E, G), tweets(F, H) )
%   | | | then return 0.05991254421450434;  // std dev = 7.093, 217.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=79 */
%   | | | else return -0.04862893659444274;  // std dev = 1.701, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( tweets(A, I), tweets(E, I) )
%   | | | then return -0.06582175029326276;  // std dev = 1.945, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.19621338147261178;  // std dev = 1.219, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( follows(J, A), follows(K, J) )
%   | | then if ( follows(A, L), follows(K, L) )
%   | | | then return -0.10081073190841829;  // std dev = 1.661, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.012485567748335256;  // std dev = 2.477, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( tweets(A, M) )
%   | | | then return 0.021974655457512097;  // std dev = 2.903, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.0010453101829719215;  // std dev = 2.498, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32', 'minutes', 'and', '44.097', 'seconds']
Refined model CLL: -0.395728


******************************************
Best model found
******************************************
Results 

CLL : -0.339105 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 250.138 

Total Inference Time : 1982.8672277927399 

Total revision time: 2257.190908176422
Best scored revision CLL: -0.343796


Results 

CLL : -0.339105 

AUC ROC : 0.5 

AUC PR : 0.006289 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2257.2981355018615 

Total Inference Time : 1982.8672277927399 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
0;true;economicsectorcompany(B, C).;false;false
0;false;acquired(E, A).;true;true
0;false,true;acquired(F, E).;true;true
0;false,true,true;economicsectorcompany(B, F).;false;false
0;false,true,false;economicsectorcompany(B, E).;false;false
0;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
0;false,false,false;companyalsoknownas(A, H), countryhascompanyoffice(I, H).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;acquired(C, E), economicsectorcompany(B, E).;false;true
1;true,false,false;companyalsoknownas(A, A).;false;false
1;false;acquired(F, A), economicsectorcompany(B, F).;false;true
1;false,false;companyalsoknownas(A, G).;true;true
1;false,false,true;companyalsoknownas(G, H), economicsectorcompany(B, H).;false;false
1;false,false,false;acquired(I, A), companyceo(I, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C), cityhascompanyoffice(D, C).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A).;false;true
2;true,false,false;cityhascompanyoffice(E, A).;false;false
2;false;cityhascompanyoffice(F, A).;true;true
2;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;false;false
2;false,false;bankboughtbank(H, A), bankboughtbank(A, I).;false;true
2;false,false,false;acquired(J, A).;false;false
3;;companyeconomicsector(A, B) :- bankchiefexecutiveceo(A, C), countryhascompanyoffice(D, A).;true;true
3;true;companyceo(E, C), economicsectorcompany(B, E).;false;true
3;true,false;companyceo(A, C).;false;true
3;true,false,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;false;false
3;false;cityhascompanyoffice(G, A).;true;true
3;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
3;false,false;countryhascompanyoffice(I, A), bankbankincountry(J, I).;true;false
3;false,false,true;countryhascompanyoffice(I, K), economicsectorcompany(B, K).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
4;true,false,false;companyceo(C, E), cityhascompanyoffice(F, C).;false;false
4;false;cityhascompanyoffice(G, A).;false;true
4;false,false;acquired(A, H).;true;true
4;false,false,true;companyceo(H, I), acquired(H, J).;false;false
4;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(C, D).;true;true
5;true;cityhascompanyoffice(E, A).;false;true
5;true,false;cityhascompanyoffice(F, C), companyceo(A, G).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;cityhascompanyoffice(H, A).;false;true
5;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
5;false,false,true;bankboughtbank(I, K), economicsectorcompany(B, K).;false;false
5;false,false,false;companyceo(A, L), companyalsoknownas(A, M).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;bankchiefexecutiveceo(D, E).;false;false
6;false;acquired(A, F).;true;true
6;false,true;bankboughtbank(G, F), economicsectorcompany(B, G).;false;true
6;false,true,false;economicsectorcompany(B, F).;false;false
6;false,false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false,false;acquired(I, A).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;true;companyceo(A, D).;false;true
7;true,false;cityhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
7;true,false,true;acquired(F, A).;false;false
7;false;acquired(G, A), economicsectorcompany(B, G).;false;true
7;false,false;acquired(H, A), companyceo(H, I).;true;true
7;false,false,true;acquired(J, H), companyalsoknownas(J, K).;false;false
7;false,false,false;acquired(A, L).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,true;companyalsoknownas(D, F).;true;true
8;false,true,true;economicsectorcompany(B, F).;false;false
8;false,true,false;acquired(G, D), companyalsoknownas(G, H).;false;false
8;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;companyceo(A, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C), acquired(C, D).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;companyalsoknownas(D, E).;false;false
9;false;bankboughtbank(F, A), bankboughtbank(G, F).;true;true
9;false,true;bankboughtbank(A, H).;false;false
9;false,false;countryhascompanyoffice(I, A), acquired(J, A).;true;true
9;false,false,true;cityhascompanyoffice(K, J).;false;false
9;false,false,false;cityhascompanyoffice(L, A).;false;false


Model training time 8.734
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.468, 482.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   return 0;  // std dev = 0.476, 450.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then return 0.20430278125335463;  // std dev = 8.403, 312.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=108 */
%   | else if ( follows(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1600357275523427;  // std dev = 5.789, 159.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=48 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.16474948602180636;  // std dev = 8.485, 324.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18038721876384173;  // std dev = 0.475, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then return 0.11828813363663258;  // std dev = 8.625, 347.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=108 */
%   else if ( follows(E, D) )
%   | then return 0.14480131105964494;  // std dev = 5.657, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then return 0.08963384038066748;  // std dev = 8.684, 358.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=108 */
%   else if ( follows(D, E) )
%   | then return 0.10410068679358905;  // std dev = 5.731, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.09307036582447599;  // std dev = 0.467, 337.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10844653961699839;  // std dev = 0.473, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then return 0.07630544436350098;  // std dev = 0.467, 337.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09600117049893912;  // std dev = 0.475, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.07776746416259867;  // std dev = 0.473, 460.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then return 0.05295783704629148;  // std dev = 10.229, 473.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.232', 'seconds']
Parameter learned model CLL:-0.344514 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {}, {}]
['accounttype(A, B)', {'': 'follows(C, D)', 'true': 'follows(C, A)', 'true,false': 'follows(E, A)'}, {'true,true': [8.403, 204, 108], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.789, 111, 48], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [8.485, 216, 108], 'true,false': [0.0, 0, 0], 'false': [0.475, 92, 48]}]
['accounttype(A, B)', {'': 'follows(C, A), follows(C, D)', 'false': 'follows(E, D)'}, {'true': [8.625, 239, 108], 'false,true': [5.657, 96, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'false': 'follows(D, E)'}, {'true': [8.684, 250, 108], 'false,true': [5.731, 104, 48], 'false,false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.467, 229, 108], 'true,false': [0.0, 0, 0], 'false': [0.473, 94, 48]}]
['accounttype(A, B)', {'': 'follows(C, A)', 'true': 'follows(C, D)'}, {'true,true': [0.467, 229, 108], 'true,false': [0.0, 0, 0], 'false': [0.475, 91, 48]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [0.473, 304, 156], 'false': [0.0, 0, 0]}]
['accounttype(A, B)', {'': 'follows(C, D)'}, {'true': [10.229, 317, 156], 'false': [0.0, 0, 0]}]
{}
{}
{'': [0.221510000405699, nan], 'true': [0.22633136094674802, 0.2107511569953729], 'true,false': [nan, 0.2107511569953729]}
{'': [0.22222222222222368, 0.22530612244898188], 'true': [0.22222222222222368, nan]}
{'': [0.21436935777226043, 0.22222222222222207], 'false': [0.22222222222222207, nan]}
{'': [0.21066758216035333, 0.21606648199446013], 'false': [0.21606648199446013, nan]}
{'': [0.21777069446768554, 0.22376512596707027], 'true': [0.21777069446768554, nan]}
{'': [0.21777069446768485, 0.22607525490399022], 'true': [0.21777069446768485, nan]}
{'': [0.22414527856280447, nan]}
{'': [0.22119433608600936, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
2;;accounttype(A, B) :- follows(C, D).;true;true
2;true;follows(C, A).;true;true
2;true,false;follows(E, A).;true;true
3;;accounttype(A, B) :- follows(C, A).;true;true
3;true;follows(C, D).;true;true
4;;accounttype(A, B) :- follows(C, A), follows(C, D).;true;true
4;false;follows(E, D).;true;true
5;;accounttype(A, B) :- follows(C, A).;true;true
5;false;follows(D, E).;true;true
6;;accounttype(A, B) :- follows(C, A).;true;true
6;true;follows(C, D).;true;true
7;;accounttype(A, B) :- follows(C, A).;true;true
7;true;follows(C, D).;true;true
8;;accounttype(A, B) :- follows(C, D).;true;true
9;;accounttype(A, B) :- follows(C, D).;true;true


Refining candidate
***************************
Model training time 246.722
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( follows(D, A), follows(D, C) )
%   | | then if ( tweets(A, E) )
%   | | | then return 0.19148226843284427;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | | else return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( follows(D, F), follows(F, C) )
%   | | | then return 0.26074633769691363;  // std dev = 4.303, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.11621345122854462;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( tweets(A, G), follows(A, H) )
%   | then return 0.11478610324110418;  // std dev = 0.437, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | else if ( follows(A, I) )
%   | | then if ( follows(I, J) )
%   | | | then return 0.1914822684328457;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14680872891394417;  // std dev = 0.453, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), follows(D, C) )
%   | then return 0.1485688217564215;  // std dev = 0.467, 253.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=81 */
%   | else if ( follows(A, E), follows(C, E) )
%   | | then return 0.24414188309078452;  // std dev = 0.491, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else return 0.13937512759682336;  // std dev = 0.460, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.2586767322149436;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.1726552268385991;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.1726552268385991;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23932189350526575;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, I) )
%   | | then return 0.1726552268385991;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.17265522683859938;  // std dev = 0.471, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(C, A) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.12557095195856458;  // std dev = 5.902, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
%   | | | else return 0.16257229852861127;  // std dev = 4.464, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return 0.20774365448167723;  // std dev = 3.801, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | | else return 0.07297648848001444;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( follows(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.1870000924184522;  // std dev = 4.540, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | | else return 0.08923093625555774;  // std dev = 3.279, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( tweets(A, G), follows(F, A) )
%   | | | then return 0.10146227765583547;  // std dev = 6.346, 186.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=59 */
%   | | | else return 0.14188813771120484;  // std dev = 5.482, 129.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=47 */
%   | | else return 0.012093134359920257;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.25168814478941554;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.15271374457158995;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.09672758902983067;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16443687810835425;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.0581061347382144;  // std dev = 0.447, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(C, D) )
%   then if ( follows(A, E), follows(E, A) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( follows(F, G), follows(G, E) )
%   | | | then return 0.11386809580707238;  // std dev = 6.838, 206.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=72 */
%   | | | else return -0.05530637503664178;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, H), follows(H, E) )
%   | | | then return -0.04320563912116097;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2755554823722955;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), follows(J, I) )
%   | | | then return 0.4328731333953821;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16791040183025424;  // std dev = 1.750, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.10593469090746077;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.12540222760774752;  // std dev = 3.254, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   else return 0.09411593748185243;  // std dev = 0.471, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, A) )
%   | then return 0.052176066080672275;  // std dev = 0.463, 263.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=82 */
%   | else if ( follows(E, A), follows(F, E) )
%   | | then if ( tweets(A, G), tweets(F, G) )
%   | | | then return 0.08930725560882216;  // std dev = 3.468, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.22445738457378828;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.28307300321707896;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( follows(H, I) )
%   | then if ( follows(A, J) )
%   | | then if ( follows(J, K), follows(A, K) )
%   | | | then return 0.055699611584184745;  // std dev = 3.269, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.12103045198518889;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.02301313385361948;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.313865901504663;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then if ( follows(A, E), tweets(A, G) )
%   | | | then return 0.07876796840790626;  // std dev = 6.660, 197.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=68 */
%   | | | else return 0.01919784518936044;  // std dev = 5.190, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else return -0.21673360280492385;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( tweets(A, H) )
%   | then return 0.027844287569761476;  // std dev = 0.458, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(J, I), follows(A, J) )
%   | | | then return 0.22501066943772452;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05261853547478983;  // std dev = 2.604, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.08423989375642046;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08452499171695195;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(C, D) )
%   | then if ( tweets(A, E) )
%   | | then return 0.04400994868368096;  // std dev = 0.470, 273.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=90 */
%   | | else if ( follows(A, F), follows(F, A) )
%   | | | then return 0.10573993317398239;  // std dev = 2.926, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.17876681329310734;  // std dev = 1.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, G), follows(G, H) )
%   | then return 0.04254072962295757;  // std dev = 0.472, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.42007797400631114;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08018573589634655;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( follows(A, K) )
%   | | | then return -9.031131978179211E-4;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.08749985808492851;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( tweets(A, E), follows(F, A) )
%   | then if ( follows(G, F) )
%   | | then if ( follows(G, A), follows(A, H) )
%   | | | then return 0.06453047908952507;  // std dev = 5.479, 132.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=46 */
%   | | | else return 0.02232931085342538;  // std dev = 5.299, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | | else return -0.09961083210643357;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( follows(A, I), follows(J, A) )
%   | | then if ( follows(J, I), follows(I, K) )
%   | | | then return -0.04943330201344799;  // std dev = 3.116, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.17301047608301076;  // std dev = 1.010, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tweets(A, L), follows(A, M) )
%   | | | then return 0.009387443691613085;  // std dev = 3.799, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.03742561475060751;  // std dev = 4.433, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, D) )
%   then if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(G, E), follows(A, G) )
%   | | then if ( tweets(A, F), follows(E, G) )
%   | | | then return 0.0283841066108312;  // std dev = 5.965, 161.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=53 */
%   | | | else return 0.07241908621006662;  // std dev = 3.371, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( follows(H, E) )
%   | | | then return 0.07396087723761605;  // std dev = 4.524, 86.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | | | else return 0.23826978977665303;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( follows(A, I) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.03991246020751895;  // std dev = 3.716, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return 0.059581052751979724;  // std dev = 3.262, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.009354716280176152;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.005007461940119219;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42', 'minutes', 'and', '53.146', 'seconds']
Refined model CLL: -0.387377


******************************************
Best model found
******************************************
Results 

CLL : -0.34396 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 246.722 

Total Inference Time : 4325.740686178207 

Total revision time: 4612.47726288414
Best scored revision CLL: -0.344514


Results 

CLL : -0.34396 

AUC ROC : 0.5 

AUC PR : 0.007752 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4612.58449020958 

Total Inference Time : 4325.740686178207 

